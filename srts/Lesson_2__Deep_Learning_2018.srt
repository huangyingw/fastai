1
00:00:00,030 --> 00:00:03,659
<font color="#CCCCCC">okay so welcome</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to deep learning</font>

2
00:00:03,659 --> 00:00:10,380
<font color="#E5E5E5">lesson</font><font color="#CCCCCC"> 2 last week we</font><font color="#E5E5E5"> got to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> point</font>

3
00:00:10,380 --> 00:00:12,150
where we had successfully trained a

4
00:00:12,150 --> 00:00:16,500
pretty accurate image classifier<font color="#CCCCCC"> and so</font>

5
00:00:16,500 --> 00:00:20,720
just<font color="#E5E5E5"> to</font><font color="#CCCCCC"> remind you about how we did that</font>

6
00:00:21,080 --> 00:00:24,119
can you guys see<font color="#E5E5E5"> okay I think</font><font color="#CCCCCC"> the</font>

7
00:00:24,119 --> 00:00:25,769
<font color="#CCCCCC">actually we</font><font color="#E5E5E5"> can turn the</font><font color="#CCCCCC"> phone once</font><font color="#E5E5E5"> all</font>

8
00:00:25,769 --> 00:00:26,880
<font color="#E5E5E5">right</font>

9
00:00:26,880 --> 00:00:30,449
can<font color="#E5E5E5"> you guys all see the screen okay we</font>

10
00:00:30,449 --> 00:00:35,340
can to adjust these ones<font color="#E5E5E5"> can</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> some</font>

11
00:00:35,340 --> 00:00:37,469
pictures all into darkness<font color="#E5E5E5"> but if</font><font color="#CCCCCC"> that</font>

12
00:00:37,469 --> 00:00:41,250
works then is<font color="#E5E5E5"> that okay that's better</font>

13
00:00:41,250 --> 00:00:46,160
isn't it yeah can I<font color="#E5E5E5"> dream the</font><font color="#CCCCCC"> other two</font>

14
00:00:46,160 --> 00:00:47,969
and maybe that one as well

15
00:00:47,969 --> 00:00:53,820
oh but<font color="#E5E5E5"> that one</font><font color="#CCCCCC"> oh that's great sorry I</font>

16
00:00:53,820 --> 00:00:55,699
don't know your<font color="#CCCCCC"> renders oh</font><font color="#E5E5E5"> okay great</font>

17
00:00:55,699 --> 00:01:03,420
that's<font color="#E5E5E5"> better isn't it me</font><font color="#CCCCCC"> so just</font><font color="#E5E5E5"> to</font>

18
00:01:03,420 --> 00:01:05,430
remind you the way<font color="#CCCCCC"> that we built this</font>

19
00:01:05,430 --> 00:01:08,820
image classifier<font color="#E5E5E5"> was we used a small</font>

20
00:01:08,820 --> 00:01:11,850
amount of code<font color="#CCCCCC"> basically three lines</font><font color="#E5E5E5"> of</font>

21
00:01:11,850 --> 00:01:14,250
<font color="#CCCCCC">code</font><font color="#E5E5E5"> and these three lines of code</font>

22
00:01:14,250 --> 00:01:17,490
pointed at a particular path<font color="#E5E5E5"> which</font>

23
00:01:17,490 --> 00:01:19,590
already had some data in it<font color="#E5E5E5"> and so the</font>

24
00:01:19,590 --> 00:01:21,600
key thing<font color="#CCCCCC"> for this to know how to</font><font color="#E5E5E5"> train</font>

25
00:01:21,600 --> 00:01:25,020
this model was<font color="#CCCCCC"> that this path which was</font>

26
00:01:25,020 --> 00:01:27,990
data<font color="#E5E5E5"> dogs cats and had to have a</font>

27
00:01:27,990 --> 00:01:30,270
particular structure which is that it

28
00:01:30,270 --> 00:01:33,360
had a<font color="#E5E5E5"> train folder and a valid folder</font>

29
00:01:33,360 --> 00:01:35,670
and in each<font color="#CCCCCC"> of those trained</font><font color="#E5E5E5"> and valid</font>

30
00:01:35,670 --> 00:01:37,259
folders there was a cats folder in the

31
00:01:37,259 --> 00:01:39,659
dogs folder and if the cats on the<font color="#CCCCCC"> docs</font>

32
00:01:39,659 --> 00:01:42,270
folders was a bunch of<font color="#E5E5E5"> images</font><font color="#CCCCCC"> of cats</font>

33
00:01:42,270 --> 00:01:44,820
<font color="#E5E5E5">and votes</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> this is like a pretty</font>

34
00:01:44,820 --> 00:01:48,360
<font color="#E5E5E5">standard it's one of two main structures</font>

35
00:01:48,360 --> 00:01:51,240
that are<font color="#E5E5E5"> used</font><font color="#CCCCCC"> to say here is the data</font>

36
00:01:51,240 --> 00:01:52,799
<font color="#E5E5E5">that I want</font><font color="#CCCCCC"> you to train an image model</font>

37
00:01:52,799 --> 00:01:55,290
from so I know some of you during<font color="#E5E5E5"> the</font>

38
00:01:55,290 --> 00:01:58,500
week<font color="#E5E5E5"> went away and tried different data</font>

39
00:01:58,500 --> 00:02:01,079
<font color="#E5E5E5">sets where you had folders with</font>

40
00:02:01,079 --> 00:02:02,579
different sets<font color="#E5E5E5"> of images</font><font color="#CCCCCC"> and in</font><font color="#E5E5E5"> credit</font>

41
00:02:02,579 --> 00:02:05,369
your own image classifiers<font color="#CCCCCC"> and generally</font>

42
00:02:05,369 --> 00:02:06,750
<font color="#CCCCCC">that seems to be working pretty well</font>

43
00:02:06,750 --> 00:02:08,669
<font color="#E5E5E5">from what I can see on the forums so to</font>

44
00:02:08,669 --> 00:02:11,989
make<font color="#CCCCCC"> it clear at this point</font><font color="#E5E5E5"> this is</font>

45
00:02:11,989 --> 00:02:13,890
<font color="#E5E5E5">everything you need</font>

46
00:02:13,890 --> 00:02:16,920
<font color="#CCCCCC">to get</font><font color="#E5E5E5"> started so if you create</font><font color="#CCCCCC"> your own</font>

47
00:02:16,920 --> 00:02:18,600
folders with different sets<font color="#E5E5E5"> of images</font>

48
00:02:18,600 --> 00:02:23,760
<font color="#CCCCCC">you know a few hundred or a few thousand</font>

49
00:02:23,760 --> 00:02:28,170
<font color="#E5E5E5">at each folder and run the same three</font>

50
00:02:28,170 --> 00:02:30,930
lines of code<font color="#E5E5E5"> that</font><font color="#CCCCCC"> will give you an</font>

51
00:02:30,930 --> 00:02:32,490
image classifier and you'll be able to

52
00:02:32,490 --> 00:02:35,160
see this third column tells<font color="#E5E5E5"> you how</font>

53
00:02:35,160 --> 00:02:42,750
accurate is so we looked at<font color="#E5E5E5"> some kind of</font>

54
00:02:42,750 --> 00:02:46,140
simple visualizations<font color="#E5E5E5"> to see like what</font>

55
00:02:46,140 --> 00:02:48,630
was it<font color="#E5E5E5"> uncertain about what was it wrong</font>

56
00:02:48,630 --> 00:02:50,910
about<font color="#E5E5E5"> and so forth and that's always a</font>

57
00:02:50,910 --> 00:02:55,110
really<font color="#E5E5E5"> good</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> and then we learned</font>

58
00:02:55,110 --> 00:02:57,330
about the one key number you have to

59
00:02:57,330 --> 00:02:59,100
<font color="#E5E5E5">pick so this is this number</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is the</font>

60
00:02:59,100 --> 00:03:02,340
one key number<font color="#E5E5E5"> is 0.01</font><font color="#CCCCCC"> and this is</font>

61
00:03:02,340 --> 00:03:05,010
called the learning rate<font color="#E5E5E5"> and so I wanted</font>

62
00:03:05,010 --> 00:03:07,980
<font color="#CCCCCC">to go over this again and we'll learn</font>

63
00:03:07,980 --> 00:03:10,100
about<font color="#E5E5E5"> the theory behind what this is</font>

64
00:03:10,100 --> 00:03:12,630
during the<font color="#E5E5E5"> rest of the course in quite a</font>

65
00:03:12,630 --> 00:03:14,459
lot of<font color="#E5E5E5"> detail</font><font color="#CCCCCC"> and for now I just</font><font color="#E5E5E5"> wanted</font>

66
00:03:14,459 --> 00:03:21,680
to<font color="#E5E5E5"> talk about the practice yes you know</font>

67
00:03:23,180 --> 00:03:25,730
they cannot see you in the medium

68
00:03:25,730 --> 00:03:31,650
<font color="#CCCCCC">turnout I just</font><font color="#E5E5E5"> turned it around you tell</font>

69
00:03:31,650 --> 00:03:34,380
us<font color="#E5E5E5"> about the other three numbers</font><font color="#CCCCCC"> being</font>

70
00:03:34,380 --> 00:03:38,850
bad<font color="#E5E5E5"> we did these three here we're going</font>

71
00:03:38,850 --> 00:03:40,079
<font color="#E5E5E5">to talk about the other other ones</font>

72
00:03:40,079 --> 00:03:41,519
shortly so the main one we're<font color="#E5E5E5"> going to</font>

73
00:03:41,519 --> 00:03:43,650
look at for now is is the last<font color="#E5E5E5"> column</font>

74
00:03:43,650 --> 00:03:48,030
which is<font color="#E5E5E5"> the accuracy the first column</font>

75
00:03:48,030 --> 00:03:50,549
as you can see is the epoch number so

76
00:03:50,549 --> 00:03:52,200
<font color="#E5E5E5">this tells us</font><font color="#CCCCCC"> how many</font><font color="#E5E5E5"> times has it been</font>

77
00:03:52,200 --> 00:03:55,260
through the entire<font color="#CCCCCC"> dataset trying to</font>

78
00:03:55,260 --> 00:03:57,450
learn a better classifier and in the

79
00:03:57,450 --> 00:03:58,890
<font color="#E5E5E5">next two</font><font color="#CCCCCC"> columns is what's called</font><font color="#E5E5E5"> the</font>

80
00:03:58,890 --> 00:04:00,709
<font color="#E5E5E5">loss which we'll</font><font color="#CCCCCC"> be learning about</font>

81
00:04:00,709 --> 00:04:03,540
either later today or next week the

82
00:04:03,540 --> 00:04:05,070
first<font color="#E5E5E5"> point is</font><font color="#CCCCCC"> the loss on</font><font color="#E5E5E5"> the training</font>

83
00:04:05,070 --> 00:04:07,019
set<font color="#E5E5E5"> these are the</font><font color="#CCCCCC"> images that</font><font color="#E5E5E5"> we're</font>

84
00:04:07,019 --> 00:04:08,459
looking<font color="#E5E5E5"> at in order</font><font color="#CCCCCC"> to try to</font><font color="#E5E5E5"> make a</font>

85
00:04:08,459 --> 00:04:10,470
<font color="#E5E5E5">better classifier and the second is the</font>

86
00:04:10,470 --> 00:04:12,480
loss of<font color="#E5E5E5"> the validation set these are the</font>

87
00:04:12,480 --> 00:04:14,100
<font color="#CCCCCC">images that</font><font color="#E5E5E5"> we're not looking</font><font color="#CCCCCC"> at and</font>

88
00:04:14,100 --> 00:04:15,420
we're training<font color="#E5E5E5"> but we're</font><font color="#CCCCCC"> just sitting on</font>

89
00:04:15,420 --> 00:04:17,970
the side to<font color="#E5E5E5"> see how accurate</font><font color="#CCCCCC"> we are so</font>

90
00:04:17,970 --> 00:04:19,350
we'll learn about<font color="#CCCCCC"> littering loss</font><font color="#E5E5E5"> in</font>

91
00:04:19,350 --> 00:04:23,239
<font color="#E5E5E5">accuracy later</font>

92
00:04:24,900 --> 00:04:30,970
okay so so we've got the epoch number

93
00:04:30,970 --> 00:04:33,100
the training loss is the second column

94
00:04:33,100 --> 00:04:36,970
<font color="#E5E5E5">the validation loss is the third</font><font color="#CCCCCC"> column</font>

95
00:04:36,970 --> 00:04:40,880
<font color="#E5E5E5">and the accuracy is</font><font color="#CCCCCC"> the fourth column</font>

96
00:04:40,880 --> 00:04:42,940
you

97
00:04:44,899 --> 00:04:48,449
<font color="#E5E5E5">okay so the basic idea</font><font color="#CCCCCC"> of the loading</font>

98
00:04:48,449 --> 00:04:56,520
rate so the basic idea<font color="#CCCCCC"> of the learning</font>

99
00:04:56,520 --> 00:04:58,259
rate<font color="#CCCCCC"> is it's the thing that's going to</font>

100
00:04:58,259 --> 00:05:01,379
decide how quickly do we zoom do we<font color="#E5E5E5"> kind</font>

101
00:05:01,379 --> 00:05:05,159
of hone in on<font color="#E5E5E5"> the solution and so I find</font>

102
00:05:05,159 --> 00:05:06,839
<font color="#E5E5E5">that a good way to think</font><font color="#CCCCCC"> about this is</font>

103
00:05:06,839 --> 00:05:08,759
to<font color="#CCCCCC"> think about like well what if we were</font>

104
00:05:08,759 --> 00:05:13,740
trying<font color="#CCCCCC"> to fit to a function that looks</font>

105
00:05:13,740 --> 00:05:15,899
<font color="#CCCCCC">something like this right we're trying</font>

106
00:05:15,899 --> 00:05:17,759
to say okay<font color="#E5E5E5"> where's where abouts is the</font>

107
00:05:17,759 --> 00:05:20,459
minimum<font color="#E5E5E5"> point this is basically what we</font>

108
00:05:20,459 --> 00:05:23,159
<font color="#E5E5E5">do when we do deep learning is we try to</font>

109
00:05:23,159 --> 00:05:26,849
<font color="#E5E5E5">find the minimum point of a function now</font>

110
00:05:26,849 --> 00:05:29,580
our function<font color="#E5E5E5"> happens to have millions or</font>

111
00:05:29,580 --> 00:05:30,809
hundreds of<font color="#E5E5E5"> millions</font><font color="#CCCCCC"> of parameters but</font>

112
00:05:30,809 --> 00:05:32,819
<font color="#CCCCCC">it works the same</font><font color="#E5E5E5"> basic way and so when</font>

113
00:05:32,819 --> 00:05:33,839
we look<font color="#E5E5E5"> at it you know we can</font>

114
00:05:33,839 --> 00:05:36,419
immediately see that the lowest<font color="#E5E5E5"> point is</font>

115
00:05:36,419 --> 00:05:40,439
here<font color="#E5E5E5"> but how would you do that</font><font color="#CCCCCC"> if you</font>

116
00:05:40,439 --> 00:05:42,449
<font color="#CCCCCC">are a computer algorithm and what we do</font>

117
00:05:42,449 --> 00:05:45,119
is we we start out at some point<font color="#CCCCCC"> at</font>

118
00:05:45,119 --> 00:05:47,729
random<font color="#CCCCCC"> so you pick say here and we have</font>

119
00:05:47,729 --> 00:05:50,099
a look<font color="#E5E5E5"> and we say okay what's the what's</font>

120
00:05:50,099 --> 00:05:52,499
the<font color="#CCCCCC"> loss or</font><font color="#E5E5E5"> the error at this point</font><font color="#CCCCCC"> and</font>

121
00:05:52,499 --> 00:05:53,819
we say what's the gradient<font color="#E5E5E5"> in other</font>

122
00:05:53,819 --> 00:05:55,409
words which way is<font color="#CCCCCC"> up and which</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> is</font>

123
00:05:55,409 --> 00:05:58,680
down and it tells us<font color="#CCCCCC"> that</font><font color="#E5E5E5"> down is going</font>

124
00:05:58,680 --> 00:06:00,749
<font color="#CCCCCC">to be in that</font><font color="#E5E5E5"> direction and it also</font>

125
00:06:00,749 --> 00:06:03,839
tells<font color="#E5E5E5"> us how fast is it going down which</font>

126
00:06:03,839 --> 00:06:05,430
is at<font color="#E5E5E5"> this point is going down pretty</font>

127
00:06:05,430 --> 00:06:09,029
quickly and<font color="#E5E5E5"> so then we take a step in</font>

128
00:06:09,029 --> 00:06:11,699
the direction<font color="#E5E5E5"> that's down and the</font>

129
00:06:11,699 --> 00:06:13,830
distance we travel<font color="#E5E5E5"> is going to be</font>

130
00:06:13,830 --> 00:06:15,539
<font color="#CCCCCC">proportional to</font><font color="#E5E5E5"> the gradient sort of</font>

131
00:06:15,539 --> 00:06:17,219
<font color="#CCCCCC">unfortunately how steep it is</font><font color="#E5E5E5"> the idea</font>

132
00:06:17,219 --> 00:06:20,039
is if it's deeper then we're probably

133
00:06:20,039 --> 00:06:22,409
<font color="#E5E5E5">further away that's the general idea</font>

134
00:06:22,409 --> 00:06:25,110
<font color="#CCCCCC">right</font><font color="#E5E5E5"> and so specifically what we do is</font>

135
00:06:25,110 --> 00:06:26,879
we take the gradient<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is how steep</font>

136
00:06:26,879 --> 00:06:28,740
is<font color="#CCCCCC"> it at this point and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> multiply it</font>

137
00:06:28,740 --> 00:06:30,360
<font color="#E5E5E5">by</font><font color="#CCCCCC"> some number</font><font color="#E5E5E5"> and that number is</font><font color="#CCCCCC"> called</font>

138
00:06:30,360 --> 00:06:31,889
<font color="#E5E5E5">the learning rate okay</font>

139
00:06:31,889 --> 00:06:35,789
so if we pick a number<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is very</font>

140
00:06:35,789 --> 00:06:38,249
small<font color="#E5E5E5"> then we're guaranteed that we're</font>

141
00:06:38,249 --> 00:06:39,599
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go a little bit closer and a</font>

142
00:06:39,599 --> 00:06:40,740
<font color="#CCCCCC">little bit closer and</font><font color="#E5E5E5"> a little bit</font>

143
00:06:40,740 --> 00:06:43,019
<font color="#E5E5E5">closer each time right but it's going to</font>

144
00:06:43,019 --> 00:06:45,659
<font color="#E5E5E5">take us a</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> long time to eventually</font>

145
00:06:45,659 --> 00:06:48,419
get to the bottom<font color="#CCCCCC"> if we</font><font color="#E5E5E5"> dig a number</font>

146
00:06:48,419 --> 00:06:51,479
that's very<font color="#E5E5E5"> big we could actually step</font>

147
00:06:51,479 --> 00:06:53,129
too far<font color="#CCCCCC"> could go in the</font><font color="#E5E5E5"> right direction</font>

148
00:06:53,129 --> 00:06:54,930
but<font color="#E5E5E5"> we could step all the</font><font color="#CCCCCC"> way over to</font>

149
00:06:54,930 --> 00:06:57,270
here<font color="#CCCCCC"> right as</font>

150
00:06:57,270 --> 00:06:59,220
result of<font color="#E5E5E5"> which we end up further away</font>

151
00:06:59,220 --> 00:07:01,800
than we<font color="#CCCCCC"> started</font><font color="#E5E5E5"> and we could</font><font color="#CCCCCC"> oscillate</font>

152
00:07:01,800 --> 00:07:04,590
and get worse and<font color="#E5E5E5"> worse</font><font color="#CCCCCC"> so if you start</font>

153
00:07:04,590 --> 00:07:06,720
training<font color="#E5E5E5"> a neural net and you find that</font>

154
00:07:06,720 --> 00:07:08,700
your accuracy<font color="#E5E5E5"> or your loss is like</font>

155
00:07:08,700 --> 00:07:10,740
spitting off into<font color="#CCCCCC"> infinity</font>

156
00:07:10,740 --> 00:07:12,780
almost certainly your learning rates too

157
00:07:12,780 --> 00:07:17,520
high<font color="#E5E5E5"> so in a sense learning rate too low</font>

158
00:07:17,520 --> 00:07:20,580
<font color="#E5E5E5">is is a better problem to have because</font>

159
00:07:20,580 --> 00:07:21,570
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> going to have to wait a long time</font>

160
00:07:21,570 --> 00:07:23,100
<font color="#E5E5E5">but wouldn't it be nice if there was a</font>

161
00:07:23,100 --> 00:07:25,560
way to<font color="#E5E5E5"> figure out like what's the best</font>

162
00:07:25,560 --> 00:07:27,450
learning<font color="#E5E5E5"> rate something</font><font color="#CCCCCC"> where you could</font>

163
00:07:27,450 --> 00:07:30,690
kind<font color="#E5E5E5"> of go quickly go like Bom Bom Bom</font>

164
00:07:30,690 --> 00:07:34,470
<font color="#E5E5E5">right and so that's</font><font color="#CCCCCC"> why we</font><font color="#E5E5E5"> use this</font>

165
00:07:34,470 --> 00:07:36,270
<font color="#CCCCCC">thing called a learning rate finder</font><font color="#E5E5E5"> and</font>

166
00:07:36,270 --> 00:07:39,300
what the<font color="#E5E5E5"> learning rate finder does is it</font>

167
00:07:39,300 --> 00:07:41,820
tries each each time it looks at another

168
00:07:41,820 --> 00:07:44,160
remember the<font color="#CCCCCC"> mini-batch how many batches</font>

169
00:07:44,160 --> 00:07:46,860
<font color="#CCCCCC">a few images that we look at</font><font color="#E5E5E5"> each time</font>

170
00:07:46,860 --> 00:07:48,900
so that we're using the parallel

171
00:07:48,900 --> 00:07:50,850
<font color="#CCCCCC">processing power of</font><font color="#E5E5E5"> the GPU effectively</font>

172
00:07:50,850 --> 00:07:53,760
we look generally at<font color="#E5E5E5"> around 64 128</font>

173
00:07:53,760 --> 00:07:56,370
images at a time for<font color="#E5E5E5"> each mini batch</font>

174
00:07:56,370 --> 00:07:59,340
which is labeled here<font color="#CCCCCC"> as an iteration we</font>

175
00:07:59,340 --> 00:08:01,040
gradually increase<font color="#CCCCCC"> the learning</font><font color="#E5E5E5"> rate</font>

176
00:08:01,040 --> 00:08:02,640
multiplicatively increase the learning

177
00:08:02,640 --> 00:08:04,230
<font color="#CCCCCC">rate we started really really</font><font color="#E5E5E5"> tiny</font>

178
00:08:04,230 --> 00:08:06,450
learning rates to<font color="#E5E5E5"> make sure that we</font>

179
00:08:06,450 --> 00:08:09,090
don't start at something<font color="#E5E5E5"> too high and</font><font color="#CCCCCC"> we</font>

180
00:08:09,090 --> 00:08:11,790
gradually increase<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and so the idea is</font>

181
00:08:11,790 --> 00:08:14,490
that<font color="#E5E5E5"> eventually the learning rate will</font>

182
00:08:14,490 --> 00:08:16,710
<font color="#CCCCCC">be so big</font><font color="#E5E5E5"> that the loss will start</font>

183
00:08:16,710 --> 00:08:17,730
<font color="#E5E5E5">getting worse</font>

184
00:08:17,730 --> 00:08:19,260
and<font color="#E5E5E5"> so what we're going to do then</font><font color="#CCCCCC"> is</font>

185
00:08:19,260 --> 00:08:22,470
<font color="#CCCCCC">we're a look at the plot of learning</font>

186
00:08:22,470 --> 00:08:25,320
rate<font color="#E5E5E5"> against loss right so when the</font>

187
00:08:25,320 --> 00:08:28,620
learning rates tiny<font color="#E5E5E5"> it increases slowly</font>

188
00:08:28,620 --> 00:08:29,910
then<font color="#E5E5E5"> it's that's where increase a bit</font>

189
00:08:29,910 --> 00:08:33,030
faster and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> eventually it starts not</font>

190
00:08:33,030 --> 00:08:34,500
increasing<font color="#E5E5E5"> as quickly and in fact it</font>

191
00:08:34,500 --> 00:08:36,840
<font color="#CCCCCC">starts getting worse right so clearly</font>

192
00:08:36,840 --> 00:08:38,850
here and make<font color="#E5E5E5"> sure you're you want to be</font>

193
00:08:38,850 --> 00:08:42,179
familiar<font color="#E5E5E5"> with this</font><font color="#CCCCCC"> scientific</font><font color="#E5E5E5"> notation</font>

194
00:08:42,179 --> 00:08:45,870
okay so<font color="#CCCCCC"> ten to the</font><font color="#E5E5E5"> negative</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> is 0.1</font>

195
00:08:45,870 --> 00:08:48,510
<font color="#CCCCCC">10 to 50 or</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> 1 10 to the negative 2 is</font>

196
00:08:48,510 --> 00:08:52,620
<font color="#CCCCCC">0.001 and when we write this in Python</font>

197
00:08:52,620 --> 00:08:53,820
<font color="#CCCCCC">we'll generally write it like this</font>

198
00:08:53,820 --> 00:08:56,430
<font color="#CCCCCC">rather than</font><font color="#E5E5E5"> writing 10 to the negative 1</font>

199
00:08:56,430 --> 00:08:59,220
or 10 to the negative 2 we'll just write

200
00:08:59,220 --> 00:09:05,430
<font color="#E5E5E5">1 a neg 1 or 1 e neg - okay I mean the</font>

201
00:09:05,430 --> 00:09:06,600
same thing<font color="#CCCCCC"> you're going to see that all</font>

202
00:09:06,600 --> 00:09:10,830
<font color="#E5E5E5">the time</font><font color="#CCCCCC"> and remember that equals 0.1</font>

203
00:09:10,830 --> 00:09:19,620
Oh point<font color="#E5E5E5"> O</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> don't be</font><font color="#E5E5E5"> confused</font>

204
00:09:19,620 --> 00:09:21,990
<font color="#E5E5E5">by this text that it prints out here</font>

205
00:09:21,990 --> 00:09:25,140
this this loss here is the the final

206
00:09:25,140 --> 00:09:27,600
loss at the very at the end of<font color="#CCCCCC"> it's not</font>

207
00:09:27,600 --> 00:09:29,190
of any<font color="#E5E5E5"> interest right so ignore this</font>

208
00:09:29,190 --> 00:09:31,020
this is only<font color="#E5E5E5"> interesting when we're</font>

209
00:09:31,020 --> 00:09:32,880
doing regular trading<font color="#E5E5E5"> that's not</font>

210
00:09:32,880 --> 00:09:34,380
interesting<font color="#CCCCCC"> for the learning rate finder</font>

211
00:09:34,380 --> 00:09:35,730
the thing that's<font color="#CCCCCC"> interesting for</font><font color="#E5E5E5"> the</font>

212
00:09:35,730 --> 00:09:38,220
learning rate finder is this<font color="#E5E5E5"> loan shed</font>

213
00:09:38,220 --> 00:09:41,730
plot and<font color="#E5E5E5"> specifically we're not looking</font>

214
00:09:41,730 --> 00:09:43,350
for<font color="#CCCCCC"> the point where it's</font><font color="#E5E5E5"> the lowest</font><font color="#CCCCCC"> back</font>

215
00:09:43,350 --> 00:09:44,520
to the point where it's<font color="#E5E5E5"> the lowest it's</font>

216
00:09:44,520 --> 00:09:46,140
actually not<font color="#E5E5E5"> getting better anymore</font><font color="#CCCCCC"> so</font>

217
00:09:46,140 --> 00:09:47,910
that's<font color="#CCCCCC"> to higher learning</font><font color="#E5E5E5"> rate so I</font>

218
00:09:47,910 --> 00:09:49,320
generally<font color="#E5E5E5"> look to see like where is it</font>

219
00:09:49,320 --> 00:09:51,690
<font color="#CCCCCC">the lowest</font><font color="#E5E5E5"> and then I go back like one</font>

220
00:09:51,690 --> 00:09:56,760
<font color="#E5E5E5">for magnitude so one</font><font color="#CCCCCC"> enoch two would be</font>

221
00:09:56,760 --> 00:09:59,670
a pretty<font color="#E5E5E5"> good choice yeah okay so that's</font>

222
00:09:59,670 --> 00:10:05,460
why you saw when<font color="#CCCCCC"> we ran our fit here we</font>

223
00:10:05,460 --> 00:10:09,680
picked 0.01 right<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is one a neg</font><font color="#E5E5E5"> two</font>

224
00:10:09,680 --> 00:10:12,870
so important<font color="#E5E5E5"> point to make here is like</font>

225
00:10:12,870 --> 00:10:15,060
this this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> one key number that</font>

226
00:10:15,060 --> 00:10:21,000
we've<font color="#CCCCCC"> learnt</font><font color="#E5E5E5"> to adjust</font><font color="#CCCCCC"> and if you just</font>

227
00:10:21,000 --> 00:10:22,860
<font color="#CCCCCC">adjust this number at nothing else</font><font color="#E5E5E5"> most</font>

228
00:10:22,860 --> 00:10:24,120
of the time you're going to<font color="#E5E5E5"> be able to</font>

229
00:10:24,120 --> 00:10:26,340
get<font color="#E5E5E5"> pretty good results and this is like</font>

230
00:10:26,340 --> 00:10:28,140
a very<font color="#E5E5E5"> different message to what you</font>

231
00:10:28,140 --> 00:10:31,350
<font color="#E5E5E5">would hear or see in any textbook or any</font>

232
00:10:31,350 --> 00:10:35,880
<font color="#E5E5E5">video</font><font color="#CCCCCC"> or any course because up until</font><font color="#E5E5E5"> now</font>

233
00:10:35,880 --> 00:10:38,310
there's<font color="#CCCCCC"> been like dozens and dozens of</font>

234
00:10:38,310 --> 00:10:39,570
these<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> called hyper parameters</font>

235
00:10:39,570 --> 00:10:41,310
dozens and dozens of hyper parameters to

236
00:10:41,310 --> 00:10:43,110
set and they've been thought of as

237
00:10:43,110 --> 00:10:45,360
highly sensitive<font color="#E5E5E5"> and difficult to set so</font>

238
00:10:45,360 --> 00:10:48,210
inside the first<font color="#E5E5E5"> AI library we kind of</font>

239
00:10:48,210 --> 00:10:51,450
do all that<font color="#E5E5E5"> stuff for you</font><font color="#CCCCCC"> as much as we</font>

240
00:10:51,450 --> 00:10:53,490
<font color="#CCCCCC">can and</font><font color="#E5E5E5"> during the course we're going to</font>

241
00:10:53,490 --> 00:10:55,110
<font color="#E5E5E5">learn that there</font><font color="#CCCCCC"> are some more we</font><font color="#E5E5E5"> can</font>

242
00:10:55,110 --> 00:10:58,260
<font color="#CCCCCC">quake to get slightly better results</font><font color="#E5E5E5"> but</font>

243
00:10:58,260 --> 00:11:01,350
it's kind of like it's kind<font color="#E5E5E5"> of in a</font>

244
00:11:01,350 --> 00:11:03,210
funny situation here<font color="#E5E5E5"> because for those</font>

245
00:11:03,210 --> 00:11:04,290
<font color="#E5E5E5">of</font><font color="#CCCCCC"> you that haven't</font><font color="#E5E5E5"> done anything</font>

246
00:11:04,290 --> 00:11:06,540
<font color="#CCCCCC">learning before</font><font color="#E5E5E5"> is kind of like oh this</font>

247
00:11:06,540 --> 00:11:09,180
<font color="#CCCCCC">is that's all there is to it this is</font>

248
00:11:09,180 --> 00:11:10,830
<font color="#CCCCCC">very easy and then when you talk to</font>

249
00:11:10,830 --> 00:11:12,450
<font color="#E5E5E5">people outside this class they'll be</font>

250
00:11:12,450 --> 00:11:14,190
like deep<font color="#CCCCCC"> learning so</font><font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> as</font>

251
00:11:14,190 --> 00:11:16,140
someone to say<font color="#E5E5E5"> it's a real art form and</font>

252
00:11:16,140 --> 00:11:18,000
so that's why there's this<font color="#E5E5E5"> as is</font>

253
00:11:18,000 --> 00:11:19,770
difference<font color="#E5E5E5"> right and so</font><font color="#CCCCCC"> that the truth</font>

254
00:11:19,770 --> 00:11:21,360
is that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> learning rate really is the</font>

255
00:11:21,360 --> 00:11:24,000
key thing<font color="#CCCCCC"> to set and this ability to use</font>

256
00:11:24,000 --> 00:11:24,649
<font color="#E5E5E5">this</font>

257
00:11:24,649 --> 00:11:26,509
to figure<font color="#CCCCCC"> out how</font><font color="#E5E5E5"> to set it well though</font>

258
00:11:26,509 --> 00:11:29,949
<font color="#CCCCCC">the paper is now probably</font><font color="#E5E5E5"> 18</font><font color="#CCCCCC"> months old</font>

259
00:11:29,949 --> 00:11:33,439
<font color="#E5E5E5">almost nobody knows</font><font color="#CCCCCC"> about this paper</font><font color="#E5E5E5"> it</font>

260
00:11:33,439 --> 00:11:35,119
was from a<font color="#E5E5E5"> guy who's not from a</font><font color="#CCCCCC"> famous</font>

261
00:11:35,119 --> 00:11:36,860
research labs<font color="#CCCCCC"> so most</font><font color="#E5E5E5"> people kind of</font>

262
00:11:36,860 --> 00:11:38,509
ignored it<font color="#E5E5E5"> and in fact even this</font>

263
00:11:38,509 --> 00:11:40,639
particular technique was<font color="#E5E5E5"> one subpart of</font>

264
00:11:40,639 --> 00:11:42,829
<font color="#E5E5E5">a paper that</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> about something else</font>

265
00:11:42,829 --> 00:11:45,110
so again this<font color="#CCCCCC"> idea of like this is how</font>

266
00:11:45,110 --> 00:11:47,689
you can set<font color="#E5E5E5"> the learning rate really</font>

267
00:11:47,689 --> 00:11:49,610
nobody outside<font color="#CCCCCC"> this classroom</font><font color="#E5E5E5"> just about</font>

268
00:11:49,610 --> 00:11:51,980
knows about it<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> the guy who</font>

269
00:11:51,980 --> 00:11:53,480
wrote<font color="#CCCCCC"> it Leslie Smith knows about it</font>

270
00:11:53,480 --> 00:11:56,869
yeah so it's a good<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to tell</font><font color="#E5E5E5"> your</font>

271
00:11:56,869 --> 00:11:58,999
colleagues<font color="#E5E5E5"> about is like here is</font>

272
00:11:58,999 --> 00:12:00,290
actually a great way<font color="#CCCCCC"> to set the learning</font>

273
00:12:00,290 --> 00:12:03,230
<font color="#CCCCCC">rate and there's even been papers caught</font>

274
00:12:03,230 --> 00:12:04,819
<font color="#E5E5E5">like one of the</font><font color="#CCCCCC"> famous papers is called</font>

275
00:12:04,819 --> 00:12:07,399
no more pesky learning rates which

276
00:12:07,399 --> 00:12:09,529
actually is a less effective technique

277
00:12:09,529 --> 00:12:11,029
than this one but<font color="#CCCCCC"> this idea</font><font color="#E5E5E5"> that like</font>

278
00:12:11,029 --> 00:12:13,220
setting learning rates is is very

279
00:12:13,220 --> 00:12:15,679
<font color="#E5E5E5">difficult and thirdly is has been true</font>

280
00:12:15,679 --> 00:12:17,600
<font color="#CCCCCC">for most of the kind of deep learning</font>

281
00:12:17,600 --> 00:12:20,569
history<font color="#E5E5E5"> so here's the trick right go</font>

282
00:12:20,569 --> 00:12:23,029
look at this plot<font color="#CCCCCC"> find kind of</font><font color="#E5E5E5"> the</font>

283
00:12:23,029 --> 00:12:24,949
<font color="#E5E5E5">lowest to go back about a multiple</font><font color="#CCCCCC"> of</font>

284
00:12:24,949 --> 00:12:28,069
<font color="#CCCCCC">ten and try that all</font><font color="#E5E5E5"> right and if that</font>

285
00:12:28,069 --> 00:12:29,509
doesn't<font color="#E5E5E5"> quite work you can always try</font>

286
00:12:29,509 --> 00:12:31,220
you know going back another<font color="#CCCCCC"> multiple</font><font color="#E5E5E5"> ten</font>

287
00:12:31,220 --> 00:12:34,540
but this is<font color="#CCCCCC"> always worked</font><font color="#E5E5E5"> for me so far</font>

288
00:12:40,160 --> 00:12:43,490
once why does this learning rate this

289
00:12:43,490 --> 00:12:45,860
<font color="#E5E5E5">method work versus something else like</font>

290
00:12:45,860 --> 00:12:47,749
<font color="#CCCCCC">momentum</font><font color="#E5E5E5"> base or what's like the</font>

291
00:12:47,749 --> 00:12:50,120
advantages<font color="#CCCCCC"> a disadvantage</font><font color="#E5E5E5"> with just</font>

292
00:12:50,120 --> 00:12:52,009
learning rate rate like technique<font color="#CCCCCC"> we're</font>

293
00:12:52,009 --> 00:13:00,189
<font color="#E5E5E5">just feels that's</font><font color="#CCCCCC"> a great</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> so</font>

294
00:13:00,189 --> 00:13:02,209
<font color="#E5E5E5">we're going to learn during this course</font>

295
00:13:02,209 --> 00:13:03,499
about<font color="#E5E5E5"> a number of ways of improving</font>

296
00:13:03,499 --> 00:13:05,749
<font color="#CCCCCC">gradient</font><font color="#E5E5E5"> percent like you mentioned</font>

297
00:13:05,749 --> 00:13:08,779
momentum and<font color="#E5E5E5"> atom and so forth this is</font>

298
00:13:08,779 --> 00:13:10,970
<font color="#CCCCCC">orthogonal</font><font color="#E5E5E5"> in fact so one</font><font color="#CCCCCC"> of the things</font>

299
00:13:10,970 --> 00:13:13,040
<font color="#CCCCCC">the faster</font><font color="#E5E5E5"> a library tries to do is</font>

300
00:13:13,040 --> 00:13:15,439
figure out<font color="#E5E5E5"> the right gradient descent</font>

301
00:13:15,439 --> 00:13:17,149
version and in fact<font color="#E5E5E5"> behind the scenes</font>

302
00:13:17,149 --> 00:13:18,379
this<font color="#E5E5E5"> is actually using something called</font>

303
00:13:18,379 --> 00:13:21,170
<font color="#E5E5E5">atom and so this technique is telling us</font>

304
00:13:21,170 --> 00:13:23,139
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is the best</font><font color="#E5E5E5"> learning rate to use</font>

305
00:13:23,139 --> 00:13:26,389
<font color="#E5E5E5">given what I thought other tweaks you're</font>

306
00:13:26,389 --> 00:13:29,029
using in this<font color="#E5E5E5"> case the atom optimizer</font><font color="#CCCCCC"> so</font>

307
00:13:29,029 --> 00:13:31,339
it's not<font color="#CCCCCC"> that there's some</font><font color="#E5E5E5"> compromise</font>

308
00:13:31,339 --> 00:13:32,899
between this and<font color="#CCCCCC"> some other approaches</font>

309
00:13:32,899 --> 00:13:34,759
<font color="#E5E5E5">who sits on top of those approaches and</font>

310
00:13:34,759 --> 00:13:36,019
you still have to<font color="#E5E5E5"> set the learning rate</font>

311
00:13:36,019 --> 00:13:38,179
when you use with other approaches so

312
00:13:38,179 --> 00:13:38,660
we're trying<font color="#E5E5E5"> to</font>

313
00:13:38,660 --> 00:13:41,029
find the best kind of optimizer to use

314
00:13:41,029 --> 00:13:42,649
for a<font color="#E5E5E5"> problem that you still have</font><font color="#CCCCCC"> to set</font>

315
00:13:42,649 --> 00:13:44,269
the learning rate<font color="#E5E5E5"> and this is how we can</font>

316
00:13:44,269 --> 00:13:46,459
do<font color="#E5E5E5"> it and in fact this idea of</font><font color="#CCCCCC"> using</font>

317
00:13:46,459 --> 00:13:49,100
this technique<font color="#E5E5E5"> on top of more advanced</font>

318
00:13:49,100 --> 00:13:50,569
optimizers like<font color="#CCCCCC"> Adam might haven't even</font>

319
00:13:50,569 --> 00:13:52,579
seen mentioned in a paper before<font color="#CCCCCC"> so I</font>

320
00:13:52,579 --> 00:13:54,350
think<font color="#E5E5E5"> this is like a I mean it's not a</font>

321
00:13:54,350 --> 00:13:56,269
<font color="#E5E5E5">huge breakthrough it seems</font><font color="#CCCCCC"> obvious but</font>

322
00:13:56,269 --> 00:13:59,629
<font color="#E5E5E5">nobody else seems to tried it so as you</font>

323
00:13:59,629 --> 00:14:02,589
can<font color="#E5E5E5"> see it was well</font>

324
00:14:05,800 --> 00:14:08,230
when we use<font color="#CCCCCC"> optimizers like Adam</font><font color="#E5E5E5"> ditched</font>

325
00:14:08,230 --> 00:14:10,690
<font color="#E5E5E5">Harvick adaptive learning rate so and</font><font color="#CCCCCC"> he</font>

326
00:14:10,690 --> 00:14:12,339
said this learning rate is<font color="#CCCCCC"> Italy initial</font>

327
00:14:12,339 --> 00:14:14,050
learning<font color="#E5E5E5"> rate because it changes during</font>

328
00:14:14,050 --> 00:14:21,880
<font color="#E5E5E5">the people so we're going to be learning</font>

329
00:14:21,880 --> 00:14:24,250
about<font color="#E5E5E5"> things like Adam the details about</font>

330
00:14:24,250 --> 00:14:26,350
<font color="#CCCCCC">it</font><font color="#E5E5E5"> later in the class but</font><font color="#CCCCCC"> the basic</font>

331
00:14:26,350 --> 00:14:28,270
answer<font color="#CCCCCC"> is no even with</font><font color="#E5E5E5"> even the Adam</font>

332
00:14:28,270 --> 00:14:29,910
that there actually is<font color="#E5E5E5"> a learning rate</font>

333
00:14:29,910 --> 00:14:35,860
<font color="#CCCCCC">it's just being it's being</font><font color="#E5E5E5"> basically</font>

334
00:14:35,860 --> 00:14:39,520
divided by the the<font color="#CCCCCC"> gradient</font><font color="#E5E5E5"> the average</font>

335
00:14:39,520 --> 00:14:41,950
previous<font color="#E5E5E5"> gradient and also the recent</font>

336
00:14:41,950 --> 00:14:43,750
<font color="#E5E5E5">summer Squared's of gradients so</font><font color="#CCCCCC"> there's</font>

337
00:14:43,750 --> 00:14:45,220
still like a number<font color="#E5E5E5"> called the learning</font>

338
00:14:45,220 --> 00:14:47,589
<font color="#E5E5E5">rate there there isn't a even these</font><font color="#CCCCCC"> so</font>

339
00:14:47,589 --> 00:14:49,750
<font color="#CCCCCC">called dynamic learning rate methods</font>

340
00:14:49,750 --> 00:15:00,339
still have unlearning<font color="#E5E5E5"> rate okay so the</font>

341
00:15:00,339 --> 00:15:04,510
most important<font color="#E5E5E5"> thing that you</font><font color="#CCCCCC"> can do to</font>

342
00:15:04,510 --> 00:15:07,660
make<font color="#E5E5E5"> your model better and is to give it</font>

343
00:15:07,660 --> 00:15:10,990
more data so the challenge that happens

344
00:15:10,990 --> 00:15:13,720
is that<font color="#E5E5E5"> these models have hundreds of</font>

345
00:15:13,720 --> 00:15:16,810
<font color="#E5E5E5">millions of</font><font color="#CCCCCC"> parameters and</font><font color="#E5E5E5"> if you train</font>

346
00:15:16,810 --> 00:15:19,870
them for<font color="#CCCCCC"> a while</font><font color="#E5E5E5"> they start to do what's</font>

347
00:15:19,870 --> 00:15:21,970
called<font color="#E5E5E5"> overfitting</font><font color="#CCCCCC"> and so overfitting</font>

348
00:15:21,970 --> 00:15:23,980
<font color="#E5E5E5">means that they're going to start to see</font>

349
00:15:23,980 --> 00:15:26,079
like the specific<font color="#CCCCCC"> details of</font><font color="#E5E5E5"> the images</font>

350
00:15:26,079 --> 00:15:27,790
you're giving them rather than<font color="#E5E5E5"> the more</font>

351
00:15:27,790 --> 00:15:31,570
general learning<font color="#CCCCCC"> that can transfer</font>

352
00:15:31,570 --> 00:15:34,300
across<font color="#E5E5E5"> to the validation set so the best</font>

353
00:15:34,300 --> 00:15:36,040
thing we<font color="#CCCCCC"> can do to avoid overfitting is</font>

354
00:15:36,040 --> 00:15:39,399
to find more data<font color="#E5E5E5"> now obviously one way</font>

355
00:15:39,399 --> 00:15:41,079
<font color="#CCCCCC">to do that would just be to collect more</font>

356
00:15:41,079 --> 00:15:42,399
data from<font color="#E5E5E5"> where you're getting it from</font>

357
00:15:42,399 --> 00:15:45,070
or label more data but<font color="#CCCCCC"> a really easy way</font>

358
00:15:45,070 --> 00:15:47,200
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> should always do is to use</font>

359
00:15:47,200 --> 00:15:51,040
something<font color="#CCCCCC"> called data augmentation so</font>

360
00:15:51,040 --> 00:15:53,200
they<font color="#E5E5E5"> don't open tuition is one of these</font>

361
00:15:53,200 --> 00:15:55,959
things that's<font color="#CCCCCC"> key in many courses it's</font>

362
00:15:55,959 --> 00:15:57,520
not even<font color="#E5E5E5"> mentioned at all or if it is</font>

363
00:15:57,520 --> 00:15:58,839
it's<font color="#E5E5E5"> kind of like an advanced topic</font>

364
00:15:58,839 --> 00:16:00,730
<font color="#E5E5E5">right at the end but actually it's like</font>

365
00:16:00,730 --> 00:16:03,250
the most important thing<font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> do</font>

366
00:16:03,250 --> 00:16:05,320
to make a better model<font color="#CCCCCC"> okay and so it's</font>

367
00:16:05,320 --> 00:16:07,000
built into<font color="#CCCCCC"> the faster</font><font color="#E5E5E5"> you library to</font>

368
00:16:07,000 --> 00:16:08,890
<font color="#E5E5E5">make it very</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to do and so we're</font>

369
00:16:08,890 --> 00:16:10,420
going to<font color="#CCCCCC"> look at the details of the code</font>

370
00:16:10,420 --> 00:16:14,740
shortly but the basic idea is<font color="#CCCCCC"> that</font>

371
00:16:14,740 --> 00:16:19,930
<font color="#E5E5E5">as in our initial code</font><font color="#CCCCCC"> we had a line</font>

372
00:16:19,930 --> 00:16:22,240
that said<font color="#E5E5E5"> image classified</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> from</font>

373
00:16:22,240 --> 00:16:23,950
parts and we passed in<font color="#CCCCCC"> the path to our</font>

374
00:16:23,950 --> 00:16:26,770
data and<font color="#E5E5E5"> for transforms we passed in</font>

375
00:16:26,770 --> 00:16:30,010
<font color="#E5E5E5">basically the sizing the architecture</font>

376
00:16:30,010 --> 00:16:31,360
<font color="#CCCCCC">we'll look at</font><font color="#E5E5E5"> this in more detail</font>

377
00:16:31,360 --> 00:16:34,149
<font color="#CCCCCC">shortly we just add one more parameter</font>

378
00:16:34,149 --> 00:16:36,760
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is what</font><font color="#E5E5E5"> kind of data augmentation</font>

379
00:16:36,760 --> 00:16:41,020
<font color="#E5E5E5">do you want to do and so to understand</font>

380
00:16:41,020 --> 00:16:43,240
data augmentation<font color="#E5E5E5"> it's may be easiest to</font>

381
00:16:43,240 --> 00:16:44,620
look at some<font color="#CCCCCC"> pictures of data</font>

382
00:16:44,620 --> 00:16:47,140
augmentation<font color="#E5E5E5"> so what I've done here</font>

383
00:16:47,140 --> 00:16:48,820
again<font color="#CCCCCC"> we'll look at the code in more</font>

384
00:16:48,820 --> 00:16:50,800
detail<font color="#E5E5E5"> later</font><font color="#CCCCCC"> but the basic idea is oh</font>

385
00:16:50,800 --> 00:16:56,560
I've run<font color="#CCCCCC"> I've built a data class like</font>

386
00:16:56,560 --> 00:16:58,270
multiple times I'm going<font color="#E5E5E5"> to do it six</font>

387
00:16:58,270 --> 00:17:00,550
<font color="#E5E5E5">times and each</font><font color="#CCCCCC"> time I'm</font><font color="#E5E5E5"> going to plot</font>

388
00:17:00,550 --> 00:17:03,910
the same<font color="#CCCCCC"> catch and you can see that what</font>

389
00:17:03,910 --> 00:17:07,329
<font color="#CCCCCC">happens is that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> cap here</font><font color="#E5E5E5"> is further</font>

390
00:17:07,329 --> 00:17:09,099
<font color="#E5E5E5">over to the left</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> one here is</font>

391
00:17:09,099 --> 00:17:10,510
further<font color="#E5E5E5"> over to the right and this one</font>

392
00:17:10,510 --> 00:17:13,839
<font color="#E5E5E5">here is fit horizontally and so forth so</font>

393
00:17:13,839 --> 00:17:17,730
data augmentation<font color="#CCCCCC"> different types of</font>

394
00:17:17,730 --> 00:17:19,569
image you're<font color="#CCCCCC"> going to want different</font>

395
00:17:19,569 --> 00:17:22,660
types of data augmentation<font color="#E5E5E5"> right so for</font>

396
00:17:22,660 --> 00:17:25,020
example if you were<font color="#E5E5E5"> trying to recognize</font>

397
00:17:25,020 --> 00:17:27,730
<font color="#E5E5E5">letters and digits</font><font color="#CCCCCC"> you wouldn't want to</font>

398
00:17:27,730 --> 00:17:29,470
flip horizontally because<font color="#E5E5E5"> like it's</font>

399
00:17:29,470 --> 00:17:31,540
actually has a different meaning<font color="#CCCCCC"> whereas</font>

400
00:17:31,540 --> 00:17:33,929
on the other<font color="#E5E5E5"> hand if you're looking</font><font color="#CCCCCC"> at</font>

401
00:17:33,929 --> 00:17:36,309
photos<font color="#CCCCCC"> of cats and</font><font color="#E5E5E5"> dogs you probably</font>

402
00:17:36,309 --> 00:17:38,140
don't want to<font color="#E5E5E5"> fit vertically</font><font color="#CCCCCC"> because</font>

403
00:17:38,140 --> 00:17:40,240
cats<font color="#E5E5E5"> aren't generally upside down</font><font color="#CCCCCC"> all</font>

404
00:17:40,240 --> 00:17:42,220
<font color="#E5E5E5">right where else if you're looking at</font>

405
00:17:42,220 --> 00:17:44,050
there's a current<font color="#CCCCCC"> Cargill competition</font>

406
00:17:44,050 --> 00:17:47,530
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> recognizing icebergs</font><font color="#E5E5E5"> in</font>

407
00:17:47,530 --> 00:17:50,080
<font color="#E5E5E5">satellite</font><font color="#CCCCCC"> images</font><font color="#E5E5E5"> you probably do</font><font color="#CCCCCC"> want to</font>

408
00:17:50,080 --> 00:17:52,360
<font color="#E5E5E5">fit them upside down because it's really</font>

409
00:17:52,360 --> 00:17:54,400
<font color="#E5E5E5">matter which</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> around the iceberg or</font>

410
00:17:54,400 --> 00:17:58,960
the satellite was right<font color="#E5E5E5"> so one of the</font>

411
00:17:58,960 --> 00:18:00,940
<font color="#E5E5E5">examples of the transform sets we</font><font color="#CCCCCC"> have</font>

412
00:18:00,940 --> 00:18:03,700
is transforms<font color="#CCCCCC"> sidon so in other words if</font>

413
00:18:03,700 --> 00:18:05,200
you have photos<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are like generally</font>

414
00:18:05,200 --> 00:18:07,420
taken from the side which generally

415
00:18:07,420 --> 00:18:08,679
means<font color="#E5E5E5"> you want to be able to flip them</font>

416
00:18:08,679 --> 00:18:10,690
<font color="#CCCCCC">horizontally but not vertically</font><font color="#E5E5E5"> this is</font>

417
00:18:10,690 --> 00:18:12,130
going to give you all<font color="#CCCCCC"> the transforms you</font>

418
00:18:12,130 --> 00:18:13,510
need for that so it'll flip them

419
00:18:13,510 --> 00:18:16,179
sideways<font color="#CCCCCC"> rotate</font><font color="#E5E5E5"> them by small amounts</font>

420
00:18:16,179 --> 00:18:19,000
<font color="#E5E5E5">but not too much</font><font color="#CCCCCC"> and slightly bury their</font>

421
00:18:19,000 --> 00:18:22,630
contrast and brightness<font color="#CCCCCC"> and slightly</font>

422
00:18:22,630 --> 00:18:24,190
zoom in and out<font color="#E5E5E5"> a little bit and move</font>

423
00:18:24,190 --> 00:18:25,160
them<font color="#E5E5E5"> around a little</font>

424
00:18:25,160 --> 00:18:26,650
so each<font color="#E5E5E5"> time it's a slightly different</font>

425
00:18:26,650 --> 00:18:30,980
<font color="#CCCCCC">fight billionaires we're getting a</font>

426
00:18:30,980 --> 00:18:33,610
<font color="#CCCCCC">couple</font><font color="#E5E5E5"> of questions from</font><font color="#CCCCCC"> people about</font>

427
00:18:33,610 --> 00:18:36,620
<font color="#E5E5E5">you explaining in the reason why you</font>

428
00:18:36,620 --> 00:18:38,930
don't<font color="#E5E5E5"> think</font><font color="#CCCCCC"> the minimum of the loss</font>

429
00:18:38,930 --> 00:18:41,750
curve<font color="#E5E5E5"> yeah but it's like the higher rate</font>

430
00:18:41,750 --> 00:18:44,840
<font color="#E5E5E5">so yeah and</font><font color="#CCCCCC"> also could you people</font>

431
00:18:44,840 --> 00:18:48,650
<font color="#E5E5E5">understand if this works for every CNN</font>

432
00:18:48,650 --> 00:18:52,910
for CNN<font color="#E5E5E5"> every</font><font color="#CCCCCC"> minute</font><font color="#E5E5E5"> there's a</font><font color="#CCCCCC"> running</font>

433
00:18:52,910 --> 00:18:58,550
right<font color="#E5E5E5"> fine</font><font color="#CCCCCC"> done yeah exactly yeah okay</font>

434
00:18:58,550 --> 00:18:58,850
great

435
00:18:58,850 --> 00:19:02,810
um could you put<font color="#E5E5E5"> your hand up if there's</font>

436
00:19:02,810 --> 00:19:11,480
a spare seat next to you so there was a

437
00:19:11,480 --> 00:19:13,160
<font color="#CCCCCC">question about</font><font color="#E5E5E5"> the learning rate finder</font>

438
00:19:13,160 --> 00:19:15,470
about why do we use<font color="#E5E5E5"> the learning rate</font>

439
00:19:15,470 --> 00:19:18,350
that's less<font color="#CCCCCC"> than</font><font color="#E5E5E5"> the lowest point and so</font>

440
00:19:18,350 --> 00:19:20,150
the reason why is<font color="#CCCCCC"> to understand what's</font>

441
00:19:20,150 --> 00:19:23,710
<font color="#CCCCCC">going</font><font color="#E5E5E5"> on with this learning rate finder</font>

442
00:19:24,160 --> 00:19:28,030
so let's go back<font color="#CCCCCC"> to our</font><font color="#E5E5E5"> picture here</font>

443
00:19:28,030 --> 00:19:31,190
like how do we<font color="#E5E5E5"> figure out what learning</font>

444
00:19:31,190 --> 00:19:33,470
<font color="#E5E5E5">rate to use right and so what we're</font>

445
00:19:33,470 --> 00:19:35,750
going<font color="#E5E5E5"> to do is we're</font><font color="#CCCCCC"> going to take steps</font>

446
00:19:35,750 --> 00:19:39,830
<font color="#CCCCCC">and each time we're going</font><font color="#E5E5E5"> to double the</font>

447
00:19:39,830 --> 00:19:41,300
learning rate so kind<font color="#E5E5E5"> of double the</font>

448
00:19:41,300 --> 00:19:43,100
<font color="#E5E5E5">amount by which we multiply</font><font color="#CCCCCC"> the grander</font>

449
00:19:43,100 --> 00:19:45,770
gradient<font color="#E5E5E5"> so in other words would go tiny</font>

450
00:19:45,770 --> 00:19:47,780
step slightly<font color="#E5E5E5"> bigger slightly bigger</font>

451
00:19:47,780 --> 00:19:51,980
slightly bigger<font color="#CCCCCC"> slightly</font><font color="#E5E5E5"> bigger slightly</font>

452
00:19:51,980 --> 00:19:57,350
bigger<font color="#E5E5E5"> slightly bigger okay</font><font color="#CCCCCC"> and so the</font>

453
00:19:57,350 --> 00:19:59,360
question is of the purpose of<font color="#E5E5E5"> this is</font>

454
00:19:59,360 --> 00:20:01,490
<font color="#E5E5E5">not to find the minimum the</font><font color="#CCCCCC"> purpose of</font>

455
00:20:01,490 --> 00:20:03,740
this is to<font color="#E5E5E5"> figure out what learning rate</font>

456
00:20:03,740 --> 00:20:07,030
is allowing us to decrease quickly right

457
00:20:07,030 --> 00:20:09,830
so the point at which the loss was

458
00:20:09,830 --> 00:20:13,310
lowest here is actually there right but

459
00:20:13,310 --> 00:20:15,170
<font color="#E5E5E5">that learning rate actually looks like</font>

460
00:20:15,170 --> 00:20:16,670
it's probably too high it's going<font color="#E5E5E5"> to</font>

461
00:20:16,670 --> 00:20:19,070
<font color="#E5E5E5">just jump like probably backwards and</font>

462
00:20:19,070 --> 00:20:22,250
forwards<font color="#E5E5E5"> okay so instead what we do is</font>

463
00:20:22,250 --> 00:20:24,290
<font color="#CCCCCC">we go back to the point where the</font>

464
00:20:24,290 --> 00:20:26,450
learning<font color="#E5E5E5"> rates quickly are giving us a</font>

465
00:20:26,450 --> 00:20:33,020
quick<font color="#E5E5E5"> increase in the loss so here is so</font>

466
00:20:33,020 --> 00:20:34,610
here is the<font color="#E5E5E5"> actual learning rate</font>

467
00:20:34,610 --> 00:20:36,770
increasing every single time<font color="#E5E5E5"> we look at</font>

468
00:20:36,770 --> 00:20:38,090
a new mini batch

469
00:20:38,090 --> 00:20:40,009
so<font color="#E5E5E5"> mini-batch reiteration versus</font>

470
00:20:40,009 --> 00:20:42,469
<font color="#E5E5E5">learning</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> and then here is learning</font>

471
00:20:42,469 --> 00:20:44,450
<font color="#E5E5E5">rate versus loss so here's that point at</font>

472
00:20:44,450 --> 00:20:47,289
<font color="#E5E5E5">the bottom</font><font color="#CCCCCC"> where is</font><font color="#E5E5E5"> now already too</font><font color="#CCCCCC"> high</font>

473
00:20:47,289 --> 00:20:49,519
<font color="#CCCCCC">okay and so here's the</font><font color="#E5E5E5"> point where we go</font>

474
00:20:49,519 --> 00:20:51,320
back a little bit<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's increasing</font>

475
00:20:51,320 --> 00:20:55,340
nice and quickly<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> learn</font>

476
00:20:55,340 --> 00:20:57,259
<font color="#E5E5E5">about something called stochastic</font>

477
00:20:57,259 --> 00:20:59,659
<font color="#CCCCCC">gradient descent with restarts shortly</font>

478
00:20:59,659 --> 00:21:01,249
where we're going to see like in a<font color="#E5E5E5"> sense</font>

479
00:21:01,249 --> 00:21:03,379
you<font color="#E5E5E5"> might want</font><font color="#CCCCCC"> to go</font><font color="#E5E5E5"> back to 1 enoch 3</font>

480
00:21:03,379 --> 00:21:05,330
where it's<font color="#CCCCCC"> actually even steeper</font><font color="#E5E5E5"> still</font>

481
00:21:05,330 --> 00:21:07,190
and maybe we would actually find this

482
00:21:07,190 --> 00:21:11,330
book<font color="#E5E5E5"> actually learn even quicker you</font>

483
00:21:11,330 --> 00:21:13,009
could try it<font color="#CCCCCC"> but we're going to see</font>

484
00:21:13,009 --> 00:21:14,869
later why<font color="#E5E5E5"> actually using a higher number</font>

485
00:21:14,869 --> 00:21:16,729
is<font color="#E5E5E5"> going to give</font><font color="#CCCCCC"> us better</font>

486
00:21:16,729 --> 00:21:19,580
generalization<font color="#E5E5E5"> so</font><font color="#CCCCCC"> for now let's put that</font>

487
00:21:19,580 --> 00:21:22,129
<font color="#E5E5E5">aside do you mean higher learning rate</font>

488
00:21:22,129 --> 00:21:24,259
when<font color="#E5E5E5"> you say I</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> I mean higher</font>

489
00:21:24,259 --> 00:21:25,580
<font color="#E5E5E5">letting retina say higher</font>

490
00:21:25,580 --> 00:21:31,429
yeah<font color="#CCCCCC"> yeah I mean I am learning rate so</font>

491
00:21:31,429 --> 00:21:33,259
as we increase<font color="#CCCCCC"> the iterations from</font><font color="#E5E5E5"> the</font>

492
00:21:33,259 --> 00:21:35,179
learning rate finder the learning<font color="#E5E5E5"> rate</font>

493
00:21:35,179 --> 00:21:37,909
is<font color="#E5E5E5"> going up this is iterations versus</font>

494
00:21:37,909 --> 00:21:41,299
learning ready<font color="#E5E5E5"> okay so as we do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> as</font>

495
00:21:41,299 --> 00:21:43,249
the learning<font color="#E5E5E5"> rate increases and we plot</font>

496
00:21:43,249 --> 00:21:46,580
<font color="#E5E5E5">it</font><font color="#CCCCCC"> here the loss Goes Down and here we</font>

497
00:21:46,580 --> 00:21:47,779
get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> point where the learning rate</font>

498
00:21:47,779 --> 00:21:50,330
<font color="#E5E5E5">is too high and at that point the most</font>

499
00:21:50,330 --> 00:21:52,759
is now getting<font color="#E5E5E5"> worse</font><font color="#CCCCCC"> because I asked</font><font color="#E5E5E5"> the</font>

500
00:21:52,759 --> 00:21:54,019
question<font color="#CCCCCC"> because you were just</font>

501
00:21:54,019 --> 00:21:55,639
indicating that<font color="#E5E5E5"> you know even though the</font>

502
00:21:55,639 --> 00:21:58,519
<font color="#E5E5E5">minimum was at</font><font color="#CCCCCC"> 10 to the minus 1</font><font color="#E5E5E5"> you</font>

503
00:21:58,519 --> 00:22:00,559
were<font color="#E5E5E5"> gonna you suggest that we</font><font color="#CCCCCC"> should</font>

504
00:22:00,559 --> 00:22:03,289
choose 10 to the minus 2 but now you're

505
00:22:03,289 --> 00:22:04,669
saying I<font color="#E5E5E5"> mean we should go back the</font>

506
00:22:04,669 --> 00:22:07,039
other<font color="#CCCCCC"> way</font><font color="#E5E5E5"> higher so I didn't mean to say</font>

507
00:22:07,039 --> 00:22:08,749
<font color="#CCCCCC">that I'm sorry</font><font color="#E5E5E5"> if I said</font><font color="#CCCCCC"> something</font>

508
00:22:08,749 --> 00:22:11,499
backwards<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to go back down to the</font>

509
00:22:11,499 --> 00:22:14,899
<font color="#CCCCCC">lower learning rate</font><font color="#E5E5E5"> so possibly I said a</font>

510
00:22:14,899 --> 00:22:17,779
higher when<font color="#E5E5E5"> I meant higher into this</font>

511
00:22:17,779 --> 00:22:19,669
lower<font color="#CCCCCC"> OS do you</font><font color="#E5E5E5"> know I'm learning</font><font color="#CCCCCC"> right</font>

512
00:22:19,669 --> 00:22:22,909
<font color="#CCCCCC">okay thanks yep</font>

513
00:22:22,909 --> 00:22:26,390
last class is said that the local<font color="#E5E5E5"> all</font>

514
00:22:26,390 --> 00:22:29,690
the local minima are the same and this

515
00:22:29,690 --> 00:22:32,270
graph also<font color="#E5E5E5"> shows the same is that is</font>

516
00:22:32,270 --> 00:22:33,770
this<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was observed</font><font color="#CCCCCC"> or is</font>

517
00:22:33,770 --> 00:22:37,789
the logic theory behind it that's not

518
00:22:37,789 --> 00:22:40,220
<font color="#CCCCCC">what this graph is showing this graph is</font>

519
00:22:40,220 --> 00:22:41,750
simply showing that there's a<font color="#E5E5E5"> point</font>

520
00:22:41,750 --> 00:22:43,460
where if we increase the learning<font color="#E5E5E5"> rate</font>

521
00:22:43,460 --> 00:22:46,100
more<font color="#E5E5E5"> then it stops</font><font color="#CCCCCC"> getting better than</font>

522
00:22:46,100 --> 00:22:48,230
<font color="#E5E5E5">actually starts getting worse</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> idea</font>

523
00:22:48,230 --> 00:22:53,020
<font color="#E5E5E5">that all local minima are the same is a</font>

524
00:22:53,020 --> 00:22:57,470
totally separate issue<font color="#CCCCCC"> and it's actually</font>

525
00:22:57,470 --> 00:22:58,789
something<font color="#CCCCCC"> else we'll</font><font color="#E5E5E5"> see a picture of</font>

526
00:22:58,789 --> 00:23:02,110
<font color="#E5E5E5">shortly so let's come back to</font><font color="#CCCCCC"> that</font>

527
00:23:02,409 --> 00:23:05,630
Jeremy<font color="#E5E5E5"> do we have to find the base</font>

528
00:23:05,630 --> 00:23:08,710
<font color="#E5E5E5">learning rate every time we are going to</font>

529
00:23:08,710 --> 00:23:13,400
run<font color="#CCCCCC"> a</font><font color="#E5E5E5"> poke third time we're running on a</font>

530
00:23:13,400 --> 00:23:15,919
poke and a pop so how many<font color="#E5E5E5"> times should</font>

531
00:23:15,919 --> 00:23:19,220
I run this like let me write find my

532
00:23:19,220 --> 00:23:27,410
training that's a great question<font color="#CCCCCC"> unit um</font>

533
00:23:27,410 --> 00:23:31,930
<font color="#CCCCCC">I certainly run it once when I start</font>

534
00:23:31,930 --> 00:23:34,070
<font color="#CCCCCC">later on in this class</font><font color="#E5E5E5"> we're going to</font>

535
00:23:34,070 --> 00:23:37,970
<font color="#E5E5E5">learn about unfreezing layers</font><font color="#CCCCCC"> and after</font>

536
00:23:37,970 --> 00:23:40,010
<font color="#CCCCCC">I unfreeze layers I sometimes run it</font>

537
00:23:40,010 --> 00:23:42,800
again if I do something<font color="#E5E5E5"> to like change</font>

538
00:23:42,800 --> 00:23:44,750
<font color="#CCCCCC">the thing I'm training</font><font color="#E5E5E5"> or change the way</font>

539
00:23:44,750 --> 00:23:46,520
I'm<font color="#E5E5E5"> training it you may want to run it</font>

540
00:23:46,520 --> 00:23:50,540
again<font color="#E5E5E5"> basically or you know if you</font>

541
00:23:50,540 --> 00:23:51,770
<font color="#CCCCCC">particularly if you've changed</font><font color="#E5E5E5"> something</font>

542
00:23:51,770 --> 00:23:54,140
<font color="#E5E5E5">about how you train like unfreezing</font>

543
00:23:54,140 --> 00:23:55,490
layers which we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> soon learn</font>

544
00:23:55,490 --> 00:23:57,500
about and you're<font color="#E5E5E5"> finding the other</font>

545
00:23:57,500 --> 00:24:01,070
<font color="#E5E5E5">training is unstable or too slow</font>

546
00:24:01,070 --> 00:24:03,260
<font color="#E5E5E5">well again you can run it</font><font color="#CCCCCC"> again there's</font>

547
00:24:03,260 --> 00:24:04,270
<font color="#E5E5E5">never any harm</font>

548
00:24:04,270 --> 00:24:07,660
in running<font color="#CCCCCC"> it it doesn't</font><font color="#E5E5E5"> take very long</font>

549
00:24:07,660 --> 00:24:11,540
<font color="#E5E5E5">that's great question</font><font color="#CCCCCC"> okay so back to</font>

550
00:24:11,540 --> 00:24:14,660
data augmentation so if we add to<font color="#CCCCCC"> a when</font>

551
00:24:14,660 --> 00:24:17,710
<font color="#E5E5E5">we run this little transforms</font><font color="#CCCCCC"> from model</font>

552
00:24:17,710 --> 00:24:20,480
function<font color="#CCCCCC"> we pass in orientation</font>

553
00:24:20,480 --> 00:24:23,320
transforms we can pass in the main to<font color="#E5E5E5"> a</font>

554
00:24:23,320 --> 00:24:26,330
transform side on or transforms<font color="#E5E5E5"> top down</font>

555
00:24:26,330 --> 00:24:28,340
<font color="#E5E5E5">later on we'll learn about</font><font color="#CCCCCC"> creating your</font>

556
00:24:28,340 --> 00:24:31,670
<font color="#CCCCCC">own custom transform lists as well but</font>

557
00:24:31,670 --> 00:24:32,960
<font color="#E5E5E5">for now</font><font color="#CCCCCC"> because we're taking pictures</font>

558
00:24:32,960 --> 00:24:35,450
<font color="#E5E5E5">from the side</font><font color="#CCCCCC"> cats and</font><font color="#E5E5E5"> dogs will say</font>

559
00:24:35,450 --> 00:24:38,720
transform side on and now each time we

560
00:24:38,720 --> 00:24:41,030
look at an image<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going to be zoomed</font>

561
00:24:41,030 --> 00:24:42,830
in or out a little bit moved around a

562
00:24:42,830 --> 00:24:43,400
little bit

563
00:24:43,400 --> 00:24:47,740
rotated a<font color="#E5E5E5"> little bit possibly flipped</font>

564
00:24:47,740 --> 00:24:50,720
<font color="#CCCCCC">okay and so</font><font color="#E5E5E5"> what this does is</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not</font>

565
00:24:50,720 --> 00:24:53,210
<font color="#CCCCCC">exactly creating new data</font><font color="#E5E5E5"> but as far as</font>

566
00:24:53,210 --> 00:24:55,640
the convolutional neural net<font color="#E5E5E5"> is</font>

567
00:24:55,640 --> 00:24:57,110
concerned it's a different way of

568
00:24:57,110 --> 00:24:59,330
looking at this thing<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> actually</font>

569
00:24:59,330 --> 00:25:02,840
therefore allows it to learn how to

570
00:25:02,840 --> 00:25:06,050
recognize<font color="#E5E5E5"> cats or dogs from somewhat</font>

571
00:25:06,050 --> 00:25:07,850
different angles<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so when we do</font>

572
00:25:07,850 --> 00:25:09,410
data orientation we're basically trying

573
00:25:09,410 --> 00:25:12,850
<font color="#E5E5E5">to say based on our</font><font color="#CCCCCC"> domain knowledge</font>

574
00:25:12,850 --> 00:25:15,590
here here are<font color="#CCCCCC"> different ways that we can</font>

575
00:25:15,590 --> 00:25:18,950
mess with<font color="#E5E5E5"> this image</font><font color="#CCCCCC"> that we know still</font>

576
00:25:18,950 --> 00:25:20,900
make it the same<font color="#E5E5E5"> image you know and that</font>

577
00:25:20,900 --> 00:25:22,490
we could expect<font color="#CCCCCC"> that you might actually</font>

578
00:25:22,490 --> 00:25:25,330
see that kind<font color="#E5E5E5"> of image in the real world</font>

579
00:25:25,330 --> 00:25:28,910
so what we can<font color="#E5E5E5"> do now is when</font><font color="#CCCCCC"> we call</font>

580
00:25:28,910 --> 00:25:31,310
this from parts function<font color="#CCCCCC"> which we'll</font>

581
00:25:31,310 --> 00:25:33,410
learn more about shortly<font color="#CCCCCC"> we can now pass</font>

582
00:25:33,410 --> 00:25:35,960
in this set of transforms which actually

583
00:25:35,960 --> 00:25:40,450
have these augmentations in now

584
00:25:41,410 --> 00:25:42,820
so<font color="#E5E5E5"> that's going to we're going</font><font color="#CCCCCC"> to start</font>

585
00:25:42,820 --> 00:25:47,250
from scratch here<font color="#CCCCCC"> we do a fit</font><font color="#E5E5E5"> and</font>

586
00:25:47,250 --> 00:25:51,040
initially the augmentations<font color="#E5E5E5"> actually</font>

587
00:25:51,040 --> 00:25:53,590
don't do anything<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> reason</font>

588
00:25:53,590 --> 00:25:55,210
initially they don't do anything<font color="#E5E5E5"> is</font>

589
00:25:55,210 --> 00:25:56,860
<font color="#E5E5E5">because we've got here something</font><font color="#CCCCCC"> that</font>

590
00:25:56,860 --> 00:25:59,350
says<font color="#CCCCCC"> precompute equals true</font><font color="#E5E5E5"> we're going</font>

591
00:25:59,350 --> 00:26:03,670
to come back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> these lots of</font><font color="#E5E5E5"> times but</font>

592
00:26:03,670 --> 00:26:06,130
<font color="#E5E5E5">basically what this is</font><font color="#CCCCCC"> doing is do you</font>

593
00:26:06,130 --> 00:26:08,410
remember this picture<font color="#E5E5E5"> we saw where we</font>

594
00:26:08,410 --> 00:26:11,320
<font color="#CCCCCC">learn each different layer</font><font color="#E5E5E5"> has these</font>

595
00:26:11,320 --> 00:26:13,750
activations<font color="#CCCCCC"> that basically</font><font color="#E5E5E5"> look for</font><font color="#CCCCCC"> it</font>

596
00:26:13,750 --> 00:26:16,030
or anything from<font color="#CCCCCC"> the middle of flowers</font>

597
00:26:16,030 --> 00:26:21,280
<font color="#E5E5E5">to eyeballs of birds or whatever right</font>

598
00:26:21,280 --> 00:26:25,050
<font color="#CCCCCC">and so literally what happens is that</font>

599
00:26:25,050 --> 00:26:28,000
<font color="#E5E5E5">the the later layers of this</font>

600
00:26:28,000 --> 00:26:30,040
convolutional neural network have these

601
00:26:30,040 --> 00:26:32,290
things called<font color="#E5E5E5"> activations</font><font color="#CCCCCC"> and activation</font>

602
00:26:32,290 --> 00:26:34,900
literally it's a number<font color="#E5E5E5"> an activation is</font>

603
00:26:34,900 --> 00:26:38,340
a number that<font color="#E5E5E5"> says this feature like</font>

604
00:26:38,340 --> 00:26:42,640
<font color="#CCCCCC">eyeball</font><font color="#E5E5E5"> of bird is in this</font><font color="#CCCCCC"> location with</font>

605
00:26:42,640 --> 00:26:44,260
this<font color="#E5E5E5"> level of confidence</font><font color="#CCCCCC"> with its</font>

606
00:26:44,260 --> 00:26:46,780
probability<font color="#E5E5E5"> right and so we're going to</font>

607
00:26:46,780 --> 00:26:50,320
see a lot of this later<font color="#E5E5E5"> but what we can</font>

608
00:26:50,320 --> 00:26:52,870
do is we<font color="#E5E5E5"> can say all</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> well in this</font>

609
00:26:52,870 --> 00:26:55,690
we've got a pre trained<font color="#E5E5E5"> network remember</font>

610
00:26:55,690 --> 00:26:57,550
and a pre<font color="#E5E5E5"> trained network is one where</font>

611
00:26:57,550 --> 00:26:58,690
<font color="#E5E5E5">it's already learned to recognize</font>

612
00:26:58,690 --> 00:27:00,430
<font color="#CCCCCC">certain things in</font><font color="#E5E5E5"> this case it's</font><font color="#CCCCCC"> learnt</font>

613
00:27:00,430 --> 00:27:02,380
to<font color="#E5E5E5"> recognize the one and a half million</font>

614
00:27:02,380 --> 00:27:05,560
<font color="#E5E5E5">images in the</font><font color="#CCCCCC"> imagenet dataset</font><font color="#E5E5E5"> and so</font>

615
00:27:05,560 --> 00:27:07,990
what we<font color="#E5E5E5"> could do is</font><font color="#CCCCCC"> we could take</font><font color="#E5E5E5"> the</font>

616
00:27:07,990 --> 00:27:10,240
the second last layer so the one which

617
00:27:10,240 --> 00:27:12,610
is<font color="#CCCCCC"> like got all of the</font><font color="#E5E5E5"> information</font>

618
00:27:12,610 --> 00:27:14,740
necessary to figure out what kind of

619
00:27:14,740 --> 00:27:17,440
thing a<font color="#CCCCCC"> thing is and we can save those</font>

620
00:27:17,440 --> 00:27:19,510
activations so basically<font color="#E5E5E5"> saving things</font>

621
00:27:19,510 --> 00:27:21,970
saying you know there's this level<font color="#E5E5E5"> of</font>

622
00:27:21,970 --> 00:27:24,010
<font color="#CCCCCC">eyeball nurse here in</font><font color="#E5E5E5"> this level of</font><font color="#CCCCCC"> dogs</font>

623
00:27:24,010 --> 00:27:25,810
<font color="#E5E5E5">facing us here or in this level of</font>

624
00:27:25,810 --> 00:27:29,410
fluffy ear there and so forth<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so we</font>

625
00:27:29,410 --> 00:27:32,770
save for every<font color="#E5E5E5"> image these activations</font>

626
00:27:32,770 --> 00:27:35,140
<font color="#CCCCCC">and that we call them the pre computed</font>

627
00:27:35,140 --> 00:27:38,110
activations<font color="#CCCCCC"> and so the idea is now that</font>

628
00:27:38,110 --> 00:27:41,020
when we want to create a new classifier

629
00:27:41,020 --> 00:27:43,990
<font color="#E5E5E5">which can basically take</font><font color="#CCCCCC"> advantage of</font>

630
00:27:43,990 --> 00:27:46,570
these pre computed applications<font color="#CCCCCC"> we can</font>

631
00:27:46,570 --> 00:27:48,910
<font color="#CCCCCC">just very quickly train</font><font color="#E5E5E5"> when all the</font>

632
00:27:48,910 --> 00:27:50,560
details there shortly we can very

633
00:27:50,560 --> 00:27:52,740
<font color="#E5E5E5">quickly train a simple linear model</font>

634
00:27:52,740 --> 00:27:54,559
based on those

635
00:27:54,559 --> 00:27:55,879
and so that's what happens when we say

636
00:27:55,879 --> 00:27:58,759
<font color="#CCCCCC">pre-compute equals true</font><font color="#E5E5E5"> and that's why</font>

637
00:27:58,759 --> 00:28:01,279
<font color="#E5E5E5">you may have noticed this week the first</font>

638
00:28:01,279 --> 00:28:05,389
time that you run<font color="#CCCCCC"> a model</font><font color="#E5E5E5"> a new model</font><font color="#CCCCCC"> it</font>

639
00:28:05,389 --> 00:28:08,509
takes a minute or two<font color="#CCCCCC"> where else</font><font color="#E5E5E5"> you saw</font>

640
00:28:08,509 --> 00:28:10,129
when I ran it it took like five or<font color="#E5E5E5"> ten</font>

641
00:28:10,129 --> 00:28:12,139
seconds<font color="#CCCCCC"> took</font><font color="#E5E5E5"> you a minute or two and</font>

642
00:28:12,139 --> 00:28:14,289
that's because it had to<font color="#CCCCCC"> pre-compute</font>

643
00:28:14,289 --> 00:28:16,669
<font color="#E5E5E5">these activations and just has to do</font>

644
00:28:16,669 --> 00:28:19,340
that once if you're using like<font color="#CCCCCC"> your own</font>

645
00:28:19,340 --> 00:28:21,350
computer or AWS it just has to do it

646
00:28:21,350 --> 00:28:24,980
once<font color="#E5E5E5"> ever if you're using Kressel it</font>

647
00:28:24,980 --> 00:28:28,369
actually has to do it once<font color="#CCCCCC"> every single</font>

648
00:28:28,369 --> 00:28:30,919
time<font color="#E5E5E5"> you rerun press all because press</font>

649
00:28:30,919 --> 00:28:33,740
<font color="#CCCCCC">or uses are just for these</font><font color="#E5E5E5"> pre computed</font>

650
00:28:33,740 --> 00:28:35,509
activations<font color="#E5E5E5"> it uses a special that all</font>

651
00:28:35,509 --> 00:28:37,730
had a scratch space<font color="#E5E5E5"> that disappears each</font>

652
00:28:37,730 --> 00:28:39,740
time you restart<font color="#E5E5E5"> your press or instance</font>

653
00:28:39,740 --> 00:28:42,440
so other than<font color="#CCCCCC"> the</font><font color="#E5E5E5"> special case of</font><font color="#CCCCCC"> cresol</font>

654
00:28:42,440 --> 00:28:44,029
<font color="#E5E5E5">generally speak he does have to run at</font>

655
00:28:44,029 --> 00:28:44,570
once

656
00:28:44,570 --> 00:28:50,629
ever for a data set<font color="#E5E5E5"> okay so the issue</font>

657
00:28:50,629 --> 00:28:53,059
with<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> since we pre computed</font>

658
00:28:53,059 --> 00:28:56,149
for<font color="#CCCCCC"> each image</font><font color="#E5E5E5"> you know how much does it</font>

659
00:28:56,149 --> 00:28:57,889
<font color="#E5E5E5">have an</font><font color="#CCCCCC"> EI here and how much does it</font>

660
00:28:57,889 --> 00:29:00,860
<font color="#E5E5E5">have a lizard's eyeball there and so</font>

661
00:29:00,860 --> 00:29:02,840
<font color="#E5E5E5">forth</font><font color="#CCCCCC"> that means that data augmentations</font>

662
00:29:02,840 --> 00:29:04,940
don't work right in other words<font color="#CCCCCC"> even</font>

663
00:29:04,940 --> 00:29:05,840
<font color="#E5E5E5">though we're trying to show at a</font>

664
00:29:05,840 --> 00:29:07,549
different<font color="#CCCCCC"> version of the cat each time</font>

665
00:29:07,549 --> 00:29:09,950
we've pre computed the activations for a

666
00:29:09,950 --> 00:29:13,369
particular version<font color="#CCCCCC"> of that cat</font><font color="#E5E5E5"> so in</font>

667
00:29:13,369 --> 00:29:15,860
order<font color="#E5E5E5"> to use data augmentation we just</font>

668
00:29:15,860 --> 00:29:17,629
have to go and<font color="#E5E5E5"> learn</font><font color="#CCCCCC"> pre compute equals</font>

669
00:29:17,629 --> 00:29:20,749
false<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and then we can run</font><font color="#E5E5E5"> a few</font>

670
00:29:20,749 --> 00:29:25,429
more<font color="#E5E5E5"> APIs right</font><font color="#CCCCCC"> and so you can see here</font>

671
00:29:25,429 --> 00:29:29,149
<font color="#E5E5E5">that as we run more</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Potts the accuracy</font>

672
00:29:29,149 --> 00:29:31,580
isn't particularly getting<font color="#E5E5E5"> better that's</font>

673
00:29:31,580 --> 00:29:32,149
<font color="#CCCCCC">the</font><font color="#E5E5E5"> bad news</font>

674
00:29:32,149 --> 00:29:35,779
the<font color="#CCCCCC"> good news is that you can see that</font>

675
00:29:35,779 --> 00:29:39,379
the<font color="#E5E5E5"> train loss practices like</font><font color="#CCCCCC"> the way of</font>

676
00:29:39,379 --> 00:29:40,850
measuring the error<font color="#E5E5E5"> of this model</font>

677
00:29:40,850 --> 00:29:42,889
<font color="#E5E5E5">although that's getting better</font><font color="#CCCCCC"> the</font>

678
00:29:42,889 --> 00:29:45,379
errors<font color="#E5E5E5"> going down</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> validation error</font>

679
00:29:45,379 --> 00:29:48,799
isn't<font color="#E5E5E5"> going</font><font color="#CCCCCC"> down and but we're not</font>

680
00:29:48,799 --> 00:29:50,929
overfitting and overfitting would mean

681
00:29:50,929 --> 00:29:53,899
that the training<font color="#CCCCCC"> loss is much lower</font>

682
00:29:53,899 --> 00:29:56,360
than<font color="#E5E5E5"> the validation loss and we're going</font>

683
00:29:56,360 --> 00:29:57,740
to talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that a lot during this</font>

684
00:29:57,740 --> 00:30:00,080
course<font color="#E5E5E5"> but the general idea</font><font color="#CCCCCC"> here is if</font>

685
00:30:00,080 --> 00:30:02,720
you're<font color="#E5E5E5"> doing much better job on the</font>

686
00:30:02,720 --> 00:30:04,399
training set<font color="#CCCCCC"> then you are on the</font>

687
00:30:04,399 --> 00:30:06,440
<font color="#E5E5E5">validation set that means your models</font>

688
00:30:06,440 --> 00:30:07,560
<font color="#E5E5E5">not generalize</font>

689
00:30:07,560 --> 00:30:10,250
so we're not at that<font color="#E5E5E5"> point which is good</font>

690
00:30:10,250 --> 00:30:14,760
but we're not<font color="#CCCCCC"> really improving so we're</font>

691
00:30:14,760 --> 00:30:15,930
going to<font color="#E5E5E5"> have to figure out how to deal</font>

692
00:30:15,930 --> 00:30:19,170
<font color="#CCCCCC">with that before we do I want to show</font>

693
00:30:19,170 --> 00:30:21,740
you one other<font color="#E5E5E5"> cool trick I've added</font><font color="#CCCCCC"> here</font>

694
00:30:21,740 --> 00:30:25,290
<font color="#E5E5E5">cycle length equals</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and this is</font>

695
00:30:25,290 --> 00:30:29,010
<font color="#CCCCCC">another really interesting idea here's</font>

696
00:30:29,010 --> 00:30:30,090
the<font color="#E5E5E5"> basic idea</font>

697
00:30:30,090 --> 00:30:33,750
cycle length equals<font color="#E5E5E5"> one enables a recent</font>

698
00:30:33,750 --> 00:30:35,850
fairly recent discovery<font color="#CCCCCC"> and deep</font>

699
00:30:35,850 --> 00:30:37,080
learning called<font color="#CCCCCC"> stochastic gradient</font>

700
00:30:37,080 --> 00:30:40,230
descent with restarts<font color="#CCCCCC"> and the basic idea</font>

701
00:30:40,230 --> 00:30:45,090
is<font color="#E5E5E5"> this as you as you get closer and</font>

702
00:30:45,090 --> 00:30:49,020
<font color="#E5E5E5">closer</font><font color="#CCCCCC"> as you get closer</font><font color="#E5E5E5"> and closer to</font>

703
00:30:49,020 --> 00:30:52,830
the right spot<font color="#CCCCCC"> right now</font><font color="#E5E5E5"> getting closer</font>

704
00:30:52,830 --> 00:30:55,110
and closer<font color="#CCCCCC"> I may want to start to</font>

705
00:30:55,110 --> 00:30:57,390
decrease<font color="#CCCCCC"> my learning rate right because</font>

706
00:30:57,390 --> 00:30:59,220
<font color="#E5E5E5">as I get closer I'm kind of like oh I'm</font>

707
00:30:59,220 --> 00:31:01,500
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> close</font><font color="#E5E5E5"> down so let's let's slow</font>

708
00:31:01,500 --> 00:31:04,620
down<font color="#E5E5E5"> my steps to</font><font color="#CCCCCC"> try to get executive</font>

709
00:31:04,620 --> 00:31:08,250
the right spot<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and so as we do</font>

710
00:31:08,250 --> 00:31:11,660
<font color="#E5E5E5">more iterations</font>

711
00:31:12,430 --> 00:31:15,400
our<font color="#E5E5E5"> learning rate perhaps should</font>

712
00:31:15,400 --> 00:31:19,360
actually go down<font color="#E5E5E5"> right because as we go</font>

713
00:31:19,360 --> 00:31:20,980
<font color="#CCCCCC">along we're getting closer and closer to</font>

714
00:31:20,980 --> 00:31:22,120
<font color="#E5E5E5">where we want to be and we want to like</font>

715
00:31:22,120 --> 00:31:25,600
get exactly<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> right spot okay so</font>

716
00:31:25,600 --> 00:31:27,970
the idea<font color="#CCCCCC"> of decreasing the</font><font color="#E5E5E5"> learning rate</font>

717
00:31:27,970 --> 00:31:29,530
<font color="#E5E5E5">as you train is called</font>

718
00:31:29,530 --> 00:31:33,430
<font color="#E5E5E5">learning rate annealing and it's it's</font>

719
00:31:33,430 --> 00:31:36,090
very very<font color="#E5E5E5"> common very very popular</font>

720
00:31:36,090 --> 00:31:39,420
<font color="#E5E5E5">everybody uses it basically all the</font><font color="#CCCCCC"> time</font>

721
00:31:39,420 --> 00:31:41,830
the most common kind<font color="#E5E5E5"> of learning rate</font>

722
00:31:41,830 --> 00:31:45,100
annealing is really horrendously hacky

723
00:31:45,100 --> 00:31:47,290
<font color="#E5E5E5">it's basically that</font><font color="#CCCCCC"> researchers like</font>

724
00:31:47,290 --> 00:31:49,600
pick a learning rate<font color="#E5E5E5"> that seems to</font><font color="#CCCCCC"> work</font>

725
00:31:49,600 --> 00:31:51,160
for a while and then when it stops

726
00:31:51,160 --> 00:31:53,350
learning<font color="#CCCCCC"> well they drop it down by about</font>

727
00:31:53,350 --> 00:31:55,360
<font color="#CCCCCC">10 times</font><font color="#E5E5E5"> and then they keep learning a</font>

728
00:31:55,360 --> 00:31:56,650
bit<font color="#E5E5E5"> more until it doesn't seem to be</font>

729
00:31:56,650 --> 00:31:58,090
<font color="#CCCCCC">improving</font><font color="#E5E5E5"> and they drop it down by</font>

730
00:31:58,090 --> 00:32:00,220
another<font color="#CCCCCC"> ten times</font><font color="#E5E5E5"> that's what most</font>

731
00:32:00,220 --> 00:32:02,470
academic research papers and<font color="#E5E5E5"> most people</font>

732
00:32:02,470 --> 00:32:04,570
in<font color="#CCCCCC"> industry</font><font color="#E5E5E5"> do so this would be like</font>

733
00:32:04,570 --> 00:32:07,510
<font color="#E5E5E5">stepwise annealing very manual very</font>

734
00:32:07,510 --> 00:32:11,860
annoying<font color="#E5E5E5"> a better approach is simply to</font>

735
00:32:11,860 --> 00:32:14,890
pick some kind of functional form like a

736
00:32:14,890 --> 00:32:17,470
line it turns out that a really good

737
00:32:17,470 --> 00:32:19,809
<font color="#E5E5E5">functional form is one half of the</font>

738
00:32:19,809 --> 00:32:22,280
cosine<font color="#E5E5E5"> curve</font>

739
00:32:22,280 --> 00:32:25,790
right and the reason<font color="#CCCCCC"> why is that for a</font>

740
00:32:25,790 --> 00:32:27,770
while<font color="#E5E5E5"> when you're not very close</font><font color="#CCCCCC"> you</font>

741
00:32:27,770 --> 00:32:29,270
kind of have a really<font color="#E5E5E5"> high learning rate</font>

742
00:32:29,270 --> 00:32:31,190
and that<font color="#E5E5E5"> is you do get</font><font color="#CCCCCC"> close you kind</font><font color="#E5E5E5"> of</font>

743
00:32:31,190 --> 00:32:33,290
quickly<font color="#E5E5E5"> drop down and do a few</font>

744
00:32:33,290 --> 00:32:35,390
iterations with a really<font color="#CCCCCC"> low learning</font>

745
00:32:35,390 --> 00:32:37,430
rate and so this is called<font color="#CCCCCC"> cosine</font>

746
00:32:37,430 --> 00:32:40,160
annealing so to<font color="#E5E5E5"> those of you who haven't</font>

747
00:32:40,160 --> 00:32:41,480
done trigonometry for a while

748
00:32:41,480 --> 00:32:44,210
<font color="#E5E5E5">cosine basically looks something like</font>

749
00:32:44,210 --> 00:32:47,480
this<font color="#CCCCCC"> right so we've picked one little</font>

750
00:32:47,480 --> 00:32:52,280
half piece okay so we're going<font color="#E5E5E5"> to use</font>

751
00:32:52,280 --> 00:32:56,230
cosine annealing<font color="#CCCCCC"> but here's</font><font color="#E5E5E5"> the thing</font>

752
00:32:56,230 --> 00:33:00,710
<font color="#E5E5E5">when you're in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> very high</font><font color="#CCCCCC"> dimensional</font>

753
00:33:00,710 --> 00:33:02,660
space right near we're only able to show

754
00:33:02,660 --> 00:33:05,090
three dimensions right but in reality

755
00:33:05,090 --> 00:33:06,500
we've got hundreds<font color="#E5E5E5"> of millions of</font>

756
00:33:06,500 --> 00:33:10,930
dimensions<font color="#CCCCCC"> we've got</font><font color="#E5E5E5"> lots of different</font>

757
00:33:10,930 --> 00:33:13,460
fairly flat points<font color="#CCCCCC"> there no not</font><font color="#E5E5E5"> the</font>

758
00:33:13,460 --> 00:33:14,990
actual local minima but they're fairly

759
00:33:14,990 --> 00:33:17,480
flat points all<font color="#E5E5E5"> of which are pretty good</font>

760
00:33:17,480 --> 00:33:20,360
<font color="#E5E5E5">right but they might differ in a really</font>

761
00:33:20,360 --> 00:33:22,520
<font color="#E5E5E5">interesting way which is that some of</font>

762
00:33:22,520 --> 00:33:27,580
<font color="#E5E5E5">those flat points let me show you</font>

763
00:33:32,370 --> 00:33:35,170
let's<font color="#E5E5E5"> imagine we've got</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> surface that</font>

764
00:33:35,170 --> 00:33:37,950
<font color="#CCCCCC">looks something like this</font>

765
00:33:40,360 --> 00:33:43,890
right now<font color="#E5E5E5"> imagine that</font><font color="#CCCCCC"> where you kind of</font>

766
00:33:43,890 --> 00:33:47,440
random<font color="#CCCCCC"> guest started here</font><font color="#E5E5E5"> and our</font>

767
00:33:47,440 --> 00:33:49,419
initial<font color="#E5E5E5"> therefore kind of learning rate</font>

768
00:33:49,419 --> 00:33:51,779
<font color="#CCCCCC">annealing schedule</font><font color="#E5E5E5"> got us down to here</font>

769
00:33:51,779 --> 00:33:55,720
now<font color="#E5E5E5"> indeed that's a pretty nice low</font>

770
00:33:55,720 --> 00:33:57,850
error<font color="#E5E5E5"> right but it probably</font><font color="#CCCCCC"> doesn't</font>

771
00:33:57,850 --> 00:34:00,190
<font color="#E5E5E5">generalize</font><font color="#CCCCCC"> very well which is to</font><font color="#E5E5E5"> say if</font>

772
00:34:00,190 --> 00:34:02,380
we<font color="#E5E5E5"> use a</font><font color="#CCCCCC"> different data set where things</font>

773
00:34:02,380 --> 00:34:04,750
are just<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of slightly</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> in</font>

774
00:34:04,750 --> 00:34:07,149
one of these<font color="#CCCCCC"> directions</font><font color="#E5E5E5"> suddenly</font><font color="#CCCCCC"> is a</font>

775
00:34:07,149 --> 00:34:10,359
terrible<font color="#CCCCCC"> solution</font><font color="#E5E5E5"> right where else over</font>

776
00:34:10,359 --> 00:34:13,899
here<font color="#E5E5E5"> is basically equally good in terms</font>

777
00:34:13,899 --> 00:34:16,179
of loss<font color="#CCCCCC"> right but it rather suggests</font>

778
00:34:16,179 --> 00:34:18,040
<font color="#CCCCCC">that if</font><font color="#E5E5E5"> you move if you have slightly</font>

779
00:34:18,040 --> 00:34:19,750
different data sets that are<font color="#E5E5E5"> slightly</font>

780
00:34:19,750 --> 00:34:21,668
moved in<font color="#CCCCCC"> different directions</font><font color="#E5E5E5"> it's still</font>

781
00:34:21,668 --> 00:34:23,409
going<font color="#E5E5E5"> to be good right so in other words</font>

782
00:34:23,409 --> 00:34:25,418
we<font color="#E5E5E5"> would expect this solution here is</font>

783
00:34:25,418 --> 00:34:29,619
<font color="#E5E5E5">probably going to generalize better than</font>

784
00:34:29,619 --> 00:34:33,159
this by<font color="#E5E5E5"> key one so here's what we do is</font>

785
00:34:33,159 --> 00:34:35,379
we've<font color="#CCCCCC"> got like a bunch of</font><font color="#E5E5E5"> different low</font>

786
00:34:35,379 --> 00:34:39,699
bits<font color="#E5E5E5"> right then our standard loading</font>

787
00:34:39,699 --> 00:34:41,649
<font color="#E5E5E5">rate annealing approach will start of go</font>

788
00:34:41,649 --> 00:34:43,719
down here<font color="#E5E5E5"> or downhill downhill downhill</font>

789
00:34:43,719 --> 00:34:47,290
downhill to one spot<font color="#E5E5E5"> right but what we</font>

790
00:34:47,290 --> 00:34:49,780
<font color="#E5E5E5">could do</font><font color="#CCCCCC"> instead is use a learning rate</font>

791
00:34:49,780 --> 00:34:54,219
schedule that looks<font color="#E5E5E5"> like this which is</font>

792
00:34:54,219 --> 00:34:56,349
<font color="#E5E5E5">to</font><font color="#CCCCCC"> say we do a cosign annealing and</font><font color="#E5E5E5"> then</font>

793
00:34:56,349 --> 00:34:58,030
suddenly jump up again<font color="#CCCCCC"> into a</font><font color="#E5E5E5"> cosign</font>

794
00:34:58,030 --> 00:34:59,530
annealing and<font color="#CCCCCC"> then jump up again</font>

795
00:34:59,530 --> 00:35:02,440
and so each time<font color="#CCCCCC"> we jump</font><font color="#E5E5E5"> up it means</font>

796
00:35:02,440 --> 00:35:04,210
that if<font color="#CCCCCC"> they're going to spiky bit and</font>

797
00:35:04,210 --> 00:35:06,040
then we subtly increase the<font color="#E5E5E5"> learning</font>

798
00:35:06,040 --> 00:35:08,320
rate<font color="#E5E5E5"> and it jumps now all the way over</font>

799
00:35:08,320 --> 00:35:10,690
to here<font color="#CCCCCC"> and so then we kind</font><font color="#E5E5E5"> of learning</font>

800
00:35:10,690 --> 00:35:11,890
<font color="#CCCCCC">right in your learning right near death</font>

801
00:35:11,890 --> 00:35:13,660
down to here and<font color="#E5E5E5"> then we jump up again</font>

802
00:35:13,660 --> 00:35:16,690
<font color="#CCCCCC">to a</font><font color="#E5E5E5"> high learning rate</font><font color="#CCCCCC"> oh and it stays</font>

803
00:35:16,690 --> 00:35:19,300
<font color="#E5E5E5">here right so</font><font color="#CCCCCC"> in other words each time</font>

804
00:35:19,300 --> 00:35:21,640
we jump<font color="#E5E5E5"> up the learning</font><font color="#CCCCCC"> rate</font><font color="#E5E5E5"> that means</font>

805
00:35:21,640 --> 00:35:24,160
<font color="#CCCCCC">that if it's in a nasty spiky part of</font>

806
00:35:24,160 --> 00:35:26,050
the surface<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going to hop out</font><font color="#E5E5E5"> of the</font>

807
00:35:26,050 --> 00:35:28,150
spiky part and hopefully if we do that

808
00:35:28,150 --> 00:35:30,580
enough times<font color="#CCCCCC"> it'll eventually find a</font>

809
00:35:30,580 --> 00:35:34,500
nice smooth<font color="#E5E5E5"> Bowl</font>

810
00:35:40,070 --> 00:35:42,990
could you get the same effect<font color="#CCCCCC"> by running</font>

811
00:35:42,990 --> 00:35:44,730
multiple<font color="#E5E5E5"> iterations through the</font>

812
00:35:44,730 --> 00:35:46,260
different<font color="#CCCCCC"> ground of my</font><font color="#E5E5E5"> starting point so</font>

813
00:35:46,260 --> 00:35:48,990
<font color="#CCCCCC">that</font><font color="#E5E5E5"> eventually you explore all possible</font>

814
00:35:48,990 --> 00:35:52,560
<font color="#CCCCCC">minimize yeah so in fact</font><font color="#E5E5E5"> that that's a</font>

815
00:35:52,560 --> 00:35:58,730
great<font color="#CCCCCC"> question and</font><font color="#E5E5E5"> before this approach</font>

816
00:35:59,630 --> 00:36:01,830
which is<font color="#E5E5E5"> called stochastic</font><font color="#CCCCCC"> gradient</font>

817
00:36:01,830 --> 00:36:05,240
descent with restarts<font color="#E5E5E5"> was was created</font>

818
00:36:05,240 --> 00:36:07,470
<font color="#CCCCCC">that's exactly what people used to do</font>

819
00:36:07,470 --> 00:36:08,670
they used to<font color="#E5E5E5"> create these</font><font color="#CCCCCC"> things called</font>

820
00:36:08,670 --> 00:36:11,810
ensembles<font color="#E5E5E5"> where they would basically</font>

821
00:36:11,810 --> 00:36:15,480
relearn a whole new model<font color="#CCCCCC"> ten times in</font>

822
00:36:15,480 --> 00:36:17,910
the<font color="#CCCCCC"> hope that</font><font color="#E5E5E5"> one of them's like but it</font>

823
00:36:17,910 --> 00:36:22,500
<font color="#E5E5E5">ended up being</font><font color="#CCCCCC"> better</font><font color="#E5E5E5"> and so the cool</font>

824
00:36:22,500 --> 00:36:24,090
<font color="#CCCCCC">thing about this decosta gradient</font>

825
00:36:24,090 --> 00:36:26,100
descent with restarts<font color="#E5E5E5"> is that the model</font>

826
00:36:26,100 --> 00:36:29,010
once we're in a reasonably good spot

827
00:36:29,010 --> 00:36:30,810
each time we jump<font color="#E5E5E5"> up the</font><font color="#CCCCCC"> learning rate</font>

828
00:36:30,810 --> 00:36:34,110
<font color="#E5E5E5">it doesn't restart it actually hangs out</font>

829
00:36:34,110 --> 00:36:36,300
in this nice part part<font color="#E5E5E5"> of the space and</font>

830
00:36:36,300 --> 00:36:37,920
then keeps getting better<font color="#CCCCCC"> so</font>

831
00:36:37,920 --> 00:36:39,420
interestingly it turns<font color="#E5E5E5"> out that this</font>

832
00:36:39,420 --> 00:36:42,690
approach where we do this<font color="#E5E5E5"> a bunch of</font>

833
00:36:42,690 --> 00:36:45,960
separate<font color="#CCCCCC"> cosine annealing steps</font><font color="#E5E5E5"> we end</font>

834
00:36:45,960 --> 00:36:49,260
up with a better result<font color="#E5E5E5"> as then if we</font>

835
00:36:49,260 --> 00:36:50,940
just<font color="#E5E5E5"> randomly try it a</font><font color="#CCCCCC"> few different</font>

836
00:36:50,940 --> 00:36:54,300
<font color="#E5E5E5">starting points so it's a super</font><font color="#CCCCCC"> neat</font>

837
00:36:54,300 --> 00:36:58,200
trick<font color="#CCCCCC"> and it's a fairly recent</font>

838
00:36:58,200 --> 00:37:00,930
development<font color="#CCCCCC"> but and again almost</font>

839
00:37:00,930 --> 00:37:04,610
nobody's heard of<font color="#E5E5E5"> it</font><font color="#CCCCCC"> but I</font><font color="#E5E5E5"> found like</font>

840
00:37:04,610 --> 00:37:07,740
it's now like my superpower like using

841
00:37:07,740 --> 00:37:10,110
this along<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> learning rate finder</font>

842
00:37:10,110 --> 00:37:14,490
like I can get better<font color="#CCCCCC"> results than</font>

843
00:37:14,490 --> 00:37:16,050
nearly anybody like in a<font color="#CCCCCC"> casual</font>

844
00:37:16,050 --> 00:37:18,180
competition you know in the<font color="#E5E5E5"> first week</font>

845
00:37:18,180 --> 00:37:20,790
or<font color="#E5E5E5"> two</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can like jump in it's been an</font>

846
00:37:20,790 --> 00:37:23,130
arrow<font color="#E5E5E5"> to and back I've got</font><font color="#CCCCCC"> a</font>

847
00:37:23,130 --> 00:37:26,070
fantastically good<font color="#E5E5E5"> result and so this is</font>

848
00:37:26,070 --> 00:37:29,550
why I didn't pick the point where it's

849
00:37:29,550 --> 00:37:31,650
got the steepest slope<font color="#CCCCCC"> I</font><font color="#E5E5E5"> actually trying</font>

850
00:37:31,650 --> 00:37:33,480
<font color="#CCCCCC">to pick something</font><font color="#E5E5E5"> kind of aggressively</font>

851
00:37:33,480 --> 00:37:35,490
<font color="#CCCCCC">high it's still</font><font color="#E5E5E5"> getting down but maybe</font>

852
00:37:35,490 --> 00:37:36,990
like getting to the point<font color="#E5E5E5"> where it's</font>

853
00:37:36,990 --> 00:37:39,030
nearly<font color="#E5E5E5"> too high not</font><font color="#CCCCCC"> because I want to</font>

854
00:37:39,030 --> 00:37:40,590
make sure because that's because<font color="#CCCCCC"> when we</font>

855
00:37:40,590 --> 00:37:43,650
do this<font color="#CCCCCC"> stochastic gradient descent with</font>

856
00:37:43,650 --> 00:37:46,340
<font color="#E5E5E5">restarts this</font><font color="#CCCCCC"> ten to the</font><font color="#E5E5E5"> negative</font><font color="#CCCCCC"> two</font>

857
00:37:46,340 --> 00:37:48,090
represents the

858
00:37:48,090 --> 00:37:51,780
<font color="#CCCCCC">a</font><font color="#E5E5E5"> highest number</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> uses so it goes</font>

859
00:37:51,780 --> 00:37:54,120
up to<font color="#CCCCCC"> ten to the</font><font color="#E5E5E5"> negative</font><font color="#CCCCCC"> two and</font><font color="#E5E5E5"> then</font>

860
00:37:54,120 --> 00:37:56,130
goes down<font color="#E5E5E5"> and then up to</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> negative</font>

861
00:37:56,130 --> 00:37:58,830
two and<font color="#E5E5E5"> down so if I use</font><font color="#CCCCCC"> to lower</font>

862
00:37:58,830 --> 00:38:01,350
<font color="#E5E5E5">learning rate it's not</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> jump</font><font color="#CCCCCC"> to</font>

863
00:38:01,350 --> 00:38:06,510
a different<font color="#E5E5E5"> part of the function so I</font>

864
00:38:06,510 --> 00:38:08,370
have a<font color="#E5E5E5"> few questions but the first one</font>

865
00:38:08,370 --> 00:38:10,290
<font color="#E5E5E5">is how</font><font color="#CCCCCC"> many times</font><font color="#E5E5E5"> do you change your</font>

866
00:38:10,290 --> 00:38:13,380
<font color="#CCCCCC">learning rate</font><font color="#E5E5E5"> you want to work we don't</font>

867
00:38:13,380 --> 00:38:15,360
change the learning<font color="#E5E5E5"> rate all three how</font>

868
00:38:15,360 --> 00:38:17,460
<font color="#E5E5E5">many times - okay so in terms of this</font>

869
00:38:17,460 --> 00:38:19,020
part here where it's going down<font color="#CCCCCC"> we</font>

870
00:38:19,020 --> 00:38:20,790
change the<font color="#CCCCCC"> learning rate every single</font>

871
00:38:20,790 --> 00:38:23,730
mini -<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right and then the number of</font>

872
00:38:23,730 --> 00:38:27,690
<font color="#E5E5E5">times we reset it is set by the cycle</font>

873
00:38:27,690 --> 00:38:30,690
length parameter and so 1 means reset it

874
00:38:30,690 --> 00:38:33,840
up<font color="#E5E5E5"> to every epoch</font><font color="#CCCCCC"> so if I had</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> there</font>

875
00:38:33,840 --> 00:38:36,090
<font color="#E5E5E5">it would reset it up to every to epochs</font>

876
00:38:36,090 --> 00:38:38,280
<font color="#E5E5E5">and interestingly this</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> point that</font>

877
00:38:38,280 --> 00:38:39,780
when we do the<font color="#CCCCCC"> learning rate</font><font color="#E5E5E5"> and</font>

878
00:38:39,780 --> 00:38:41,070
kneeling that we actually<font color="#E5E5E5"> change it</font>

879
00:38:41,070 --> 00:38:43,880
<font color="#CCCCCC">every single batch it turns out to be</font>

880
00:38:43,880 --> 00:38:47,190
really<font color="#CCCCCC"> critical to making this work and</font>

881
00:38:47,190 --> 00:38:48,900
<font color="#CCCCCC">it again</font><font color="#E5E5E5"> is very different to what</font>

882
00:38:48,900 --> 00:38:50,640
<font color="#E5E5E5">nearly everybody in industry in academia</font>

883
00:38:50,640 --> 00:38:52,970
has done before

884
00:38:52,970 --> 00:38:54,990
what do you<font color="#E5E5E5"> get a chance</font><font color="#CCCCCC"> could you</font>

885
00:38:54,990 --> 00:38:58,500
<font color="#E5E5E5">explain</font><font color="#CCCCCC"> recompute it was</font><font color="#E5E5E5"> true because</font>

886
00:38:58,500 --> 00:39:02,190
it's still yeah we're going to come<font color="#CCCCCC"> back</font>

887
00:39:02,190 --> 00:39:04,770
<font color="#E5E5E5">to that multiple times in this course so</font>

888
00:39:04,770 --> 00:39:06,330
the way this course has been<font color="#CCCCCC"> a work is</font>

889
00:39:06,330 --> 00:39:07,380
we're going<font color="#E5E5E5"> to like</font><font color="#CCCCCC"> do a really</font>

890
00:39:07,380 --> 00:39:09,900
<font color="#CCCCCC">high-level</font><font color="#E5E5E5"> version of each thing and</font>

891
00:39:09,900 --> 00:39:11,400
<font color="#E5E5E5">then we're going</font><font color="#CCCCCC"> to like come back to it</font>

892
00:39:11,400 --> 00:39:12,930
in two or<font color="#CCCCCC"> three lessons and then come</font>

893
00:39:12,930 --> 00:39:14,220
back to<font color="#CCCCCC"> it</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> end of the course</font><font color="#E5E5E5"> and</font>

894
00:39:14,220 --> 00:39:15,840
each time we're going to see like more

895
00:39:15,840 --> 00:39:18,240
<font color="#CCCCCC">of the math more of the code and get a</font>

896
00:39:18,240 --> 00:39:20,520
deeper<font color="#CCCCCC"> view okay and we</font><font color="#E5E5E5"> can talk about</font>

897
00:39:20,520 --> 00:39:25,340
<font color="#CCCCCC">it also in the forums</font><font color="#E5E5E5"> during the week</font>

898
00:39:26,540 --> 00:39:29,580
our main goal<font color="#CCCCCC"> is to generalize</font><font color="#E5E5E5"> and we</font>

899
00:39:29,580 --> 00:39:31,970
don't want to<font color="#CCCCCC"> get those like narrow</font>

900
00:39:31,970 --> 00:39:34,590
<font color="#CCCCCC">demas yeah that's a it's a very short</font>

901
00:39:34,590 --> 00:39:37,710
<font color="#CCCCCC">summary</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> method are we keeping track</font>

902
00:39:37,710 --> 00:39:40,760
<font color="#E5E5E5">off to minimize and averaging them ah</font>

903
00:39:40,760 --> 00:39:44,010
that's that's<font color="#E5E5E5"> another level of</font>

904
00:39:44,010 --> 00:39:45,750
sophistication and indeed you<font color="#E5E5E5"> can see</font>

905
00:39:45,750 --> 00:39:47,280
there's something<font color="#E5E5E5"> here called snapshot</font>

906
00:39:47,280 --> 00:39:50,040
<font color="#E5E5E5">ensemble so we're not doing it in</font><font color="#CCCCCC"> the</font>

907
00:39:50,040 --> 00:39:53,190
code right<font color="#E5E5E5"> now but yes if you wanted to</font>

908
00:39:53,190 --> 00:39:55,410
make us generalize even better you can

909
00:39:55,410 --> 00:39:58,590
<font color="#E5E5E5">save the weights here and here and here</font>

910
00:39:58,590 --> 00:40:00,980
and<font color="#E5E5E5"> then take the average</font>

911
00:40:00,980 --> 00:40:03,650
<font color="#CCCCCC">ishes</font><font color="#E5E5E5"> but for now we're just going to</font>

912
00:40:03,650 --> 00:40:10,940
<font color="#E5E5E5">pick the last one if you want to skip</font>

913
00:40:10,940 --> 00:40:16,310
<font color="#CCCCCC">ahead</font><font color="#E5E5E5"> if you want to skip ahead there's</font>

914
00:40:16,310 --> 00:40:19,970
a parameter<font color="#CCCCCC"> called cycle</font><font color="#E5E5E5"> safe name which</font>

915
00:40:19,970 --> 00:40:21,530
<font color="#CCCCCC">you can add as</font><font color="#E5E5E5"> well as cycle them and</font>

916
00:40:21,530 --> 00:40:23,630
that will save a set of weights<font color="#E5E5E5"> at the</font>

917
00:40:23,630 --> 00:40:26,359
end of every learning<font color="#E5E5E5"> rate cycle and</font>

918
00:40:26,359 --> 00:40:35,150
then you can ensemble them<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so we've</font>

919
00:40:35,150 --> 00:40:38,359
got<font color="#E5E5E5"> a pretty decent model here</font><font color="#CCCCCC"> ninety</font>

920
00:40:38,359 --> 00:40:41,240
<font color="#CCCCCC">nine point three</font><font color="#E5E5E5"> percent accuracy</font><font color="#CCCCCC"> and</font>

921
00:40:41,240 --> 00:40:42,859
we've gone through of you know a<font color="#E5E5E5"> few</font>

922
00:40:42,859 --> 00:40:44,720
steps that<font color="#CCCCCC"> is taken you</font><font color="#E5E5E5"> know a minute or</font>

923
00:40:44,720 --> 00:40:47,330
two<font color="#CCCCCC"> to run and so from</font><font color="#E5E5E5"> time to time I</font>

924
00:40:47,330 --> 00:40:49,010
tend<font color="#CCCCCC"> to save my weight so if you go</font>

925
00:40:49,010 --> 00:40:51,260
<font color="#E5E5E5">learn</font><font color="#CCCCCC"> dot save and then pass in a</font><font color="#E5E5E5"> file</font>

926
00:40:51,260 --> 00:40:53,510
<font color="#E5E5E5">name it's going</font><font color="#CCCCCC"> to go ahead and save</font>

927
00:40:53,510 --> 00:40:55,670
that<font color="#E5E5E5"> for you later on if</font><font color="#CCCCCC"> you go learn</font>

928
00:40:55,670 --> 00:40:57,890
load<font color="#E5E5E5"> you'll be straight back to where</font>

929
00:40:57,890 --> 00:41:00,530
you came from<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so it's a good idea</font>

930
00:41:00,530 --> 00:41:03,350
<font color="#E5E5E5">to do that</font><font color="#CCCCCC"> from time to time</font><font color="#E5E5E5"> this is a</font>

931
00:41:03,350 --> 00:41:06,410
good<font color="#E5E5E5"> time to</font><font color="#CCCCCC"> mention what happens when</font>

932
00:41:06,410 --> 00:41:10,040
you do this when<font color="#E5E5E5"> you go learn dot save</font>

933
00:41:10,040 --> 00:41:12,380
when you create<font color="#CCCCCC"> precomputed activations</font>

934
00:41:12,380 --> 00:41:14,270
<font color="#CCCCCC">another thing we learn about soon when</font>

935
00:41:14,270 --> 00:41:16,760
<font color="#E5E5E5">you create resized images these are</font><font color="#CCCCCC"> all</font>

936
00:41:16,760 --> 00:41:20,090
creating various temporary files<font color="#CCCCCC"> okay</font>

937
00:41:20,090 --> 00:41:28,070
<font color="#E5E5E5">and so what happens is if we go to data</font>

938
00:41:28,070 --> 00:41:34,580
<font color="#CCCCCC">and we go to dogs cats</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is my data</font>

939
00:41:34,580 --> 00:41:36,710
<font color="#E5E5E5">folder and you'll see there's a folder</font>

940
00:41:36,710 --> 00:41:41,030
here<font color="#CCCCCC"> called</font><font color="#E5E5E5"> TMP or</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> and so this is</font>

941
00:41:41,030 --> 00:41:43,609
automatically created<font color="#CCCCCC"> and all of my</font><font color="#E5E5E5"> pre</font>

942
00:41:43,609 --> 00:41:46,430
<font color="#E5E5E5">computed activations end up in here</font><font color="#CCCCCC"> I</font>

943
00:41:46,430 --> 00:41:50,420
mention this because if if things are if

944
00:41:50,420 --> 00:41:52,550
you're getting<font color="#E5E5E5"> weird errors that might</font>

945
00:41:52,550 --> 00:41:54,020
be because<font color="#CCCCCC"> you've got some Oh pre</font>

946
00:41:54,020 --> 00:41:56,090
computed activations<font color="#E5E5E5"> like</font><font color="#CCCCCC"> we're only</font>

947
00:41:56,090 --> 00:41:59,090
half<font color="#E5E5E5"> completed or are</font><font color="#CCCCCC"> in some way</font>

948
00:41:59,090 --> 00:42:01,130
incompatible with<font color="#E5E5E5"> what you're doing so</font>

949
00:42:01,130 --> 00:42:03,080
you<font color="#E5E5E5"> can always go</font><font color="#CCCCCC"> ahead and just</font><font color="#E5E5E5"> delete</font>

950
00:42:03,080 --> 00:42:05,990
this TMP<font color="#E5E5E5"> this temporary directory and</font>

951
00:42:05,990 --> 00:42:08,090
see if that<font color="#E5E5E5"> causes your error to go away</font>

952
00:42:08,090 --> 00:42:10,820
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the faster</font><font color="#E5E5E5"> I equivalent of</font>

953
00:42:10,820 --> 00:42:12,920
turning<font color="#CCCCCC"> it off and</font><font color="#E5E5E5"> then on again</font>

954
00:42:12,920 --> 00:42:14,990
you'll also<font color="#E5E5E5"> see there's a directory</font>

955
00:42:14,990 --> 00:42:16,730
called models<font color="#E5E5E5"> and that's where all</font><font color="#CCCCCC"> of</font>

956
00:42:16,730 --> 00:42:19,160
these when<font color="#CCCCCC"> you say</font><font color="#E5E5E5"> dot save with a model</font>

957
00:42:19,160 --> 00:42:22,520
that's<font color="#E5E5E5"> where that's going to go actually</font>

958
00:42:22,520 --> 00:42:23,900
it reminds<font color="#CCCCCC"> me</font><font color="#E5E5E5"> when the stochastic</font>

959
00:42:23,900 --> 00:42:25,610
gradient descent with restarts<font color="#E5E5E5"> paper</font>

960
00:42:25,610 --> 00:42:27,800
came out<font color="#E5E5E5"> I saw a</font><font color="#CCCCCC"> tweet that</font><font color="#E5E5E5"> was somebody</font>

961
00:42:27,800 --> 00:42:29,150
was like<font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> to make your deep learning</font>

962
00:42:29,150 --> 00:42:30,620
<font color="#E5E5E5">work better turn it off and then on</font>

963
00:42:30,620 --> 00:42:38,180
again<font color="#E5E5E5"> question it so if I want to see I</font>

964
00:42:38,180 --> 00:42:40,100
<font color="#CCCCCC">want to retrain my model fuselage again</font>

965
00:42:40,100 --> 00:42:43,400
<font color="#E5E5E5">do I just do everything</font><font color="#CCCCCC"> the 10 folder if</font>

966
00:42:43,400 --> 00:42:51,230
you<font color="#CCCCCC"> want if you</font><font color="#E5E5E5"> want to train</font><font color="#CCCCCC"> your model</font>

967
00:42:51,230 --> 00:42:54,260
from scratch<font color="#CCCCCC"> there's generally no reason</font>

968
00:42:54,260 --> 00:42:56,570
to delete the pre computed activations

969
00:42:56,570 --> 00:42:59,260
<font color="#E5E5E5">because the pre computed activations are</font>

970
00:42:59,260 --> 00:43:02,480
without any training<font color="#E5E5E5"> that's what the pre</font>

971
00:43:02,480 --> 00:43:06,410
<font color="#CCCCCC">trained</font><font color="#E5E5E5"> model created with the with the</font>

972
00:43:06,410 --> 00:43:07,580
weights that<font color="#E5E5E5"> you downloaded off the</font>

973
00:43:07,580 --> 00:43:12,440
internet<font color="#CCCCCC"> the only</font><font color="#E5E5E5"> yeah I mean the only</font>

974
00:43:12,440 --> 00:43:14,120
reason<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to delete the pre</font>

975
00:43:14,120 --> 00:43:15,770
computed activations<font color="#E5E5E5"> is that there was</font>

976
00:43:15,770 --> 00:43:18,410
some error<font color="#E5E5E5"> caused by like half creating</font>

977
00:43:18,410 --> 00:43:20,810
them and<font color="#E5E5E5"> crashing or some something</font><font color="#CCCCCC"> like</font>

978
00:43:20,810 --> 00:43:23,570
that<font color="#CCCCCC"> as you change the size of your</font>

979
00:43:23,570 --> 00:43:25,400
import change different architectures

980
00:43:25,400 --> 00:43:26,870
and<font color="#E5E5E5"> so forth they all create different</font>

981
00:43:26,870 --> 00:43:28,490
sets of activations with different file

982
00:43:28,490 --> 00:43:30,320
names so<font color="#E5E5E5"> you don't generally you</font>

983
00:43:30,320 --> 00:43:32,540
<font color="#E5E5E5">shouldn't have to worry about it if you</font>

984
00:43:32,540 --> 00:43:33,680
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start training again from</font>

985
00:43:33,680 --> 00:43:35,960
<font color="#E5E5E5">scratch all you have to do is create a</font>

986
00:43:35,960 --> 00:43:40,250
new learn object so each time you<font color="#E5E5E5"> go</font>

987
00:43:40,250 --> 00:43:42,530
like<font color="#CCCCCC"> conch</font><font color="#E5E5E5"> learner dot pre-trained that</font>

988
00:43:42,530 --> 00:43:45,620
creates a new<font color="#CCCCCC"> object with with new sets</font>

989
00:43:45,620 --> 00:43:50,960
of weights<font color="#CCCCCC"> fever train from</font><font color="#E5E5E5"> okay so</font>

990
00:43:50,960 --> 00:43:52,850
<font color="#E5E5E5">before</font><font color="#CCCCCC"> our break</font><font color="#E5E5E5"> we'll finish off by</font>

991
00:43:52,850 --> 00:43:56,770
talking<font color="#E5E5E5"> about about</font><font color="#CCCCCC"> fine-tuning and</font>

992
00:43:56,770 --> 00:44:00,680
<font color="#CCCCCC">differential learning rates and so so</font>

993
00:44:00,680 --> 00:44:05,780
<font color="#E5E5E5">far everything we've done has</font><font color="#CCCCCC"> not</font>

994
00:44:05,780 --> 00:44:08,180
changed any<font color="#E5E5E5"> of these free trained</font>

995
00:44:08,180 --> 00:44:09,950
filters right so we've used a pre

996
00:44:09,950 --> 00:44:12,110
trained<font color="#E5E5E5"> model that already knows how to</font>

997
00:44:12,110 --> 00:44:17,510
<font color="#E5E5E5">find at the early stages edges</font>

998
00:44:17,510 --> 00:44:21,400
ingredients and then corners and curves

999
00:44:21,400 --> 00:44:26,090
<font color="#E5E5E5">and then repeating patterns and bits of</font>

1000
00:44:26,090 --> 00:44:26,660
<font color="#E5E5E5">text</font>

1001
00:44:26,660 --> 00:44:30,559
and eventually eyeballs<font color="#E5E5E5"> right we have</font>

1002
00:44:30,559 --> 00:44:35,869
not retrained<font color="#CCCCCC"> any of those activations</font>

1003
00:44:35,869 --> 00:44:38,569
any of<font color="#E5E5E5"> those features well specifically</font>

1004
00:44:38,569 --> 00:44:40,640
any of those weights in the

1005
00:44:40,640 --> 00:44:43,190
convolutional<font color="#CCCCCC"> kernels</font><font color="#E5E5E5"> all we've</font><font color="#CCCCCC"> done is</font>

1006
00:44:43,190 --> 00:44:46,549
we've learnt some<font color="#CCCCCC"> new layers that we've</font>

1007
00:44:46,549 --> 00:44:48,200
added on top of these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> we've</font>

1008
00:44:48,200 --> 00:44:50,119
learned how to mix and match these

1009
00:44:50,119 --> 00:44:54,529
<font color="#CCCCCC">pre-trained features now</font><font color="#E5E5E5"> obviously it</font>

1010
00:44:54,529 --> 00:44:58,460
may turn<font color="#E5E5E5"> out that your pictures have you</font>

1011
00:44:58,460 --> 00:45:00,680
<font color="#CCCCCC">know different</font><font color="#E5E5E5"> kinds of eyeballs or</font>

1012
00:45:00,680 --> 00:45:03,380
faces or<font color="#E5E5E5"> if you're using different kinds</font>

1013
00:45:03,380 --> 00:45:05,720
<font color="#E5E5E5">of images like satellite images totally</font>

1014
00:45:05,720 --> 00:45:07,069
different kinds of features altogether

1015
00:45:07,069 --> 00:45:10,069
right so if you're like training<font color="#E5E5E5"> to</font>

1016
00:45:10,069 --> 00:45:12,650
recognize<font color="#E5E5E5"> icebergs</font><font color="#CCCCCC"> you'll probably</font><font color="#E5E5E5"> want</font>

1017
00:45:12,650 --> 00:45:15,470
to go<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> way back</font><font color="#E5E5E5"> and learn you</font>

1018
00:45:15,470 --> 00:45:16,670
know all the way back to kind<font color="#E5E5E5"> of</font>

1019
00:45:16,670 --> 00:45:18,650
<font color="#E5E5E5">different combinations</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these simple</font>

1020
00:45:18,650 --> 00:45:22,430
gradients and edges in our cases<font color="#CCCCCC"> dogs</font>

1021
00:45:22,430 --> 00:45:24,829
vs. cats<font color="#E5E5E5"> we're going to have some minor</font>

1022
00:45:24,829 --> 00:45:26,720
differences<font color="#E5E5E5"> but we still may find it's</font>

1023
00:45:26,720 --> 00:45:29,740
<font color="#CCCCCC">helpful to</font><font color="#E5E5E5"> slightly tune some of these</font>

1024
00:45:29,740 --> 00:45:34,069
later layers as well<font color="#E5E5E5"> so to tell the</font>

1025
00:45:34,069 --> 00:45:36,200
learner<font color="#CCCCCC"> that we now want to start</font>

1026
00:45:36,200 --> 00:45:38,750
actually changing the convolutional

1027
00:45:38,750 --> 00:45:41,390
filters themselves<font color="#CCCCCC"> we</font><font color="#E5E5E5"> simply say</font>

1028
00:45:41,390 --> 00:45:44,539
unfreeze<font color="#E5E5E5"> okay so a frozen layer is a</font>

1029
00:45:44,539 --> 00:45:46,430
layer which<font color="#CCCCCC"> is not trained is not</font>

1030
00:45:46,430 --> 00:45:49,640
<font color="#E5E5E5">updated okay so unfreeze unfreezes all</font>

1031
00:45:49,640 --> 00:45:51,950
<font color="#E5E5E5">of the layers now when you think</font><font color="#CCCCCC"> about</font>

1032
00:45:51,950 --> 00:45:56,920
it it's<font color="#E5E5E5"> pretty obvious</font><font color="#CCCCCC"> that layer one</font>

1033
00:45:56,920 --> 00:45:59,809
right which is like a<font color="#E5E5E5"> diagonal edge or a</font>

1034
00:45:59,809 --> 00:46:02,509
gradient<font color="#E5E5E5"> probably doesn't need to change</font>

1035
00:46:02,509 --> 00:46:05,089
<font color="#E5E5E5">by much if at all right from the</font><font color="#CCCCCC"> 1 and</font><font color="#E5E5E5"> a</font>

1036
00:46:05,089 --> 00:46:06,920
<font color="#E5E5E5">half million images on image net it</font>

1037
00:46:06,920 --> 00:46:08,299
probably already<font color="#E5E5E5"> is figured out pretty</font>

1038
00:46:08,299 --> 00:46:10,849
<font color="#E5E5E5">well how to find like edges of gradients</font>

1039
00:46:10,849 --> 00:46:13,099
<font color="#E5E5E5">it probably already knows also</font><font color="#CCCCCC"> like</font>

1040
00:46:13,099 --> 00:46:15,319
which kind<font color="#E5E5E5"> of corners to look for and</font>

1041
00:46:15,319 --> 00:46:17,390
<font color="#E5E5E5">how</font><font color="#CCCCCC"> to find which kinds</font><font color="#E5E5E5"> of curves and so</font>

1042
00:46:17,390 --> 00:46:19,759
forth so in other<font color="#E5E5E5"> words these early</font>

1043
00:46:19,759 --> 00:46:22,450
layers probably need little<font color="#E5E5E5"> if any</font>

1044
00:46:22,450 --> 00:46:26,269
learning where else<font color="#E5E5E5"> these later ones are</font>

1045
00:46:26,269 --> 00:46:28,549
much more<font color="#CCCCCC"> likely to</font><font color="#E5E5E5"> need more learning</font>

1046
00:46:28,549 --> 00:46:30,650
<font color="#E5E5E5">and this is universally true regardless</font>

1047
00:46:30,650 --> 00:46:32,869
of<font color="#E5E5E5"> whether you're</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> satellite</font>

1048
00:46:32,869 --> 00:46:34,940
images<font color="#CCCCCC"> of rainforests or icebergs</font><font color="#E5E5E5"> or</font>

1049
00:46:34,940 --> 00:46:36,200
whether you're looking<font color="#CCCCCC"> for cats</font><font color="#E5E5E5"> versus</font>

1050
00:46:36,200 --> 00:46:38,809
dogs<font color="#CCCCCC"> right</font>

1051
00:46:38,809 --> 00:46:41,809
so what we do is we<font color="#CCCCCC"> create an</font><font color="#E5E5E5"> array of</font>

1052
00:46:41,809 --> 00:46:45,109
<font color="#CCCCCC">learning rates where we say okay</font><font color="#E5E5E5"> these</font>

1053
00:46:45,109 --> 00:46:47,869
are<font color="#CCCCCC"> the learning</font><font color="#E5E5E5"> rates to use for</font><font color="#CCCCCC"> our</font>

1054
00:46:47,869 --> 00:46:50,419
additional layers that we've added on

1055
00:46:50,419 --> 00:46:53,239
top<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> the learning</font><font color="#E5E5E5"> rates to use</font>

1056
00:46:53,239 --> 00:46:56,659
in the middle few layers and these are

1057
00:46:56,659 --> 00:46:58,759
the learning<font color="#E5E5E5"> rates to use for the first</font>

1058
00:46:58,759 --> 00:47:00,799
few<font color="#E5E5E5"> layers so these are the ones for the</font>

1059
00:47:00,799 --> 00:47:02,569
layers that<font color="#E5E5E5"> represent like very basic</font>

1060
00:47:02,569 --> 00:47:05,569
geometric features these are the ones

1061
00:47:05,569 --> 00:47:08,719
<font color="#E5E5E5">that are used to for the more complex</font>

1062
00:47:08,719 --> 00:47:11,509
<font color="#E5E5E5">kind of sophisticated convolutional</font>

1063
00:47:11,509 --> 00:47:13,369
features and these are the ones<font color="#CCCCCC"> that are</font>

1064
00:47:13,369 --> 00:47:14,689
used for<font color="#CCCCCC"> the features that we've</font><font color="#E5E5E5"> added</font>

1065
00:47:14,689 --> 00:47:17,539
and<font color="#CCCCCC"> went from</font><font color="#E5E5E5"> stretch right so you can</font>

1066
00:47:17,539 --> 00:47:19,900
create<font color="#E5E5E5"> a array of learning rates and</font>

1067
00:47:19,900 --> 00:47:22,729
then when we called up fit<font color="#E5E5E5"> and pass an</font>

1068
00:47:22,729 --> 00:47:24,409
<font color="#E5E5E5">array</font><font color="#CCCCCC"> of learning</font><font color="#E5E5E5"> rates it's now going</font>

1069
00:47:24,409 --> 00:47:25,729
<font color="#E5E5E5">to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> those different learning rates</font>

1070
00:47:25,729 --> 00:47:30,489
for different<font color="#E5E5E5"> parts of the model</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

1071
00:47:30,489 --> 00:47:34,759
not<font color="#E5E5E5"> something that we've like invented</font>

1072
00:47:34,759 --> 00:47:37,429
but<font color="#E5E5E5"> I'd also say it's like it's so not</font>

1073
00:47:37,429 --> 00:47:39,650
that common<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it doesn't even have a</font>

1074
00:47:39,650 --> 00:47:42,499
name as far<font color="#E5E5E5"> as I know so we're going to</font>

1075
00:47:42,499 --> 00:47:46,519
call it differential learning rates<font color="#E5E5E5"> if</font>

1076
00:47:46,519 --> 00:47:48,380
it actually<font color="#E5E5E5"> has a name or indeed if</font>

1077
00:47:48,380 --> 00:47:49,519
somebody's actually<font color="#E5E5E5"> written a paper</font>

1078
00:47:49,519 --> 00:47:51,769
<font color="#E5E5E5">specifically talking</font><font color="#CCCCCC"> about it I</font><font color="#E5E5E5"> don't</font>

1079
00:47:51,769 --> 00:47:54,829
know<font color="#CCCCCC"> there's a great researcher</font><font color="#E5E5E5"> called</font>

1080
00:47:54,829 --> 00:47:56,809
<font color="#E5E5E5">Jason</font><font color="#CCCCCC"> your Sinskey who who did write</font><font color="#E5E5E5"> a</font>

1081
00:47:56,809 --> 00:47:58,429
paper about the kind<font color="#CCCCCC"> of the idea that</font>

1082
00:47:58,429 --> 00:47:59,719
<font color="#CCCCCC">you might want different</font><font color="#E5E5E5"> learning rates</font>

1083
00:47:59,719 --> 00:48:02,479
and showing why but I<font color="#E5E5E5"> don't think any</font>

1084
00:48:02,479 --> 00:48:05,209
<font color="#E5E5E5">other</font><font color="#CCCCCC"> libraries support it and yeah I</font>

1085
00:48:05,209 --> 00:48:07,579
don't<font color="#E5E5E5"> know of a name for it having said</font>

1086
00:48:07,579 --> 00:48:10,609
that though this<font color="#CCCCCC"> ability to like</font>

1087
00:48:10,609 --> 00:48:12,919
unfreeze and then use these differential

1088
00:48:12,919 --> 00:48:14,959
learning rates<font color="#CCCCCC"> I found it's like the</font>

1089
00:48:14,959 --> 00:48:17,929
secret to<font color="#E5E5E5"> taking a pretty good</font><font color="#CCCCCC"> model and</font>

1090
00:48:17,929 --> 00:48:25,909
<font color="#E5E5E5">putting it into an awesome model so just</font>

1091
00:48:25,909 --> 00:48:29,449
to clarify<font color="#E5E5E5"> so you have three numbers</font>

1092
00:48:29,449 --> 00:48:32,359
<font color="#E5E5E5">there</font><font color="#CCCCCC"> okay three hyper parameters the</font>

1093
00:48:32,359 --> 00:48:36,140
first<font color="#CCCCCC"> one is the photo</font><font color="#E5E5E5"> late</font><font color="#CCCCCC"> model so the</font>

1094
00:48:36,140 --> 00:48:41,199
mall<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are late layers the</font><font color="#E5E5E5"> so with</font>

1095
00:48:41,199 --> 00:48:44,209
the it's<font color="#E5E5E5"> your answer is many many right</font>

1096
00:48:44,209 --> 00:48:46,309
<font color="#CCCCCC">and they're kind of in groups and</font><font color="#E5E5E5"> we're</font>

1097
00:48:46,309 --> 00:48:47,449
going<font color="#E5E5E5"> to learn about the architecture</font>

1098
00:48:47,449 --> 00:48:49,159
<font color="#E5E5E5">this is called a</font><font color="#CCCCCC"> ResNet</font><font color="#E5E5E5"> for residual</font>

1099
00:48:49,159 --> 00:48:50,130
<font color="#E5E5E5">network</font>

1100
00:48:50,130 --> 00:48:53,190
it kind of has<font color="#CCCCCC"> ResNet blocks and so what</font>

1101
00:48:53,190 --> 00:48:54,779
we're doing<font color="#E5E5E5"> is we're grouping the blocks</font>

1102
00:48:54,779 --> 00:48:58,259
into<font color="#E5E5E5"> three groups</font><font color="#CCCCCC"> and so this one is</font>

1103
00:48:58,259 --> 00:49:00,019
<font color="#CCCCCC">actually this first number is for the</font>

1104
00:49:00,019 --> 00:49:04,589
<font color="#E5E5E5">earliest layers yeah</font><font color="#CCCCCC"> they're ones</font>

1105
00:49:04,589 --> 00:49:06,119
closest<font color="#CCCCCC"> to the pixels that represent</font>

1106
00:49:06,119 --> 00:49:09,059
like corners and edges<font color="#E5E5E5"> and gradients</font><font color="#CCCCCC"> but</font>

1107
00:49:09,059 --> 00:49:12,930
why why do you<font color="#CCCCCC"> well</font><font color="#E5E5E5"> I thought those</font>

1108
00:49:12,930 --> 00:49:15,569
layers<font color="#CCCCCC"> are frozen</font><font color="#E5E5E5"> at first</font><font color="#CCCCCC"> so yeah right</font>

1109
00:49:15,569 --> 00:49:17,339
so we<font color="#E5E5E5"> just said unfreeze</font><font color="#CCCCCC"> the streets</font>

1110
00:49:17,339 --> 00:49:19,019
<font color="#CCCCCC">also we so yeah I'm freezing them</font>

1111
00:49:19,019 --> 00:49:20,460
because you have<font color="#E5E5E5"> kind of partially</font>

1112
00:49:20,460 --> 00:49:24,059
trained although lately<font color="#CCCCCC"> we've trained</font>

1113
00:49:24,059 --> 00:49:26,579
we've trained our added layers<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> now</font>

1114
00:49:26,579 --> 00:49:28,549
you are we training<font color="#E5E5E5"> the Oh step exactly</font>

1115
00:49:28,549 --> 00:49:30,869
<font color="#E5E5E5">obviously so</font><font color="#CCCCCC"> it waits and the</font><font color="#E5E5E5"> learning</font>

1116
00:49:30,869 --> 00:49:33,329
rate<font color="#CCCCCC"> is particularly</font><font color="#E5E5E5"> small for the early</font>

1117
00:49:33,329 --> 00:49:34,829
layers that's right<font color="#CCCCCC"> because</font><font color="#E5E5E5"> you just</font>

1118
00:49:34,829 --> 00:49:37,890
find a want<font color="#CCCCCC"> to find food yeah yeah we</font>

1119
00:49:37,890 --> 00:49:39,210
probably<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to change them at</font>

1120
00:49:39,210 --> 00:49:42,569
all but<font color="#E5E5E5"> you know if it does need to then</font>

1121
00:49:42,569 --> 00:49:50,160
<font color="#E5E5E5">it can thanks no</font><font color="#CCCCCC"> problem so using</font><font color="#E5E5E5"> the</font>

1122
00:49:50,160 --> 00:49:51,930
differential<font color="#E5E5E5"> in rates a</font><font color="#CCCCCC"> little different</font>

1123
00:49:51,930 --> 00:49:56,069
from like<font color="#CCCCCC"> grid search there's no</font>

1124
00:49:56,069 --> 00:49:58,109
similarity to grid search so grid search

1125
00:49:58,109 --> 00:50:00,180
is where we're trying<font color="#E5E5E5"> to find the best</font>

1126
00:50:00,180 --> 00:50:03,719
<font color="#CCCCCC">hyper</font><font color="#E5E5E5"> parameter for something so for</font>

1127
00:50:03,719 --> 00:50:07,219
<font color="#E5E5E5">example you could kind of</font><font color="#CCCCCC"> think of the</font>

1128
00:50:07,219 --> 00:50:09,539
learning rate finder as a really

1129
00:50:09,539 --> 00:50:11,460
sophisticated grid search which is<font color="#E5E5E5"> like</font>

1130
00:50:11,460 --> 00:50:12,869
trying<font color="#E5E5E5"> lots and lots of</font><font color="#CCCCCC"> learning rates</font>

1131
00:50:12,869 --> 00:50:15,350
to find which<font color="#E5E5E5"> one is best</font>

1132
00:50:15,350 --> 00:50:16,490
but this<font color="#E5E5E5"> has nothing to do with</font><font color="#CCCCCC"> that</font>

1133
00:50:16,490 --> 00:50:18,650
<font color="#E5E5E5">this is actually for the entire training</font>

1134
00:50:18,650 --> 00:50:20,990
from now on it's actually<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to use a</font>

1135
00:50:20,990 --> 00:50:25,180
different<font color="#E5E5E5"> learning rate for</font><font color="#CCCCCC"> each layer</font>

1136
00:50:28,480 --> 00:50:33,349
and so I was wondering<font color="#E5E5E5"> so you give</font><font color="#CCCCCC"> a pre</font>

1137
00:50:33,349 --> 00:50:35,630
<font color="#CCCCCC">train model then</font><font color="#E5E5E5"> you have to use the</font>

1138
00:50:35,630 --> 00:50:39,230
same input<font color="#E5E5E5"> dimensions right because I</font>

1139
00:50:39,230 --> 00:50:40,640
was<font color="#E5E5E5"> thinking okay let's say you have</font>

1140
00:50:40,640 --> 00:50:43,819
this big<font color="#E5E5E5"> they use like big machines</font><font color="#CCCCCC"> to</font>

1141
00:50:43,819 --> 00:50:45,079
<font color="#E5E5E5">train these things and you want to take</font>

1142
00:50:45,079 --> 00:50:46,880
<font color="#CCCCCC">advantage of it</font><font color="#E5E5E5"> how would you go about</font>

1143
00:50:46,880 --> 00:50:48,500
you<font color="#CCCCCC"> know you have like</font><font color="#E5E5E5"> images that are</font>

1144
00:50:48,500 --> 00:50:50,930
like bigger<font color="#E5E5E5"> than the ones that they</font><font color="#CCCCCC"> used</font>

1145
00:50:50,930 --> 00:50:52,789
or we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about sizes</font>

1146
00:50:52,789 --> 00:50:54,950
later<font color="#E5E5E5"> but the short</font><font color="#CCCCCC"> answer is that</font><font color="#E5E5E5"> with</font>

1147
00:50:54,950 --> 00:50:56,769
this library and the modern

1148
00:50:56,769 --> 00:50:58,849
architectures were using we can<font color="#CCCCCC"> use any</font>

1149
00:50:58,849 --> 00:51:04,819
size we like so<font color="#E5E5E5"> did I mean do we need</font>

1150
00:51:04,819 --> 00:51:08,119
can we<font color="#CCCCCC"> at least</font><font color="#E5E5E5"> just a</font><font color="#CCCCCC"> specific layer we</font>

1151
00:51:08,119 --> 00:51:09,650
can we're not doing it yet but if you

1152
00:51:09,650 --> 00:51:12,109
wanted<font color="#E5E5E5"> to you can learn dot freeze</font>

1153
00:51:12,109 --> 00:51:14,420
underscore<font color="#CCCCCC"> two and pass into layer</font>

1154
00:51:14,420 --> 00:51:21,380
number much to<font color="#E5E5E5"> my surprise or at least</font>

1155
00:51:21,380 --> 00:51:23,839
initial my surprise it turns out I

1156
00:51:23,839 --> 00:51:26,569
almost never need to<font color="#E5E5E5"> do that I almost</font>

1157
00:51:26,569 --> 00:51:28,490
never<font color="#E5E5E5"> find it helpful and I think</font><font color="#CCCCCC"> it's</font>

1158
00:51:28,490 --> 00:51:29,569
because we're using differential

1159
00:51:29,569 --> 00:51:33,440
learning rates the the optimizer<font color="#E5E5E5"> can</font>

1160
00:51:33,440 --> 00:51:35,720
kind of learn just as much<font color="#E5E5E5"> as it</font><font color="#CCCCCC"> needs</font>

1161
00:51:35,720 --> 00:51:45,650
to<font color="#E5E5E5"> so yeah it's a little data like very</font>

1162
00:51:45,650 --> 00:51:49,279
<font color="#E5E5E5">little data yeah it still doesn't seem</font>

1163
00:51:49,279 --> 00:51:51,019
<font color="#E5E5E5">to help the one place I have</font><font color="#CCCCCC"> found it</font>

1164
00:51:51,019 --> 00:51:54,380
<font color="#CCCCCC">helpful is if I'm</font><font color="#E5E5E5"> using like a really</font>

1165
00:51:54,380 --> 00:51:56,450
big memory<font color="#E5E5E5"> intensive model and I'm like</font>

1166
00:51:56,450 --> 00:52:01,430
<font color="#E5E5E5">running out of GPU</font><font color="#CCCCCC"> crazy</font><font color="#E5E5E5"> having the the</font>

1167
00:52:01,430 --> 00:52:03,440
less layers you unfreeze<font color="#E5E5E5"> the less memory</font>

1168
00:52:03,440 --> 00:52:05,210
it takes and the less time<font color="#E5E5E5"> it takes so</font>

1169
00:52:05,210 --> 00:52:07,279
there's<font color="#E5E5E5"> that kind of practical aspect</font><font color="#CCCCCC"> so</font>

1170
00:52:07,279 --> 00:52:09,619
<font color="#CCCCCC">to</font><font color="#E5E5E5"> me she'll say</font><font color="#CCCCCC"> I asked the</font><font color="#E5E5E5"> question</font>

1171
00:52:09,619 --> 00:52:13,519
right<font color="#CCCCCC"> can I just like unfreezes specific</font>

1172
00:52:13,519 --> 00:52:16,400
layer<font color="#E5E5E5"> no you you can only unfreeze</font>

1173
00:52:16,400 --> 00:52:21,769
layers<font color="#E5E5E5"> from layer n onwards you could</font>

1174
00:52:21,769 --> 00:52:23,180
probably delve inside the library<font color="#CCCCCC"> in</font>

1175
00:52:23,180 --> 00:52:24,740
phase<font color="#E5E5E5"> one phase one layer but I don't</font>

1176
00:52:24,740 --> 00:52:27,640
know why you would

1177
00:52:28,089 --> 00:52:30,200
<font color="#CCCCCC">okay so I'm really excited</font><font color="#E5E5E5"> to be showing</font>

1178
00:52:30,200 --> 00:52:31,490
<font color="#E5E5E5">you guys this stuff because it's like</font>

1179
00:52:31,490 --> 00:52:32,630
<font color="#E5E5E5">it's something we've</font><font color="#CCCCCC"> been kind of</font>

1180
00:52:32,630 --> 00:52:34,430
<font color="#E5E5E5">researching all year it's figuring out</font>

1181
00:52:34,430 --> 00:52:37,369
how to<font color="#CCCCCC"> train state of the art models</font><font color="#E5E5E5"> and</font>

1182
00:52:37,369 --> 00:52:39,619
we've<font color="#E5E5E5"> kind of found these like tiny</font>

1183
00:52:39,619 --> 00:52:41,930
number<font color="#CCCCCC"> of tricks</font><font color="#E5E5E5"> and so once we do</font><font color="#CCCCCC"> that</font>

1184
00:52:41,930 --> 00:52:45,410
we now go learn<font color="#CCCCCC"> about fit</font><font color="#E5E5E5"> right and you</font>

1185
00:52:45,410 --> 00:52:46,880
can see<font color="#CCCCCC"> look</font><font color="#E5E5E5"> at this we get right up to</font>

1186
00:52:46,880 --> 00:52:51,280
<font color="#E5E5E5">that 99.5% accuracy which</font><font color="#CCCCCC"> is crazy</font>

1187
00:52:51,280 --> 00:52:54,170
<font color="#CCCCCC">there's one</font><font color="#E5E5E5"> other trick you</font><font color="#CCCCCC"> might see</font>

1188
00:52:54,170 --> 00:52:55,849
here that<font color="#E5E5E5"> as well as using stochastic</font>

1189
00:52:55,849 --> 00:52:58,490
<font color="#E5E5E5">gradient descent with restarts</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> cycle</font>

1190
00:52:58,490 --> 00:53:00,800
length equals<font color="#CCCCCC"> one</font><font color="#E5E5E5"> we've done three</font>

1191
00:53:00,800 --> 00:53:04,070
cycles so earlier on<font color="#CCCCCC"> I lied to</font><font color="#E5E5E5"> you I</font>

1192
00:53:04,070 --> 00:53:05,480
<font color="#E5E5E5">said this is this is the number</font><font color="#CCCCCC"> of</font>

1193
00:53:05,480 --> 00:53:07,130
epochs<font color="#CCCCCC"> it's actually the number of</font>

1194
00:53:07,130 --> 00:53:09,200
cyclists right so if you said<font color="#CCCCCC"> cycle</font>

1195
00:53:09,200 --> 00:53:11,420
length equals<font color="#CCCCCC"> two</font><font color="#E5E5E5"> it would do three</font>

1196
00:53:11,420 --> 00:53:14,900
cycles of each of two epochs or<font color="#E5E5E5"> do six</font>

1197
00:53:14,900 --> 00:53:17,240
because so here I've said<font color="#E5E5E5"> two three</font>

1198
00:53:17,240 --> 00:53:19,250
cycles yet somehow it's done<font color="#E5E5E5"> seven</font>

1199
00:53:19,250 --> 00:53:22,040
epochs<font color="#CCCCCC"> and the reason why is I've got</font>

1200
00:53:22,040 --> 00:53:23,300
one last<font color="#CCCCCC"> trick to show you which is</font>

1201
00:53:23,300 --> 00:53:26,180
cycle<font color="#E5E5E5"> mult equals two</font><font color="#CCCCCC"> and to tell</font><font color="#E5E5E5"> you</font>

1202
00:53:26,180 --> 00:53:27,859
<font color="#E5E5E5">what</font><font color="#CCCCCC"> that does</font><font color="#E5E5E5"> I'm simply going to draw</font>

1203
00:53:27,859 --> 00:53:30,740
you a picture you the picture<font color="#E5E5E5"> if I go</font>

1204
00:53:30,740 --> 00:53:32,480
learn Dutch<font color="#E5E5E5"> share top plot learning rate</font>

1205
00:53:32,480 --> 00:53:34,000
there it is

1206
00:53:34,000 --> 00:53:36,440
now<font color="#E5E5E5"> you can see what cycle mode equals</font>

1207
00:53:36,440 --> 00:53:40,130
<font color="#CCCCCC">to</font><font color="#E5E5E5"> is doing okay it's it's doubling the</font>

1208
00:53:40,130 --> 00:53:42,619
<font color="#CCCCCC">length of the cycle after each cycle</font><font color="#E5E5E5"> and</font>

1209
00:53:42,619 --> 00:53:44,630
so in the paper<font color="#E5E5E5"> that introduced this</font>

1210
00:53:44,630 --> 00:53:46,010
<font color="#E5E5E5">stochastic gradient descent with</font>

1211
00:53:46,010 --> 00:53:46,760
restarts

1212
00:53:46,760 --> 00:53:49,520
the<font color="#CCCCCC"> researcher</font><font color="#E5E5E5"> kind of said hey this is</font>

1213
00:53:49,520 --> 00:53:51,650
<font color="#E5E5E5">something that seems to sometimes work</font>

1214
00:53:51,650 --> 00:53:53,630
pretty well<font color="#E5E5E5"> and I've certainly found</font>

1215
00:53:53,630 --> 00:53:57,310
that<font color="#E5E5E5"> often to be the case</font><font color="#CCCCCC"> so basically</font>

1216
00:53:57,310 --> 00:54:00,170
intuitively<font color="#CCCCCC"> speaking if your cycle</font>

1217
00:54:00,170 --> 00:54:04,069
length is too<font color="#E5E5E5"> short</font><font color="#CCCCCC"> right then</font><font color="#E5E5E5"> it's kind</font>

1218
00:54:04,069 --> 00:54:06,109
<font color="#E5E5E5">of starts going down to find a good spot</font>

1219
00:54:06,109 --> 00:54:08,300
<font color="#CCCCCC">and then it pops out and it</font><font color="#E5E5E5"> goes to</font><font color="#CCCCCC"> a</font>

1220
00:54:08,300 --> 00:54:09,950
try and photographs button pops out it

1221
00:54:09,950 --> 00:54:11,300
never<font color="#E5E5E5"> actually gets to find a good spot</font>

1222
00:54:11,300 --> 00:54:14,480
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so earlier</font><font color="#CCCCCC"> on you want it to do</font>

1223
00:54:14,480 --> 00:54:16,040
<font color="#E5E5E5">that because it's trying to find</font><font color="#CCCCCC"> the bit</font>

1224
00:54:16,040 --> 00:54:18,470
<font color="#E5E5E5">that's like smoother but then later</font><font color="#CCCCCC"> on</font>

1225
00:54:18,470 --> 00:54:20,300
<font color="#CCCCCC">you want</font><font color="#E5E5E5"> it to fight</font><font color="#CCCCCC"> do more exploring</font>

1226
00:54:20,300 --> 00:54:22,910
and then more exploring right<font color="#E5E5E5"> so that's</font>

1227
00:54:22,910 --> 00:54:26,300
<font color="#CCCCCC">why this</font><font color="#E5E5E5"> cycle mole equals</font><font color="#CCCCCC"> two thing</font>

1228
00:54:26,300 --> 00:54:28,970
<font color="#E5E5E5">often seems to be a pretty good approach</font>

1229
00:54:28,970 --> 00:54:32,660
<font color="#E5E5E5">right so suddenly we're introducing more</font>

1230
00:54:32,660 --> 00:54:34,160
and more hyper parameters having told

1231
00:54:34,160 --> 00:54:36,349
<font color="#E5E5E5">you that there aren't that</font><font color="#CCCCCC"> many but</font>

1232
00:54:36,349 --> 00:54:38,420
the reason is<font color="#CCCCCC"> that like you can</font><font color="#E5E5E5"> really</font>

1233
00:54:38,420 --> 00:54:40,579
<font color="#E5E5E5">get away with just taking a good</font>

1234
00:54:40,579 --> 00:54:42,950
learning rate but then adding these

1235
00:54:42,950 --> 00:54:47,869
extra tweaks<font color="#E5E5E5"> really helps get</font><font color="#CCCCCC"> that extra</font>

1236
00:54:47,869 --> 00:54:50,690
level<font color="#E5E5E5"> up without any effort right</font><font color="#CCCCCC"> and so</font>

1237
00:54:50,690 --> 00:54:55,579
in practice<font color="#CCCCCC"> I find this kind of three</font>

1238
00:54:55,579 --> 00:54:59,690
<font color="#E5E5E5">cycles starting at</font><font color="#CCCCCC"> 1 mode equals 2 works</font>

1239
00:54:59,690 --> 00:55:02,180
very very<font color="#CCCCCC"> often</font><font color="#E5E5E5"> to get</font><font color="#CCCCCC"> a pretty decent</font>

1240
00:55:02,180 --> 00:55:07,130
model<font color="#CCCCCC"> if it does doesn't</font><font color="#E5E5E5"> then often I'll</font>

1241
00:55:07,130 --> 00:55:10,670
just do<font color="#CCCCCC"> 3 cycles of length 2 with no</font>

1242
00:55:10,670 --> 00:55:11,660
<font color="#E5E5E5">molt</font>

1243
00:55:11,660 --> 00:55:12,979
<font color="#CCCCCC">okay there's kind of</font><font color="#E5E5E5"> like two things</font>

1244
00:55:12,979 --> 00:55:14,989
<font color="#E5E5E5">that seem to work</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> and there's</font><font color="#CCCCCC"> not</font>

1245
00:55:14,989 --> 00:55:17,690
<font color="#CCCCCC">too much fiddling I find</font><font color="#E5E5E5"> necessary and</font>

1246
00:55:17,690 --> 00:55:19,579
as I say even even if you just<font color="#E5E5E5"> if you</font>

1247
00:55:19,579 --> 00:55:21,979
use this line every<font color="#CCCCCC"> time I'd be</font>

1248
00:55:21,979 --> 00:55:23,660
surprised if<font color="#E5E5E5"> you didn't get a reasonable</font>

1249
00:55:23,660 --> 00:55:29,539
result<font color="#E5E5E5"> so a question</font><font color="#CCCCCC"> here why</font><font color="#E5E5E5"> does a</font>

1250
00:55:29,539 --> 00:55:32,479
smoother<font color="#E5E5E5"> services correlate to more</font>

1251
00:55:32,479 --> 00:55:40,849
generalize networks so it's kind of<font color="#E5E5E5"> this</font>

1252
00:55:40,849 --> 00:55:44,239
<font color="#CCCCCC">some this</font><font color="#E5E5E5"> intuitive explanation I try to</font>

1253
00:55:44,239 --> 00:55:46,339
<font color="#E5E5E5">just kill the whole thing I try to give</font>

1254
00:55:46,339 --> 00:55:51,369
back here which is<font color="#E5E5E5"> that if you've got</font>

1255
00:55:51,369 --> 00:55:58,420
<font color="#E5E5E5">something spiky right and so what this</font>

1256
00:55:58,420 --> 00:56:02,440
what this x-axis is showing is like how

1257
00:56:02,440 --> 00:56:05,089
how<font color="#E5E5E5"> good is this at recognizing dogs</font>

1258
00:56:05,089 --> 00:56:06,739
<font color="#E5E5E5">versus cats as you change this</font>

1259
00:56:06,739 --> 00:56:10,069
particular<font color="#E5E5E5"> parameter right and so so</font>

1260
00:56:10,069 --> 00:56:12,589
something to be generalizable<font color="#E5E5E5"> that means</font>

1261
00:56:12,589 --> 00:56:14,150
that we wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> work when we give</font><font color="#E5E5E5"> it</font>

1262
00:56:14,150 --> 00:56:15,259
when we give<font color="#E5E5E5"> it a slightly different</font>

1263
00:56:15,259 --> 00:56:17,329
data set and so a slightly different

1264
00:56:17,329 --> 00:56:20,509
data set<font color="#CCCCCC"> may have a slightly different</font>

1265
00:56:20,509 --> 00:56:22,880
<font color="#CCCCCC">relationship between this parameter and</font>

1266
00:56:22,880 --> 00:56:25,400
how<font color="#CCCCCC"> caddy versus dog it</font><font color="#E5E5E5"> is it may</font>

1267
00:56:25,400 --> 00:56:28,660
instead look a little bit<font color="#CCCCCC"> like this</font>

1268
00:56:30,060 --> 00:56:33,820
right so in other words if we end<font color="#E5E5E5"> up at</font>

1269
00:56:33,820 --> 00:56:37,240
this<font color="#CCCCCC"> point</font><font color="#E5E5E5"> right then it's not going to</font>

1270
00:56:37,240 --> 00:56:38,800
do a good job<font color="#E5E5E5"> on this slightly different</font>

1271
00:56:38,800 --> 00:56:40,510
data set<font color="#CCCCCC"> for else if we end</font><font color="#E5E5E5"> up on this</font>

1272
00:56:40,510 --> 00:56:42,160
point<font color="#E5E5E5"> it's still</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do a good job</font>

1273
00:56:42,160 --> 00:56:45,090
<font color="#E5E5E5">on this data set</font>

1274
00:56:49,230 --> 00:56:52,480
<font color="#E5E5E5">okay so that's what psychomotor equals</font>

1275
00:56:52,480 --> 00:56:54,310
doing okay<font color="#E5E5E5"> so we've got one</font><font color="#CCCCCC"> last</font><font color="#E5E5E5"> thing</font>

1276
00:56:54,310 --> 00:56:55,900
before<font color="#E5E5E5"> we going to take a break which is</font>

1277
00:56:55,900 --> 00:56:58,930
<font color="#CCCCCC">we're now going to take</font><font color="#E5E5E5"> this model which</font>

1278
00:56:58,930 --> 00:57:01,540
has 99.5 percent accuracy<font color="#CCCCCC"> and we're</font>

1279
00:57:01,540 --> 00:57:02,590
<font color="#E5E5E5">going to try and make</font><font color="#CCCCCC"> it better still</font>

1280
00:57:02,590 --> 00:57:05,020
<font color="#E5E5E5">and what we're going to do is we're not</font>

1281
00:57:05,020 --> 00:57:06,550
<font color="#E5E5E5">actually going to change the</font><font color="#CCCCCC"> model at</font>

1282
00:57:06,550 --> 00:57:08,859
<font color="#E5E5E5">all right but</font><font color="#CCCCCC"> instead we're going</font><font color="#E5E5E5"> to</font>

1283
00:57:08,859 --> 00:57:13,330
<font color="#E5E5E5">look back at the original virtual</font>

1284
00:57:13,330 --> 00:57:15,369
<font color="#E5E5E5">visualization we did where</font><font color="#CCCCCC"> we looked at</font>

1285
00:57:15,369 --> 00:57:22,480
some<font color="#CCCCCC"> of our incorrect pictures now what</font>

1286
00:57:22,480 --> 00:57:24,040
I've done<font color="#CCCCCC"> is I've printed out</font><font color="#E5E5E5"> the whole</font>

1287
00:57:24,040 --> 00:57:26,590
<font color="#E5E5E5">of these incorrect pictures but the key</font>

1288
00:57:26,590 --> 00:57:30,760
<font color="#CCCCCC">thing to</font><font color="#E5E5E5"> realize is</font><font color="#CCCCCC"> that particularly in</font>

1289
00:57:30,760 --> 00:57:34,050
fact when<font color="#E5E5E5"> we do the the validation set</font>

1290
00:57:34,050 --> 00:57:37,960
<font color="#CCCCCC">all of our inputs</font><font color="#E5E5E5"> to our model all</font><font color="#CCCCCC"> the</font>

1291
00:57:37,960 --> 00:57:40,990
time have to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> square</font><font color="#E5E5E5"> right and the</font>

1292
00:57:40,990 --> 00:57:43,750
reason<font color="#CCCCCC"> for that is it's kind of a minor</font>

1293
00:57:43,750 --> 00:57:45,820
technical<font color="#CCCCCC"> detail but basically the GPU</font>

1294
00:57:45,820 --> 00:57:48,490
doesn't go<font color="#CCCCCC"> very quickly</font><font color="#E5E5E5"> if you have like</font>

1295
00:57:48,490 --> 00:57:50,200
<font color="#E5E5E5">different dimensions for different</font>

1296
00:57:50,200 --> 00:57:51,640
images<font color="#E5E5E5"> because it needs seems to be</font>

1297
00:57:51,640 --> 00:57:53,710
consistent<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that every part of</font><font color="#E5E5E5"> the GPU</font>

1298
00:57:53,710 --> 00:57:55,839
can<font color="#CCCCCC"> do the same thing and I think</font><font color="#E5E5E5"> this</font>

1299
00:57:55,839 --> 00:57:57,430
is<font color="#E5E5E5"> probably fixable but it now that's</font>

1300
00:57:57,430 --> 00:57:59,050
the state<font color="#E5E5E5"> of the technology we</font><font color="#CCCCCC"> have so</font>

1301
00:57:59,050 --> 00:58:01,660
our validation set when<font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> say</font>

1302
00:58:01,660 --> 00:58:03,310
for<font color="#E5E5E5"> this particular thing is it's a dog</font>

1303
00:58:03,310 --> 00:58:05,380
<font color="#E5E5E5">what we</font><font color="#CCCCCC"> actually do to</font><font color="#E5E5E5"> make it</font><font color="#CCCCCC"> square as</font>

1304
00:58:05,380 --> 00:58:08,410
we just pick out the square in the

1305
00:58:08,410 --> 00:58:10,510
<font color="#CCCCCC">middle right so we would take off its</font>

1306
00:58:10,510 --> 00:58:12,820
<font color="#E5E5E5">two edges and so we take the whole</font>

1307
00:58:12,820 --> 00:58:15,010
height and then as much of the middle as

1308
00:58:15,010 --> 00:58:16,930
we can<font color="#E5E5E5"> and so you can see in this case</font>

1309
00:58:16,930 --> 00:58:19,380
<font color="#CCCCCC">we wouldn't</font><font color="#E5E5E5"> actually see this dog's head</font>

1310
00:58:19,380 --> 00:58:21,730
<font color="#E5E5E5">right so I think the reason</font><font color="#CCCCCC"> this was</font>

1311
00:58:21,730 --> 00:58:24,130
<font color="#CCCCCC">actually not correctly classified was</font>

1312
00:58:24,130 --> 00:58:26,230
because the validation set<font color="#E5E5E5"> only got to</font>

1313
00:58:26,230 --> 00:58:29,470
see<font color="#E5E5E5"> the body</font><font color="#CCCCCC"> and the body doesn't look</font>

1314
00:58:29,470 --> 00:58:31,720
particularly doglike or<font color="#E5E5E5"> cat-like</font><font color="#CCCCCC"> it's</font>

1315
00:58:31,720 --> 00:58:35,140
not at all punctual what it is<font color="#E5E5E5"> so what</font>

1316
00:58:35,140 --> 00:58:38,140
we're going to do when<font color="#CCCCCC"> we calculate the</font>

1317
00:58:38,140 --> 00:58:39,790
predictions for<font color="#E5E5E5"> our validation set</font><font color="#CCCCCC"> is</font>

1318
00:58:39,790 --> 00:58:40,960
we're going<font color="#E5E5E5"> to use something called test</font>

1319
00:58:40,960 --> 00:58:43,780
time<font color="#E5E5E5"> augmentation and what</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> means is</font>

1320
00:58:43,780 --> 00:58:46,119
that every<font color="#CCCCCC"> time we decide</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> this cat or</font>

1321
00:58:46,119 --> 00:58:48,070
a dog<font color="#CCCCCC"> not in the training but after</font>

1322
00:58:48,070 --> 00:58:50,140
we've trained the model<font color="#E5E5E5"> is we're going</font>

1323
00:58:50,140 --> 00:58:56,349
<font color="#E5E5E5">to actually take four random data</font>

1324
00:58:56,349 --> 00:58:58,330
augmentations<font color="#E5E5E5"> and remember the data</font>

1325
00:58:58,330 --> 00:59:00,310
augmentations move around

1326
00:59:00,310 --> 00:59:03,400
and zoom<font color="#E5E5E5"> in and</font><font color="#CCCCCC"> out and flip</font><font color="#E5E5E5"> okay</font>

1327
00:59:03,400 --> 00:59:04,870
so we're going to<font color="#E5E5E5"> take four</font><font color="#CCCCCC"> of them at</font>

1328
00:59:04,870 --> 00:59:06,850
random<font color="#CCCCCC"> and we're going to</font><font color="#E5E5E5"> take the</font>

1329
00:59:06,850 --> 00:59:09,790
original<font color="#E5E5E5"> and augmented</font><font color="#CCCCCC"> sent a</font><font color="#E5E5E5"> cropped</font>

1330
00:59:09,790 --> 00:59:11,440
image and we're<font color="#E5E5E5"> going to do a prediction</font>

1331
00:59:11,440 --> 00:59:13,570
<font color="#E5E5E5">for all of those and</font><font color="#CCCCCC"> then we're</font><font color="#E5E5E5"> going to</font>

1332
00:59:13,570 --> 00:59:16,630
take the average<font color="#CCCCCC"> of those predictions</font><font color="#E5E5E5"> so</font>

1333
00:59:16,630 --> 00:59:18,880
I'm<font color="#E5E5E5"> going to say is this a cat is this a</font>

1334
00:59:18,880 --> 00:59:21,460
cat is this<font color="#E5E5E5"> a cat is this a cat but and</font>

1335
00:59:21,460 --> 00:59:24,370
<font color="#E5E5E5">so hopefully</font><font color="#CCCCCC"> in one of those random ones</font>

1336
00:59:24,370 --> 00:59:26,020
we actually<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> face is</font>

1337
00:59:26,020 --> 00:59:28,480
<font color="#E5E5E5">there zoomed in by a similar</font><font color="#CCCCCC"> amount to</font>

1338
00:59:28,480 --> 00:59:30,340
other<font color="#E5E5E5"> dogs faces at sea and it's rotated</font>

1339
00:59:30,340 --> 00:59:31,840
by<font color="#E5E5E5"> the amount that it expects to see it</font>

1340
00:59:31,840 --> 00:59:36,040
and so<font color="#E5E5E5"> forth</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> do that</font><font color="#E5E5E5"> all we have</font>

1341
00:59:36,040 --> 00:59:38,890
to do is just call<font color="#E5E5E5"> tt8</font>

1342
00:59:38,890 --> 00:59:41,200
<font color="#E5E5E5">TTA stands for Test time augmentation</font>

1343
00:59:41,200 --> 00:59:43,960
<font color="#E5E5E5">this term of like what</font><font color="#CCCCCC"> a what do we</font><font color="#E5E5E5"> call</font>

1344
00:59:43,960 --> 00:59:45,610
up when<font color="#E5E5E5"> we're making predictions from</font><font color="#CCCCCC"> up</font>

1345
00:59:45,610 --> 00:59:47,110
<font color="#E5E5E5">from a model we've trained sometimes</font>

1346
00:59:47,110 --> 00:59:48,730
it's called inference<font color="#E5E5E5"> time sometimes</font>

1347
00:59:48,730 --> 00:59:50,590
it's<font color="#E5E5E5"> called test time everybody since</font>

1348
00:59:50,590 --> 00:59:53,200
have a different name<font color="#E5E5E5"> so TTA and so when</font>

1349
00:59:53,200 --> 00:59:55,600
we do<font color="#CCCCCC"> that we go learn TTA</font><font color="#E5E5E5"> check the</font>

1350
00:59:55,600 --> 00:59:57,250
<font color="#CCCCCC">accuracy and</font><font color="#E5E5E5"> lo and behold</font>

1351
00:59:57,250 --> 00:59:59,290
we're now at ninety nine point<font color="#E5E5E5"> six five</font>

1352
00:59:59,290 --> 01:00:01,960
percent which<font color="#E5E5E5"> is kind of crazy where's</font>

1353
01:00:01,960 --> 01:00:07,420
<font color="#E5E5E5">our green box</font><font color="#CCCCCC"> but for every park</font><font color="#E5E5E5"> we are</font>

1354
01:00:07,420 --> 01:00:11,530
only showing<font color="#E5E5E5"> one type of</font><font color="#CCCCCC"> augmentation</font><font color="#E5E5E5"> or</font>

1355
01:00:11,530 --> 01:00:13,840
<font color="#E5E5E5">for particular</font><font color="#CCCCCC"> image right</font><font color="#E5E5E5"> so when we</font>

1356
01:00:13,840 --> 01:00:16,540
<font color="#CCCCCC">are training</font><font color="#E5E5E5"> back here we're not doing</font>

1357
01:00:16,540 --> 01:00:20,170
any TTA<font color="#E5E5E5"> right so TTA is not like you</font>

1358
01:00:20,170 --> 01:00:22,660
could and sometimes like I've written

1359
01:00:22,660 --> 01:00:24,730
libraries where after a cheap up I run

1360
01:00:24,730 --> 01:00:26,680
TTA to see how well it's going<font color="#CCCCCC"> but</font>

1361
01:00:26,680 --> 01:00:27,760
that's<font color="#E5E5E5"> not what's happening here I</font>

1362
01:00:27,760 --> 01:00:31,030
trained the whole thing with training

1363
01:00:31,030 --> 01:00:33,190
time organization which doesn't have a

1364
01:00:33,190 --> 01:00:34,510
special<font color="#CCCCCC"> name</font><font color="#E5E5E5"> because that's what we mean</font>

1365
01:00:34,510 --> 01:00:36,070
<font color="#E5E5E5">when we say data augmentation we need</font>

1366
01:00:36,070 --> 01:00:38,230
training<font color="#E5E5E5"> time augmentation so here every</font>

1367
01:00:38,230 --> 01:00:39,850
time we showed<font color="#CCCCCC"> a</font><font color="#E5E5E5"> picture</font>

1368
01:00:39,850 --> 01:00:41,800
we were randomly changing it a little

1369
01:00:41,800 --> 01:00:43,900
<font color="#E5E5E5">bit so each epoch</font><font color="#CCCCCC"> each of these seven</font>

1370
01:00:43,900 --> 01:00:45,520
epochs it was seen slightly different

1371
01:00:45,520 --> 01:00:47,830
versions of the picture having<font color="#E5E5E5"> done that</font>

1372
01:00:47,830 --> 01:00:50,470
we now have a fully trained<font color="#E5E5E5"> model we</font>

1373
01:00:50,470 --> 01:00:52,180
then said<font color="#E5E5E5"> okay let's look at the</font>

1374
01:00:52,180 --> 01:00:54,400
validation set so TTA by default uses

1375
01:00:54,400 --> 01:00:56,350
the validation set and said<font color="#E5E5E5"> okay what</font>

1376
01:00:56,350 --> 01:00:57,670
are your predictions of which ones are

1377
01:00:57,670 --> 01:00:59,590
<font color="#E5E5E5">cats and which ones are dogs and it did</font>

1378
01:00:59,590 --> 01:01:02,410
<font color="#CCCCCC">4 predictions with different random</font>

1379
01:01:02,410 --> 01:01:04,540
<font color="#E5E5E5">orientations</font><font color="#CCCCCC"> plus one on the</font><font color="#E5E5E5"> organ under</font>

1380
01:01:04,540 --> 01:01:06,100
Augmented version<font color="#CCCCCC"> average them all</font>

1381
01:01:06,100 --> 01:01:07,870
together and that's what<font color="#E5E5E5"> we got and</font>

1382
01:01:07,870 --> 01:01:10,200
that's what we can't clear the<font color="#CCCCCC"> accurate</font>

1383
01:01:10,200 --> 01:01:12,500
so is there a high probability of<font color="#E5E5E5"> having</font>

1384
01:01:12,500 --> 01:01:15,359
<font color="#E5E5E5">sample in TTA that was not shown in</font>

1385
01:01:15,359 --> 01:01:19,619
doing trained<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> actually every data</font>

1386
01:01:19,619 --> 01:01:22,800
augmented<font color="#E5E5E5"> for image is is unique because</font>

1387
01:01:22,800 --> 01:01:24,869
<font color="#E5E5E5">the rotation could be like point zero</font>

1388
01:01:24,869 --> 01:01:28,380
three four degrees and zoom could be<font color="#E5E5E5"> 1.0</font>

1389
01:01:28,380 --> 01:01:30,780
<font color="#CCCCCC">one sixty</font><font color="#E5E5E5"> five so every time it's</font>

1390
01:01:30,780 --> 01:01:32,970
slightly<font color="#E5E5E5"> different no problem</font>

1391
01:01:32,970 --> 01:01:39,480
<font color="#E5E5E5">was behind you what's your might not use</font>

1392
01:01:39,480 --> 01:01:40,980
white padding or something like<font color="#E5E5E5"> that</font>

1393
01:01:40,980 --> 01:01:44,369
<font color="#CCCCCC">just one</font><font color="#E5E5E5"> of your white padding like just</font>

1394
01:01:44,369 --> 01:01:46,170
you know<font color="#CCCCCC"> put like a white water</font><font color="#E5E5E5"> around</font>

1395
01:01:46,170 --> 01:01:48,990
<font color="#CCCCCC">oh padding's not yes so like there's</font>

1396
01:01:48,990 --> 01:01:50,220
lots<font color="#E5E5E5"> of different types of a better</font>

1397
01:01:50,220 --> 01:01:52,260
orientation you<font color="#CCCCCC"> can do and so one of</font><font color="#E5E5E5"> the</font>

1398
01:01:52,260 --> 01:01:54,300
things you can do is to add a border

1399
01:01:54,300 --> 01:01:57,150
<font color="#E5E5E5">around it basically adding a border</font>

1400
01:01:57,150 --> 01:01:58,859
around it in my experiments<font color="#CCCCCC"> doesn't</font>

1401
01:01:58,859 --> 01:02:00,980
doesn't<font color="#CCCCCC"> help it doesn't</font><font color="#E5E5E5"> make it</font><font color="#CCCCCC"> any less</font>

1402
01:02:00,980 --> 01:02:03,660
<font color="#CCCCCC">cat-like it's not</font><font color="#E5E5E5"> the convolutional</font>

1403
01:02:03,660 --> 01:02:04,830
neural network<font color="#E5E5E5"> doesn't seem to find it</font>

1404
01:02:04,830 --> 01:02:07,290
<font color="#CCCCCC">very</font><font color="#E5E5E5"> interesting basically something</font>

1405
01:02:07,290 --> 01:02:08,910
<font color="#E5E5E5">that I do do we'll see later is I do</font>

1406
01:02:08,910 --> 01:02:10,380
something called<font color="#CCCCCC"> reflection padding</font>

1407
01:02:10,380 --> 01:02:12,420
which is where I add some borders that

1408
01:02:12,420 --> 01:02:15,060
<font color="#CCCCCC">are the outside just reflected it's a</font>

1409
01:02:15,060 --> 01:02:16,830
way to kind<font color="#CCCCCC"> of make some bigger images</font>

1410
01:02:16,830 --> 01:02:18,810
<font color="#CCCCCC">works</font><font color="#E5E5E5"> well with satellite imagery in</font>

1411
01:02:18,810 --> 01:02:21,599
<font color="#E5E5E5">particular but yeah in general</font><font color="#CCCCCC"> I don't</font>

1412
01:02:21,599 --> 01:02:23,220
<font color="#E5E5E5">do I have a lot of padding instead I do</font>

1413
01:02:23,220 --> 01:02:26,839
a bit of zooming

1414
01:02:28,380 --> 01:02:30,120
it's kind of<font color="#CCCCCC"> follow-up to that last</font><font color="#E5E5E5"> one</font>

1415
01:02:30,120 --> 01:02:33,600
but rather than cropping just at white

1416
01:02:33,600 --> 01:02:35,550
space because when you crop you lose the

1417
01:02:35,550 --> 01:02:37,800
<font color="#CCCCCC">dog's face</font><font color="#E5E5E5"> but if you added white space</font>

1418
01:02:37,800 --> 01:02:40,710
you wouldn't yeah<font color="#CCCCCC"> so that's that's where</font>

1419
01:02:40,710 --> 01:02:43,260
the kind<font color="#CCCCCC"> of the reflection padding or</font>

1420
01:02:43,260 --> 01:02:44,910
the zooming or whatever can help so

1421
01:02:44,910 --> 01:02:46,200
there are<font color="#E5E5E5"> ways in</font><font color="#CCCCCC"> the faster you know</font>

1422
01:02:46,200 --> 01:02:48,090
<font color="#E5E5E5">library when you do custom transforms of</font>

1423
01:02:48,090 --> 01:02:58,620
of<font color="#E5E5E5"> making that</font><font color="#CCCCCC"> happen</font><font color="#E5E5E5"> I find that it</font>

1424
01:02:58,620 --> 01:03:00,720
kind of depends on<font color="#E5E5E5"> the image size you</font>

1425
01:03:00,720 --> 01:03:03,330
know<font color="#E5E5E5"> but generally</font><font color="#CCCCCC"> speaking it seems</font>

1426
01:03:03,330 --> 01:03:06,420
that using<font color="#E5E5E5"> TTA plus data augmentation</font>

1427
01:03:06,420 --> 01:03:08,430
<font color="#CCCCCC">the best thing to do is to</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> to use</font>

1428
01:03:08,430 --> 01:03:10,440
<font color="#CCCCCC">this larger image as possible and so if</font>

1429
01:03:10,440 --> 01:03:11,880
you kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> crop the thing down and put</font>

1430
01:03:11,880 --> 01:03:13,860
white borders on top and bottom<font color="#E5E5E5"> it's now</font>

1431
01:03:13,860 --> 01:03:16,710
quite a lot smaller<font color="#E5E5E5"> and so to make</font><font color="#CCCCCC"> it as</font>

1432
01:03:16,710 --> 01:03:18,480
big<font color="#CCCCCC"> as it was before you now have to use</font>

1433
01:03:18,480 --> 01:03:20,130
more GPU and if you're<font color="#E5E5E5"> going to use more</font>

1434
01:03:20,130 --> 01:03:21,480
that multi figure you could have zoomed

1435
01:03:21,480 --> 01:03:24,030
in and<font color="#E5E5E5"> used a bigger image so in my</font>

1436
01:03:24,030 --> 01:03:25,740
<font color="#E5E5E5">playing around that doesn't seem to be</font>

1437
01:03:25,740 --> 01:03:36,060
generally as successful there is a

1438
01:03:36,060 --> 01:03:38,460
<font color="#E5E5E5">little interest on the topic of how</font><font color="#CCCCCC"> do</font>

1439
01:03:38,460 --> 01:03:41,690
<font color="#CCCCCC">the domain tation in older than images</font>

1440
01:03:41,690 --> 01:03:47,940
<font color="#CCCCCC">indeed at least not</font><font color="#E5E5E5"> images um yeah um no</font>

1441
01:03:47,940 --> 01:03:53,130
one seems to know<font color="#E5E5E5"> I actually um I asked</font>

1442
01:03:53,130 --> 01:03:54,210
<font color="#E5E5E5">some of my</font><font color="#CCCCCC"> friends</font><font color="#E5E5E5"> in the natural</font>

1443
01:03:54,210 --> 01:03:55,710
language<font color="#CCCCCC"> processing community about</font><font color="#E5E5E5"> this</font>

1444
01:03:55,710 --> 01:03:57,150
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> get to natural language processing</font>

1445
01:03:57,150 --> 01:03:59,910
<font color="#E5E5E5">in a couple of lessons you</font><font color="#CCCCCC"> know it seems</font>

1446
01:03:59,910 --> 01:04:01,200
<font color="#E5E5E5">like it'd be really helpful there's been</font>

1447
01:04:01,200 --> 01:04:04,260
a few example I carry very few number

1448
01:04:04,260 --> 01:04:06,030
examples of people<font color="#CCCCCC"> where papers would</font>

1449
01:04:06,030 --> 01:04:08,490
like try<font color="#CCCCCC"> replacing synonyms</font><font color="#E5E5E5"> for instance</font>

1450
01:04:08,490 --> 01:04:10,800
but on the whole<font color="#E5E5E5"> and understanding of</font>

1451
01:04:10,800 --> 01:04:12,870
like appropriate data augmentation<font color="#E5E5E5"> for</font>

1452
01:04:12,870 --> 01:04:16,830
non image domains<font color="#E5E5E5"> is under-researched in</font>

1453
01:04:16,830 --> 01:04:24,450
under<font color="#E5E5E5"> under developed</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> question was</font>

1454
01:04:24,450 --> 01:04:26,220
could couldn't<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just use a</font><font color="#E5E5E5"> sliding</font>

1455
01:04:26,220 --> 01:04:28,800
window to generate on the images so in

1456
01:04:28,800 --> 01:04:30,960
that dog thank you couldn't we generate

1457
01:04:30,960 --> 01:04:33,840
three parts of<font color="#CCCCCC"> it wouldn't</font><font color="#E5E5E5"> that be</font>

1458
01:04:33,840 --> 01:04:34,080
<font color="#E5E5E5">better</font>

1459
01:04:34,080 --> 01:04:37,560
yeah<font color="#CCCCCC"> PTI you mean just just in general</font>

1460
01:04:37,560 --> 01:04:40,349
when<font color="#E5E5E5"> you're creating your so</font>

1461
01:04:40,349 --> 01:04:42,180
training time<font color="#E5E5E5"> I would say no that</font>

1462
01:04:42,180 --> 01:04:43,680
wouldn't be<font color="#E5E5E5"> better because we're not</font>

1463
01:04:43,680 --> 01:04:45,690
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> get as much variation</font><font color="#CCCCCC"> you know we</font>

1464
01:04:45,690 --> 01:04:48,210
want<font color="#E5E5E5"> to have it like like one degree off</font>

1465
01:04:48,210 --> 01:04:49,950
five you know five degrees off<font color="#E5E5E5"> ten</font>

1466
01:04:49,950 --> 01:04:51,420
pixels up like lots of slightly

1467
01:04:51,420 --> 01:04:52,979
<font color="#E5E5E5">different versions and</font><font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> just</font>

1468
01:04:52,979 --> 01:04:56,549
have<font color="#E5E5E5"> three standard ways then you're not</font>

1469
01:04:56,549 --> 01:04:58,380
giving<font color="#CCCCCC"> it as many different ways</font><font color="#E5E5E5"> of</font>

1470
01:04:58,380 --> 01:05:00,569
looking at the data for testing

1471
01:05:00,569 --> 01:05:03,900
<font color="#E5E5E5">augmentation having fixed cropped</font>

1472
01:05:03,900 --> 01:05:07,079
locations<font color="#CCCCCC"> I think probably would be</font>

1473
01:05:07,079 --> 01:05:09,809
better<font color="#E5E5E5"> and I just</font><font color="#CCCCCC"> haven't gotten</font><font color="#E5E5E5"> around</font>

1474
01:05:09,809 --> 01:05:12,210
to<font color="#E5E5E5"> writing that yet I have a version in</font>

1475
01:05:12,210 --> 01:05:13,979
<font color="#E5E5E5">an old library I think having fixed</font>

1476
01:05:13,979 --> 01:05:19,200
cropped locations<font color="#CCCCCC"> plus random contrast</font>

1477
01:05:19,200 --> 01:05:21,239
brightness rotation<font color="#E5E5E5"> changes might be</font>

1478
01:05:21,239 --> 01:05:23,119
<font color="#E5E5E5">better</font>

1479
01:05:23,119 --> 01:05:25,319
the reason I've<font color="#CCCCCC"> got around to it</font><font color="#E5E5E5"> yet is</font>

1480
01:05:25,319 --> 01:05:27,630
<font color="#E5E5E5">because in my testing it didn't seem</font><font color="#CCCCCC"> to</font>

1481
01:05:27,630 --> 01:05:29,400
help<font color="#E5E5E5"> him practice very much and it made</font>

1482
01:05:29,400 --> 01:05:31,289
the code a lot<font color="#CCCCCC"> more complicated</font><font color="#E5E5E5"> so you</font>

1483
01:05:31,289 --> 01:05:32,460
know<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> kind of it's an interesting</font>

1484
01:05:32,460 --> 01:05:34,490
<font color="#E5E5E5">question</font>

1485
01:05:34,490 --> 01:05:39,170
I just<font color="#CCCCCC"> wanted all of this last</font><font color="#E5E5E5"> AI api's</font>

1486
01:05:39,170 --> 01:05:44,240
that you are using<font color="#CCCCCC"> is it yeah that's a</font>

1487
01:05:44,240 --> 01:05:45,290
<font color="#CCCCCC">great question</font>

1488
01:05:45,290 --> 01:05:47,300
<font color="#E5E5E5">so the faster</font><font color="#CCCCCC"> you go libraries open</font>

1489
01:05:47,300 --> 01:05:48,829
source and let's talk<font color="#E5E5E5"> about it a bit</font>

1490
01:05:48,829 --> 01:05:52,430
<font color="#CCCCCC">more generally because</font><font color="#E5E5E5"> you know it's</font>

1491
01:05:52,430 --> 01:05:55,069
<font color="#E5E5E5">like the fact that the fact that we're</font>

1492
01:05:55,069 --> 01:05:56,390
using this library is kind<font color="#CCCCCC"> of</font>

1493
01:05:56,390 --> 01:05:59,329
<font color="#CCCCCC">interesting and</font><font color="#E5E5E5"> unusual</font><font color="#CCCCCC"> and it sits on</font>

1494
01:05:59,329 --> 01:06:02,440
<font color="#E5E5E5">top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> something called</font><font color="#CCCCCC"> a torch right so</font>

1495
01:06:02,440 --> 01:06:08,380
<font color="#E5E5E5">pi torch is a fairly recent development</font>

1496
01:06:08,380 --> 01:06:11,050
<font color="#E5E5E5">and it's kind of I've noticed all the</font>

1497
01:06:11,050 --> 01:06:13,430
researchers<font color="#E5E5E5"> that I respect pretty much</font>

1498
01:06:13,430 --> 01:06:16,940
are now using<font color="#CCCCCC"> high torch</font><font color="#E5E5E5"> I found in part</font>

1499
01:06:16,940 --> 01:06:18,950
<font color="#E5E5E5">two of last year's course that a lot of</font>

1500
01:06:18,950 --> 01:06:20,510
<font color="#E5E5E5">the cutting-edge stuff I wanted</font><font color="#CCCCCC"> to teach</font>

1501
01:06:20,510 --> 01:06:23,809
<font color="#CCCCCC">I couldn't do it in chaos</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> tensorflow</font>

1502
01:06:23,809 --> 01:06:26,540
which<font color="#E5E5E5"> is what we used to teach with</font><font color="#CCCCCC"> and</font>

1503
01:06:26,540 --> 01:06:29,030
so I had<font color="#E5E5E5"> to switch</font><font color="#CCCCCC"> the course to pay</font>

1504
01:06:29,030 --> 01:06:31,700
<font color="#CCCCCC">torch halfway through part</font><font color="#E5E5E5"> two the</font>

1505
01:06:31,700 --> 01:06:35,240
problem<font color="#E5E5E5"> was that</font><font color="#CCCCCC"> PI torch isn't</font><font color="#E5E5E5"> very</font>

1506
01:06:35,240 --> 01:06:37,220
<font color="#CCCCCC">easy to use you have to write your</font><font color="#E5E5E5"> own</font>

1507
01:06:37,220 --> 01:06:38,809
training loop from scratch<font color="#E5E5E5"> I basically</font>

1508
01:06:38,809 --> 01:06:40,250
write<font color="#E5E5E5"> everything from scratch</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> the</font>

1509
01:06:40,250 --> 01:06:41,839
stuff you see inside the<font color="#E5E5E5"> class</font><font color="#CCCCCC"> they are</font>

1510
01:06:41,839 --> 01:06:43,520
<font color="#E5E5E5">library we would have had to written it</font>

1511
01:06:43,520 --> 01:06:47,780
you know to learn and so it<font color="#E5E5E5"> really makes</font>

1512
01:06:47,780 --> 01:06:49,309
<font color="#E5E5E5">it</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> hard to learn deep learning when</font>

1513
01:06:49,309 --> 01:06:50,660
you have to write hundreds of lines of

1514
01:06:50,660 --> 01:06:55,069
code<font color="#CCCCCC"> to do anything so so we decided</font><font color="#E5E5E5"> to</font>

1515
01:06:55,069 --> 01:06:57,109
<font color="#E5E5E5">create a</font><font color="#CCCCCC"> library on top of Pi torch</font>

1516
01:06:57,109 --> 01:07:00,950
because<font color="#CCCCCC"> we you know</font><font color="#E5E5E5"> this our mission is</font>

1517
01:07:00,950 --> 01:07:03,170
<font color="#CCCCCC">to teach</font><font color="#E5E5E5"> world class big morning so we</font>

1518
01:07:03,170 --> 01:07:04,309
<font color="#E5E5E5">wanted to show you like here's</font><font color="#CCCCCC"> how you</font>

1519
01:07:04,309 --> 01:07:06,369
can be<font color="#E5E5E5"> the best in the world at</font><font color="#CCCCCC"> doing it</font>

1520
01:07:06,369 --> 01:07:09,589
<font color="#CCCCCC">and we found that a lot of the world</font>

1521
01:07:09,589 --> 01:07:12,020
class stuff we needed<font color="#E5E5E5"> to show really</font>

1522
01:07:12,020 --> 01:07:13,790
needed<font color="#E5E5E5"> PI torch or at least with PI</font>

1523
01:07:13,790 --> 01:07:16,730
torch it was far easier<font color="#E5E5E5"> and but then PI</font>

1524
01:07:16,730 --> 01:07:19,119
<font color="#E5E5E5">thought itself just wasn't suitable as a</font>

1525
01:07:19,119 --> 01:07:23,390
first thing<font color="#CCCCCC"> to</font><font color="#E5E5E5"> teach with for new for</font>

1526
01:07:23,390 --> 01:07:25,970
new deep learning practitioners so we

1527
01:07:25,970 --> 01:07:28,839
built this library on up of<font color="#CCCCCC"> PI torch</font>

1528
01:07:28,839 --> 01:07:31,220
initially heavily influenced by<font color="#E5E5E5"> chaos</font>

1529
01:07:31,220 --> 01:07:32,990
which is what we taught last year and

1530
01:07:32,990 --> 01:07:34,670
but then we realized we could actually

1531
01:07:34,670 --> 01:07:36,530
make<font color="#CCCCCC"> things much much much</font><font color="#E5E5E5"> easier than</font>

1532
01:07:36,530 --> 01:07:38,660
care us so in<font color="#E5E5E5"> care us if you look back</font>

1533
01:07:38,660 --> 01:07:41,059
<font color="#E5E5E5">at last year's course notes</font><font color="#CCCCCC"> you'll find</font>

1534
01:07:41,059 --> 01:07:43,490
that all<font color="#CCCCCC"> of the code</font><font color="#E5E5E5"> is two to</font><font color="#CCCCCC"> three</font>

1535
01:07:43,490 --> 01:07:45,920
<font color="#E5E5E5">times longer</font><font color="#CCCCCC"> and there's lots more</font>

1536
01:07:45,920 --> 01:07:47,599
opportunities for

1537
01:07:47,599 --> 01:07:48,890
<font color="#E5E5E5">stakes because there's just a lot of</font>

1538
01:07:48,890 --> 01:07:52,339
<font color="#E5E5E5">things you have</font><font color="#CCCCCC"> to get right so we ended</font>

1539
01:07:52,339 --> 01:07:54,440
up kind of building this this this

1540
01:07:54,440 --> 01:07:57,680
library<font color="#CCCCCC"> in order to make it easier to</font>

1541
01:07:57,680 --> 01:08:00,289
get<font color="#CCCCCC"> into deep learning but</font><font color="#E5E5E5"> also easier</font>

1542
01:08:00,289 --> 01:08:03,229
<font color="#E5E5E5">to get state-of-the-art results and then</font>

1543
01:08:03,229 --> 01:08:04,729
over the<font color="#CCCCCC"> last year as we started</font>

1544
01:08:04,729 --> 01:08:06,200
<font color="#E5E5E5">developing</font><font color="#CCCCCC"> on top of that we started</font>

1545
01:08:06,200 --> 01:08:09,849
<font color="#E5E5E5">discovering that by using this library</font>

1546
01:08:09,849 --> 01:08:12,440
<font color="#E5E5E5">it made us so much more productive that</font>

1547
01:08:12,440 --> 01:08:14,479
we actually<font color="#E5E5E5"> started kind of developing</font>

1548
01:08:14,479 --> 01:08:15,920
<font color="#CCCCCC">you state-of-the-art results and new</font>

1549
01:08:15,920 --> 01:08:17,779
methods ourselves and we started

1550
01:08:17,779 --> 01:08:19,520
<font color="#CCCCCC">realizing that there's a whole</font><font color="#E5E5E5"> bunch of</font>

1551
01:08:19,520 --> 01:08:21,080
like papers<font color="#E5E5E5"> that have kind of been</font>

1552
01:08:21,080 --> 01:08:23,839
ignored or lost which when you use them

1553
01:08:23,839 --> 01:08:26,270
it could<font color="#E5E5E5"> like automate or semi-automated</font>

1554
01:08:26,270 --> 01:08:28,460
stuff like<font color="#CCCCCC"> learning</font><font color="#E5E5E5"> read finder that's</font>

1555
01:08:28,460 --> 01:08:31,908
not in any other library<font color="#CCCCCC"> so so it kind</font>

1556
01:08:31,908 --> 01:08:33,439
of<font color="#E5E5E5"> got to the</font><font color="#CCCCCC"> point where now not only</font>

1557
01:08:33,439 --> 01:08:36,469
is kind of fast AI lets us do things

1558
01:08:36,469 --> 01:08:38,839
easier much<font color="#CCCCCC"> easier</font><font color="#E5E5E5"> than any other</font>

1559
01:08:38,839 --> 01:08:41,359
<font color="#E5E5E5">approach but at the same time it</font>

1560
01:08:41,359 --> 01:08:44,988
actually has a lot<font color="#CCCCCC"> more kind of</font>

1561
01:08:44,988 --> 01:08:46,339
sophisticated stuff behind<font color="#E5E5E5"> the scenes</font>

1562
01:08:46,339 --> 01:08:48,859
<font color="#CCCCCC">than anything else so so it's kind of an</font>

1563
01:08:48,859 --> 01:08:52,880
<font color="#E5E5E5">interesting mix so yeah so we've</font>

1564
01:08:52,880 --> 01:08:54,979
released<font color="#E5E5E5"> this library like at this stage</font>

1565
01:08:54,979 --> 01:08:57,500
it's like<font color="#E5E5E5"> very</font><font color="#CCCCCC"> early version and so</font>

1566
01:08:57,500 --> 01:08:58,790
through this course by the<font color="#E5E5E5"> end of this</font>

1567
01:08:58,790 --> 01:09:00,738
course I hope as a group<font color="#E5E5E5"> you know we</font>

1568
01:09:00,738 --> 01:09:02,929
will<font color="#E5E5E5"> all a lot of</font><font color="#CCCCCC"> people are already</font>

1569
01:09:02,929 --> 01:09:04,460
helping<font color="#E5E5E5"> have developed it into something</font>

1570
01:09:04,460 --> 01:09:08,000
<font color="#E5E5E5">that's you know</font><font color="#CCCCCC"> really pretty stable and</font>

1571
01:09:08,000 --> 01:09:12,290
rock-solid and yeah anybody can then can

1572
01:09:12,290 --> 01:09:16,488
use it to build<font color="#E5E5E5"> your own models under an</font>

1573
01:09:16,488 --> 01:09:18,408
open-source<font color="#E5E5E5"> license as you can see it's</font>

1574
01:09:18,408 --> 01:09:23,988
<font color="#E5E5E5">available on github</font><font color="#CCCCCC"> behind the scenes</font>

1575
01:09:23,988 --> 01:09:26,899
<font color="#CCCCCC">it's it's creating play torch models and</font>

1576
01:09:26,899 --> 01:09:29,689
so<font color="#E5E5E5"> apply torch models can then be</font>

1577
01:09:29,689 --> 01:09:33,649
<font color="#E5E5E5">exported into various</font><font color="#CCCCCC"> different formats</font>

1578
01:09:33,649 --> 01:09:35,448
having said that<font color="#E5E5E5"> like a lot of folks</font>

1579
01:09:35,448 --> 01:09:36,710
<font color="#E5E5E5">like issue if you want to do something</font>

1580
01:09:36,710 --> 01:09:38,839
<font color="#CCCCCC">on a mobile phone</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> you're</font>

1581
01:09:38,839 --> 01:09:40,540
<font color="#E5E5E5">probably going to need to</font><font color="#CCCCCC"> use tensorflow</font>

1582
01:09:40,540 --> 01:09:44,839
<font color="#CCCCCC">and so</font><font color="#E5E5E5"> later</font><font color="#CCCCCC"> on in this</font><font color="#E5E5E5"> course we're</font>

1583
01:09:44,839 --> 01:09:46,158
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to show like how some of the</font>

1584
01:09:46,158 --> 01:09:47,448
<font color="#E5E5E5">things that we're doing in the past</font><font color="#CCCCCC"> AI</font>

1585
01:09:47,448 --> 01:09:50,210
library you can do in<font color="#CCCCCC"> chaos and cancel</font>

1586
01:09:50,210 --> 01:09:51,799
flow so you<font color="#E5E5E5"> can going to get a sense of</font>

1587
01:09:51,799 --> 01:09:53,089
what the different libraries<font color="#E5E5E5"> look like</font>

1588
01:09:53,089 --> 01:09:56,500
and generally speaking<font color="#E5E5E5"> the simple stuff</font>

1589
01:09:56,500 --> 01:09:59,960
is like it'll take<font color="#E5E5E5"> you a small number of</font>

1590
01:09:59,960 --> 01:10:00,860
days

1591
01:10:00,860 --> 01:10:02,690
<font color="#E5E5E5">to learn</font><font color="#CCCCCC"> to do it and care us in</font>

1592
01:10:02,690 --> 01:10:04,790
<font color="#CCCCCC">tensorflow versus fast AI and high torch</font>

1593
01:10:04,790 --> 01:10:08,090
<font color="#E5E5E5">and the more complex stuff</font><font color="#CCCCCC"> often this</font>

1594
01:10:08,090 --> 01:10:09,739
won't be possible<font color="#CCCCCC"> so that like if you</font>

1595
01:10:09,739 --> 01:10:12,170
<font color="#E5E5E5">needed</font><font color="#CCCCCC"> to be intensive flow you're just</font>

1596
01:10:12,170 --> 01:10:16,659
kind<font color="#E5E5E5"> of simplify it off in a little bit</font>

1597
01:10:17,560 --> 01:10:19,850
but you know<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think the more important</font>

1598
01:10:19,850 --> 01:10:24,830
<font color="#CCCCCC">thing to realize is every year</font><font color="#E5E5E5"> the kind</font>

1599
01:10:24,830 --> 01:10:26,810
<font color="#CCCCCC">of the libraries that are available</font><font color="#E5E5E5"> and</font>

1600
01:10:26,810 --> 01:10:28,460
which ones are<font color="#E5E5E5"> the best totally changes</font>

1601
01:10:28,460 --> 01:10:30,139
so like the main<font color="#CCCCCC"> thing I hope that you</font>

1602
01:10:30,139 --> 01:10:31,190
get out<font color="#CCCCCC"> of this course</font><font color="#E5E5E5"> is an</font>

1603
01:10:31,190 --> 01:10:33,110
understanding of<font color="#E5E5E5"> the concepts like</font>

1604
01:10:33,110 --> 01:10:34,880
<font color="#E5E5E5">here's how you find a learning rate</font>

1605
01:10:34,880 --> 01:10:36,350
here's why differential learning rates

1606
01:10:36,350 --> 01:10:38,030
<font color="#E5E5E5">are important is they do learn where the</font>

1607
01:10:38,030 --> 01:10:40,850
kneeling<font color="#E5E5E5"> you know here's what stochastic</font>

1608
01:10:40,850 --> 01:10:42,409
gradient<font color="#E5E5E5"> a</font><font color="#CCCCCC"> second's</font><font color="#E5E5E5"> restarts does so on</font>

1609
01:10:42,409 --> 01:10:45,619
<font color="#E5E5E5">and so forth</font><font color="#CCCCCC"> because you know by the</font>

1610
01:10:45,619 --> 01:10:47,949
time<font color="#E5E5E5"> we do this course again next year</font>

1611
01:10:47,949 --> 01:10:52,400
you<font color="#E5E5E5"> know the library situations and the</font>

1612
01:10:52,400 --> 01:10:55,580
<font color="#CCCCCC">difference the king</font><font color="#E5E5E5"> that's a question of</font>

1613
01:10:55,580 --> 01:11:05,960
that I was wondering<font color="#CCCCCC"> if you've had an</font>

1614
01:11:05,960 --> 01:11:08,659
opinion on<font color="#E5E5E5"> pyro which is ubers new</font>

1615
01:11:08,659 --> 01:11:10,909
release I haven't looked<font color="#E5E5E5"> at it</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> I'm</font>

1616
01:11:10,909 --> 01:11:11,960
<font color="#E5E5E5">very</font><font color="#CCCCCC"> interested in probabilistic</font>

1617
01:11:11,960 --> 01:11:14,210
programming and it's really<font color="#E5E5E5"> cool that's</font>

1618
01:11:14,210 --> 01:11:15,860
<font color="#CCCCCC">built on top of paper so one of the</font>

1619
01:11:15,860 --> 01:11:17,090
things we'll learn<font color="#CCCCCC"> about</font><font color="#E5E5E5"> in this course</font>

1620
01:11:17,090 --> 01:11:19,070
is we'll see that<font color="#E5E5E5"> PI torch is much more</font>

1621
01:11:19,070 --> 01:11:20,810
than<font color="#CCCCCC"> just a deep learning library it</font>

1622
01:11:20,810 --> 01:11:24,190
actually lets us write arbitrary

1623
01:11:24,190 --> 01:11:28,369
<font color="#E5E5E5">gpu-accelerated algorithms from scratch</font>

1624
01:11:28,369 --> 01:11:29,719
which we're actually going to do and

1625
01:11:29,719 --> 01:11:31,369
pyro is a great example<font color="#CCCCCC"> of what people</font>

1626
01:11:31,369 --> 01:11:33,260
<font color="#CCCCCC">are now doing with might watch outside</font>

1627
01:11:33,260 --> 01:11:38,199
<font color="#CCCCCC">of the deep level</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> ok let's take a</font>

1628
01:11:38,199 --> 01:11:40,190
<font color="#CCCCCC">eight-minute break</font><font color="#E5E5E5"> and we'll</font><font color="#CCCCCC"> come back</font>

1629
01:11:40,190 --> 01:11:52,520
at 7:55 so<font color="#CCCCCC"> ninety nine point</font><font color="#E5E5E5"> six five</font>

1630
01:11:52,520 --> 01:11:56,119
percent accuracy<font color="#CCCCCC"> what does that mean so</font>

1631
01:11:56,119 --> 01:11:59,060
in classification<font color="#E5E5E5"> when we do</font>

1632
01:11:59,060 --> 01:12:01,130
classification<font color="#CCCCCC"> and machine learning</font><font color="#E5E5E5"> the</font>

1633
01:12:01,130 --> 01:12:04,130
really simple<font color="#E5E5E5"> way to look at the result</font>

1634
01:12:04,130 --> 01:12:05,750
of a<font color="#CCCCCC"> classification is what's called</font><font color="#E5E5E5"> the</font>

1635
01:12:05,750 --> 01:12:07,850
confusion matrix this<font color="#E5E5E5"> is not just deep</font>

1636
01:12:07,850 --> 01:12:09,530
learning but in any kind of classifier

1637
01:12:09,530 --> 01:12:12,110
machine learning where<font color="#CCCCCC"> we say okay</font><font color="#E5E5E5"> what</font>

1638
01:12:12,110 --> 01:12:14,690
was the<font color="#E5E5E5"> actual truth there were</font>

1639
01:12:14,690 --> 01:12:17,960
thousand cats and a thousand dogs<font color="#E5E5E5"> out of</font>

1640
01:12:17,960 --> 01:12:20,449
the thousand actual cats<font color="#CCCCCC"> how many did we</font>

1641
01:12:20,449 --> 01:12:22,969
predict<font color="#CCCCCC"> were cats this is obviously in</font>

1642
01:12:22,969 --> 01:12:25,219
<font color="#CCCCCC">the</font><font color="#E5E5E5"> validation</font><font color="#CCCCCC"> step this is the</font><font color="#E5E5E5"> images</font>

1643
01:12:25,219 --> 01:12:27,320
that we didn't<font color="#CCCCCC"> use to train with it</font>

1644
01:12:27,320 --> 01:12:28,070
turns out there were nine hundred

1645
01:12:28,070 --> 01:12:29,989
<font color="#CCCCCC">ninety-eight cats that we actually</font>

1646
01:12:29,989 --> 01:12:32,210
predicted as cats<font color="#CCCCCC"> and two that</font><font color="#E5E5E5"> we got</font>

1647
01:12:32,210 --> 01:12:32,660
wrong

1648
01:12:32,660 --> 01:12:35,180
okay and then<font color="#CCCCCC"> for dogs there were nine</font>

1649
01:12:35,180 --> 01:12:36,440
hundred<font color="#E5E5E5"> ninety-five that we predicted</font>

1650
01:12:36,440 --> 01:12:38,150
were dogs<font color="#E5E5E5"> and then five that we got</font>

1651
01:12:38,150 --> 01:12:41,210
wrong<font color="#CCCCCC"> and so often these confusion</font>

1652
01:12:41,210 --> 01:12:42,980
matrices can<font color="#E5E5E5"> be helpful particularly if</font>

1653
01:12:42,980 --> 01:12:44,690
you've got<font color="#E5E5E5"> like four or five classes</font>

1654
01:12:44,690 --> 01:12:46,219
you're trying to predict<font color="#E5E5E5"> to see like</font>

1655
01:12:46,219 --> 01:12:48,199
which group<font color="#E5E5E5"> you having the most</font><font color="#CCCCCC"> trouble</font>

1656
01:12:48,199 --> 01:12:49,880
with<font color="#CCCCCC"> and you can see it uses</font><font color="#E5E5E5"> color</font>

1657
01:12:49,880 --> 01:12:52,910
coding to<font color="#E5E5E5"> tell you you know to highlight</font>

1658
01:12:52,910 --> 01:12:55,070
the large<font color="#E5E5E5"> the large bits you've got to</font>

1659
01:12:55,070 --> 01:12:57,980
<font color="#E5E5E5">hope that the diagonal is the</font>

1660
01:12:57,980 --> 01:13:01,070
highlighted section<font color="#CCCCCC"> so</font><font color="#E5E5E5"> now that we've</font>

1661
01:13:01,070 --> 01:13:02,510
retrained the model it<font color="#E5E5E5"> can be quite</font>

1662
01:13:02,510 --> 01:13:04,699
<font color="#E5E5E5">helpful now that's better to actually</font>

1663
01:13:04,699 --> 01:13:07,130
<font color="#CCCCCC">look back</font><font color="#E5E5E5"> and see like okay which ones</font>

1664
01:13:07,130 --> 01:13:09,469
in<font color="#E5E5E5"> particular</font><font color="#CCCCCC"> were</font><font color="#E5E5E5"> incorrect</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we can</font>

1665
01:13:09,469 --> 01:13:12,380
see here<font color="#E5E5E5"> there were actually only two</font>

1666
01:13:12,380 --> 01:13:15,260
<font color="#E5E5E5">incorrect cats it prints out four by</font>

1667
01:13:15,260 --> 01:13:16,580
default so you<font color="#E5E5E5"> can actually see these</font>

1668
01:13:16,580 --> 01:13:19,190
two actually<font color="#CCCCCC"> less than</font><font color="#E5E5E5"> 0.5 so</font><font color="#CCCCCC"> they</font>

1669
01:13:19,190 --> 01:13:21,320
weren't they weren't wrong<font color="#CCCCCC"> okay so it's</font>

1670
01:13:21,320 --> 01:13:23,900
<font color="#CCCCCC">actually these</font><font color="#E5E5E5"> two were wrong cats and</font>

1671
01:13:23,900 --> 01:13:26,080
this one isn't obviously<font color="#CCCCCC"> a cat at all</font>

1672
01:13:26,080 --> 01:13:28,580
<font color="#CCCCCC">this</font><font color="#E5E5E5"> one is but it looks</font><font color="#CCCCCC"> like it's</font><font color="#E5E5E5"> got a</font>

1673
01:13:28,580 --> 01:13:31,370
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> weird artifacts and you can't see</font>

1674
01:13:31,370 --> 01:13:34,190
<font color="#E5E5E5">its eyeballs at all so and then here are</font>

1675
01:13:34,190 --> 01:13:36,469
<font color="#CCCCCC">the how</font><font color="#E5E5E5"> many dogs where they're all</font>

1676
01:13:36,469 --> 01:13:38,660
wrong there<font color="#CCCCCC"> were five wrong dogs here</font>

1677
01:13:38,660 --> 01:13:40,610
are<font color="#E5E5E5"> four</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> that's not obviously a</font>

1678
01:13:40,610 --> 01:13:44,120
dog that looks<font color="#CCCCCC"> like a</font><font color="#E5E5E5"> mistake</font><font color="#CCCCCC"> that looks</font>

1679
01:13:44,120 --> 01:13:46,400
<font color="#E5E5E5">like a mistake</font><font color="#CCCCCC"> that one I</font><font color="#E5E5E5"> guess doesn't</font>

1680
01:13:46,400 --> 01:13:47,870
<font color="#E5E5E5">have enough information that I guess</font>

1681
01:13:47,870 --> 01:13:51,350
it's a mistake so so we've done a pretty

1682
01:13:51,350 --> 01:13:53,989
good job here<font color="#CCCCCC"> of creating a good</font>

1683
01:13:53,989 --> 01:13:57,890
classifier<font color="#CCCCCC"> I would based on entering</font><font color="#E5E5E5"> a</font>

1684
01:13:57,890 --> 01:13:59,150
lot of<font color="#E5E5E5"> capital competitions and</font>

1685
01:13:59,150 --> 01:14:00,860
comparing<font color="#CCCCCC"> results I've done two various</font>

1686
01:14:00,860 --> 01:14:02,870
research papers I can tell you it's a

1687
01:14:02,870 --> 01:14:05,210
<font color="#E5E5E5">state of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> art classifier it's it's</font>

1688
01:14:05,210 --> 01:14:06,320
right up there<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> best in the</font>

1689
01:14:06,320 --> 01:14:08,090
<font color="#E5E5E5">world we're going to make it a little</font>

1690
01:14:08,090 --> 01:14:09,890
bit better in a moment<font color="#E5E5E5"> but here in the</font>

1691
01:14:09,890 --> 01:14:11,989
basic steps<font color="#E5E5E5"> right so if you want</font><font color="#CCCCCC"> to</font>

1692
01:14:11,989 --> 01:14:14,270
<font color="#CCCCCC">create a world-class image classifier</font>

1693
01:14:14,270 --> 01:14:16,280
the steps that we<font color="#CCCCCC"> just</font><font color="#E5E5E5"> went</font><font color="#CCCCCC"> through was</font>

1694
01:14:16,280 --> 01:14:18,320
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> started our</font><font color="#CCCCCC"> week's term data</font>

1695
01:14:18,320 --> 01:14:21,050
augmentation on by saying<font color="#E5E5E5"> oil transforms</font>

1696
01:14:21,050 --> 01:14:22,790
<font color="#E5E5E5">equals and you either say</font><font color="#CCCCCC"> sidon or</font>

1697
01:14:22,790 --> 01:14:24,380
<font color="#CCCCCC">top-down</font><font color="#E5E5E5"> depending on what you're doing</font>

1698
01:14:24,380 --> 01:14:27,679
start with<font color="#CCCCCC"> pre compute equals true find</font>

1699
01:14:27,679 --> 01:14:28,550
a decent learning

1700
01:14:28,550 --> 01:14:31,010
<font color="#E5E5E5">eight we then train just like it one or</font>

1701
01:14:31,010 --> 01:14:33,080
two<font color="#CCCCCC"> epochs</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> that takes a few</font>

1702
01:14:33,080 --> 01:14:34,820
seconds<font color="#E5E5E5"> as we got</font><font color="#CCCCCC"> through compute equals</font>

1703
01:14:34,820 --> 01:14:37,670
true then we turn off<font color="#CCCCCC"> pre compute which</font>

1704
01:14:37,670 --> 01:14:40,430
allows us to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> data augmentation</font><font color="#E5E5E5"> to do</font>

1705
01:14:40,430 --> 01:14:43,220
another two or three epochs<font color="#E5E5E5"> generally</font>

1706
01:14:43,220 --> 01:14:45,710
with cycle length equals<font color="#E5E5E5"> one then I</font>

1707
01:14:45,710 --> 01:14:48,260
unfreeze all<font color="#E5E5E5"> them as I then set the</font>

1708
01:14:48,260 --> 01:14:50,360
earlier layers to<font color="#E5E5E5"> be like either</font>

1709
01:14:50,360 --> 01:14:52,640
<font color="#E5E5E5">somewhere between a</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> times 2 10 times</font>

1710
01:14:52,640 --> 01:14:54,830
mobile learning rate in the previous so

1711
01:14:54,830 --> 01:15:01,760
in this case I did<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> times right so</font>

1712
01:15:01,760 --> 01:15:03,230
it's like<font color="#E5E5E5"> this was my learning rate that</font>

1713
01:15:03,230 --> 01:15:04,250
I found from<font color="#CCCCCC"> the learning</font><font color="#E5E5E5"> rate finer</font>

1714
01:15:04,250 --> 01:15:06,140
than I went<font color="#E5E5E5"> 10 times smaller and then 10</font>

1715
01:15:06,140 --> 01:15:08,770
times smaller<font color="#E5E5E5"> as a rule of thumb like</font>

1716
01:15:08,770 --> 01:15:11,090
knowing that<font color="#E5E5E5"> you're starting with a pre</font>

1717
01:15:11,090 --> 01:15:13,640
trained imagenet model<font color="#E5E5E5"> if you know if</font>

1718
01:15:13,640 --> 01:15:15,050
you can see that<font color="#E5E5E5"> the things that you're</font>

1719
01:15:15,050 --> 01:15:17,030
<font color="#E5E5E5">now trying to</font><font color="#CCCCCC"> classify a pretty</font><font color="#E5E5E5"> similar</font>

1720
01:15:17,030 --> 01:15:18,740
the<font color="#CCCCCC"> kinds</font><font color="#E5E5E5"> of things in</font><font color="#CCCCCC"> imagenet</font><font color="#E5E5E5"> ie</font>

1721
01:15:18,740 --> 01:15:21,230
<font color="#E5E5E5">pictures of normal objects in normal</font>

1722
01:15:21,230 --> 01:15:21,920
environments

1723
01:15:21,920 --> 01:15:24,350
<font color="#CCCCCC">you probably want about a 10x difference</font>

1724
01:15:24,350 --> 01:15:26,150
because you want those earlier<font color="#E5E5E5"> layers</font>

1725
01:15:26,150 --> 01:15:27,920
like you think<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the earlier layers</font>

1726
01:15:27,920 --> 01:15:30,410
are probably very<font color="#CCCCCC"> good</font><font color="#E5E5E5"> already but also</font>

1727
01:15:30,410 --> 01:15:31,700
if you're doing<font color="#E5E5E5"> something like satellite</font>

1728
01:15:31,700 --> 01:15:34,370
imagery or medical imaging which is not

1729
01:15:34,370 --> 01:15:36,080
at all like image net then you<font color="#CCCCCC"> probably</font>

1730
01:15:36,080 --> 01:15:37,940
<font color="#E5E5E5">want to be training those earlier layers</font>

1731
01:15:37,940 --> 01:15:39,440
a lot more so you might have<font color="#CCCCCC"> like oh</font>

1732
01:15:39,440 --> 01:15:42,380
<font color="#E5E5E5">just a</font><font color="#CCCCCC"> 3/8 difference</font><font color="#E5E5E5"> all right so</font>

1733
01:15:42,380 --> 01:15:45,770
that's like one change<font color="#E5E5E5"> that I make is to</font>

1734
01:15:45,770 --> 01:15:52,220
try<font color="#E5E5E5"> to make it</font><font color="#CCCCCC"> out of</font><font color="#E5E5E5"> 10x or 3x</font><font color="#CCCCCC"> yes so</font>

1735
01:15:52,220 --> 01:15:56,150
then after unfreezing you can now call

1736
01:15:56,150 --> 01:15:59,480
LR find again but<font color="#CCCCCC"> at Nike didn't in this</font>

1737
01:15:59,480 --> 01:16:01,490
<font color="#E5E5E5">case but like once you've unfrozen all</font>

1738
01:16:01,490 --> 01:16:03,230
the layers you've turned on differential

1739
01:16:03,230 --> 01:16:05,390
learning rates you can<font color="#E5E5E5"> then call a lot</font>

1740
01:16:05,390 --> 01:16:10,310
of fine<font color="#E5E5E5"> again right</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so you can then</font>

1741
01:16:10,310 --> 01:16:12,050
check like<font color="#CCCCCC"> oh does</font><font color="#E5E5E5"> it still look</font><font color="#CCCCCC"> like</font>

1742
01:16:12,050 --> 01:16:13,970
the same point<font color="#E5E5E5"> I had last time is</font><font color="#CCCCCC"> about</font>

1743
01:16:13,970 --> 01:16:16,460
right<font color="#E5E5E5"> something to note is that if you</font>

1744
01:16:16,460 --> 01:16:20,150
call<font color="#E5E5E5"> LR find having set differential</font>

1745
01:16:20,150 --> 01:16:21,950
learning rates the thing<font color="#CCCCCC"> that's actually</font>

1746
01:16:21,950 --> 01:16:23,780
<font color="#E5E5E5">going to print out is the learning</font><font color="#CCCCCC"> rate</font>

1747
01:16:23,780 --> 01:16:25,820
of the last layers right because you've

1748
01:16:25,820 --> 01:16:27,200
got three<font color="#E5E5E5"> different</font><font color="#CCCCCC"> learning rates so</font>

1749
01:16:27,200 --> 01:16:28,690
it's actually<font color="#E5E5E5"> showing you the last layer</font>

1750
01:16:28,690 --> 01:16:31,130
so then yeah then I<font color="#CCCCCC"> trained the full</font>

1751
01:16:31,130 --> 01:16:33,290
network<font color="#E5E5E5"> with cycle more equals</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> and</font>

1752
01:16:33,290 --> 01:16:35,180
<font color="#E5E5E5">it'll either it starts with the fitting</font>

1753
01:16:35,180 --> 01:16:38,480
or I run<font color="#E5E5E5"> out of time</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> let</font>

1754
01:16:38,480 --> 01:16:40,580
me show<font color="#CCCCCC"> you</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right so let's do this</font>

1755
01:16:40,580 --> 01:16:41,640
again

1756
01:16:41,640 --> 01:16:43,020
a totally<font color="#E5E5E5"> different data set so this</font>

1757
01:16:43,020 --> 01:16:45,510
morning I<font color="#E5E5E5"> noticed that</font><font color="#CCCCCC"> some of you on</font>

1758
01:16:45,510 --> 01:16:47,100
<font color="#E5E5E5">the forums were playing around with this</font>

1759
01:16:47,100 --> 01:16:49,860
playground<font color="#CCCCCC"> Kegel competition very</font>

1760
01:16:49,860 --> 01:16:53,180
similar called dog breed identification

1761
01:16:53,180 --> 01:16:56,490
<font color="#CCCCCC">so the dog breed</font><font color="#E5E5E5"> identification</font><font color="#CCCCCC"> cat will</font>

1762
01:16:56,490 --> 01:16:59,910
challenge is one where<font color="#E5E5E5"> you don't</font>

1763
01:16:59,910 --> 01:17:01,500
actually<font color="#CCCCCC"> have to decide which ones are</font>

1764
01:17:01,500 --> 01:17:02,760
cats<font color="#E5E5E5"> and which ones the dogs they're all</font>

1765
01:17:02,760 --> 01:17:05,190
<font color="#CCCCCC">dogs but</font><font color="#E5E5E5"> you have to decide what</font><font color="#CCCCCC"> kind of</font>

1766
01:17:05,190 --> 01:17:07,380
dog it<font color="#E5E5E5"> is but there are 120 different</font>

1767
01:17:07,380 --> 01:17:10,020
<font color="#E5E5E5">breeds of dogs</font><font color="#CCCCCC"> okay</font>

1768
01:17:10,020 --> 01:17:14,030
so you know<font color="#CCCCCC"> obviously this could</font><font color="#E5E5E5"> be like</font>

1769
01:17:14,030 --> 01:17:18,600
different<font color="#CCCCCC"> types of cells and pathology</font>

1770
01:17:18,600 --> 01:17:20,160
slides it could be<font color="#E5E5E5"> different kinds of</font>

1771
01:17:20,160 --> 01:17:23,600
cancers in CT scans it could be

1772
01:17:23,600 --> 01:17:25,830
different<font color="#E5E5E5"> kinds of icebergs and</font>

1773
01:17:25,830 --> 01:17:28,050
satellite images<font color="#E5E5E5"> whatever right as long</font>

1774
01:17:28,050 --> 01:17:29,460
<font color="#E5E5E5">as you've got some kind of labeled</font>

1775
01:17:29,460 --> 01:17:33,390
images so I want to show you what I<font color="#CCCCCC"> did</font>

1776
01:17:33,390 --> 01:17:34,640
this morning<font color="#E5E5E5"> so it took</font><font color="#CCCCCC"> me about an hour</font>

1777
01:17:34,640 --> 01:17:38,610
<font color="#E5E5E5">basically to go in to end from something</font>

1778
01:17:38,610 --> 01:17:42,150
<font color="#E5E5E5">I'd never</font><font color="#CCCCCC"> seen before so I downloaded</font>

1779
01:17:42,150 --> 01:17:43,770
the<font color="#E5E5E5"> data from</font><font color="#CCCCCC"> kaggle and I'll show</font><font color="#E5E5E5"> you</font>

1780
01:17:43,770 --> 01:17:45,420
how<font color="#E5E5E5"> to do that shortly but the short</font>

1781
01:17:45,420 --> 01:17:47,190
answer<font color="#CCCCCC"> is there's something</font><font color="#E5E5E5"> called</font><font color="#CCCCCC"> cable</font>

1782
01:17:47,190 --> 01:17:49,680
<font color="#E5E5E5">CLI which is a github project you can</font>

1783
01:17:49,680 --> 01:17:51,870
search for<font color="#CCCCCC"> and if</font><font color="#E5E5E5"> you read the docs to</font>

1784
01:17:51,870 --> 01:17:54,150
basically run<font color="#CCCCCC"> cagey download provide the</font>

1785
01:17:54,150 --> 01:17:55,680
competition name and it<font color="#E5E5E5"> will grab all</font>

1786
01:17:55,680 --> 01:17:57,690
<font color="#E5E5E5">the data for you to your crystal or</font>

1787
01:17:57,690 --> 01:18:01,380
Amazon or<font color="#CCCCCC"> whatever instance I put</font><font color="#E5E5E5"> in my</font>

1788
01:18:01,380 --> 01:18:07,530
data<font color="#CCCCCC"> folder and</font><font color="#E5E5E5"> I then went LS and I saw</font>

1789
01:18:07,530 --> 01:18:12,060
that<font color="#CCCCCC"> it's a little bit different to our</font>

1790
01:18:12,060 --> 01:18:14,880
previous data set it's<font color="#E5E5E5"> not that there's</font>

1791
01:18:14,880 --> 01:18:17,670
a<font color="#CCCCCC"> train folder which has</font><font color="#E5E5E5"> a separate</font>

1792
01:18:17,670 --> 01:18:20,130
folder<font color="#CCCCCC"> for</font><font color="#E5E5E5"> each kind of dog but instead</font>

1793
01:18:20,130 --> 01:18:22,680
<font color="#CCCCCC">of tonette there was a CSV file and the</font>

1794
01:18:22,680 --> 01:18:25,590
CSV file<font color="#CCCCCC"> I read it in with pandas so</font>

1795
01:18:25,590 --> 01:18:27,990
pandas is the thing we use in<font color="#CCCCCC"> python to</font>

1796
01:18:27,990 --> 01:18:30,210
do structured data analysis like csv

1797
01:18:30,210 --> 01:18:33,090
files<font color="#E5E5E5"> so he picked pandas we called pd</font>

1798
01:18:33,090 --> 01:18:36,030
that's pretty<font color="#E5E5E5"> much universal</font><font color="#CCCCCC"> PDR htsb</font>

1799
01:18:36,030 --> 01:18:38,700
<font color="#E5E5E5">reads in the</font><font color="#CCCCCC"> csv file we can</font><font color="#E5E5E5"> then take a</font>

1800
01:18:38,700 --> 01:18:39,840
look<font color="#CCCCCC"> at</font><font color="#E5E5E5"> it and you can see that</font>

1801
01:18:39,840 --> 01:18:41,220
<font color="#CCCCCC">basically it had like some kind of</font>

1802
01:18:41,220 --> 01:18:45,000
identifier and then<font color="#E5E5E5"> the debris right so</font>

1803
01:18:45,000 --> 01:18:46,980
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> like a different way this is the</font>

1804
01:18:46,980 --> 01:18:49,860
second main way that<font color="#E5E5E5"> people kind of give</font>

1805
01:18:49,860 --> 01:18:51,660
you image labels<font color="#E5E5E5"> one is to put</font><font color="#CCCCCC"> different</font>

1806
01:18:51,660 --> 01:18:53,160
images into different folders

1807
01:18:53,160 --> 01:18:55,349
<font color="#E5E5E5">the second is generally to give you as</font>

1808
01:18:55,349 --> 01:18:57,840
some kind of file like a CSV file<font color="#CCCCCC"> to</font>

1809
01:18:57,840 --> 01:18:59,820
tell you here's the<font color="#E5E5E5"> image name and</font>

1810
01:18:59,820 --> 01:19:05,369
here's the label<font color="#CCCCCC"> okay so what I then did</font>

1811
01:19:05,369 --> 01:19:08,159
was I<font color="#E5E5E5"> used pandas again to create a</font>

1812
01:19:08,159 --> 01:19:10,019
pivot table which basically groups it up

1813
01:19:10,019 --> 01:19:13,289
just<font color="#E5E5E5"> to see how</font><font color="#CCCCCC"> many of each</font><font color="#E5E5E5"> breed there</font>

1814
01:19:13,289 --> 01:19:15,719
were and I sorted them<font color="#E5E5E5"> and so I saw okay</font>

1815
01:19:15,719 --> 01:19:18,840
they've got like<font color="#E5E5E5"> about a hundred</font><font color="#CCCCCC"> some of</font>

1816
01:19:18,840 --> 01:19:21,449
the more common breeds<font color="#CCCCCC"> and some of the</font>

1817
01:19:21,449 --> 01:19:23,489
less<font color="#CCCCCC"> common breeds</font><font color="#E5E5E5"> they've got like 60</font>

1818
01:19:23,489 --> 01:19:27,030
or<font color="#CCCCCC"> so</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> altogether there</font><font color="#E5E5E5"> are 120 rows</font>

1819
01:19:27,030 --> 01:19:28,679
and I've been 120 different<font color="#E5E5E5"> breeds</font>

1820
01:19:28,679 --> 01:19:32,399
represented<font color="#E5E5E5"> okay so I'm going</font><font color="#CCCCCC"> to go</font>

1821
01:19:32,399 --> 01:19:35,879
through the steps<font color="#E5E5E5"> right so enable data</font>

1822
01:19:35,879 --> 01:19:37,889
augmentation so to<font color="#E5E5E5"> enable data</font>

1823
01:19:37,889 --> 01:19:39,329
augmentation when we call this

1824
01:19:39,329 --> 01:19:42,030
transforms from model you<font color="#E5E5E5"> just pass in</font>

1825
01:19:42,030 --> 01:19:44,219
and all<font color="#CCCCCC"> transformers</font><font color="#E5E5E5"> in this case I</font>

1826
01:19:44,219 --> 01:19:46,109
chose<font color="#CCCCCC"> side</font><font color="#E5E5E5"> on again these are pictures</font>

1827
01:19:46,109 --> 01:19:48,359
of dots<font color="#E5E5E5"> and stuff so</font><font color="#CCCCCC"> this side on photos</font>

1828
01:19:48,359 --> 01:19:53,039
<font color="#CCCCCC">I we're talking about maqsuum as more</font>

1829
01:19:53,039 --> 01:19:55,769
detail later<font color="#E5E5E5"> but</font><font color="#CCCCCC"> maximum basically says</font>

1830
01:19:55,769 --> 01:19:58,139
when you do the data augmentation we

1831
01:19:58,139 --> 01:20:01,769
like zoom<font color="#E5E5E5"> into</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> by up to one point one</font>

1832
01:20:01,769 --> 01:20:04,979
times<font color="#E5E5E5"> okay so but randomly between one</font>

1833
01:20:04,979 --> 01:20:06,749
the original image size and<font color="#E5E5E5"> one point</font>

1834
01:20:06,749 --> 01:20:08,999
one points<font color="#E5E5E5"> so it's not always cropping</font>

1835
01:20:08,999 --> 01:20:11,070
<font color="#E5E5E5">out in the middle or an edge but it</font>

1836
01:20:11,070 --> 01:20:12,389
could be cropping<font color="#CCCCCC"> out a</font><font color="#E5E5E5"> smaller part</font>

1837
01:20:12,389 --> 01:20:16,439
okay<font color="#CCCCCC"> so having</font><font color="#E5E5E5"> done that the key step</font>

1838
01:20:16,439 --> 01:20:18,769
now is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> graphically going from paths</font>

1839
01:20:18,769 --> 01:20:21,539
<font color="#E5E5E5">so previously we went from paths and</font>

1840
01:20:21,539 --> 01:20:23,820
<font color="#CCCCCC">that tells it that the</font><font color="#E5E5E5"> the names of the</font>

1841
01:20:23,820 --> 01:20:25,679
folders are the names of<font color="#E5E5E5"> the labels we</font>

1842
01:20:25,679 --> 01:20:29,609
go from<font color="#CCCCCC"> CSV and</font><font color="#E5E5E5"> we pass in the</font><font color="#CCCCCC"> CSV</font><font color="#E5E5E5"> file</font>

1843
01:20:29,609 --> 01:20:32,129
that<font color="#E5E5E5"> contains the letters so we're</font>

1844
01:20:32,129 --> 01:20:34,800
<font color="#CCCCCC">passing in the path that contains all of</font>

1845
01:20:34,800 --> 01:20:37,050
the data<font color="#CCCCCC"> the name</font><font color="#E5E5E5"> of the folder that</font>

1846
01:20:37,050 --> 01:20:40,139
<font color="#E5E5E5">contains the training data</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> CSV</font><font color="#CCCCCC"> that</font>

1847
01:20:40,139 --> 01:20:43,859
contains the labels<font color="#E5E5E5"> we need to also tell</font>

1848
01:20:43,859 --> 01:20:45,300
it where the test set is if you want to

1849
01:20:45,300 --> 01:20:47,099
submit<font color="#CCCCCC"> to cattle</font><font color="#E5E5E5"> later talk more about</font>

1850
01:20:47,099 --> 01:20:53,010
that<font color="#E5E5E5"> next</font><font color="#CCCCCC"> week now this time the</font>

1851
01:20:53,010 --> 01:20:55,229
<font color="#E5E5E5">previous data set we had had actually</font>

1852
01:20:55,229 --> 01:20:57,449
separated a validation set out<font color="#E5E5E5"> into a</font>

1853
01:20:57,449 --> 01:20:59,789
separate<font color="#E5E5E5"> folder right but in this case</font>

1854
01:20:59,789 --> 01:21:02,459
you'll<font color="#CCCCCC"> see that there is not a separate</font>

1855
01:21:02,459 --> 01:21:05,999
<font color="#E5E5E5">folder called validation right so we</font>

1856
01:21:05,999 --> 01:21:07,739
want<font color="#E5E5E5"> to be able to track how good our</font>

1857
01:21:07,739 --> 01:21:09,130
performance is low

1858
01:21:09,130 --> 01:21:10,570
so we're going<font color="#E5E5E5"> to have to separate some</font>

1859
01:21:10,570 --> 01:21:12,490
of<font color="#E5E5E5"> the images out to put it into a</font>

1860
01:21:12,490 --> 01:21:15,310
validation<font color="#E5E5E5"> set</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so I do that at</font>

1861
01:21:15,310 --> 01:21:18,340
random and so up here you<font color="#CCCCCC"> can see how</font><font color="#E5E5E5"> it</font>

1862
01:21:18,340 --> 01:21:22,960
<font color="#CCCCCC">basically opened up the CSV file turned</font>

1863
01:21:22,960 --> 01:21:25,840
it into a list<font color="#E5E5E5"> of rows and then taken</font>

1864
01:21:25,840 --> 01:21:28,180
the length of that<font color="#E5E5E5"> minus one because</font>

1865
01:21:28,180 --> 01:21:30,790
there's a header at the top right and so

1866
01:21:30,790 --> 01:21:33,250
that's the number<font color="#CCCCCC"> of rows in</font><font color="#E5E5E5"> the CSV</font>

1867
01:21:33,250 --> 01:21:35,320
file which must be<font color="#E5E5E5"> the number of images</font>

1868
01:21:35,320 --> 01:21:37,900
<font color="#CCCCCC">that we have</font><font color="#E5E5E5"> and then this is</font><font color="#CCCCCC"> a fast</font><font color="#E5E5E5"> AI</font>

1869
01:21:37,900 --> 01:21:40,840
thing get<font color="#E5E5E5"> cross-validation indexes now</font>

1870
01:21:40,840 --> 01:21:42,310
<font color="#E5E5E5">we'll talk about cross-validation later</font>

1871
01:21:42,310 --> 01:21:44,590
but basically<font color="#E5E5E5"> if you call this and pass</font>

1872
01:21:44,590 --> 01:21:48,090
in a<font color="#E5E5E5"> number it's</font><font color="#CCCCCC"> going to return to you</font>

1873
01:21:48,090 --> 01:21:52,480
<font color="#CCCCCC">by default</font><font color="#E5E5E5"> a random</font><font color="#CCCCCC"> twenty percent of</font>

1874
01:21:52,480 --> 01:21:54,790
the rows<font color="#E5E5E5"> who uses your validation set</font>

1875
01:21:54,790 --> 01:21:57,010
<font color="#E5E5E5">and you can</font><font color="#CCCCCC"> pass in parameters</font><font color="#E5E5E5"> to get</font>

1876
01:21:57,010 --> 01:21:58,930
<font color="#E5E5E5">different amounts right so this</font><font color="#CCCCCC"> is now</font>

1877
01:21:58,930 --> 01:22:00,430
<font color="#E5E5E5">going to grab</font><font color="#CCCCCC"> twenty percent</font><font color="#E5E5E5"> of the data</font>

1878
01:22:00,430 --> 01:22:03,610
and say<font color="#E5E5E5"> all right this is the this is</font>

1879
01:22:03,610 --> 01:22:05,890
<font color="#CCCCCC">the</font><font color="#E5E5E5"> indexes the numbers of the files</font>

1880
01:22:05,890 --> 01:22:07,690
which we're going<font color="#E5E5E5"> to use as a validation</font>

1881
01:22:07,690 --> 01:22:08,080
set

1882
01:22:08,080 --> 01:22:12,790
<font color="#E5E5E5">okay so now that</font><font color="#CCCCCC"> we've got that in fact</font>

1883
01:22:12,790 --> 01:22:14,530
<font color="#E5E5E5">let's kind of run this so you can see</font>

1884
01:22:14,530 --> 01:22:19,980
what<font color="#CCCCCC"> that looks like so well</font><font color="#E5E5E5"> indexes is</font>

1885
01:22:19,980 --> 01:22:23,590
just a big bunch<font color="#E5E5E5"> of numbers okay and so</font>

1886
01:22:23,590 --> 01:22:26,179
an is

1887
01:22:26,179 --> 01:22:31,909
10,000 right and so we have about<font color="#CCCCCC"> twenty</font>

1888
01:22:31,909 --> 01:22:33,800
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> of those is going</font><font color="#CCCCCC"> to be in</font><font color="#E5E5E5"> a</font>

1889
01:22:33,800 --> 01:22:34,810
validation set

1890
01:22:34,810 --> 01:22:44,929
so when we call from CSV<font color="#CCCCCC"> we can pass in</font>

1891
01:22:44,929 --> 01:22:46,820
a parameter which is<font color="#CCCCCC"> talent</font><font color="#E5E5E5"> which</font>

1892
01:22:46,820 --> 01:22:48,890
<font color="#CCCCCC">indexes to treat</font><font color="#E5E5E5"> us a validation</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> and</font>

1893
01:22:48,890 --> 01:22:52,850
so that's passed<font color="#E5E5E5"> in those indexes</font><font color="#CCCCCC"> one</font>

1894
01:22:52,850 --> 01:22:54,739
thing that's a little<font color="#E5E5E5"> bit tricky</font><font color="#CCCCCC"> here is</font>

1895
01:22:54,739 --> 01:23:03,590
that the file names actually<font color="#CCCCCC"> have I</font>

1896
01:23:03,590 --> 01:23:05,960
checked they actually have a dot jpg<font color="#E5E5E5"> on</font>

1897
01:23:05,960 --> 01:23:07,909
the end and these obviously<font color="#CCCCCC"> don't have a</font>

1898
01:23:07,909 --> 01:23:11,480
dot jpg<font color="#CCCCCC"> so you can pass in when you call</font>

1899
01:23:11,480 --> 01:23:13,850
from CSV you can pass in a suffix<font color="#CCCCCC"> it</font>

1900
01:23:13,850 --> 01:23:15,770
says that the labels<font color="#CCCCCC"> don't actually</font>

1901
01:23:15,770 --> 01:23:17,390
contain<font color="#CCCCCC"> the full</font><font color="#E5E5E5"> file names you need to</font>

1902
01:23:17,390 --> 01:23:22,820
add this<font color="#CCCCCC"> to them</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so that's</font>

1903
01:23:22,820 --> 01:23:24,710
<font color="#E5E5E5">basically all I need to do to set up my</font>

1904
01:23:24,710 --> 01:23:28,429
data<font color="#CCCCCC"> and as a lot</font><font color="#E5E5E5"> of Europe</font><font color="#CCCCCC"> noticed</font>

1905
01:23:28,429 --> 01:23:31,820
during<font color="#CCCCCC"> the week inside that data object</font>

1906
01:23:31,820 --> 01:23:33,890
you can actually<font color="#E5E5E5"> get access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the data</font>

1907
01:23:33,890 --> 01:23:35,690
set like what the training<font color="#E5E5E5"> data set by</font>

1908
01:23:35,690 --> 01:23:38,929
same train yes and<font color="#E5E5E5"> inside train des is a</font>

1909
01:23:38,929 --> 01:23:41,060
whole bunch of<font color="#E5E5E5"> things including the file</font>

1910
01:23:41,060 --> 01:23:41,510
names

1911
01:23:41,510 --> 01:23:43,580
<font color="#E5E5E5">okay so train desktop file names</font>

1912
01:23:43,580 --> 01:23:45,140
contains all<font color="#CCCCCC"> of the file names</font><font color="#E5E5E5"> of</font>

1913
01:23:45,140 --> 01:23:47,000
everything<font color="#CCCCCC"> in the training set</font><font color="#E5E5E5"> and so</font>

1914
01:23:47,000 --> 01:23:48,800
here's like one file name

1915
01:23:48,800 --> 01:23:50,630
<font color="#CCCCCC">okay so here's an example</font><font color="#E5E5E5"> of one file</font>

1916
01:23:50,630 --> 01:23:54,140
<font color="#E5E5E5">name so I can now go ahead and</font><font color="#CCCCCC"> open that</font>

1917
01:23:54,140 --> 01:23:56,690
file and take<font color="#E5E5E5"> a look at it that's the</font>

1918
01:23:56,690 --> 01:23:58,040
next<font color="#E5E5E5"> thing I did was</font><font color="#CCCCCC"> to try and</font>

1919
01:23:58,040 --> 01:23:59,780
understand<font color="#E5E5E5"> what my file my</font><font color="#CCCCCC"> dataset looks</font>

1920
01:23:59,780 --> 01:24:02,600
like and it found an adorable<font color="#E5E5E5"> puppy so</font>

1921
01:24:02,600 --> 01:24:03,440
that was very<font color="#E5E5E5"> nice</font>

1922
01:24:03,440 --> 01:24:06,380
so feeling good about this<font color="#E5E5E5"> I also want</font>

1923
01:24:06,380 --> 01:24:08,150
to know like how big<font color="#CCCCCC"> of these files</font>

1924
01:24:08,150 --> 01:24:09,890
right like how big are the images

1925
01:24:09,890 --> 01:24:12,290
because<font color="#E5E5E5"> that's a key issue if they're</font>

1926
01:24:12,290 --> 01:24:13,909
huge<font color="#E5E5E5"> and then I have to think really</font>

1927
01:24:13,909 --> 01:24:15,560
<font color="#E5E5E5">carefully about how to deal with huge</font>

1928
01:24:15,560 --> 01:24:17,719
images that's really challenging<font color="#CCCCCC"> if</font>

1929
01:24:17,719 --> 01:24:19,489
they're tiny<font color="#E5E5E5"> well that's also</font>

1930
01:24:19,489 --> 01:24:22,580
challenging<font color="#E5E5E5"> most of</font><font color="#CCCCCC"> imagenet models are</font>

1931
01:24:22,580 --> 01:24:25,969
trained on<font color="#CCCCCC"> either 224 by 224 or 299 by</font>

1932
01:24:25,969 --> 01:24:28,909
299 images so anytime you<font color="#E5E5E5"> have images in</font>

1933
01:24:28,909 --> 01:24:31,370
<font color="#CCCCCC">that kind of range that's that's really</font>

1934
01:24:31,370 --> 01:24:32,540
hopeful<font color="#CCCCCC"> you're probably</font><font color="#E5E5E5"> not going to</font>

1935
01:24:32,540 --> 01:24:34,489
have to do too much different in this

1936
01:24:34,489 --> 01:24:36,350
<font color="#CCCCCC">case the first</font><font color="#E5E5E5"> image I looked at was</font>

1937
01:24:36,350 --> 01:24:38,369
<font color="#CCCCCC">about the right size so I'm thinking of</font>

1938
01:24:38,369 --> 01:24:41,280
<font color="#E5E5E5">pretty hopeful so what I</font><font color="#CCCCCC"> did then is I</font>

1939
01:24:41,280 --> 01:24:42,989
created a dictionary comprehension now

1940
01:24:42,989 --> 01:24:44,219
if you don't<font color="#E5E5E5"> know about list</font>

1941
01:24:44,219 --> 01:24:45,599
comprehensions and dictionary

1942
01:24:45,599 --> 01:24:48,840
comprehensions<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Python go study them</font>

1943
01:24:48,840 --> 01:24:51,179
<font color="#CCCCCC">they're the most useful thing super</font>

1944
01:24:51,179 --> 01:24:54,000
handy<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see the basic</font><font color="#CCCCCC"> idea here</font><font color="#E5E5E5"> is</font>

1945
01:24:54,000 --> 01:24:55,260
that are going<font color="#E5E5E5"> through</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> the files</font>

1946
01:24:55,260 --> 01:24:57,510
and then<font color="#E5E5E5"> putting a dictionary that map's</font>

1947
01:24:57,510 --> 01:25:01,770
<font color="#E5E5E5">the name of the file to</font><font color="#CCCCCC"> the size of that</font>

1948
01:25:01,770 --> 01:25:05,880
file<font color="#CCCCCC"> again this is a handy little</font><font color="#E5E5E5"> Python</font>

1949
01:25:05,880 --> 01:25:07,500
feature which I'll let<font color="#E5E5E5"> you think learn</font>

1950
01:25:07,500 --> 01:25:08,639
about during the week if you<font color="#E5E5E5"> don't know</font>

1951
01:25:08,639 --> 01:25:10,650
about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> which is zip and using a</font>

1952
01:25:10,650 --> 01:25:12,719
<font color="#E5E5E5">special star notation is never to take</font>

1953
01:25:12,719 --> 01:25:15,260
this dictionary<font color="#CCCCCC"> and turn</font><font color="#E5E5E5"> it into the</font>

1954
01:25:15,260 --> 01:25:19,920
rows and the columns<font color="#E5E5E5"> and so I can now</font>

1955
01:25:19,920 --> 01:25:22,080
turn those into<font color="#CCCCCC"> num pay arrays and like</font>

1956
01:25:22,080 --> 01:25:26,219
<font color="#E5E5E5">okay here are the first five</font><font color="#CCCCCC"> rows sizes</font>

1957
01:25:26,219 --> 01:25:28,469
for each of<font color="#E5E5E5"> my images and then</font>

1958
01:25:28,469 --> 01:25:30,330
matplotlib is something you<font color="#E5E5E5"> want to be</font>

1959
01:25:30,330 --> 01:25:32,130
<font color="#CCCCCC">very familiar with</font><font color="#E5E5E5"> if you do any</font><font color="#CCCCCC"> kind of</font>

1960
01:25:32,130 --> 01:25:33,480
data science or machine<font color="#E5E5E5"> learning in</font>

1961
01:25:33,480 --> 01:25:36,239
<font color="#E5E5E5">python matplotlib</font><font color="#CCCCCC"> we always refer to</font><font color="#E5E5E5"> as</font>

1962
01:25:36,239 --> 01:25:39,780
PLT<font color="#E5E5E5"> as if this is a histogram and so I</font>

1963
01:25:39,780 --> 01:25:43,440
<font color="#E5E5E5">got a histogram of the how high how many</font>

1964
01:25:43,440 --> 01:25:45,420
rows<font color="#CCCCCC"> there are</font><font color="#E5E5E5"> in each image so you can</font>

1965
01:25:45,420 --> 01:25:46,739
see here I'm kind of getting a<font color="#CCCCCC"> sense</font>

1966
01:25:46,739 --> 01:25:49,020
<font color="#E5E5E5">before I start doing any modeling I kind</font>

1967
01:25:49,020 --> 01:25:50,190
of need to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> what I'm modeling with</font>

1968
01:25:50,190 --> 01:25:52,170
<font color="#E5E5E5">and I can see some</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> images</font><font color="#CCCCCC"> are</font>

1969
01:25:52,170 --> 01:25:54,690
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to be like 2500 3000 pixels high</font>

1970
01:25:54,690 --> 01:25:57,560
<font color="#E5E5E5">but most of them seem to be around 500</font>

1971
01:25:57,560 --> 01:26:00,270
<font color="#E5E5E5">so given it so few of them were bigger</font>

1972
01:26:00,270 --> 01:26:03,409
<font color="#E5E5E5">than a thousand I use standard numpy</font>

1973
01:26:03,409 --> 01:26:05,940
slicing to just grab those<font color="#E5E5E5"> at a smaller</font>

1974
01:26:05,940 --> 01:26:08,460
<font color="#E5E5E5">than a thousand and histogram that just</font>

1975
01:26:08,460 --> 01:26:10,409
to zoom<font color="#E5E5E5"> in a little bit and I</font><font color="#CCCCCC"> can see</font>

1976
01:26:10,409 --> 01:26:12,119
here all right it<font color="#CCCCCC"> looks like yet</font><font color="#E5E5E5"> the</font>

1977
01:26:12,119 --> 01:26:15,090
vast majority<font color="#E5E5E5"> are around 500 and so this</font>

1978
01:26:15,090 --> 01:26:17,969
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> also prints out</font><font color="#E5E5E5"> the histogram</font>

1979
01:26:17,969 --> 01:26:19,320
so I can actually go<font color="#CCCCCC"> through and I can</font>

1980
01:26:19,320 --> 01:26:21,090
<font color="#CCCCCC">see here for</font><font color="#E5E5E5"> four thousand five hundred</font>

1981
01:26:21,090 --> 01:26:23,849
of them are<font color="#E5E5E5"> about 450</font><font color="#CCCCCC"> okay so I get</font>

1982
01:26:23,849 --> 01:26:28,440
about<font color="#E5E5E5"> that seems about</font><font color="#CCCCCC"> anywhere so</font>

1983
01:26:28,440 --> 01:26:32,219
<font color="#CCCCCC">generally how</font><font color="#E5E5E5"> many images should we get</font>

1984
01:26:32,219 --> 01:26:36,800
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> validation set is</font><font color="#E5E5E5"> always a</font><font color="#CCCCCC"> 20%</font>

1985
01:26:38,679 --> 01:26:43,690
so the size of<font color="#E5E5E5"> the validation set like</font>

1986
01:26:44,409 --> 01:26:48,019
using<font color="#E5E5E5"> 20%</font><font color="#CCCCCC"> is fine unless you</font><font color="#E5E5E5"> kind of</font>

1987
01:26:48,019 --> 01:26:49,849
feeling<font color="#CCCCCC"> like</font><font color="#E5E5E5"> my data is my data sets</font>

1988
01:26:49,849 --> 01:26:53,530
really small I'm not sure<font color="#CCCCCC"> that's enough</font>

1989
01:26:53,530 --> 01:26:57,949
<font color="#CCCCCC">you know like if you've got</font><font color="#E5E5E5"> basically</font>

1990
01:26:57,949 --> 01:26:59,539
think<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it this way</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you train</font><font color="#CCCCCC"> like</font>

1991
01:26:59,539 --> 01:27:01,489
the same model multiple times and<font color="#E5E5E5"> you're</font>

1992
01:27:01,489 --> 01:27:02,959
getting<font color="#E5E5E5"> very different validation set</font>

1993
01:27:02,959 --> 01:27:04,849
results and your<font color="#E5E5E5"> validation sets kind of</font>

1994
01:27:04,849 --> 01:27:08,409
<font color="#CCCCCC">small but smaller than</font><font color="#E5E5E5"> a thousand or</font><font color="#CCCCCC"> so</font>

1995
01:27:08,409 --> 01:27:10,369
<font color="#E5E5E5">then it's going to be quite hard to</font>

1996
01:27:10,369 --> 01:27:13,070
interpret<font color="#CCCCCC"> how well you're doing now this</font>

1997
01:27:13,070 --> 01:27:14,959
is particularly true<font color="#CCCCCC"> like if you're like</font>

1998
01:27:14,959 --> 01:27:16,610
if<font color="#E5E5E5"> you care about the third decimal</font>

1999
01:27:16,610 --> 01:27:19,670
place of accuracy<font color="#CCCCCC"> and you've got like a</font>

2000
01:27:19,670 --> 01:27:21,349
thousand things in<font color="#E5E5E5"> your validation set</font>

2001
01:27:21,349 --> 01:27:22,849
then<font color="#E5E5E5"> you</font><font color="#CCCCCC"> bring</font><font color="#E5E5E5"> about like a single image</font>

2002
01:27:22,849 --> 01:27:25,489
changing class<font color="#E5E5E5"> is changing you know it's</font>

2003
01:27:25,489 --> 01:27:28,519
what you're looking at<font color="#CCCCCC"> so it's it really</font>

2004
01:27:28,519 --> 01:27:31,400
<font color="#CCCCCC">depends on</font><font color="#E5E5E5"> my cow accurate you have much</font>

2005
01:27:31,400 --> 01:27:35,389
difference you care about<font color="#CCCCCC"> I would say in</font>

2006
01:27:35,389 --> 01:27:37,969
general<font color="#E5E5E5"> like at the point where you care</font>

2007
01:27:37,969 --> 01:27:39,019
about<font color="#CCCCCC"> difference between like out of</font>

2008
01:27:39,019 --> 01:27:41,090
<font color="#E5E5E5">0.01 and 0.02 like the second decimal</font>

2009
01:27:41,090 --> 01:27:44,510
place<font color="#E5E5E5"> you want that to</font><font color="#CCCCCC"> represent like</font><font color="#E5E5E5"> 10</font>

2010
01:27:44,510 --> 01:27:48,229
or<font color="#E5E5E5"> 20</font><font color="#CCCCCC"> roads you know</font><font color="#E5E5E5"> like changing</font><font color="#CCCCCC"> the</font>

2011
01:27:48,229 --> 01:27:51,619
class of<font color="#E5E5E5"> that 10</font><font color="#CCCCCC"> or 20 rows then that's</font>

2012
01:27:51,619 --> 01:27:53,440
<font color="#CCCCCC">something</font><font color="#E5E5E5"> you can be pretty confident of</font>

2013
01:27:53,440 --> 01:27:57,739
so like<font color="#E5E5E5"> most of the time you know give</font>

2014
01:27:57,739 --> 01:28:00,229
them the<font color="#E5E5E5"> data sizes we normally have</font><font color="#CCCCCC"> 20</font>

2015
01:28:00,229 --> 01:28:04,099
<font color="#CCCCCC">percent seems to work fine but yeah it's</font>

2016
01:28:04,099 --> 01:28:07,209
it's it's<font color="#E5E5E5"> kind of a it depends a lot on</font>

2017
01:28:07,209 --> 01:28:09,260
specifically<font color="#E5E5E5"> what you're doing and what</font>

2018
01:28:09,260 --> 01:28:12,979
you care<font color="#CCCCCC"> about and it's</font><font color="#E5E5E5"> not it's not a</font>

2019
01:28:12,979 --> 01:28:15,019
deep<font color="#CCCCCC"> learning specific question</font><font color="#E5E5E5"> either</font>

2020
01:28:15,019 --> 01:28:17,059
<font color="#CCCCCC">you know so those who are interested in</font>

2021
01:28:17,059 --> 01:28:17,989
this<font color="#E5E5E5"> kind of thing we're going to look</font>

2022
01:28:17,989 --> 01:28:19,639
<font color="#E5E5E5">into it a lot more detail</font><font color="#CCCCCC"> in our machine</font>

2023
01:28:19,639 --> 01:28:23,209
<font color="#CCCCCC">learning</font><font color="#E5E5E5"> course which will</font><font color="#CCCCCC"> also be</font>

2024
01:28:23,209 --> 01:28:28,459
available online<font color="#CCCCCC"> ok so I did the</font><font color="#E5E5E5"> same</font>

2025
01:28:28,459 --> 01:28:29,869
<font color="#CCCCCC">thing for the columns just</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure</font>

2026
01:28:29,869 --> 01:28:31,699
that<font color="#E5E5E5"> these aren't like super wide and</font>

2027
01:28:31,699 --> 01:28:33,409
I've got similar results and<font color="#CCCCCC"> checked</font><font color="#E5E5E5"> in</font>

2028
01:28:33,409 --> 01:28:35,030
<font color="#E5E5E5">and again found they're kind of like</font><font color="#CCCCCC"> 4</font>

2029
01:28:35,030 --> 01:28:37,630
<font color="#E5E5E5">or 500 seem to be about the</font><font color="#CCCCCC"> average size</font>

2030
01:28:37,630 --> 01:28:39,829
so based on all<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that I kind of</font>

2031
01:28:39,829 --> 01:28:41,239
thought<font color="#CCCCCC"> ok this</font><font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like a pretty</font>

2032
01:28:41,239 --> 01:28:43,280
normal<font color="#E5E5E5"> kind of image data set that</font><font color="#CCCCCC"> I can</font>

2033
01:28:43,280 --> 01:28:44,929
probably<font color="#E5E5E5"> use pretty normal kinds of</font>

2034
01:28:44,929 --> 01:28:46,969
models on I was also<font color="#E5E5E5"> particularly</font>

2035
01:28:46,969 --> 01:28:48,320
encouraged to see that<font color="#CCCCCC"> when I looked</font><font color="#E5E5E5"> at</font>

2036
01:28:48,320 --> 01:28:48,630
the

2037
01:28:48,630 --> 01:28:51,060
that the<font color="#E5E5E5"> dog like takes up most of the</font>

2038
01:28:51,060 --> 01:28:53,040
frame<font color="#E5E5E5"> right so I'm not too worried about</font>

2039
01:28:53,040 --> 01:28:56,220
<font color="#E5E5E5">like cropping problems you know</font><font color="#CCCCCC"> if the</font>

2040
01:28:56,220 --> 01:28:57,840
if the<font color="#CCCCCC"> dog was</font><font color="#E5E5E5"> just like a tiny little</font>

2041
01:28:57,840 --> 01:29:00,480
<font color="#E5E5E5">piece of one little corner</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'd be</font>

2042
01:29:00,480 --> 01:29:02,910
thinking about<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> you know</font>

2043
01:29:02,910 --> 01:29:04,710
maybe zooming in a lot more<font color="#CCCCCC"> or</font><font color="#E5E5E5"> something</font>

2044
01:29:04,710 --> 01:29:07,230
like a medical imaging<font color="#E5E5E5"> that happens a</font>

2045
01:29:07,230 --> 01:29:09,150
lot like often the tumor or<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cell</font>

2046
01:29:09,150 --> 01:29:11,130
whatever is like one tiny piece and

2047
01:29:11,130 --> 01:29:14,070
there's much<font color="#E5E5E5"> more complex so yeah based</font>

2048
01:29:14,070 --> 01:29:15,780
on all<font color="#CCCCCC"> that and</font><font color="#E5E5E5"> this morning I kind of</font>

2049
01:29:15,780 --> 01:29:18,390
thought<font color="#CCCCCC"> like okay this</font><font color="#E5E5E5"> looks pretty</font>

2050
01:29:18,390 --> 01:29:24,630
standard<font color="#E5E5E5"> so I I went ahead and created a</font>

2051
01:29:24,630 --> 01:29:26,190
little<font color="#E5E5E5"> function called get data that</font>

2052
01:29:26,190 --> 01:29:28,140
<font color="#E5E5E5">basically had my normal two lines of</font>

2053
01:29:28,140 --> 01:29:31,890
<font color="#E5E5E5">code in it</font><font color="#CCCCCC"> but I made it so I could</font>

2054
01:29:31,890 --> 01:29:35,520
<font color="#CCCCCC">passed in a size and a batch size the</font>

2055
01:29:35,520 --> 01:29:37,350
reason<font color="#E5E5E5"> for this is that when I start</font>

2056
01:29:37,350 --> 01:29:38,820
<font color="#E5E5E5">working with new data set I want</font>

2057
01:29:38,820 --> 01:29:41,010
<font color="#E5E5E5">everything to go super fast</font><font color="#CCCCCC"> and so if I</font>

2058
01:29:41,010 --> 01:29:43,350
use small images it's going to go<font color="#CCCCCC"> super</font>

2059
01:29:43,350 --> 01:29:46,380
fast<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> actually started out with size</font>

2060
01:29:46,380 --> 01:29:49,350
equals 64 just to create some super

2061
01:29:49,350 --> 01:29:51,390
small images that just<font color="#CCCCCC"> go like a second</font>

2062
01:29:51,390 --> 01:29:54,840
to run through and see how it later<font color="#E5E5E5"> on I</font>

2063
01:29:54,840 --> 01:29:57,420
started<font color="#CCCCCC"> using some big images and some</font>

2064
01:29:57,420 --> 01:29:59,310
and<font color="#CCCCCC"> some also</font><font color="#E5E5E5"> some bigger architectures</font>

2065
01:29:59,310 --> 01:30:01,140
<font color="#E5E5E5">at which point I started running out</font><font color="#CCCCCC"> of</font>

2066
01:30:01,140 --> 01:30:02,970
GPU memory<font color="#E5E5E5"> so I started getting</font><font color="#CCCCCC"> these</font>

2067
01:30:02,970 --> 01:30:05,910
errors saying<font color="#CCCCCC"> CUDA out of memory</font><font color="#E5E5E5"> error</font>

2068
01:30:05,910 --> 01:30:08,220
<font color="#CCCCCC">when you get a</font><font color="#E5E5E5"> CUDA out of memory error</font>

2069
01:30:08,220 --> 01:30:10,110
<font color="#E5E5E5">the first thing you need to do is to go</font>

2070
01:30:10,110 --> 01:30:13,770
<font color="#E5E5E5">kernel restart once you get a code</font><font color="#CCCCCC"> an</font>

2071
01:30:13,770 --> 01:30:15,450
<font color="#E5E5E5">out of</font><font color="#CCCCCC"> memory error on your</font><font color="#E5E5E5"> GPU you</font>

2072
01:30:15,450 --> 01:30:17,130
can't really recover from it right

2073
01:30:17,130 --> 01:30:18,780
<font color="#E5E5E5">doesn't matter what you do you know you</font>

2074
01:30:18,780 --> 01:30:22,080
have to go restart<font color="#CCCCCC"> and once I've</font>

2075
01:30:22,080 --> 01:30:24,120
restarted<font color="#CCCCCC"> I then just changed my batch</font>

2076
01:30:24,120 --> 01:30:26,430
size to something<font color="#CCCCCC"> smaller so when you</font>

2077
01:30:26,430 --> 01:30:30,780
call create your data object<font color="#CCCCCC"> you can</font>

2078
01:30:30,780 --> 01:30:34,800
pass in a batch size parameter okay<font color="#CCCCCC"> and</font>

2079
01:30:34,800 --> 01:30:37,800
like<font color="#E5E5E5"> i</font><font color="#CCCCCC"> normally use 64 until i hit</font>

2080
01:30:37,800 --> 01:30:39,240
something that<font color="#E5E5E5"> says out</font><font color="#CCCCCC"> of memory</font><font color="#E5E5E5"> and</font>

2081
01:30:39,240 --> 01:30:40,980
<font color="#E5E5E5">then</font><font color="#CCCCCC"> i'll just</font><font color="#E5E5E5"> have it and if i still</font>

2082
01:30:40,980 --> 01:30:42,390
<font color="#E5E5E5">get out of memory</font><font color="#CCCCCC"> I was hobbit again</font>

2083
01:30:42,390 --> 01:30:45,930
<font color="#E5E5E5">okay so that's where I created this to</font>

2084
01:30:45,930 --> 01:30:47,910
allow me<font color="#E5E5E5"> to like</font><font color="#CCCCCC"> start making my size as</font>

2085
01:30:47,910 --> 01:30:50,310
bigger<font color="#E5E5E5"> as I looked into it more and you</font>

2086
01:30:50,310 --> 01:30:51,450
know<font color="#E5E5E5"> as I started running out of memory</font>

2087
01:30:51,450 --> 01:30:55,290
to decrease<font color="#CCCCCC"> my</font><font color="#E5E5E5"> batch size so at this</font>

2088
01:30:55,290 --> 01:30:57,810
point<font color="#E5E5E5"> you know I went</font><font color="#CCCCCC"> through this a</font>

2089
01:30:57,810 --> 01:30:59,400
<font color="#CCCCCC">couple</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> iterations but</font><font color="#E5E5E5"> I basically</font>

2090
01:30:59,400 --> 01:31:01,350
found everything<font color="#E5E5E5"> was working</font><font color="#CCCCCC"> fine so</font>

2091
01:31:01,350 --> 01:31:02,320
<font color="#CCCCCC">once</font><font color="#E5E5E5"> it's working fine</font>

2092
01:31:02,320 --> 01:31:07,900
set size 2<font color="#CCCCCC"> to 24 and I created my you</font>

2093
01:31:07,900 --> 01:31:10,000
know<font color="#CCCCCC"> pre-compute equals true first</font><font color="#E5E5E5"> time</font>

2094
01:31:10,000 --> 01:31:11,680
I did<font color="#CCCCCC"> that it</font><font color="#E5E5E5"> took a minute to create</font>

2095
01:31:11,680 --> 01:31:13,810
the<font color="#CCCCCC"> precomputed activations</font><font color="#E5E5E5"> and then it</font>

2096
01:31:13,810 --> 01:31:15,700
ran through<font color="#E5E5E5"> this in about</font><font color="#CCCCCC"> 4 or 5</font><font color="#E5E5E5"> seconds</font>

2097
01:31:15,700 --> 01:31:17,230
and you can<font color="#E5E5E5"> see I was getting</font>

2098
01:31:17,230 --> 01:31:18,460
<font color="#CCCCCC">eighty-three percent</font><font color="#E5E5E5"> accuracy</font>

2099
01:31:18,460 --> 01:31:21,670
now remember accuracy means it's it's

2100
01:31:21,670 --> 01:31:24,070
exactly<font color="#E5E5E5"> right and</font><font color="#CCCCCC"> so it's predicting out</font>

2101
01:31:24,070 --> 01:31:26,170
of a hundred<font color="#CCCCCC"> and</font><font color="#E5E5E5"> twenty categories it's</font>

2102
01:31:26,170 --> 01:31:27,820
predicting exactly<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> when you see</font>

2103
01:31:27,820 --> 01:31:30,850
something with two<font color="#E5E5E5"> classes is you</font><font color="#CCCCCC"> know</font>

2104
01:31:30,850 --> 01:31:33,490
<font color="#CCCCCC">80%</font><font color="#E5E5E5"> accurate versus something with 120</font>

2105
01:31:33,490 --> 01:31:36,010
classes is<font color="#CCCCCC"> 80% accurate</font><font color="#E5E5E5"> they're very</font>

2106
01:31:36,010 --> 01:31:39,130
different levels<font color="#CCCCCC"> you know so when I saw</font>

2107
01:31:39,130 --> 01:31:41,320
<font color="#CCCCCC">like eighty-three percent</font><font color="#E5E5E5"> accuracy with</font>

2108
01:31:41,320 --> 01:31:43,930
just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> pre computed classify and</font><font color="#CCCCCC"> OData</font>

2109
01:31:43,930 --> 01:31:45,460
augmentation though I'm freezing

2110
01:31:45,460 --> 01:31:46,690
<font color="#E5E5E5">anything else</font>

2111
01:31:46,690 --> 01:31:49,780
across 120 classes of the<font color="#E5E5E5"> oh this looks</font>

2112
01:31:49,780 --> 01:31:54,100
<font color="#E5E5E5">good right so um then I</font><font color="#CCCCCC"> just kind of</font>

2113
01:31:54,100 --> 01:31:56,380
kept going<font color="#E5E5E5"> throughout at all standard</font>

2114
01:31:56,380 --> 01:32:01,060
process right<font color="#CCCCCC"> so then I turn precompute</font>

2115
01:32:01,060 --> 01:32:06,670
off<font color="#CCCCCC"> okay and cycle length equals one and</font>

2116
01:32:06,670 --> 01:32:10,090
I started<font color="#E5E5E5"> doing a</font><font color="#CCCCCC"> few more</font><font color="#E5E5E5"> cycles few</font>

2117
01:32:10,090 --> 01:32:15,400
more epochs so remember an epoch is one

2118
01:32:15,400 --> 01:32:19,500
pass<font color="#CCCCCC"> through the data and a cycle is</font>

2119
01:32:19,500 --> 01:32:22,480
however<font color="#E5E5E5"> many epochs</font><font color="#CCCCCC"> you said is in a</font>

2120
01:32:22,480 --> 01:32:24,910
cycle it's one<font color="#E5E5E5"> it's the learning rate</font>

2121
01:32:24,910 --> 01:32:26,530
going<font color="#E5E5E5"> from the top that you asked for</font>

2122
01:32:26,530 --> 01:32:29,290
<font color="#CCCCCC">all the</font><font color="#E5E5E5"> way down</font><font color="#CCCCCC"> so since here cycle</font>

2123
01:32:29,290 --> 01:32:31,990
length equals one a cycle in an epoch<font color="#E5E5E5"> at</font>

2124
01:32:31,990 --> 01:32:35,670
the same<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so I did I tried a few</font>

2125
01:32:35,670 --> 01:32:39,490
epochs<font color="#E5E5E5"> I did actually do the learning</font>

2126
01:32:39,490 --> 01:32:41,140
rate finder<font color="#E5E5E5"> and I found one</font><font color="#CCCCCC"> in a two</font>

2127
01:32:41,140 --> 01:32:43,720
<font color="#E5E5E5">again</font><font color="#CCCCCC"> looked fine it</font><font color="#E5E5E5"> often looks fine</font>

2128
01:32:43,720 --> 01:32:46,690
<font color="#CCCCCC">and I found it kind of</font><font color="#E5E5E5"> kept improving so</font>

2129
01:32:46,690 --> 01:32:48,460
<font color="#E5E5E5">I tried five epochs and I found my</font>

2130
01:32:48,460 --> 01:32:54,220
accuracy<font color="#CCCCCC"> getting better</font><font color="#E5E5E5"> so then I saved</font>

2131
01:32:54,220 --> 01:32:56,980
that<font color="#E5E5E5"> and I tried something which we</font>

2132
01:32:56,980 --> 01:32:58,480
haven't<font color="#CCCCCC"> looked</font><font color="#E5E5E5"> at before but it's kind</font>

2133
01:32:58,480 --> 01:33:01,830
of cool<font color="#CCCCCC"> if you train</font><font color="#E5E5E5"> something on a</font>

2134
01:33:01,830 --> 01:33:05,800
smaller size<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can then actually call</font>

2135
01:33:05,800 --> 01:33:10,060
<font color="#CCCCCC">learned set data and pass in a larger</font>

2136
01:33:10,060 --> 01:33:12,370
<font color="#CCCCCC">size</font><font color="#E5E5E5"> data set and that's gonna take your</font>

2137
01:33:12,370 --> 01:33:14,710
model however<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> trained so far and</font>

2138
01:33:14,710 --> 01:33:16,389
it's<font color="#E5E5E5"> going to let you can</font>

2139
01:33:16,389 --> 01:33:20,439
<font color="#CCCCCC">in you to train on on larger images and</font>

2140
01:33:20,439 --> 01:33:22,599
I tell you<font color="#E5E5E5"> something amazing</font>

2141
01:33:22,599 --> 01:33:25,659
this actually is another way you can get

2142
01:33:25,659 --> 01:33:26,919
state-of-the-art results and I've never

2143
01:33:26,919 --> 01:33:29,079
<font color="#E5E5E5">seen this written in any paper or</font>

2144
01:33:29,079 --> 01:33:30,880
discussed<font color="#E5E5E5"> anywhere as</font><font color="#CCCCCC"> far as I know this</font>

2145
01:33:30,880 --> 01:33:34,269
<font color="#E5E5E5">is a new insight</font><font color="#CCCCCC"> basically I've got a</font>

2146
01:33:34,269 --> 01:33:36,249
pre trained<font color="#E5E5E5"> model which in this case</font>

2147
01:33:36,249 --> 01:33:38,349
<font color="#E5E5E5">I've trained a few</font><font color="#CCCCCC"> epochs with the size</font>

2148
01:33:38,349 --> 01:33:41,619
of<font color="#CCCCCC"> 224 by</font><font color="#E5E5E5"> 224 and I'm now</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do a</font>

2149
01:33:41,619 --> 01:33:43,749
few more<font color="#CCCCCC"> air pops with the size of 299</font>

2150
01:33:43,749 --> 01:33:47,409
<font color="#CCCCCC">by 299 now</font><font color="#E5E5E5"> I've gotten very</font><font color="#CCCCCC"> little data</font>

2151
01:33:47,409 --> 01:33:49,090
<font color="#E5E5E5">cut</font><font color="#CCCCCC"> out by deep learning standards only</font>

2152
01:33:49,090 --> 01:33:52,209
<font color="#CCCCCC">about</font><font color="#E5E5E5"> 10,000 images right so with a 224</font>

2153
01:33:52,209 --> 01:33:55,179
by 224<font color="#E5E5E5"> I kind of built this</font><font color="#CCCCCC"> these final</font>

2154
01:33:55,179 --> 01:33:57,880
layers to try to<font color="#E5E5E5"> find things that work</font>

2155
01:33:57,880 --> 01:34:01,329
well<font color="#CCCCCC"> to 24 but to</font><font color="#E5E5E5"> 24 but I go to 299 by</font>

2156
01:34:01,329 --> 01:34:05,919
299<font color="#CCCCCC"> I</font><font color="#E5E5E5"> basically if I over fit before</font><font color="#CCCCCC"> I'm</font>

2157
01:34:05,919 --> 01:34:07,239
definitely not going<font color="#E5E5E5"> to over fit now</font>

2158
01:34:07,239 --> 01:34:08,949
might<font color="#E5E5E5"> have changed the size of my images</font>

2159
01:34:08,949 --> 01:34:10,289
they're kind of like totally different

2160
01:34:10,289 --> 01:34:13,269
<font color="#E5E5E5">but like conceptually they're still</font>

2161
01:34:13,269 --> 01:34:14,860
picked the same kinds of pictures<font color="#CCCCCC"> are</font>

2162
01:34:14,860 --> 01:34:16,929
the same<font color="#E5E5E5"> kinds of</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I found this</font>

2163
01:34:16,929 --> 01:34:19,090
trick of like starting training<font color="#E5E5E5"> on small</font>

2164
01:34:19,090 --> 01:34:21,219
images for a few<font color="#E5E5E5"> a box and then</font>

2165
01:34:21,219 --> 01:34:22,809
switching<font color="#CCCCCC"> to</font><font color="#E5E5E5"> bigger images and</font>

2166
01:34:22,809 --> 01:34:25,209
continuing training<font color="#E5E5E5"> is an amazingly</font>

2167
01:34:25,209 --> 01:34:28,709
effective way to avoid<font color="#E5E5E5"> overfitting</font><font color="#CCCCCC"> and</font>

2168
01:34:28,709 --> 01:34:32,590
<font color="#CCCCCC">it's like it's so easy and so obvious I</font>

2169
01:34:32,590 --> 01:34:34,570
<font color="#E5E5E5">don't understand why it's never been</font>

2170
01:34:34,570 --> 01:34:36,070
written about<font color="#E5E5E5"> before maybe it's in some</font>

2171
01:34:36,070 --> 01:34:37,479
paper somewhere<font color="#E5E5E5"> and I haven't found it</font>

2172
01:34:37,479 --> 01:34:44,260
<font color="#E5E5E5">but it's I haven't seen it would it be</font>

2173
01:34:44,260 --> 01:34:46,300
<font color="#CCCCCC">possible to do the</font><font color="#E5E5E5"> same thing on using</font>

2174
01:34:46,300 --> 01:34:49,719
let's take<font color="#CCCCCC"> a resort our disposal to feed</font>

2175
01:34:49,719 --> 01:34:53,709
<font color="#CCCCCC">a different size yeah I think so like as</font>

2176
01:34:53,709 --> 01:34:56,010
<font color="#E5E5E5">long</font><font color="#CCCCCC"> as you use one of</font><font color="#E5E5E5"> these more modern</font>

2177
01:34:56,010 --> 01:34:57,760
architectures what we call fully

2178
01:34:57,760 --> 01:35:00,340
convolutional architectures which means

2179
01:35:00,340 --> 01:35:02,979
not<font color="#CCCCCC"> vgg</font><font color="#E5E5E5"> and you'll see we don't use</font><font color="#CCCCCC"> vgg</font>

2180
01:35:02,979 --> 01:35:04,389
in this course because<font color="#E5E5E5"> it doesn't have</font>

2181
01:35:04,389 --> 01:35:06,209
this property<font color="#E5E5E5"> but most of the</font>

2182
01:35:06,209 --> 01:35:07,840
architectures developed in the<font color="#E5E5E5"> last</font>

2183
01:35:07,840 --> 01:35:09,550
couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> years can handle pretty much</font>

2184
01:35:09,550 --> 01:35:13,320
arbitrary sizes<font color="#E5E5E5"> yeah be worth trying</font>

2185
01:35:13,320 --> 01:35:18,189
yeah<font color="#E5E5E5"> I think it ought to work</font><font color="#CCCCCC"> okay so I</font>

2186
01:35:18,189 --> 01:35:20,110
call get data again remember get data is

2187
01:35:20,110 --> 01:35:21,280
the just a<font color="#E5E5E5"> little function</font><font color="#CCCCCC"> that I</font>

2188
01:35:21,280 --> 01:35:22,929
created back up here right get data is

2189
01:35:22,929 --> 01:35:24,669
<font color="#E5E5E5">just this little function that's</font><font color="#CCCCCC"> oh I</font>

2190
01:35:24,669 --> 01:35:27,209
just<font color="#CCCCCC"> passed a different size to it and</font>

2191
01:35:27,209 --> 01:35:31,899
so I call freeze just<font color="#CCCCCC"> to make sure that</font>

2192
01:35:31,899 --> 01:35:33,669
<font color="#CCCCCC">but everything so</font><font color="#E5E5E5"> the last layer is</font>

2193
01:35:33,669 --> 01:35:35,709
<font color="#E5E5E5">frozen I mean it actually</font><font color="#CCCCCC"> already was at</font>

2194
01:35:35,709 --> 01:35:37,809
<font color="#CCCCCC">its point</font><font color="#E5E5E5"> that really doing a thing</font>

2195
01:35:37,809 --> 01:35:40,050
and

2196
01:35:42,150 --> 01:35:44,670
you can see now with<font color="#E5E5E5"> free</font><font color="#CCCCCC"> compute</font><font color="#E5E5E5"> off</font>

2197
01:35:44,670 --> 01:35:46,590
<font color="#CCCCCC">I've now got that data augmentation</font>

2198
01:35:46,590 --> 01:35:48,510
working so I kind of run a few more a

2199
01:35:48,510 --> 01:35:51,750
<font color="#CCCCCC">pox</font><font color="#E5E5E5"> and what I notice here is that the</font>

2200
01:35:51,750 --> 01:35:54,420
loss to my<font color="#E5E5E5"> training set and</font><font color="#CCCCCC"> the loss of</font>

2201
01:35:54,420 --> 01:35:56,340
my<font color="#E5E5E5"> validation set my validation set</font><font color="#CCCCCC"> loss</font>

2202
01:35:56,340 --> 01:35:58,620
<font color="#E5E5E5">is a lot lower than my training set this</font>

2203
01:35:58,620 --> 01:36:00,929
<font color="#E5E5E5">is still just training the last</font><font color="#CCCCCC"> layer so</font>

2204
01:36:00,929 --> 01:36:02,880
what this is<font color="#E5E5E5"> telling me</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> I'm under</font>

2205
01:36:02,880 --> 01:36:05,280
<font color="#E5E5E5">fitting right and so from under fitting</font>

2206
01:36:05,280 --> 01:36:07,469
<font color="#E5E5E5">it means this cycle length equals one is</font>

2207
01:36:07,469 --> 01:36:08,850
too short<font color="#E5E5E5"> it means it's like finding</font>

2208
01:36:08,850 --> 01:36:10,800
<font color="#CCCCCC">something better popped with popping out</font>

2209
01:36:10,800 --> 01:36:12,330
and it's<font color="#CCCCCC"> like never getting a chance to</font>

2210
01:36:12,330 --> 01:36:15,750
zoom in properly<font color="#E5E5E5"> so then I'd set cycle</font>

2211
01:36:15,750 --> 01:36:18,540
<font color="#CCCCCC">mod</font><font color="#E5E5E5"> equals two to give it more time</font><font color="#CCCCCC"> so</font>

2212
01:36:18,540 --> 01:36:21,270
like the<font color="#CCCCCC"> first time is one epoch the</font>

2213
01:36:21,270 --> 01:36:23,010
second one is<font color="#E5E5E5"> two epochs</font>

2214
01:36:23,010 --> 01:36:26,070
<font color="#E5E5E5">the third one is for epochs</font><font color="#CCCCCC"> and you can</font>

2215
01:36:26,070 --> 01:36:28,350
see now the validation train and

2216
01:36:28,350 --> 01:36:30,750
training<font color="#E5E5E5"> are about the same okay so</font>

2217
01:36:30,750 --> 01:36:32,130
that's<font color="#E5E5E5"> kind of thinking yeah this</font><font color="#CCCCCC"> is</font>

2218
01:36:32,130 --> 01:36:34,800
<font color="#E5E5E5">this is about the</font><font color="#CCCCCC"> right track and so</font>

2219
01:36:34,800 --> 01:36:36,560
then I<font color="#CCCCCC"> tried using</font><font color="#E5E5E5"> test time</font>

2220
01:36:36,560 --> 01:36:38,489
augmentation to see if<font color="#E5E5E5"> that gets any</font>

2221
01:36:38,489 --> 01:36:40,679
<font color="#E5E5E5">better still didn't actually help a hell</font>

2222
01:36:40,679 --> 01:36:44,010
of a lot just a tiny bit<font color="#E5E5E5"> and just kind</font>

2223
01:36:44,010 --> 01:36:46,020
<font color="#CCCCCC">of at</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> point I think</font><font color="#E5E5E5"> here this is</font>

2224
01:36:46,020 --> 01:36:48,630
nearly done so I just did it<font color="#CCCCCC"> like</font><font color="#E5E5E5"> you</font>

2225
01:36:48,630 --> 01:36:50,550
<font color="#E5E5E5">know one more cycle of</font><font color="#CCCCCC"> two to see</font><font color="#E5E5E5"> if it</font>

2226
01:36:50,550 --> 01:36:53,190
<font color="#CCCCCC">got any</font><font color="#E5E5E5"> better</font><font color="#CCCCCC"> and it did get a little</font>

2227
01:36:53,190 --> 01:36:55,679
<font color="#CCCCCC">bit better and then I'm like okay</font><font color="#E5E5E5"> that</font>

2228
01:36:55,679 --> 01:36:57,600
<font color="#CCCCCC">looks pretty good</font>

2229
01:36:57,600 --> 01:37:02,540
I've got a validation<font color="#E5E5E5"> set lost 0.199</font>

2230
01:37:02,540 --> 01:37:05,520
<font color="#CCCCCC">and so</font><font color="#E5E5E5"> your Lotus here</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> you</font>

2231
01:37:05,520 --> 01:37:08,010
haven't<font color="#CCCCCC"> tried unfreezing the reason why</font>

2232
01:37:08,010 --> 01:37:09,630
<font color="#E5E5E5">I was going to try to unfreezing and</font>

2233
01:37:09,630 --> 01:37:11,370
training more it didn't get<font color="#E5E5E5"> any</font><font color="#CCCCCC"> better</font>

2234
01:37:11,370 --> 01:37:13,890
<font color="#CCCCCC">and so the</font><font color="#E5E5E5"> reason for</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> clearly is</font>

2235
01:37:13,890 --> 01:37:16,469
that<font color="#CCCCCC"> this data set</font><font color="#E5E5E5"> is so similar the</font>

2236
01:37:16,469 --> 01:37:19,230
<font color="#E5E5E5">image net that the training</font><font color="#CCCCCC"> that</font>

2237
01:37:19,230 --> 01:37:20,790
convolutional<font color="#E5E5E5"> layers actually doesn't</font>

2238
01:37:20,790 --> 01:37:23,580
<font color="#E5E5E5">help in the slightest</font><font color="#CCCCCC"> and actually when</font>

2239
01:37:23,580 --> 01:37:25,230
I loaded<font color="#E5E5E5"> up into it it turns out that</font>

2240
01:37:25,230 --> 01:37:27,980
this competition<font color="#E5E5E5"> is</font><font color="#CCCCCC"> actually using a</font>

2241
01:37:27,980 --> 01:37:30,750
subset of<font color="#CCCCCC"> improve image net</font><font color="#E5E5E5"> so that's</font>

2242
01:37:30,750 --> 01:37:33,360
okay so that if we check this out point

2243
01:37:33,360 --> 01:37:36,110
one nine nine against the<font color="#CCCCCC"> leaderboard</font>

2244
01:37:36,110 --> 01:37:38,550
<font color="#CCCCCC">this is only</font><font color="#E5E5E5"> a playground competition so</font>

2245
01:37:38,550 --> 01:37:40,620
it's not like the best<font color="#E5E5E5"> of here but you</font>

2246
01:37:40,620 --> 01:37:44,780
know it's<font color="#CCCCCC"> still interesting it gets us</font>

2247
01:37:44,780 --> 01:37:48,110
somewhere around<font color="#E5E5E5"> ten thrillers</font><font color="#CCCCCC"> okay and</font>

2248
01:37:48,110 --> 01:37:52,050
in fact we're competing against I

2249
01:37:52,050 --> 01:37:53,420
<font color="#CCCCCC">noticed other</font>

2250
01:37:53,420 --> 01:37:55,340
the first<font color="#CCCCCC"> AI student this</font><font color="#E5E5E5"> is a first AI</font>

2251
01:37:55,340 --> 01:37:58,880
student<font color="#CCCCCC"> these people up here I know they</font>

2252
01:37:58,880 --> 01:38:00,890
actually posted that<font color="#E5E5E5"> they cheated they</font>

2253
01:38:00,890 --> 01:38:02,060
actually went you downloaded the

2254
01:38:02,060 --> 01:38:07,429
original images<font color="#CCCCCC"> and train to that</font><font color="#E5E5E5"> so and</font>

2255
01:38:07,429 --> 01:38:08,630
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> why this is</font><font color="#E5E5E5"> a playground</font>

2256
01:38:08,630 --> 01:38:10,489
competition they call it it's<font color="#E5E5E5"> not it's</font>

2257
01:38:10,489 --> 01:38:12,290
not real<font color="#E5E5E5"> right you know it's just to</font>

2258
01:38:12,290 --> 01:38:14,270
allow us to try things<font color="#E5E5E5"> out but you can</font>

2259
01:38:14,270 --> 01:38:18,110
<font color="#E5E5E5">basically see out of two</font><font color="#CCCCCC"> hundred and</font>

2260
01:38:18,110 --> 01:38:20,270
<font color="#E5E5E5">something</font><font color="#CCCCCC"> people where you know we're</font>

2261
01:38:20,270 --> 01:38:23,300
<font color="#CCCCCC">getting some very good results without</font>

2262
01:38:23,300 --> 01:38:25,429
<font color="#CCCCCC">doing anything remotely</font><font color="#E5E5E5"> interesting or</font>

2263
01:38:25,429 --> 01:38:26,660
clever and we haven't even used the

2264
01:38:26,660 --> 01:38:27,739
whole data set<font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to use to</font>

2265
01:38:27,739 --> 01:38:29,390
<font color="#CCCCCC">eighty percent</font><font color="#E5E5E5"> of it like to get</font><font color="#CCCCCC"> a</font>

2266
01:38:29,390 --> 01:38:31,699
better result<font color="#CCCCCC"> I would go back and remove</font>

2267
01:38:31,699 --> 01:38:33,679
that validation<font color="#E5E5E5"> set and</font><font color="#CCCCCC"> just rerun the</font>

2268
01:38:33,679 --> 01:38:36,110
same steps and then submit that exact

2269
01:38:36,110 --> 01:38:37,100
<font color="#CCCCCC">let's just use it under percent</font><font color="#E5E5E5"> of the</font>

2270
01:38:37,100 --> 01:38:48,650
data I have<font color="#E5E5E5"> three questions the first</font>

2271
01:38:48,650 --> 01:38:50,480
one is<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that class in this</font><font color="#E5E5E5"> case is</font>

2272
01:38:50,480 --> 01:38:53,780
<font color="#CCCCCC">very</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not balanced</font>

2273
01:38:53,780 --> 01:38:56,929
instead unbalanced<font color="#E5E5E5"> like it's not totally</font>

2274
01:38:56,929 --> 01:38:58,520
balanced but it's not bad right it's

2275
01:38:58,520 --> 01:39:02,420
<font color="#E5E5E5">like between</font><font color="#CCCCCC"> sixty and a hundred like</font>

2276
01:39:02,420 --> 01:39:04,670
it's it's it's it's<font color="#E5E5E5"> not unbalanced</font>

2277
01:39:04,670 --> 01:39:05,870
enough that I<font color="#E5E5E5"> would give it a second</font>

2278
01:39:05,870 --> 01:39:06,080
thought

2279
01:39:06,080 --> 01:39:14,600
<font color="#E5E5E5">okay yeah let's get to that</font><font color="#CCCCCC"> later in</font>

2280
01:39:14,600 --> 01:39:16,070
<font color="#CCCCCC">this course and don't let me</font><font color="#E5E5E5"> forget</font>

2281
01:39:16,070 --> 01:39:18,710
right the short<font color="#E5E5E5"> answer is that there was</font>

2282
01:39:18,710 --> 01:39:20,090
a recent<font color="#CCCCCC"> list the paper came</font><font color="#E5E5E5"> out about</font>

2283
01:39:20,090 --> 01:39:21,980
two or three<font color="#E5E5E5"> weeks ago on</font><font color="#CCCCCC"> this and it</font>

2284
01:39:21,980 --> 01:39:23,390
said the best<font color="#E5E5E5"> way to deal with very</font>

2285
01:39:23,390 --> 01:39:25,640
unbalanced data sets is to<font color="#E5E5E5"> basically</font>

2286
01:39:25,640 --> 01:39:35,600
make copies of the rare cases yeah my

2287
01:39:35,600 --> 01:39:38,660
second<font color="#E5E5E5"> question is I want to pin</font><font color="#CCCCCC"> down a</font>

2288
01:39:38,660 --> 01:39:40,310
difference between<font color="#CCCCCC"> creation</font><font color="#E5E5E5"> he</font><font color="#CCCCCC"> read was</font>

2289
01:39:40,310 --> 01:39:44,390
and so you have these<font color="#CCCCCC"> two options</font><font color="#E5E5E5"> right</font>

2290
01:39:44,390 --> 01:39:47,179
so when you<font color="#E5E5E5"> beginning I did an</font>

2291
01:39:47,179 --> 01:39:49,130
optimization use that<font color="#CCCCCC"> pre computed</font><font color="#E5E5E5"> it</font>

2292
01:39:49,130 --> 01:39:52,370
was true by<font color="#CCCCCC"> not</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> layers</font><font color="#E5E5E5"> right right</font>

2293
01:39:52,370 --> 01:39:54,290
so it's<font color="#CCCCCC"> not only they frozen</font><font color="#E5E5E5"> their pre</font>

2294
01:39:54,290 --> 01:39:55,670
<font color="#E5E5E5">computed so the data augmentation</font>

2295
01:39:55,670 --> 01:39:59,080
doesn't do anything at that point

2296
01:39:59,410 --> 01:40:03,580
right before you outcries everything

2297
01:40:03,580 --> 01:40:06,050
<font color="#CCCCCC">what</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> examples you and</font><font color="#E5E5E5"> IV only you</font>

2298
01:40:06,050 --> 01:40:08,130
<font color="#CCCCCC">only on freeze</font>

2299
01:40:08,130 --> 01:40:10,650
so we're<font color="#E5E5E5"> going to learn more about the</font>

2300
01:40:10,650 --> 01:40:12,630
<font color="#E5E5E5">details as we look</font><font color="#CCCCCC"> into the the math and</font>

2301
01:40:12,630 --> 01:40:14,459
stuff in coming lessons<font color="#E5E5E5"> but basically</font>

2302
01:40:14,459 --> 01:40:16,979
what happened<font color="#CCCCCC"> was we started with a pre</font>

2303
01:40:16,979 --> 01:40:20,550
<font color="#CCCCCC">trained network</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> which was kind of</font>

2304
01:40:20,550 --> 01:40:23,400
finding activations<font color="#CCCCCC"> that had these kind</font>

2305
01:40:23,400 --> 01:40:27,539
<font color="#E5E5E5">of rich features</font><font color="#CCCCCC"> and we were adding</font><font color="#E5E5E5"> then</font>

2306
01:40:27,539 --> 01:40:29,400
we add a couple<font color="#E5E5E5"> of layers on the end of</font>

2307
01:40:29,400 --> 01:40:33,659
it<font color="#E5E5E5"> which which start out random and so</font>

2308
01:40:33,659 --> 01:40:36,659
with<font color="#CCCCCC"> fries equals with with everything</font>

2309
01:40:36,659 --> 01:40:38,550
frozen<font color="#E5E5E5"> and indeed with</font><font color="#CCCCCC"> pre compute</font>

2310
01:40:38,550 --> 01:40:40,829
equals true<font color="#E5E5E5"> all we're learning is</font><font color="#CCCCCC"> told</font>

2311
01:40:40,829 --> 01:40:42,539
<font color="#E5E5E5">is those couple of layers that we've</font>

2312
01:40:42,539 --> 01:40:45,179
added<font color="#E5E5E5"> and so with pre compute equals</font>

2313
01:40:45,179 --> 01:40:47,639
true we<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> pretty calculate like</font>

2314
01:40:47,639 --> 01:40:49,769
how<font color="#E5E5E5"> much does this image have something</font>

2315
01:40:49,769 --> 01:40:51,239
that<font color="#E5E5E5"> looks like this a ball one looks</font>

2316
01:40:51,239 --> 01:40:53,489
like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> face and so forth and</font>

2317
01:40:53,489 --> 01:40:55,079
therefore<font color="#E5E5E5"> data augmentation doesn't do</font>

2318
01:40:55,079 --> 01:40:56,729
<font color="#E5E5E5">anything with pre compute equals true</font>

2319
01:40:56,729 --> 01:40:59,429
<font color="#E5E5E5">because you know we're actually showing</font>

2320
01:40:59,429 --> 01:41:01,079
exactly<font color="#E5E5E5"> the same activations each time</font>

2321
01:41:01,079 --> 01:41:03,510
<font color="#E5E5E5">we can then set pre compute equals false</font>

2322
01:41:03,510 --> 01:41:06,360
<font color="#E5E5E5">which means</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> only training</font>

2323
01:41:06,360 --> 01:41:09,209
<font color="#E5E5E5">those last two layers that we added</font><font color="#CCCCCC"> it's</font>

2324
01:41:09,209 --> 01:41:11,699
still frozen<font color="#E5E5E5"> but data augmentations now</font>

2325
01:41:11,699 --> 01:41:12,929
working because it's actually<font color="#CCCCCC"> going</font>

2326
01:41:12,929 --> 01:41:14,429
<font color="#CCCCCC">through and recalculating all of the</font>

2327
01:41:14,429 --> 01:41:17,249
activations from<font color="#E5E5E5"> scratch</font><font color="#CCCCCC"> and then</font>

2328
01:41:17,249 --> 01:41:19,949
finally when<font color="#CCCCCC"> we unfreeze that's actually</font>

2329
01:41:19,949 --> 01:41:21,360
saying<font color="#CCCCCC"> okay now you can go ahead and</font>

2330
01:41:21,360 --> 01:41:23,090
change all of these earlier

2331
01:41:23,090 --> 01:41:28,519
convolutional filters so<font color="#E5E5E5"> well you just</font>

2332
01:41:28,999 --> 01:41:31,679
so the only<font color="#E5E5E5"> reason to have pre compute</font>

2333
01:41:31,679 --> 01:41:33,749
equals true is<font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> much faster so</font>

2334
01:41:33,749 --> 01:41:35,670
it's like it is it's about you know<font color="#E5E5E5"> ten</font>

2335
01:41:35,670 --> 01:41:38,249
or<font color="#CCCCCC"> more times faster</font><font color="#E5E5E5"> so particularly if</font>

2336
01:41:38,249 --> 01:41:39,360
you're<font color="#E5E5E5"> working with like quite a large</font>

2337
01:41:39,360 --> 01:41:42,599
data<font color="#E5E5E5"> set you know it can save</font><font color="#CCCCCC"> quite a</font>

2338
01:41:42,599 --> 01:41:45,719
<font color="#CCCCCC">bit of time but it's</font><font color="#E5E5E5"> never there's no</font>

2339
01:41:45,719 --> 01:41:49,499
like companies like accuracy reason ever

2340
01:41:49,499 --> 01:41:51,239
to<font color="#CCCCCC"> use pre computed calls true it's just</font>

2341
01:41:51,239 --> 01:41:53,039
a<font color="#E5E5E5"> it's just a shortcut it's also like</font>

2342
01:41:53,039 --> 01:41:55,590
quite handy if you're like throwing

2343
01:41:55,590 --> 01:41:57,659
<font color="#E5E5E5">together a quick model you know it can</font>

2344
01:41:57,659 --> 01:42:01,699
<font color="#CCCCCC">take a few</font><font color="#E5E5E5"> seconds to create</font>

2345
01:42:01,699 --> 01:42:03,619
my last question<font color="#CCCCCC"> which I think you</font>

2346
01:42:03,619 --> 01:42:07,280
answer<font color="#E5E5E5"> is I don't like</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> suggestions</font>

2347
01:42:07,280 --> 01:42:11,079
to<font color="#E5E5E5"> build a model you have this aged yeah</font>

2348
01:42:11,079 --> 01:42:15,229
what if would<font color="#E5E5E5"> you like we just</font><font color="#CCCCCC"> wanted</font>

2349
01:42:15,229 --> 01:42:19,760
one initial setting<font color="#E5E5E5"> without these like</font>

2350
01:42:19,760 --> 01:42:24,170
checking<font color="#CCCCCC"> after each I mean if you want</font>

2351
01:42:24,170 --> 01:42:25,849
it like if your question<font color="#E5E5E5"> is like is</font>

2352
01:42:25,849 --> 01:42:27,559
there some shorter version of<font color="#E5E5E5"> this</font>

2353
01:42:27,559 --> 01:42:29,719
that's<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a bit quicker and easier I</font>

2354
01:42:29,719 --> 01:42:33,820
could like to lead a few things here

2355
01:42:39,159 --> 01:42:41,989
okay I think<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a kind of a minimal</font>

2356
01:42:41,989 --> 01:42:43,820
version<font color="#E5E5E5"> to get you a very</font><font color="#CCCCCC"> good result</font>

2357
01:42:43,820 --> 01:42:45,769
<font color="#E5E5E5">which is like don't worry</font><font color="#CCCCCC"> about pre</font>

2358
01:42:45,769 --> 01:42:47,449
<font color="#CCCCCC">compute equals true</font><font color="#E5E5E5"> because that's just</font>

2359
01:42:47,449 --> 01:42:49,550
saving<font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> of time</font><font color="#E5E5E5"> you know so</font>

2360
01:42:49,550 --> 01:42:52,550
so I<font color="#CCCCCC"> still suggest use LR find at the</font>

2361
01:42:52,550 --> 01:42:56,030
start to<font color="#E5E5E5"> find a good learning rate</font><font color="#CCCCCC"> by</font>

2362
01:42:56,030 --> 01:42:57,650
<font color="#E5E5E5">default everything is frozen from the</font>

2363
01:42:57,650 --> 01:42:59,059
<font color="#E5E5E5">start so then you can just go ahead and</font>

2364
01:42:59,059 --> 01:43:01,159
run two or<font color="#E5E5E5"> three epochs or cyclic</font>

2365
01:43:01,159 --> 01:43:05,209
<font color="#CCCCCC">Nichols one</font><font color="#E5E5E5"> unfreeze</font><font color="#CCCCCC"> and then train the</font>

2366
01:43:05,209 --> 01:43:07,039
rest of the network<font color="#CCCCCC"> with differential</font>

2367
01:43:07,039 --> 01:43:09,079
learning rates<font color="#CCCCCC"> so it's basically three</font>

2368
01:43:09,079 --> 01:43:13,280
<font color="#CCCCCC">steps</font><font color="#E5E5E5"> learning rate finder</font><font color="#CCCCCC"> trained</font>

2369
01:43:13,280 --> 01:43:15,409
frozen network with cycle<font color="#CCCCCC"> methods one</font>

2370
01:43:15,409 --> 01:43:18,559
and then<font color="#CCCCCC"> trained unfrozen</font><font color="#E5E5E5"> network with</font>

2371
01:43:18,559 --> 01:43:20,479
differential learning rates and cycle

2372
01:43:20,479 --> 01:43:22,969
molecules<font color="#CCCCCC"> too so like</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> something</font>

2373
01:43:22,969 --> 01:43:26,929
you<font color="#E5E5E5"> could turn into I guess five or six</font>

2374
01:43:26,929 --> 01:43:30,829
lines of code at all<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> it's a</font>

2375
01:43:30,829 --> 01:43:34,219
question<font color="#CCCCCC"> provide your</font><font color="#E5E5E5"> own</font><font color="#CCCCCC"> mix book by</font>

2376
01:43:34,219 --> 01:43:36,979
<font color="#E5E5E5">reusing the batch size does the only at</font>

2377
01:43:36,979 --> 01:43:39,409
better speed of training yeah pretty

2378
01:43:39,409 --> 01:43:42,139
much so each batch and again we're going

2379
01:43:42,139 --> 01:43:43,429
to see like all<font color="#E5E5E5"> this stuff</font><font color="#CCCCCC"> about</font>

2380
01:43:43,429 --> 01:43:45,739
<font color="#CCCCCC">precomputing batch</font><font color="#E5E5E5"> sizes we dig into the</font>

2381
01:43:45,739 --> 01:43:47,329
details<font color="#E5E5E5"> of the algorithms it's going to</font>

2382
01:43:47,329 --> 01:43:49,130
make a lot more sense intuitively but

2383
01:43:49,130 --> 01:43:53,059
basically if you're showing it less

2384
01:43:53,059 --> 01:43:56,150
images<font color="#CCCCCC"> each time then it's calculating</font>

2385
01:43:56,150 --> 01:43:58,519
the gradient<font color="#E5E5E5"> with less images which</font>

2386
01:43:58,519 --> 01:44:00,289
means it's less accurate<font color="#CCCCCC"> which means</font>

2387
01:44:00,289 --> 01:44:02,179
like knowing which<font color="#CCCCCC"> direction to go and</font>

2388
01:44:02,179 --> 01:44:04,789
how<font color="#E5E5E5"> far to go in that direction is less</font>

2389
01:44:04,789 --> 01:44:06,590
accurate<font color="#CCCCCC"> so as you make the batch size</font>

2390
01:44:06,590 --> 01:44:07,159
smaller

2391
01:44:07,159 --> 01:44:09,320
you're basically<font color="#CCCCCC"> making it</font><font color="#E5E5E5"> kind of more</font>

2392
01:44:09,320 --> 01:44:11,429
volatile<font color="#CCCCCC"> it's</font>

2393
01:44:11,429 --> 01:44:18,139
kind of<font color="#E5E5E5"> like it kind</font><font color="#CCCCCC"> of impacts the</font>

2394
01:44:18,139 --> 01:44:20,159
optimal<font color="#E5E5E5"> learning rate that you would</font>

2395
01:44:20,159 --> 01:44:22,260
<font color="#E5E5E5">need to use but in practice where only</font>

2396
01:44:22,260 --> 01:44:24,389
you know I generally<font color="#CCCCCC"> find only</font><font color="#E5E5E5"> dividing</font>

2397
01:44:24,389 --> 01:44:26,909
with<font color="#E5E5E5"> the batch size by like 2 or 4 it</font>

2398
01:44:26,909 --> 01:44:28,199
<font color="#E5E5E5">doesn't seem to change things very much</font>

2399
01:44:28,199 --> 01:44:30,869
<font color="#CCCCCC">should I reveals the</font><font color="#E5E5E5"> learning rate of</font>

2400
01:44:30,869 --> 01:44:33,329
quality<font color="#E5E5E5"> me if you if you change the</font>

2401
01:44:33,329 --> 01:44:34,979
batch size by much you can rerun the

2402
01:44:34,979 --> 01:44:36,719
learning rate finder<font color="#E5E5E5"> to see if it's</font>

2403
01:44:36,719 --> 01:44:38,760
changed if I<font color="#E5E5E5"> match but it it I was in</font>

2404
01:44:38,760 --> 01:44:40,079
for only<font color="#CCCCCC"> generally looking</font><font color="#E5E5E5"> at like a</font>

2405
01:44:40,079 --> 01:44:42,179
power of 10<font color="#E5E5E5"> it probably is not</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

2406
01:44:42,179 --> 01:44:43,499
<font color="#CCCCCC">change the it's not that you can't</font>

2407
01:44:43,499 --> 01:44:47,150
<font color="#E5E5E5">because</font><font color="#CCCCCC"> plus</font><font color="#E5E5E5"> back there</font>

2408
01:44:48,090 --> 01:44:50,429
this is sort of a conceptual<font color="#CCCCCC"> basic</font>

2409
01:44:50,429 --> 01:44:51,780
questions we're going back to the

2410
01:44:51,780 --> 01:44:53,699
<font color="#CCCCCC">previous night where</font><font color="#E5E5E5"> you should put in</font>

2411
01:44:53,699 --> 01:44:55,679
the<font color="#CCCCCC"> thought</font><font color="#E5E5E5"> behind sorry yeah</font><font color="#CCCCCC"> this is</font>

2412
01:44:55,679 --> 01:44:57,840
well one<font color="#E5E5E5"> for conceptual</font><font color="#CCCCCC"> so a basic</font>

2413
01:44:57,840 --> 01:44:59,940
question<font color="#E5E5E5"> we've actually really slide</font>

2414
01:44:59,940 --> 01:45:01,440
where<font color="#CCCCCC"> you should what the different</font>

2415
01:45:01,440 --> 01:45:07,889
layers were doing yes<font color="#E5E5E5"> from this slide</font><font color="#CCCCCC"> I</font>

2416
01:45:07,889 --> 01:45:11,429
understand right<font color="#CCCCCC"> the meaning</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> sync the</font>

2417
01:45:11,429 --> 01:45:12,960
third column relative to the fourth

2418
01:45:12,960 --> 01:45:16,290
<font color="#CCCCCC">column is that what</font><font color="#E5E5E5"> you're interpreting</font>

2419
01:45:16,290 --> 01:45:19,500
what the layer is doing based on what

2420
01:45:19,500 --> 01:45:23,010
the image is<font color="#E5E5E5"> actually yeah so we're</font>

2421
01:45:23,010 --> 01:45:24,510
going<font color="#E5E5E5"> to look at this in more detail so</font>

2422
01:45:24,510 --> 01:45:26,550
these<font color="#E5E5E5"> these gray ones basically say this</font>

2423
01:45:26,550 --> 01:45:28,920
is kind<font color="#CCCCCC"> of what the</font><font color="#E5E5E5"> filter looks like so</font>

2424
01:45:28,920 --> 01:45:31,170
on the first layer you<font color="#CCCCCC"> can see exactly</font>

2425
01:45:31,170 --> 01:45:32,730
what<font color="#E5E5E5"> the filter looks like because the</font>

2426
01:45:32,730 --> 01:45:34,920
input to it<font color="#CCCCCC"> of pixels</font><font color="#E5E5E5"> right so you can</font>

2427
01:45:34,920 --> 01:45:36,449
<font color="#CCCCCC">absolutely say and</font><font color="#E5E5E5"> remember we looked at</font>

2428
01:45:36,449 --> 01:45:38,940
what a convolutional kernel was like was

2429
01:45:38,940 --> 01:45:41,040
<font color="#CCCCCC">that three by three thing so this look</font>

2430
01:45:41,040 --> 01:45:43,020
<font color="#E5E5E5">like there's seven by seven kernels you</font>

2431
01:45:43,020 --> 01:45:44,429
<font color="#CCCCCC">can say this</font><font color="#E5E5E5"> is actually</font><font color="#CCCCCC"> what it</font><font color="#E5E5E5"> looks</font>

2432
01:45:44,429 --> 01:45:47,369
like<font color="#E5E5E5"> but later on it's combined you know</font>

2433
01:45:47,369 --> 01:45:50,449
the the the<font color="#E5E5E5"> input to it</font><font color="#CCCCCC"> are themselves</font>

2434
01:45:50,449 --> 01:45:52,409
activations which are<font color="#CCCCCC"> combinations of</font>

2435
01:45:52,409 --> 01:45:54,179
activations relation to<font color="#E5E5E5"> activations so</font>

2436
01:45:54,179 --> 01:45:56,820
you can't draw<font color="#CCCCCC"> it but</font><font color="#E5E5E5"> there's clever</font>

2437
01:45:56,820 --> 01:45:58,710
technique that I learned<font color="#E5E5E5"> focus created</font>

2438
01:45:58,710 --> 01:46:00,570
which allowed them to say this is<font color="#E5E5E5"> kind</font>

2439
01:46:00,570 --> 01:46:02,460
of what the filters tended to<font color="#E5E5E5"> look like</font>

2440
01:46:02,460 --> 01:46:04,770
on average<font color="#CCCCCC"> alright so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> kind of</font>

2441
01:46:04,770 --> 01:46:06,570
what the<font color="#E5E5E5"> photos look</font><font color="#CCCCCC"> like and then here</font>

2442
01:46:06,570 --> 01:46:10,110
is specific examples of patches of image

2443
01:46:10,110 --> 01:46:14,369
which activated that filter highly so

2444
01:46:14,369 --> 01:46:16,230
yet the pictures are the ones<font color="#E5E5E5"> that I</font>

2445
01:46:16,230 --> 01:46:17,849
kind of find more<font color="#E5E5E5"> useful because it</font>

2446
01:46:17,849 --> 01:46:21,929
tells you this kernel is kind of a mini

2447
01:46:21,929 --> 01:46:35,070
cycle<font color="#CCCCCC"> we all find right how do</font><font color="#E5E5E5"> we know</font>

2448
01:46:35,070 --> 01:46:40,290
<font color="#E5E5E5">that's it well we'll come back well we</font>

2449
01:46:40,290 --> 01:46:41,790
<font color="#E5E5E5">may come</font><font color="#CCCCCC"> back to that if</font><font color="#E5E5E5"> not in this</font>

2450
01:46:41,790 --> 01:46:45,210
part in the<font color="#E5E5E5"> next part</font><font color="#CCCCCC"> that probably</font><font color="#E5E5E5"> a</font>

2451
01:46:45,210 --> 01:46:48,030
part<font color="#CCCCCC"> two</font><font color="#E5E5E5"> actually because this paper</font>

2452
01:46:48,030 --> 01:46:49,860
this paper uses to<font color="#E5E5E5"> create these things</font>

2453
01:46:49,860 --> 01:46:50,909
<font color="#E5E5E5">this paper uses something called a</font>

2454
01:46:50,909 --> 01:46:53,309
deconvolution<font color="#E5E5E5"> which I'm pretty</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> we</font>

2455
01:46:53,309 --> 01:46:54,719
won't<font color="#E5E5E5"> do in this part but we will do it</font>

2456
01:46:54,719 --> 01:46:57,420
<font color="#E5E5E5">in part two so if you're interested</font>

2457
01:46:57,420 --> 01:47:00,090
<font color="#E5E5E5">check out the paper it's it's in the</font>

2458
01:47:00,090 --> 01:47:01,860
notebook<font color="#CCCCCC"> has</font><font color="#E5E5E5"> a link</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> xyler in</font>

2459
01:47:01,860 --> 01:47:06,060
Fergus it's a very<font color="#E5E5E5"> clever technique and</font>

2460
01:47:06,060 --> 01:47:10,160
not terribly<font color="#E5E5E5"> intuitive</font>

2461
01:47:10,880 --> 01:47:18,590
<font color="#E5E5E5">um right so so you mentioned that it was</font>

2462
01:47:18,590 --> 01:47:20,630
good<font color="#CCCCCC"> that the dog took</font><font color="#E5E5E5"> up the full</font>

2463
01:47:20,630 --> 01:47:22,340
picture<font color="#CCCCCC"> and it would</font><font color="#E5E5E5"> have been a problem</font>

2464
01:47:22,340 --> 01:47:24,409
<font color="#E5E5E5">if it was kind of like off in one of</font><font color="#CCCCCC"> the</font>

2465
01:47:24,409 --> 01:47:27,260
corners<font color="#CCCCCC"> in really tiny well what would</font>

2466
01:47:27,260 --> 01:47:29,600
<font color="#E5E5E5">you what would you technique have been</font>

2467
01:47:29,600 --> 01:47:34,040
to try<font color="#CCCCCC"> to make that</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> something that</font>

2468
01:47:34,040 --> 01:47:36,260
<font color="#CCCCCC">we'll learn</font><font color="#E5E5E5"> about in part</font><font color="#CCCCCC"> two but</font>

2469
01:47:36,260 --> 01:47:38,449
<font color="#E5E5E5">basically there's a technique that</font>

2470
01:47:38,449 --> 01:47:41,540
<font color="#E5E5E5">allows you to to kind of figure out</font>

2471
01:47:41,540 --> 01:47:43,580
roughly<font color="#E5E5E5"> which parts of an image and most</font>

2472
01:47:43,580 --> 01:47:45,530
likely<font color="#CCCCCC"> to have</font><font color="#E5E5E5"> the interesting things in</font>

2473
01:47:45,530 --> 01:47:47,810
them and then you<font color="#E5E5E5"> can like crop out</font>

2474
01:47:47,810 --> 01:47:50,060
those bits<font color="#CCCCCC"> if you're interested in</font>

2475
01:47:50,060 --> 01:47:52,250
learning<font color="#CCCCCC"> about it we did cover</font><font color="#E5E5E5"> it</font>

2476
01:47:52,250 --> 01:47:55,730
briefly in lesson<font color="#E5E5E5"> seven of part one</font><font color="#CCCCCC"> but</font>

2477
01:47:55,730 --> 01:47:58,250
I'm going to<font color="#CCCCCC"> actually do it properly in</font>

2478
01:47:58,250 --> 01:48:01,610
part two of this<font color="#CCCCCC"> course</font><font color="#E5E5E5"> because I didn't</font>

2479
01:48:01,610 --> 01:48:06,469
<font color="#E5E5E5">really cover it</font><font color="#CCCCCC"> thoroughly enough maybe</font>

2480
01:48:06,469 --> 01:48:07,850
<font color="#E5E5E5">we'll find time</font><font color="#CCCCCC"> to have a quick look at</font>

2481
01:48:07,850 --> 01:48:10,190
it but we'll<font color="#E5E5E5"> see</font><font color="#CCCCCC"> I know your</font><font color="#E5E5E5"> Nets</font>

2482
01:48:10,190 --> 01:48:11,300
written some of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> that we need</font>

2483
01:48:11,300 --> 01:48:13,670
<font color="#E5E5E5">already</font>

2484
01:48:13,670 --> 01:48:15,699
<font color="#CCCCCC">ah</font>

2485
01:48:16,719 --> 01:48:18,810
so once I have something like<font color="#CCCCCC"> this</font>

2486
01:48:18,810 --> 01:48:24,360
<font color="#CCCCCC">notebook that's basically working I can</font>

2487
01:48:24,360 --> 01:48:28,390
immediately make it better<font color="#E5E5E5"> by</font><font color="#CCCCCC"> doing two</font>

2488
01:48:28,390 --> 01:48:32,140
things<font color="#CCCCCC"> assuming that the size image I</font>

2489
01:48:32,140 --> 01:48:34,150
was<font color="#E5E5E5"> using is smaller than the average</font>

2490
01:48:34,150 --> 01:48:35,980
<font color="#E5E5E5">size of</font><font color="#CCCCCC"> the image that we've been given</font>

2491
01:48:35,980 --> 01:48:38,830
I<font color="#E5E5E5"> can increase the</font><font color="#CCCCCC"> size and as I showed</font>

2492
01:48:38,830 --> 01:48:40,330
<font color="#CCCCCC">before with</font><font color="#E5E5E5"> the dog breeds you can</font>

2493
01:48:40,330 --> 01:48:42,670
actually<font color="#E5E5E5"> increase it during training</font><font color="#CCCCCC"> the</font>

2494
01:48:42,670 --> 01:48:45,520
<font color="#CCCCCC">other thing I can do is to create</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to</font>

2495
01:48:45,520 --> 01:48:48,280
use a better<font color="#CCCCCC"> architecture</font><font color="#E5E5E5"> now an</font>

2496
01:48:48,280 --> 01:48:49,840
<font color="#E5E5E5">architect we're going to talk a lot in</font>

2497
01:48:49,840 --> 01:48:51,880
this<font color="#E5E5E5"> course about architectures but</font>

2498
01:48:51,880 --> 01:48:58,300
basically there are different ways<font color="#E5E5E5"> of</font>

2499
01:48:58,300 --> 01:49:00,580
<font color="#CCCCCC">putting together</font><font color="#E5E5E5"> like what size</font>

2500
01:49:00,580 --> 01:49:02,230
convolutional filters and<font color="#E5E5E5"> how are they</font>

2501
01:49:02,230 --> 01:49:05,730
connected<font color="#CCCCCC"> to each other</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so forth and</font>

2502
01:49:05,730 --> 01:49:07,810
different architectures<font color="#CCCCCC"> have different</font>

2503
01:49:07,810 --> 01:49:09,760
like numbers of layers<font color="#CCCCCC"> and sizes</font><font color="#E5E5E5"> of</font>

2504
01:49:09,760 --> 01:49:11,650
kernels and number<font color="#CCCCCC"> of filters and so</font>

2505
01:49:11,650 --> 01:49:16,780
forth<font color="#E5E5E5"> and so there are</font><font color="#CCCCCC"> some the one that</font>

2506
01:49:16,780 --> 01:49:19,050
we've been<font color="#E5E5E5"> using</font><font color="#CCCCCC"> ResNet</font><font color="#E5E5E5"> 34 is a great</font>

2507
01:49:19,050 --> 01:49:21,730
starting point<font color="#E5E5E5"> and often a good</font>

2508
01:49:21,730 --> 01:49:23,770
finishing<font color="#E5E5E5"> point because it's like it's</font>

2509
01:49:23,770 --> 01:49:25,480
pretty<font color="#CCCCCC"> it doesn't have too</font><font color="#E5E5E5"> many</font>

2510
01:49:25,480 --> 01:49:27,040
parameters often it works<font color="#E5E5E5"> pretty well</font>

2511
01:49:27,040 --> 01:49:28,989
<font color="#CCCCCC">with small</font><font color="#E5E5E5"> amounts of data as we've seen</font>

2512
01:49:28,989 --> 01:49:32,560
and so forth<font color="#CCCCCC"> but there's actually</font><font color="#E5E5E5"> an</font>

2513
01:49:32,560 --> 01:49:34,360
architecture that<font color="#CCCCCC"> I really like</font><font color="#E5E5E5"> called</font>

2514
01:49:34,360 --> 01:49:37,630
<font color="#E5E5E5">not</font><font color="#CCCCCC"> res net but res next</font><font color="#E5E5E5"> which was</font>

2515
01:49:37,630 --> 01:49:39,850
actually the<font color="#CCCCCC"> second-place</font><font color="#E5E5E5"> winner in last</font>

2516
01:49:39,850 --> 01:49:44,590
<font color="#E5E5E5">year's</font><font color="#CCCCCC"> image net competition and like</font>

2517
01:49:44,590 --> 01:49:46,930
<font color="#CCCCCC">ResNet</font><font color="#E5E5E5"> you can put a number after the</font>

2518
01:49:46,930 --> 01:49:49,300
res next to say like how big it is<font color="#CCCCCC"> and</font>

2519
01:49:49,300 --> 01:49:52,510
like my next step after<font color="#CCCCCC"> resume</font><font color="#E5E5E5"> 34 is</font>

2520
01:49:52,510 --> 01:49:55,300
always res next<font color="#E5E5E5"> 50 now you'll find res</font>

2521
01:49:55,300 --> 01:49:58,120
next 50 takes like can take like twice

2522
01:49:58,120 --> 01:50:01,719
as long as<font color="#CCCCCC"> ResNet 34 that can take like</font>

2523
01:50:01,719 --> 01:50:06,090
<font color="#CCCCCC">2 to 4 times as much memory as retina 34</font>

2524
01:50:06,090 --> 01:50:08,260
<font color="#CCCCCC">so what I wanted to do was I wanted to</font>

2525
01:50:08,260 --> 01:50:10,390
<font color="#CCCCCC">rerun</font><font color="#E5E5E5"> that previous notebook with res</font>

2526
01:50:10,390 --> 01:50:12,910
next and increasing the image size to

2527
01:50:12,910 --> 01:50:15,699
<font color="#E5E5E5">turn on a</font><font color="#CCCCCC"> node</font><font color="#E5E5E5"> so here I just said</font>

2528
01:50:15,699 --> 01:50:18,219
<font color="#E5E5E5">architecture equals res next 50 size</font>

2529
01:50:18,219 --> 01:50:20,440
equals<font color="#CCCCCC"> 299</font><font color="#E5E5E5"> and then I found that I had</font>

2530
01:50:20,440 --> 01:50:21,940
<font color="#CCCCCC">to take</font><font color="#E5E5E5"> the batch size all the</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> back</font>

2531
01:50:21,940 --> 01:50:25,000
to 28 to<font color="#CCCCCC"> get it to fit my</font><font color="#E5E5E5"> GPU is 11 gig</font>

2532
01:50:25,000 --> 01:50:27,850
if you're using<font color="#E5E5E5"> AWS or cresol I think</font>

2533
01:50:27,850 --> 01:50:30,550
they're like 12 gigs they might be

2534
01:50:30,550 --> 01:50:32,800
<font color="#CCCCCC">a bit higher but this</font><font color="#E5E5E5"> is what I found I</font>

2535
01:50:32,800 --> 01:50:34,659
had<font color="#CCCCCC"> to do so then I this is literally a</font>

2536
01:50:34,659 --> 01:50:36,699
copy of the previous notebook so you can

2537
01:50:36,699 --> 01:50:39,309
actually go file make a copy<font color="#E5E5E5"> right and</font>

2538
01:50:39,309 --> 01:50:41,469
then rerun it with with these different

2539
01:50:41,469 --> 01:50:45,400
<font color="#CCCCCC">parameters</font><font color="#E5E5E5"> and so I deleted some of the</font>

2540
01:50:45,400 --> 01:50:47,530
pros and<font color="#CCCCCC"> some of the expiratory</font><font color="#E5E5E5"> stuff to</font>

2541
01:50:47,530 --> 01:50:49,869
see you know<font color="#E5E5E5"> basically I said everything</font>

2542
01:50:49,869 --> 01:50:52,750
else is<font color="#E5E5E5"> the same all the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> steps</font><font color="#CCCCCC"> as</font>

2543
01:50:52,750 --> 01:50:54,550
before there's my in<font color="#E5E5E5"> fact you can kind</font>

2544
01:50:54,550 --> 01:50:55,989
of see what this<font color="#E5E5E5"> minimum</font><font color="#CCCCCC"> service desk</font>

2545
01:50:55,989 --> 01:50:57,460
looks like<font color="#E5E5E5"> I didn't need to worry about</font>

2546
01:50:57,460 --> 01:50:59,139
<font color="#E5E5E5">learning rate finder so I just left it</font>

2547
01:50:59,139 --> 01:51:02,409
<font color="#CCCCCC">as is so transforms data equals</font><font color="#E5E5E5"> loan</font>

2548
01:51:02,409 --> 01:51:06,460
equals<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> pre computed false feet with</font>

2549
01:51:06,460 --> 01:51:08,940
cycle integrals one and freeze

2550
01:51:08,940 --> 01:51:12,130
differential learning rates<font color="#CCCCCC"> bits and</font>

2551
01:51:12,130 --> 01:51:14,739
<font color="#CCCCCC">more</font><font color="#E5E5E5"> and you can see here I didn't do</font>

2552
01:51:14,739 --> 01:51:17,619
the cycle<font color="#CCCCCC"> mop thing because I found like</font>

2553
01:51:17,619 --> 01:51:19,540
now that I'm using a bigger architecture

2554
01:51:19,540 --> 01:51:21,309
it's got more parameters<font color="#E5E5E5"> it was</font>

2555
01:51:21,309 --> 01:51:23,980
overfitting<font color="#E5E5E5"> pretty quickly so rather</font>

2556
01:51:23,980 --> 01:51:25,840
than like cycle length equals<font color="#CCCCCC"> one never</font>

2557
01:51:25,840 --> 01:51:28,000
finding the right spot<font color="#E5E5E5"> it actually did</font>

2558
01:51:28,000 --> 01:51:29,920
find<font color="#E5E5E5"> the right spot</font><font color="#CCCCCC"> and if I used longer</font>

2559
01:51:29,920 --> 01:51:34,599
cycle<font color="#CCCCCC"> legs I found that my validation</font>

2560
01:51:34,599 --> 01:51:37,150
error was higher than<font color="#E5E5E5"> my training error</font>

2561
01:51:37,150 --> 01:51:40,900
<font color="#E5E5E5">it was over there</font><font color="#CCCCCC"> so check us</font><font color="#E5E5E5"> out though</font>

2562
01:51:40,900 --> 01:51:43,869
by using<font color="#CCCCCC"> these</font><font color="#E5E5E5"> you know three steps</font>

2563
01:51:43,869 --> 01:51:47,369
<font color="#E5E5E5">I got plus</font><font color="#CCCCCC"> TTA</font><font color="#E5E5E5"> 99.75</font>

2564
01:51:47,369 --> 01:51:50,380
so what does that mean<font color="#E5E5E5"> that</font><font color="#CCCCCC"> means</font><font color="#E5E5E5"> I have</font>

2565
01:51:50,380 --> 01:51:54,400
<font color="#E5E5E5">one incorrect dog for incorrect cats and</font>

2566
01:51:54,400 --> 01:51:58,780
when we look at the pictures of<font color="#E5E5E5"> them my</font>

2567
01:51:58,780 --> 01:52:02,050
incorrect dog has a<font color="#E5E5E5"> cat</font><font color="#CCCCCC"> now this one is</font>

2568
01:52:02,050 --> 01:52:04,179
<font color="#E5E5E5">not a either this one is not either</font><font color="#CCCCCC"> so</font>

2569
01:52:04,179 --> 01:52:07,449
I've actually got<font color="#CCCCCC"> one</font><font color="#E5E5E5"> mistake and then</font>

2570
01:52:07,449 --> 01:52:12,340
my incorrect<font color="#E5E5E5"> dog is teeth right so like</font>

2571
01:52:12,340 --> 01:52:15,250
<font color="#E5E5E5">we're at a point where we're now able to</font>

2572
01:52:15,250 --> 01:52:18,639
train a classifier that's so good<font color="#E5E5E5"> that</font>

2573
01:52:18,639 --> 01:52:23,409
it has like basically<font color="#CCCCCC"> one's dead right</font>

2574
01:52:23,409 --> 01:52:25,239
and so<font color="#E5E5E5"> when people say like we</font><font color="#CCCCCC"> have</font>

2575
01:52:25,239 --> 01:52:27,849
superhuman image performance now this is

2576
01:52:27,849 --> 01:52:29,079
kind<font color="#E5E5E5"> of what they're talking about right</font>

2577
01:52:29,079 --> 01:52:31,380
<font color="#CCCCCC">so did you actually when I looked at</font><font color="#E5E5E5"> the</font>

2578
01:52:31,380 --> 01:52:34,090
dog breed<font color="#E5E5E5"> one I did this morning</font><font color="#CCCCCC"> I was</font>

2579
01:52:34,090 --> 01:52:36,400
like it was it was<font color="#E5E5E5"> getting the dog</font>

2580
01:52:36,400 --> 01:52:39,719
breeds much better than I<font color="#CCCCCC"> ever</font><font color="#E5E5E5"> could</font>

2581
01:52:39,849 --> 01:52:42,130
so like hits this this is what we can

2582
01:52:42,130 --> 01:52:43,750
get to if you use a<font color="#E5E5E5"> really modern</font>

2583
01:52:43,750 --> 01:52:44,350
architect

2584
01:52:44,350 --> 01:52:48,160
<font color="#CCCCCC">like redneck and this suddenly</font><font color="#E5E5E5"> took out</font>

2585
01:52:48,160 --> 01:52:51,790
<font color="#CCCCCC">a tall way and remember</font><font color="#E5E5E5"> don't like 20</font>

2586
01:52:51,790 --> 01:52:55,540
minutes to<font color="#CCCCCC"> Train so that's kind of where</font>

2587
01:52:55,540 --> 01:53:02,640
we're up to<font color="#E5E5E5"> so if you want to do</font>

2588
01:53:02,640 --> 01:53:04,120
satellite imagery

2589
01:53:04,120 --> 01:53:07,720
instead right then<font color="#E5E5E5"> it's the same thing</font>

2590
01:53:07,720 --> 01:53:09,970
and<font color="#E5E5E5"> in fact</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the planet satellite</font>

2591
01:53:09,970 --> 01:53:11,380
<font color="#CCCCCC">data sets already oh and Chris or if</font>

2592
01:53:11,380 --> 01:53:12,610
you're using<font color="#E5E5E5"> Chris or you can jump</font>

2593
01:53:12,610 --> 01:53:17,320
<font color="#E5E5E5">straight there right and I just went</font>

2594
01:53:17,320 --> 01:53:20,020
<font color="#E5E5E5">into</font><font color="#CCCCCC"> this data stash planet and I can do</font>

2595
01:53:20,020 --> 01:53:25,480
<font color="#CCCCCC">exactly the same thing right I can image</font>

2596
01:53:25,480 --> 01:53:28,600
classifier<font color="#E5E5E5"> from CSV right and you can</font>

2597
01:53:28,600 --> 01:53:30,010
<font color="#E5E5E5">see these three lines are</font><font color="#CCCCCC"> actually</font>

2598
01:53:30,010 --> 01:53:31,690
exactly the same as my dog<font color="#E5E5E5"> breed lines</font>

2599
01:53:31,690 --> 01:53:34,240
<font color="#E5E5E5">you know how big how many lines are in</font>

2600
01:53:34,240 --> 01:53:37,000
<font color="#E5E5E5">the file grab my validation indexes this</font>

2601
01:53:37,000 --> 01:53:38,740
get data as<font color="#CCCCCC"> you can see it's identical</font>

2602
01:53:38,740 --> 01:53:42,220
<font color="#E5E5E5">except I've changed side on to top down</font>

2603
01:53:42,220 --> 01:53:44,800
the<font color="#E5E5E5"> satellite images about top</font><font color="#CCCCCC"> down so I</font>

2604
01:53:44,800 --> 01:53:47,020
can fit them vertically<font color="#E5E5E5"> and they still</font>

2605
01:53:47,020 --> 01:53:49,780
make<font color="#CCCCCC"> sense right</font><font color="#E5E5E5"> and so you can see here</font>

2606
01:53:49,780 --> 01:53:51,460
I'm<font color="#E5E5E5"> doing this trick round back to size</font>

2607
01:53:51,460 --> 01:53:55,240
equals 64 and<font color="#E5E5E5"> train a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> first</font>

2608
01:53:55,240 --> 01:53:57,100
<font color="#E5E5E5">learning rate find on right and</font>

2609
01:53:57,100 --> 01:53:59,230
interestingly in this<font color="#E5E5E5"> case you can see</font>

2610
01:53:59,230 --> 01:54:01,890
it<font color="#E5E5E5"> I want really high learning rates</font><font color="#CCCCCC"> I</font>

2611
01:54:01,890 --> 01:54:03,670
don't know what it<font color="#E5E5E5"> is about this</font>

2612
01:54:03,670 --> 01:54:05,800
particular<font color="#CCCCCC"> data set this</font><font color="#E5E5E5"> is true but</font>

2613
01:54:05,800 --> 01:54:07,810
<font color="#CCCCCC">it's clearly</font><font color="#E5E5E5"> I can use super</font><font color="#CCCCCC"> high</font>

2614
01:54:07,810 --> 01:54:08,920
learning<font color="#CCCCCC"> rate so I use a lot here</font><font color="#E5E5E5"> at a</font>

2615
01:54:08,920 --> 01:54:12,790
<font color="#E5E5E5">point</font><font color="#CCCCCC"> too and</font><font color="#E5E5E5"> so I've trained for</font><font color="#CCCCCC"> a</font>

2616
01:54:12,790 --> 01:54:13,330
while

2617
01:54:13,330 --> 01:54:16,210
differential learning rates right and so

2618
01:54:16,210 --> 01:54:18,970
remember<font color="#E5E5E5"> I said like if the data</font><font color="#CCCCCC"> sets</font>

2619
01:54:18,970 --> 01:54:20,980
<font color="#E5E5E5">very different to image net I probably</font>

2620
01:54:20,980 --> 01:54:23,500
want to train those middle layers a lot

2621
01:54:23,500 --> 01:54:25,300
more so I'm using divided by<font color="#E5E5E5"> three</font>

2622
01:54:25,300 --> 01:54:27,340
rather than divided by<font color="#E5E5E5"> ten all right the</font>

2623
01:54:27,340 --> 01:54:28,930
<font color="#E5E5E5">other than that is the same thing cycle</font>

2624
01:54:28,930 --> 01:54:33,430
Nauticals -<font color="#E5E5E5"> all right and then I just</font>

2625
01:54:33,430 --> 01:54:34,510
kind of keep<font color="#E5E5E5"> an eye on it so you can</font>

2626
01:54:34,510 --> 01:54:35,980
<font color="#CCCCCC">actually plot the</font><font color="#E5E5E5"> loss if you go and</font>

2627
01:54:35,980 --> 01:54:37,990
<font color="#CCCCCC">learned up shared a plot loss</font><font color="#E5E5E5"> you can</font>

2628
01:54:37,990 --> 01:54:40,900
see here<font color="#E5E5E5"> that here's the first cycle is</font>

2629
01:54:40,900 --> 01:54:43,150
the second cycle is the third cycle

2630
01:54:43,150 --> 01:54:45,220
<font color="#E5E5E5">right so you can see it gets better pops</font>

2631
01:54:45,220 --> 01:54:46,960
out gets better<font color="#E5E5E5"> pops out if better pops</font>

2632
01:54:46,960 --> 01:54:48,220
out and<font color="#E5E5E5"> each time it finds</font><font color="#CCCCCC"> something</font>

2633
01:54:48,220 --> 01:54:50,160
<font color="#CCCCCC">better than the last time</font>

2634
01:54:50,160 --> 01:54:53,440
<font color="#E5E5E5">then set the size up to 128 and just</font>

2635
01:54:53,440 --> 01:54:55,360
repeat exactly<font color="#E5E5E5"> the last few steps</font><font color="#CCCCCC"> and</font>

2636
01:54:55,360 --> 01:54:58,500
<font color="#E5E5E5">then</font><font color="#CCCCCC"> set up to 256</font>

2637
01:54:58,500 --> 01:55:02,170
repeat the<font color="#CCCCCC"> last</font><font color="#E5E5E5"> two steps and then</font><font color="#CCCCCC"> do</font>

2638
01:55:02,170 --> 01:55:05,650
<font color="#E5E5E5">TTA and if you submit this and this gets</font>

2639
01:55:05,650 --> 01:55:10,300
about<font color="#E5E5E5"> 30th place in this</font><font color="#CCCCCC"> competition</font><font color="#E5E5E5"> so</font>

2640
01:55:10,300 --> 01:55:12,820
these basic<font color="#CCCCCC"> steps work super well</font><font color="#E5E5E5"> this</font>

2641
01:55:12,820 --> 01:55:14,590
this<font color="#E5E5E5"> thing where I went all</font><font color="#CCCCCC"> the way</font><font color="#E5E5E5"> back</font>

2642
01:55:14,590 --> 01:55:19,630
to a size of 64<font color="#CCCCCC"> I wouldn't do that if I</font>

2643
01:55:19,630 --> 01:55:21,820
<font color="#E5E5E5">was doing like dogs and cats or dog</font>

2644
01:55:21,820 --> 01:55:23,590
breeds<font color="#E5E5E5"> because</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this is so small</font>

2645
01:55:23,590 --> 01:55:26,500
that<font color="#CCCCCC"> if if</font><font color="#E5E5E5"> the thing I was working on is</font>

2646
01:55:26,500 --> 01:55:29,520
very similar to<font color="#CCCCCC"> imagenet I would</font><font color="#E5E5E5"> kind of</font>

2647
01:55:29,520 --> 01:55:32,469
destroy those<font color="#CCCCCC"> imagenet weights</font><font color="#E5E5E5"> like 64</font>

2648
01:55:32,469 --> 01:55:34,929
by 64 is so<font color="#E5E5E5"> small but in this case the</font>

2649
01:55:34,929 --> 01:55:36,460
satellite imagery data it's so different

2650
01:55:36,460 --> 01:55:38,590
to<font color="#CCCCCC"> imagenet um you know</font><font color="#E5E5E5"> I really found</font>

2651
01:55:38,590 --> 01:55:39,460
<font color="#CCCCCC">that it worked pretty well</font>

2652
01:55:39,460 --> 01:55:43,300
<font color="#CCCCCC">start</font><font color="#E5E5E5"> right back</font><font color="#CCCCCC"> to these tiny images it</font>

2653
01:55:43,300 --> 01:55:45,330
<font color="#E5E5E5">really helped me</font><font color="#CCCCCC"> to avoid</font><font color="#E5E5E5"> overfitting</font>

2654
01:55:45,330 --> 01:55:48,610
<font color="#CCCCCC">and interestingly</font><font color="#E5E5E5"> using this kind of</font>

2655
01:55:48,610 --> 01:55:50,500
approach<font color="#CCCCCC"> I actually found that even</font><font color="#E5E5E5"> with</font>

2656
01:55:50,500 --> 01:55:53,860
using<font color="#CCCCCC"> only 128</font><font color="#E5E5E5"> by 128</font><font color="#CCCCCC"> I was getting like</font>

2657
01:55:53,860 --> 01:55:55,929
much better<font color="#CCCCCC"> cackled results than really</font>

2658
01:55:55,929 --> 01:55:57,610
everybody<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> leader board</font>

2659
01:55:57,610 --> 01:56:00,130
<font color="#CCCCCC">and when I say 30th place</font><font color="#E5E5E5"> this is a very</font>

2660
01:56:00,130 --> 01:56:02,710
recent competition<font color="#E5E5E5"> right and so I find</font>

2661
01:56:02,710 --> 01:56:05,710
like in the last year<font color="#CCCCCC"> like a lot</font><font color="#E5E5E5"> of</font>

2662
01:56:05,710 --> 01:56:07,210
<font color="#E5E5E5">people have got a lot better at computer</font>

2663
01:56:07,210 --> 01:56:09,190
vision and so the<font color="#CCCCCC"> people</font><font color="#E5E5E5"> in the top 50</font>

2664
01:56:09,190 --> 01:56:10,510
in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> competition were generally</font>

2665
01:56:10,510 --> 01:56:13,060
ensemble in dozens of<font color="#CCCCCC"> models</font><font color="#E5E5E5"> lots of</font>

2666
01:56:13,060 --> 01:56:15,640
people on a team<font color="#CCCCCC"> lots of pre-processing</font>

2667
01:56:15,640 --> 01:56:18,340
<font color="#E5E5E5">specific satellite data</font><font color="#CCCCCC"> and so forth so</font>

2668
01:56:18,340 --> 01:56:21,250
like to be able to get<font color="#E5E5E5"> xxx using this</font>

2669
01:56:21,250 --> 01:56:22,750
totally standard technique is<font color="#E5E5E5"> pretty</font>

2670
01:56:22,750 --> 01:56:24,929
cool

2671
01:56:24,960 --> 01:56:28,120
<font color="#CCCCCC">alright so now that we've got to this</font>

2672
01:56:28,120 --> 01:56:29,620
<font color="#E5E5E5">point right we've got through two</font>

2673
01:56:29,620 --> 01:56:32,650
lessons<font color="#E5E5E5"> if you're still here then</font>

2674
01:56:32,650 --> 01:56:35,260
<font color="#E5E5E5">hopefully you're thinking</font><font color="#CCCCCC"> okay this is</font>

2675
01:56:35,260 --> 01:56:37,690
actually<font color="#CCCCCC"> pretty useful I want to do more</font>

2676
01:56:37,690 --> 01:56:41,170
<font color="#CCCCCC">in which case</font><font color="#E5E5E5"> Kressel might not be where</font>

2677
01:56:41,170 --> 01:56:43,719
<font color="#CCCCCC">you</font><font color="#E5E5E5"> want to stay the issues with Kressel</font>

2678
01:56:43,719 --> 01:56:45,909
<font color="#CCCCCC">I mean it's it's</font><font color="#E5E5E5"> it's pretty handy it's</font>

2679
01:56:45,909 --> 01:56:47,679
pretty<font color="#E5E5E5"> cheap and something we haven't</font>

2680
01:56:47,679 --> 01:56:50,020
talked about<font color="#E5E5E5"> much</font><font color="#CCCCCC"> is paper space is</font>

2681
01:56:50,020 --> 01:56:52,210
another great<font color="#CCCCCC"> choice by</font><font color="#E5E5E5"> the way paper</font>

2682
01:56:52,210 --> 01:56:53,409
space are short they're going to be

2683
01:56:53,409 --> 01:56:55,780
releasing<font color="#CCCCCC"> kress</font><font color="#E5E5E5"> or like instant Drupal</font>

2684
01:56:55,780 --> 01:56:57,159
notebooks<font color="#E5E5E5"> unfortunately they're not</font>

2685
01:56:57,159 --> 01:56:59,739
<font color="#E5E5E5">ready quite yet but they do have an</font>

2686
01:56:59,739 --> 01:57:01,810
ability to<font color="#E5E5E5"> basically they have the best</font>

2687
01:57:01,810 --> 01:57:04,719
price<font color="#E5E5E5"> performance relationship right now</font>

2688
01:57:04,719 --> 01:57:08,110
<font color="#CCCCCC">and they you can SSH into them and use</font>

2689
01:57:08,110 --> 01:57:10,540
them so<font color="#E5E5E5"> they're also a great choice</font><font color="#CCCCCC"> and</font>

2690
01:57:10,540 --> 01:57:11,560
probably by the time<font color="#E5E5E5"> this</font>

2691
01:57:11,560 --> 01:57:13,870
<font color="#E5E5E5">the MOOC will probably have a separate</font>

2692
01:57:13,870 --> 01:57:15,940
lesson<font color="#E5E5E5"> showing you how to set up set up</font>

2693
01:57:15,940 --> 01:57:18,100
paper space<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there they're likely</font>

2694
01:57:18,100 --> 01:57:20,800
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be a great</font><font color="#CCCCCC"> option</font><font color="#E5E5E5"> but at some point</font>

2695
01:57:20,800 --> 01:57:21,880
you're probably going to<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> look at</font>

2696
01:57:21,880 --> 01:57:26,260
AWS<font color="#E5E5E5"> a couple of reasons why the first is</font>

2697
01:57:26,260 --> 01:57:30,460
as you<font color="#E5E5E5"> all</font><font color="#CCCCCC"> know by now amazon have been</font>

2698
01:57:30,460 --> 01:57:33,370
kind enough<font color="#E5E5E5"> to donate about $200,000</font>

2699
01:57:33,370 --> 01:57:35,980
worth of compute time to<font color="#E5E5E5"> this course so</font>

2700
01:57:35,980 --> 01:57:37,840
<font color="#E5E5E5">I want to say thank you very much to</font>

2701
01:57:37,840 --> 01:57:40,720
Amazon<font color="#E5E5E5"> we've all been given credit</font><font color="#CCCCCC"> so</font>

2702
01:57:40,720 --> 01:57:42,190
everybody this<font color="#E5E5E5"> year</font><font color="#CCCCCC"> so thanks very much</font>

2703
01:57:42,190 --> 01:57:46,420
<font color="#CCCCCC">hey</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> worry we're so sorry</font><font color="#E5E5E5"> you're</font>

2704
01:57:46,420 --> 01:57:48,010
sure in the MOOC<font color="#E5E5E5"> we didn't get it for</font>

2705
01:57:48,010 --> 01:57:50,440
<font color="#E5E5E5">you but</font><font color="#CCCCCC"> everybody here is like AWS</font>

2706
01:57:50,440 --> 01:57:53,170
credits for<font color="#E5E5E5"> everybody so um but you can</font>

2707
01:57:53,170 --> 01:57:55,330
get even<font color="#E5E5E5"> if you're not here in</font><font color="#CCCCCC"> person</font>

2708
01:57:55,330 --> 01:57:57,130
you<font color="#CCCCCC"> can get AWS credits from lots of</font>

2709
01:57:57,130 --> 01:58:00,130
places<font color="#E5E5E5"> github has</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> student</font><font color="#CCCCCC"> pack Google</font>

2710
01:58:00,130 --> 01:58:02,050
for github student pack that's like 150

2711
01:58:02,050 --> 01:58:05,200
<font color="#CCCCCC">bucks worth of credits AWS educate can</font>

2712
01:58:05,200 --> 01:58:08,320
get credits these<font color="#CCCCCC"> our</font><font color="#E5E5E5"> office students so</font>

2713
01:58:08,320 --> 01:58:09,370
there's lots of<font color="#E5E5E5"> places you can get</font>

2714
01:58:09,370 --> 01:58:13,050
started on AWS<font color="#CCCCCC"> pretty much everybody</font>

2715
01:58:13,050 --> 01:58:15,250
everybody a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> people that you</font>

2716
01:58:15,250 --> 01:58:18,660
might work<font color="#CCCCCC"> with will be using AWS</font>

2717
01:58:18,660 --> 01:58:21,700
<font color="#CCCCCC">because it's like super flexible</font><font color="#E5E5E5"> right</font>

2718
01:58:21,700 --> 01:58:25,600
now<font color="#E5E5E5"> AWS has the fastest available GPUs</font>

2719
01:58:25,600 --> 01:58:28,950
you can get in the cloud<font color="#CCCCCC"> they're p3s</font>

2720
01:58:28,950 --> 01:58:31,090
they're kind of<font color="#E5E5E5"> expensive at</font><font color="#CCCCCC"> three bucks</font>

2721
01:58:31,090 --> 01:58:32,860
<font color="#E5E5E5">an hour but</font><font color="#CCCCCC"> if you've got like a model</font>

2722
01:58:32,860 --> 01:58:34,630
where you've done all the steps before

2723
01:58:34,630 --> 01:58:35,830
<font color="#E5E5E5">you're thinking this is looking pretty</font>

2724
01:58:35,830 --> 01:58:38,470
<font color="#CCCCCC">good</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> for 6 bucks</font><font color="#E5E5E5"> you could get</font>

2725
01:58:38,470 --> 01:58:41,800
a p3 for<font color="#CCCCCC"> 2 hours and run turbo</font><font color="#E5E5E5"> speed</font>

2726
01:58:41,800 --> 01:58:45,880
right<font color="#CCCCCC"> um we didn't start with AWS</font>

2727
01:58:45,880 --> 01:58:48,130
<font color="#E5E5E5">because well hey it's like twice as</font>

2728
01:58:48,130 --> 01:58:49,990
expensive as Chris<font color="#CCCCCC"> Hall for the cheapest</font>

2729
01:58:49,990 --> 01:58:54,310
GPU<font color="#CCCCCC"> and being a Texan setup right but I</font>

2730
01:58:54,310 --> 01:58:57,190
wanted<font color="#CCCCCC"> to kind of go through</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> show</font>

2731
01:58:57,190 --> 01:58:59,650
you how<font color="#E5E5E5"> to get your AWS</font><font color="#CCCCCC"> setup and so</font>

2732
01:58:59,650 --> 01:59:01,060
we're going to<font color="#E5E5E5"> be going slightly over</font>

2733
01:59:01,060 --> 01:59:03,790
time to do that<font color="#CCCCCC"> but I want</font><font color="#E5E5E5"> to show you a</font>

2734
01:59:03,790 --> 01:59:05,350
very<font color="#E5E5E5"> quick place I feel prettier if you</font>

2735
01:59:05,350 --> 01:59:07,300
have to but<font color="#E5E5E5"> I</font><font color="#CCCCCC"> want to show you very</font>

2736
01:59:07,300 --> 01:59:10,270
<font color="#E5E5E5">quickly how you can get your AWS</font><font color="#CCCCCC"> setup</font>

2737
01:59:10,270 --> 01:59:14,050
right<font color="#E5E5E5"> from scratch so basically you have</font>

2738
01:59:14,050 --> 01:59:17,140
<font color="#E5E5E5">to go to consult on AWS but amazon.com</font>

2739
01:59:17,140 --> 01:59:19,360
and it'll take you<font color="#CCCCCC"> to the console</font><font color="#E5E5E5"> right</font>

2740
01:59:19,360 --> 01:59:22,300
<font color="#CCCCCC">and so you can</font><font color="#E5E5E5"> follow along on the video</font>

2741
01:59:22,300 --> 01:59:23,119
with<font color="#E5E5E5"> this</font>

2742
01:59:23,119 --> 01:59:27,080
quickly<font color="#E5E5E5"> from here you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to go to AC -</font>

2743
01:59:27,080 --> 01:59:29,659
this is where<font color="#E5E5E5"> you set</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> your instances</font>

2744
01:59:29,659 --> 01:59:33,619
and<font color="#CCCCCC"> so from ec2 you need to do what's</font>

2745
01:59:33,619 --> 01:59:35,690
called launching an instance so

2746
01:59:35,690 --> 01:59:36,920
launching an instance means you're

2747
01:59:36,920 --> 01:59:38,960
basically<font color="#CCCCCC"> creating a computer</font><font color="#E5E5E5"> right now</font>

2748
01:59:38,960 --> 01:59:41,239
<font color="#E5E5E5">creating a computer on Amazon so</font><font color="#CCCCCC"> I say</font>

2749
01:59:41,239 --> 01:59:44,150
launch instance<font color="#CCCCCC"> and what</font><font color="#E5E5E5"> we've done is</font>

2750
01:59:44,150 --> 01:59:47,480
we've<font color="#CCCCCC"> created a fast AI</font><font color="#E5E5E5"> it's got an amo</font>

2751
01:59:47,480 --> 01:59:49,940
<font color="#E5E5E5">and ami is like a template for how your</font>

2752
01:59:49,940 --> 01:59:51,710
<font color="#CCCCCC">computer's</font><font color="#E5E5E5"> going to begin so if you've</font>

2753
01:59:51,710 --> 01:59:54,260
<font color="#E5E5E5">got a community a Mis and type in fast</font>

2754
01:59:54,260 --> 01:59:56,719
AI<font color="#E5E5E5"> you'll see that there's</font><font color="#CCCCCC"> one there</font>

2755
01:59:56,719 --> 02:00:00,560
called fast<font color="#E5E5E5"> AI part</font><font color="#CCCCCC"> 1 version 2 for the</font>

2756
02:00:00,560 --> 02:00:04,090
<font color="#CCCCCC">p2 ok so I'm</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> select that</font><font color="#E5E5E5"> and</font>

2757
02:00:04,090 --> 02:00:06,409
then we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say what kind of</font>

2758
02:00:06,409 --> 02:00:08,900
computer do<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> and so I can say I</font>

2759
02:00:08,900 --> 02:00:13,219
want<font color="#E5E5E5"> a GPU compute computer and then I</font>

2760
02:00:13,219 --> 02:00:16,670
can say I<font color="#E5E5E5"> want a</font><font color="#CCCCCC"> p2 x</font><font color="#E5E5E5"> large this</font><font color="#CCCCCC"> is the</font>

2761
02:00:16,670 --> 02:00:19,340
cheapest reasonably effective for deep

2762
02:00:19,340 --> 02:00:21,260
learning instance<font color="#E5E5E5"> type they</font><font color="#CCCCCC"> have and</font>

2763
02:00:21,260 --> 02:00:25,520
then I can say launch<font color="#E5E5E5"> and then I can say</font>

2764
02:00:25,520 --> 02:00:29,510
launch and so at this point they<font color="#E5E5E5"> asked</font>

2765
02:00:29,510 --> 02:00:33,530
you to<font color="#CCCCCC"> choose a key pair</font><font color="#E5E5E5"> right now</font>

2766
02:00:33,530 --> 02:00:35,630
if you<font color="#E5E5E5"> don't have a key pair</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to</font>

2767
02:00:35,630 --> 02:00:39,699
create one<font color="#CCCCCC"> right so to create a key pair</font>

2768
02:00:39,699 --> 02:00:44,480
you need to<font color="#E5E5E5"> open your terminal</font><font color="#CCCCCC"> if you</font>

2769
02:00:44,480 --> 02:00:47,119
don't have a terminal<font color="#E5E5E5"> if you've got a</font>

2770
02:00:47,119 --> 02:00:48,830
Mac or Linux box you've definitely got

2771
02:00:48,830 --> 02:00:50,810
one if you've got<font color="#E5E5E5"> Windows hopefully</font>

2772
02:00:50,810 --> 02:00:53,929
you've got<font color="#E5E5E5"> Ubuntu</font><font color="#CCCCCC"> if you don't already</font>

2773
02:00:53,929 --> 02:00:56,270
have<font color="#E5E5E5"> Ubuntu setup you can</font><font color="#CCCCCC"> go to the</font>

2774
02:00:56,270 --> 02:01:01,820
Windows Store and click on<font color="#E5E5E5"> Ubuntu right</font>

2775
02:01:01,820 --> 02:01:04,280
we'll get<font color="#CCCCCC"> it from the Windows Store</font><font color="#E5E5E5"> so</font>

2776
02:01:04,280 --> 02:01:08,230
from there you<font color="#E5E5E5"> basically go SSH</font>

2777
02:01:08,230 --> 02:01:12,320
-<font color="#CCCCCC"> caged in and that will create like</font><font color="#E5E5E5"> a</font>

2778
02:01:12,320 --> 02:01:15,020
special password for<font color="#E5E5E5"> your computer to be</font>

2779
02:01:15,020 --> 02:01:16,969
able<font color="#E5E5E5"> to log in to</font><font color="#CCCCCC"> Amazon and then you</font>

2780
02:01:16,969 --> 02:01:19,489
just<font color="#E5E5E5"> hit enter three times</font><font color="#CCCCCC"> okay and</font>

2781
02:01:19,489 --> 02:01:22,250
that's<font color="#E5E5E5"> going to create for you your key</font>

2782
02:01:22,250 --> 02:01:24,560
you can use to get<font color="#E5E5E5"> into Amazon alright</font>

2783
02:01:24,560 --> 02:01:26,659
so then what I do is<font color="#CCCCCC"> I copy</font><font color="#E5E5E5"> that key</font>

2784
02:01:26,659 --> 02:01:28,280
somewhere<font color="#E5E5E5"> that I know where it is so</font>

2785
02:01:28,280 --> 02:01:30,610
<font color="#E5E5E5">it'll be in the dot SSH folder</font>

2786
02:01:30,610 --> 02:01:33,730
it's called<font color="#CCCCCC"> IDRs a dub and so</font><font color="#E5E5E5"> I'm going</font>

2787
02:01:33,730 --> 02:01:39,490
to<font color="#E5E5E5"> copy it</font><font color="#CCCCCC"> to my hard drive so if you're</font>

2788
02:01:39,490 --> 02:01:41,170
in a macro and<font color="#CCCCCC"> Linux it'll already be in</font>

2789
02:01:41,170 --> 02:01:42,550
an easy<font color="#E5E5E5"> to find place it'll be in your</font>

2790
02:01:42,550 --> 02:01:49,360
SSH folder<font color="#E5E5E5"> that in documents</font><font color="#CCCCCC"> so from</font>

2791
02:01:49,360 --> 02:01:53,530
there back<font color="#E5E5E5"> in AWS you have to tell it</font>

2792
02:01:53,530 --> 02:01:55,300
<font color="#E5E5E5">that you've created this key so you can</font>

2793
02:01:55,300 --> 02:01:59,260
go to key pairs<font color="#E5E5E5"> and you say import key</font>

2794
02:01:59,260 --> 02:02:02,020
pair<font color="#E5E5E5"> and you just browse</font><font color="#CCCCCC"> to that file</font>

2795
02:02:02,020 --> 02:02:06,490
that<font color="#CCCCCC"> you just created</font><font color="#E5E5E5"> there it is</font>

2796
02:02:06,490 --> 02:02:11,020
I say import<font color="#CCCCCC"> okay so if you've</font><font color="#E5E5E5"> ever used</font>

2797
02:02:11,020 --> 02:02:13,420
SSH before you've already got the key

2798
02:02:13,420 --> 02:02:14,980
pair you don't have to do<font color="#E5E5E5"> those depths</font>

2799
02:02:14,980 --> 02:02:17,260
if you've used AWS before you've already

2800
02:02:17,260 --> 02:02:18,910
imported it<font color="#E5E5E5"> you don't have to do that</font>

2801
02:02:18,910 --> 02:02:20,770
step<font color="#E5E5E5"> maybe haven't done any of those</font>

2802
02:02:20,770 --> 02:02:24,430
<font color="#CCCCCC">things you have to do</font><font color="#E5E5E5"> both steps so</font><font color="#CCCCCC"> now</font>

2803
02:02:24,430 --> 02:02:29,640
I can go<font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and launch my instance</font>

2804
02:02:30,510 --> 02:02:35,520
community<font color="#E5E5E5"> I am eyes search last</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> I</font>

2805
02:02:35,520 --> 02:02:41,010
select launch<font color="#E5E5E5"> and so now it asks me</font>

2806
02:02:41,010 --> 02:02:43,810
what's where's your key pair and I can

2807
02:02:43,810 --> 02:02:48,750
choose<font color="#CCCCCC"> that one that I just grabbed</font><font color="#E5E5E5"> okay</font>

2808
02:02:48,990 --> 02:02:51,400
so this is going to<font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead and create</font>

2809
02:02:51,400 --> 02:02:55,390
<font color="#CCCCCC">a new computer for me to log</font><font color="#E5E5E5"> into and</font>

2810
02:02:55,390 --> 02:02:56,680
you<font color="#CCCCCC"> can see here it says</font><font color="#E5E5E5"> the following</font>

2811
02:02:56,680 --> 02:02:58,870
<font color="#E5E5E5">have been initiated and so if I click on</font>

2812
02:02:58,870 --> 02:03:02,770
that<font color="#CCCCCC"> it'll show me</font><font color="#E5E5E5"> this new computer</font>

2813
02:03:02,770 --> 02:03:05,950
<font color="#CCCCCC">that I've created</font><font color="#E5E5E5"> okay so it'll be able</font>

2814
02:03:05,950 --> 02:03:08,520
<font color="#E5E5E5">to log into it</font>

2815
02:03:08,520 --> 02:03:11,790
I need to know its IP address<font color="#E5E5E5"> so here it</font>

2816
02:03:11,790 --> 02:03:14,100
is the IP<font color="#E5E5E5"> address there</font><font color="#CCCCCC"> okay so I can</font>

2817
02:03:14,100 --> 02:03:17,460
copy<font color="#CCCCCC"> that and that's the IP address of</font>

2818
02:03:17,460 --> 02:03:20,700
my<font color="#E5E5E5"> computer so to get</font><font color="#CCCCCC"> to this computer I</font>

2819
02:03:20,700 --> 02:03:23,310
need<font color="#E5E5E5"> to SSH to it so</font><font color="#CCCCCC"> SSH into a computer</font>

2820
02:03:23,310 --> 02:03:25,110
means<font color="#E5E5E5"> connecting to that computer so</font>

2821
02:03:25,110 --> 02:03:26,310
<font color="#CCCCCC">that it's like</font><font color="#E5E5E5"> you're typing in that</font>

2822
02:03:26,310 --> 02:03:29,960
computer<font color="#CCCCCC"> so I type SSH and they</font><font color="#E5E5E5"> username</font>

2823
02:03:29,960 --> 02:03:33,690
<font color="#E5E5E5">for this instance is always Ubuntu right</font>

2824
02:03:33,690 --> 02:03:36,420
and then I can paste in that<font color="#CCCCCC"> IP address</font>

2825
02:03:36,420 --> 02:03:38,910
<font color="#CCCCCC">and then there's one more thing I have</font>

2826
02:03:38,910 --> 02:03:41,730
<font color="#E5E5E5">to do which is</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> to connect up the</font>

2827
02:03:41,730 --> 02:03:44,340
<font color="#CCCCCC">jupiter notebook on that instance</font><font color="#E5E5E5"> to the</font>

2828
02:03:44,340 --> 02:03:46,740
jupiter notebook on my machine<font color="#CCCCCC"> and so to</font>

2829
02:03:46,740 --> 02:03:48,930
do<font color="#E5E5E5"> that there's just a particular flag</font>

2830
02:03:48,930 --> 02:03:50,970
that<font color="#CCCCCC"> i said</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> we can talk about it</font><font color="#E5E5E5"> on</font>

2831
02:03:50,970 --> 02:03:52,440
the forums as to exactly what<font color="#E5E5E5"> it does</font>

2832
02:03:52,440 --> 02:03:55,220
<font color="#E5E5E5">but you</font><font color="#CCCCCC"> just type - l.a</font><font color="#E5E5E5"> today date</font>

2833
02:03:55,220 --> 02:03:59,970
<font color="#E5E5E5">localhost 8 8 8 8</font><font color="#CCCCCC"> ok so like once you've</font>

2834
02:03:59,970 --> 02:04:01,470
done it<font color="#E5E5E5"> once you</font><font color="#CCCCCC"> can like save</font><font color="#E5E5E5"> that as</font>

2835
02:04:01,470 --> 02:04:03,450
an alias and type in the same thing

2836
02:04:03,450 --> 02:04:05,250
every time

2837
02:04:05,250 --> 02:04:07,590
so we can check<font color="#E5E5E5"> here we can see it says</font>

2838
02:04:07,590 --> 02:04:09,510
<font color="#E5E5E5">that it's running so we should be</font><font color="#CCCCCC"> able</font>

2839
02:04:09,510 --> 02:04:12,570
<font color="#CCCCCC">to</font><font color="#E5E5E5"> now hit enter first time ever which</font>

2840
02:04:12,570 --> 02:04:14,700
sit<font color="#CCCCCC"> reconnect to</font><font color="#E5E5E5"> it it does checks this</font>

2841
02:04:14,700 --> 02:04:19,830
is<font color="#CCCCCC"> okay I'll say yes and then that goes</font>

2842
02:04:19,830 --> 02:04:27,420
ahead<font color="#E5E5E5"> and SSH is in so this ami is all</font>

2843
02:04:27,420 --> 02:04:29,700
set<font color="#E5E5E5"> up for you</font><font color="#CCCCCC"> alright so you'll find</font>

2844
02:04:29,700 --> 02:04:31,380
<font color="#E5E5E5">that the very first time you log in it</font>

2845
02:04:31,380 --> 02:04:32,880
takes a few<font color="#CCCCCC"> extra seconds because</font><font color="#E5E5E5"> it</font>

2846
02:04:32,880 --> 02:04:34,080
just<font color="#E5E5E5"> kind of is getting everything set</font>

2847
02:04:34,080 --> 02:04:36,600
up<font color="#E5E5E5"> but once it's logged in you'll see</font>

2848
02:04:36,600 --> 02:04:38,370
<font color="#E5E5E5">there</font><font color="#CCCCCC"> that there's a directory called</font>

2849
02:04:38,370 --> 02:04:41,820
<font color="#E5E5E5">fast AI and the fast AI directory</font>

2850
02:04:41,820 --> 02:04:45,120
contains<font color="#E5E5E5"> our fast AI repo that contains</font>

2851
02:04:45,120 --> 02:04:48,810
all the<font color="#E5E5E5"> notebooks</font><font color="#CCCCCC"> or the code etc</font><font color="#E5E5E5"> so I</font>

2852
02:04:48,810 --> 02:04:51,690
can just go<font color="#CCCCCC"> CD faster all</font><font color="#E5E5E5"> right first</font>

2853
02:04:51,690 --> 02:04:53,640
<font color="#E5E5E5">thing you do when you get in is to make</font>

2854
02:04:53,640 --> 02:04:55,140
sure<font color="#E5E5E5"> it's updated so you just go</font><font color="#CCCCCC"> git</font>

2855
02:04:55,140 --> 02:04:59,880
<font color="#CCCCCC">pull right</font><font color="#E5E5E5"> and that updates to make sure</font>

2856
02:04:59,880 --> 02:05:01,800
that your repo is the same as the<font color="#E5E5E5"> most</font>

2857
02:05:01,800 --> 02:05:05,190
<font color="#E5E5E5">recent video and so as you can see there</font>

2858
02:05:05,190 --> 02:05:05,610
we go

2859
02:05:05,610 --> 02:05:06,840
<font color="#E5E5E5">let's make sure it's got all the most</font>

2860
02:05:06,840 --> 02:05:08,520
<font color="#CCCCCC">recent code</font><font color="#E5E5E5"> the second thing you should</font>

2861
02:05:08,520 --> 02:05:11,970
<font color="#E5E5E5">do is type Condor and update you can</font>

2862
02:05:11,970 --> 02:05:13,800
<font color="#E5E5E5">just do this maybe once a</font><font color="#CCCCCC"> month or so</font>

2863
02:05:13,800 --> 02:05:15,690
and<font color="#CCCCCC"> that makes sure</font><font color="#E5E5E5"> that the libraries</font>

2864
02:05:15,690 --> 02:05:17,760
there are all the most<font color="#E5E5E5"> recent libraries</font>

2865
02:05:17,760 --> 02:05:19,260
I'm not going to run that so it takes a

2866
02:05:19,260 --> 02:05:20,440
<font color="#E5E5E5">couple of</font><font color="#CCCCCC"> minutes okay</font>

2867
02:05:20,440 --> 02:05:22,450
and then the last step<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to type</font>

2868
02:05:22,450 --> 02:05:26,650
<font color="#E5E5E5">particular notebook okay</font>

2869
02:05:26,650 --> 02:05:29,800
so this is going to<font color="#E5E5E5"> go ahead and launch</font>

2870
02:05:29,800 --> 02:05:32,530
the<font color="#CCCCCC"> triplet notebook server on this</font>

2871
02:05:32,530 --> 02:05:35,200
machine<font color="#CCCCCC"> again the first time I do it</font><font color="#E5E5E5"> the</font>

2872
02:05:35,200 --> 02:05:37,540
<font color="#E5E5E5">first time you do everything on AWS</font>

2873
02:05:37,540 --> 02:05:40,450
it just takes<font color="#E5E5E5"> like a minute</font><font color="#CCCCCC"> or two and</font>

2874
02:05:40,450 --> 02:05:42,190
<font color="#CCCCCC">then once you've done it</font><font color="#E5E5E5"> in the future</font>

2875
02:05:42,190 --> 02:05:44,380
<font color="#E5E5E5">we just as fast as running it locally</font>

2876
02:05:44,380 --> 02:05:47,530
<font color="#E5E5E5">basically okay so you can see it's going</font>

2877
02:05:47,530 --> 02:05:49,900
ahead<font color="#E5E5E5"> and firing</font><font color="#CCCCCC"> out the notebook and so</font>

2878
02:05:49,900 --> 02:05:51,460
what's<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> happen is that because</font>

2879
02:05:51,460 --> 02:05:53,740
when<font color="#E5E5E5"> we SSH into it we said to</font><font color="#CCCCCC"> both</font>

2880
02:05:53,740 --> 02:05:56,890
connect our notebook port to the<font color="#E5E5E5"> remote</font>

2881
02:05:56,890 --> 02:05:58,810
notebook port we're just going<font color="#CCCCCC"> to be</font>

2882
02:05:58,810 --> 02:06:00,880
able<font color="#E5E5E5"> to use this locally so I see</font><font color="#CCCCCC"> he</font>

2883
02:06:00,880 --> 02:06:03,130
says here copy paste this URL<font color="#E5E5E5"> so I'm</font>

2884
02:06:03,130 --> 02:06:06,280
going<font color="#E5E5E5"> to grab that URL and I'm going to</font>

2885
02:06:06,280 --> 02:06:11,980
<font color="#E5E5E5">paste it into</font><font color="#CCCCCC"> my browser</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's it</font>

2886
02:06:11,980 --> 02:06:15,730
<font color="#E5E5E5">okay so this notebook is now actually</font>

2887
02:06:15,730 --> 02:06:17,920
not running on<font color="#E5E5E5"> my machine it's actually</font>

2888
02:06:17,920 --> 02:06:21,130
<font color="#E5E5E5">running on AWS</font><font color="#CCCCCC"> okay using</font><font color="#E5E5E5"> the AWS</font><font color="#CCCCCC"> GPU</font>

2889
02:06:21,130 --> 02:06:23,230
it's got a lot<font color="#CCCCCC"> of memory</font><font color="#E5E5E5"> it's not the</font>

2890
02:06:23,230 --> 02:06:25,870
fastest<font color="#CCCCCC"> around but it's</font><font color="#E5E5E5"> not terrible</font>

2891
02:06:25,870 --> 02:06:28,480
you can always<font color="#E5E5E5"> fire up a p3 if you want</font>

2892
02:06:28,480 --> 02:06:30,070
<font color="#CCCCCC">something</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> super fast</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

2893
02:06:30,070 --> 02:06:33,580
costing me<font color="#CCCCCC"> ninety cents</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> minute</font><font color="#E5E5E5"> okay so</font>

2894
02:06:33,580 --> 02:06:36,010
when you're<font color="#E5E5E5"> finished please don't</font><font color="#CCCCCC"> forget</font>

2895
02:06:36,010 --> 02:06:38,400
<font color="#CCCCCC">to shut it down right so to shut it down</font>

2896
02:06:38,400 --> 02:06:43,030
<font color="#E5E5E5">you can right-click on it and say</font>

2897
02:06:43,030 --> 02:06:48,850
instance date stop<font color="#E5E5E5"> okay we've got</font><font color="#CCCCCC"> five</font>

2898
02:06:48,850 --> 02:06:51,670
<font color="#CCCCCC">hundred bucks of credit assuming that</font>

2899
02:06:51,670 --> 02:06:53,380
you put your code down in the

2900
02:06:53,380 --> 02:06:55,750
spreadsheet<font color="#E5E5E5"> one thing I forgot to do the</font>

2901
02:06:55,750 --> 02:06:57,250
<font color="#E5E5E5">first time I showed</font><font color="#CCCCCC"> you this by the way</font>

2902
02:06:57,250 --> 02:07:02,170
<font color="#E5E5E5">I said make sure you choose a p2</font><font color="#CCCCCC"> the</font>

2903
02:07:02,170 --> 02:07:03,430
second time I went<font color="#CCCCCC"> through I didn't</font>

2904
02:07:03,430 --> 02:07:05,530
choose p2 by mistake so just<font color="#E5E5E5"> don't</font>

2905
02:07:05,530 --> 02:07:09,370
<font color="#E5E5E5">forget choose gpq compute P</font><font color="#CCCCCC"> - do you</font>

2906
02:07:09,370 --> 02:07:11,379
have a question

2907
02:07:11,379 --> 02:07:15,659
<font color="#CCCCCC">my Bernice it's an hour</font><font color="#E5E5E5"> thank you</font>

2908
02:07:15,659 --> 02:07:20,379
<font color="#E5E5E5">90 cents an hour it also costs like I</font>

2909
02:07:20,379 --> 02:07:21,789
don't know three<font color="#CCCCCC"> or four bucks a month</font>

2910
02:07:21,789 --> 02:07:24,249
<font color="#E5E5E5">for the storage as well</font><font color="#CCCCCC"> thanks</font><font color="#E5E5E5"> for</font>

2911
02:07:24,249 --> 02:07:26,109
<font color="#E5E5E5">checking that</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right see you next</font>

2912
02:07:26,109 --> 00:00:00,000
week sorry<font color="#CCCCCC"> we're a bit</font><font color="#E5E5E5"> over</font>

