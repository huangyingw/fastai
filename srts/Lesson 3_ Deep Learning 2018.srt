1
00:00:00,149 --> 00:00:01,870
welcome back everybody

2
00:00:01,870 --> 00:00:03,600
[Music]

3
00:00:03,600 --> 00:00:07,649
I'm sure you've<font color="#CCCCCC"> noticed but</font><font color="#E5E5E5"> there's been</font>

4
00:00:07,649 --> 00:00:09,599
a lot<font color="#CCCCCC"> of cool activity on the forum this</font>

5
00:00:09,599 --> 00:00:10,710
<font color="#E5E5E5">week</font><font color="#CCCCCC"> and one of the things that's</font><font color="#E5E5E5"> been</font>

6
00:00:10,710 --> 00:00:12,780
really<font color="#E5E5E5"> great to see is that a lot</font><font color="#CCCCCC"> of you</font>

7
00:00:12,780 --> 00:00:15,630
have started<font color="#E5E5E5"> creating really helpful</font>

8
00:00:15,630 --> 00:00:18,240
materials<font color="#CCCCCC"> both for your classmates</font><font color="#E5E5E5"> to</font>

9
00:00:18,240 --> 00:00:20,010
better understand stuff and<font color="#CCCCCC"> also for you</font>

10
00:00:20,010 --> 00:00:23,279
<font color="#E5E5E5">to better understand stuff by trying to</font>

11
00:00:23,279 --> 00:00:25,920
<font color="#E5E5E5">teach what you've learned</font><font color="#CCCCCC"> I just wanted</font>

12
00:00:25,920 --> 00:00:29,550
<font color="#E5E5E5">to highlight a few</font><font color="#CCCCCC"> i've actually posted</font>

13
00:00:29,550 --> 00:00:32,340
to the wiki thread of a few of these but

14
00:00:32,340 --> 00:00:36,780
there's<font color="#E5E5E5"> there's lots more</font><font color="#CCCCCC"> Russian has</font>

15
00:00:36,780 --> 00:00:38,579
posted a whole<font color="#E5E5E5"> bunch</font><font color="#CCCCCC"> of nice</font>

16
00:00:38,579 --> 00:00:41,550
<font color="#E5E5E5">introductory tutorials so for example if</font>

17
00:00:41,550 --> 00:00:42,480
you're<font color="#CCCCCC"> having any trouble getting</font>

18
00:00:42,480 --> 00:00:46,079
connected with AWS<font color="#CCCCCC"> she's got a whole</font>

19
00:00:46,079 --> 00:00:49,649
<font color="#E5E5E5">step-by-step how to go about logging in</font>

20
00:00:49,649 --> 00:00:51,629
<font color="#CCCCCC">and</font><font color="#E5E5E5"> getting everything working which i</font>

21
00:00:51,629 --> 00:00:53,789
think is a really<font color="#E5E5E5"> terrific thing and so</font>

22
00:00:53,789 --> 00:00:57,750
it's a<font color="#E5E5E5"> kind of thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you are</font>

23
00:00:57,750 --> 00:00:59,430
writing<font color="#E5E5E5"> some notes for</font><font color="#CCCCCC"> yourself to</font>

24
00:00:59,430 --> 00:01:01,289
remind you how to do it

25
00:01:01,289 --> 00:01:02,940
you may as well post them<font color="#CCCCCC"> for others to</font>

26
00:01:02,940 --> 00:01:05,459
do it as<font color="#E5E5E5"> well and by using a markdown</font>

27
00:01:05,459 --> 00:01:07,439
file like this<font color="#E5E5E5"> and it's actually</font><font color="#CCCCCC"> good</font>

28
00:01:07,439 --> 00:01:08,790
practice<font color="#E5E5E5"> if you haven't used github</font>

29
00:01:08,790 --> 00:01:10,549
before if you put it up<font color="#E5E5E5"> on github</font>

30
00:01:10,549 --> 00:01:13,950
<font color="#E5E5E5">everybody can now use it</font><font color="#CCCCCC"> or of course</font>

31
00:01:13,950 --> 00:01:17,130
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can just put it in the forum so more</font>

32
00:01:17,130 --> 00:01:20,009
advanced a thing that Reshma wrote up

33
00:01:20,009 --> 00:01:21,930
about is she noticed<font color="#E5E5E5"> that I like using</font>

34
00:01:21,930 --> 00:01:25,140
<font color="#CCCCCC">Tmax which is a handy little thing</font><font color="#E5E5E5"> which</font>

35
00:01:25,140 --> 00:01:30,200
lets me<font color="#CCCCCC"> lets me basically have a window</font>

36
00:01:30,200 --> 00:01:33,720
<font color="#E5E5E5">I'll show you</font><font color="#CCCCCC"> so as soon as</font><font color="#E5E5E5"> I log</font><font color="#CCCCCC"> into</font>

37
00:01:33,720 --> 00:01:38,009
<font color="#E5E5E5">my computer if I run</font><font color="#CCCCCC"> Tmax you'll see</font>

38
00:01:38,009 --> 00:01:39,869
that all<font color="#CCCCCC"> of my</font><font color="#E5E5E5"> windows pop straight up</font>

39
00:01:39,869 --> 00:01:42,150
basically and<font color="#E5E5E5"> I can like continue</font>

40
00:01:42,150 --> 00:01:44,250
<font color="#CCCCCC">running stuff</font><font color="#E5E5E5"> in the background</font><font color="#CCCCCC"> and I</font>

41
00:01:44,250 --> 00:01:46,020
can like I've got them<font color="#E5E5E5"> over here and</font><font color="#CCCCCC"> I</font>

42
00:01:46,020 --> 00:01:48,210
<font color="#E5E5E5">can kind of zoom</font><font color="#CCCCCC"> into it or I</font><font color="#E5E5E5"> can move</font>

43
00:01:48,210 --> 00:01:50,610
over<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the top which is here so Jupiter</font>

44
00:01:50,610 --> 00:01:53,579
<font color="#CCCCCC">colonel running and so forth so if that</font>

45
00:01:53,579 --> 00:01:54,360
sounds<font color="#CCCCCC"> interesting</font>

46
00:01:54,360 --> 00:01:57,479
<font color="#CCCCCC">Reshma has a tutorial here on how you</font>

47
00:01:57,479 --> 00:02:00,509
can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> two maps and it's actually</font><font color="#E5E5E5"> got a</font>

48
00:02:00,509 --> 00:02:03,060
whole<font color="#E5E5E5"> bunch of stuff in her github so</font>

49
00:02:03,060 --> 00:02:07,110
that's that's<font color="#E5E5E5"> really cool I built among</font>

50
00:02:07,110 --> 00:02:10,860
has written a<font color="#CCCCCC"> very nice</font><font color="#E5E5E5"> kind of summary</font>

51
00:02:10,860 --> 00:02:13,689
<font color="#CCCCCC">basically of our</font><font color="#E5E5E5"> last lesson</font>

52
00:02:13,689 --> 00:02:17,319
which kind of covers what are the key

53
00:02:17,319 --> 00:02:19,120
<font color="#E5E5E5">things</font><font color="#CCCCCC"> we did and why did we do them so</font>

54
00:02:19,120 --> 00:02:21,700
if<font color="#E5E5E5"> you are a kind of</font>

55
00:02:21,700 --> 00:02:23,110
wondering like<font color="#CCCCCC"> how does</font><font color="#E5E5E5"> it fit together</font>

56
00:02:23,110 --> 00:02:25,959
<font color="#CCCCCC">I think this is a really helpful summary</font>

57
00:02:25,959 --> 00:02:28,810
<font color="#CCCCCC">like what if those couple</font><font color="#E5E5E5"> of hours look</font>

58
00:02:28,810 --> 00:02:30,430
like if<font color="#CCCCCC"> we summarize it all into a page</font>

59
00:02:30,430 --> 00:02:38,470
or two<font color="#CCCCCC"> I also really like Pavel has</font><font color="#E5E5E5"> dad</font>

60
00:02:38,470 --> 00:02:40,750
kind of done a deep dive on<font color="#E5E5E5"> the learning</font>

61
00:02:40,750 --> 00:02:45,069
<font color="#E5E5E5">rate finder</font><font color="#CCCCCC"> which is a topic that</font><font color="#E5E5E5"> a lot</font>

62
00:02:45,069 --> 00:02:46,330
<font color="#CCCCCC">of you have been interested</font><font color="#E5E5E5"> in learning</font>

63
00:02:46,330 --> 00:02:49,330
<font color="#E5E5E5">more about particularly those of you who</font>

64
00:02:49,330 --> 00:02:50,470
have<font color="#CCCCCC"> done deep learning</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> I</font>

65
00:02:50,470 --> 00:02:52,720
realized that this<font color="#E5E5E5"> is like a solution to</font>

66
00:02:52,720 --> 00:02:54,160
a<font color="#E5E5E5"> problem that you've been having for a</font>

67
00:02:54,160 --> 00:02:55,989
long time and haven't<font color="#CCCCCC"> seen before</font><font color="#E5E5E5"> and so</font>

68
00:02:55,989 --> 00:02:57,880
it's kind of something which hasn't

69
00:02:57,880 --> 00:02:59,500
<font color="#CCCCCC">really been blogged about</font><font color="#E5E5E5"> before so</font><font color="#CCCCCC"> this</font>

70
00:02:59,500 --> 00:03:00,940
is<font color="#E5E5E5"> the first I've seen it's logged about</font>

71
00:03:00,940 --> 00:03:04,079
<font color="#E5E5E5">so when I put this on Twitter a link to</font>

72
00:03:04,079 --> 00:03:06,519
pebbles post it's<font color="#E5E5E5"> been shared you know</font>

73
00:03:06,519 --> 00:03:08,739
hundreds of times<font color="#E5E5E5"> it's been really</font>

74
00:03:08,739 --> 00:03:10,810
<font color="#E5E5E5">really popular</font><font color="#CCCCCC"> and viewed</font><font color="#E5E5E5"> many thousands</font>

75
00:03:10,810 --> 00:03:13,560
of<font color="#E5E5E5"> times so that's some great content</font>

76
00:03:13,560 --> 00:03:16,630
<font color="#E5E5E5">radec has posted lots of cool stuff I</font>

77
00:03:16,630 --> 00:03:18,579
really like this practitioners guide<font color="#E5E5E5"> to</font>

78
00:03:18,579 --> 00:03:21,190
apply torch which again this is more for

79
00:03:21,190 --> 00:03:23,079
more advanced students but it's like

80
00:03:23,079 --> 00:03:25,420
digging<font color="#CCCCCC"> into people who have never used</font>

81
00:03:25,420 --> 00:03:28,650
hi torch before<font color="#E5E5E5"> but know a bit about</font>

82
00:03:28,650 --> 00:03:30,940
<font color="#E5E5E5">numerical programming in general and</font>

83
00:03:30,940 --> 00:03:32,260
it's a quick<font color="#E5E5E5"> introduction to</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> high</font>

84
00:03:32,260 --> 00:03:35,560
torch is different<font color="#CCCCCC"> and then there's been</font>

85
00:03:35,560 --> 00:03:36,819
<font color="#E5E5E5">some interesting</font><font color="#CCCCCC"> little bits of research</font>

86
00:03:36,819 --> 00:03:38,709
<font color="#CCCCCC">like what's the relationship between</font>

87
00:03:38,709 --> 00:03:40,959
<font color="#E5E5E5">learning rate and batch</font><font color="#CCCCCC"> sites</font><font color="#E5E5E5"> so one</font><font color="#CCCCCC"> of</font>

88
00:03:40,959 --> 00:03:42,639
the students<font color="#CCCCCC"> actually asked</font><font color="#E5E5E5"> me this</font>

89
00:03:42,639 --> 00:03:44,620
<font color="#CCCCCC">before class</font><font color="#E5E5E5"> and I said oh well one of</font>

90
00:03:44,620 --> 00:03:46,030
the<font color="#E5E5E5"> other students has written an</font>

91
00:03:46,030 --> 00:03:49,930
analysis of<font color="#E5E5E5"> exactly that so what he's</font>

92
00:03:49,930 --> 00:03:51,489
done<font color="#E5E5E5"> is basically looked through and</font>

93
00:03:51,489 --> 00:03:52,930
tried different<font color="#CCCCCC"> batch sizes</font><font color="#E5E5E5"> and</font>

94
00:03:52,930 --> 00:03:54,010
different<font color="#E5E5E5"> learning rates and tried to</font>

95
00:03:54,010 --> 00:03:55,389
<font color="#E5E5E5">see how they</font><font color="#CCCCCC"> seemed to relate together</font>

96
00:03:55,389 --> 00:03:58,510
<font color="#E5E5E5">and these are all like cool experiments</font>

97
00:03:58,510 --> 00:04:00,299
which you know you can try yourself

98
00:04:00,299 --> 00:04:04,060
<font color="#CCCCCC">I predict again he's written something</font>

99
00:04:04,060 --> 00:04:05,829
again a<font color="#E5E5E5"> kind of a research into this</font>

100
00:04:05,829 --> 00:04:10,810
<font color="#E5E5E5">question I made a claim that the the</font>

101
00:04:10,810 --> 00:04:12,099
<font color="#E5E5E5">stochastic gradient descent</font><font color="#CCCCCC"> with</font>

102
00:04:12,099 --> 00:04:14,769
restarts finds<font color="#E5E5E5"> more generalizable</font><font color="#CCCCCC"> parts</font>

103
00:04:14,769 --> 00:04:16,478
of the function surface because they're

104
00:04:16,478 --> 00:04:18,339
kind of<font color="#E5E5E5"> flatter and he's been trying</font><font color="#CCCCCC"> to</font>

105
00:04:18,339 --> 00:04:19,599
<font color="#E5E5E5">figure</font><font color="#CCCCCC"> out is</font><font color="#E5E5E5"> there a way</font><font color="#CCCCCC"> to measure</font>

106
00:04:19,599 --> 00:04:22,479
that<font color="#E5E5E5"> more directly</font><font color="#CCCCCC"> not quite successful</font>

107
00:04:22,479 --> 00:04:23,770
yet but a really interesting<font color="#E5E5E5"> piece</font><font color="#CCCCCC"> of</font>

108
00:04:23,770 --> 00:04:27,789
<font color="#CCCCCC">research got some introductions</font><font color="#E5E5E5"> to</font>

109
00:04:27,789 --> 00:04:32,999
convolutional neural networks<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font>

110
00:04:32,999 --> 00:04:34,199
something that<font color="#E5E5E5"> we'll be learning about</font>

111
00:04:34,199 --> 00:04:36,389
towards<font color="#E5E5E5"> the</font><font color="#CCCCCC"> end of this course</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I'm</font>

112
00:04:36,389 --> 00:04:37,349
sure you've noticed we're using

113
00:04:37,349 --> 00:04:40,499
<font color="#CCCCCC">something called ResNet and a nonce aha</font>

114
00:04:40,499 --> 00:04:43,189
actually posted a pretty impressive

115
00:04:43,189 --> 00:04:45,569
<font color="#E5E5E5">analysis of like</font><font color="#CCCCCC"> watts arrest net and</font>

116
00:04:45,569 --> 00:04:47,399
why is it<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> and this one's</font>

117
00:04:47,399 --> 00:04:49,169
<font color="#E5E5E5">actually being very already shared very</font>

118
00:04:49,169 --> 00:04:50,639
widely around<font color="#E5E5E5"> the internet</font><font color="#CCCCCC"> I've seen</font>

119
00:04:50,639 --> 00:04:54,360
also<font color="#E5E5E5"> so some more advanced students who</font>

120
00:04:54,360 --> 00:04:57,059
are<font color="#E5E5E5"> interested in jumping ahead can look</font>

121
00:04:57,059 --> 00:05:00,360
at that<font color="#E5E5E5"> and</font><font color="#CCCCCC"> uphill Tamang also has done</font>

122
00:05:00,360 --> 00:05:04,349
something similar<font color="#CCCCCC"> so lots of yeah lots</font>

123
00:05:04,349 --> 00:05:06,059
of stuff going<font color="#CCCCCC"> on on the forums</font>

124
00:05:06,059 --> 00:05:07,919
<font color="#E5E5E5">I'm sure you've also noticed we have a</font>

125
00:05:07,919 --> 00:05:11,069
beginner forum<font color="#E5E5E5"> now specifically for you</font>

126
00:05:11,069 --> 00:05:15,929
know<font color="#E5E5E5"> asking questions which you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> it</font>

127
00:05:15,929 --> 00:05:17,479
<font color="#CCCCCC">is</font><font color="#E5E5E5"> always the case that there are no</font>

128
00:05:17,479 --> 00:05:19,860
dumb<font color="#CCCCCC"> questions but when there's lots of</font>

129
00:05:19,860 --> 00:05:21,929
people<font color="#CCCCCC"> around</font><font color="#E5E5E5"> you talking about</font><font color="#CCCCCC"> advanced</font>

130
00:05:21,929 --> 00:05:23,369
topics it might not feel<font color="#CCCCCC"> that way so</font>

131
00:05:23,369 --> 00:05:25,279
hopefully<font color="#CCCCCC"> the beginners forum is just a</font>

132
00:05:25,279 --> 00:05:29,819
less<font color="#E5E5E5"> intimidating space and if there are</font>

133
00:05:29,819 --> 00:05:32,099
<font color="#E5E5E5">more advanced student who can help</font>

134
00:05:32,099 --> 00:05:34,079
answer<font color="#E5E5E5"> those questions please do but</font>

135
00:05:34,079 --> 00:05:35,129
remember<font color="#CCCCCC"> when you do answer</font><font color="#E5E5E5"> those</font>

136
00:05:35,129 --> 00:05:37,800
questions<font color="#CCCCCC"> try to answer</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> way that's</font>

137
00:05:37,800 --> 00:05:39,419
friendly<font color="#E5E5E5"> to</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> that maybe you know</font>

138
00:05:39,419 --> 00:05:41,429
have no more than a<font color="#E5E5E5"> year of</font><font color="#CCCCCC"> programming</font>

139
00:05:41,429 --> 00:05:42,989
<font color="#CCCCCC">experience</font><font color="#E5E5E5"> you haven't done any machine</font>

140
00:05:42,989 --> 00:05:50,399
learning before<font color="#E5E5E5"> so you know I hope other</font>

141
00:05:50,399 --> 00:05:52,979
people<font color="#CCCCCC"> in the class</font><font color="#E5E5E5"> feel like you can</font>

142
00:05:52,979 --> 00:05:54,659
contribute as well<font color="#E5E5E5"> and just remember all</font>

143
00:05:54,659 --> 00:05:56,159
<font color="#CCCCCC">of the people we just</font><font color="#E5E5E5"> looked at or many</font>

144
00:05:56,159 --> 00:05:58,979
of them I believe<font color="#E5E5E5"> have never hosted</font>

145
00:05:58,979 --> 00:06:00,959
anything to the<font color="#E5E5E5"> internet</font><font color="#CCCCCC"> before right I</font>

146
00:06:00,959 --> 00:06:02,429
mean you don't have to be a particular

147
00:06:02,429 --> 00:06:04,769
kind<font color="#E5E5E5"> of person to</font><font color="#CCCCCC"> be allowed to</font><font color="#E5E5E5"> block</font>

148
00:06:04,769 --> 00:06:07,079
something<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> jot down</font><font color="#CCCCCC"> your</font>

149
00:06:07,079 --> 00:06:11,399
notes<font color="#CCCCCC"> throw it up there and one handy</font>

150
00:06:11,399 --> 00:06:12,959
thing is if you just<font color="#E5E5E5"> put it on the forum</font>

151
00:06:12,959 --> 00:06:15,779
and you're not quite<font color="#CCCCCC"> sure of some of the</font>

152
00:06:15,779 --> 00:06:18,569
<font color="#E5E5E5">details then then you know you have</font><font color="#CCCCCC"> an</font>

153
00:06:18,569 --> 00:06:20,399
opportunity<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> feedback</font><font color="#E5E5E5"> and say like</font>

154
00:06:20,399 --> 00:06:22,049
oh well<font color="#E5E5E5"> that's not quite how that works</font>

155
00:06:22,049 --> 00:06:23,579
you know actually it works this<font color="#E5E5E5"> way</font>

156
00:06:23,579 --> 00:06:25,559
instead<font color="#E5E5E5"> or</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> that's a really</font>

157
00:06:25,559 --> 00:06:26,819
interesting<font color="#E5E5E5"> insight</font><font color="#CCCCCC"> have you thought</font>

158
00:06:26,819 --> 00:06:29,029
<font color="#E5E5E5">about</font><font color="#CCCCCC"> taking</font><font color="#E5E5E5"> this further and so forth</font>

159
00:06:29,029 --> 00:06:32,159
so what we've done so far is a kind of

160
00:06:32,159 --> 00:06:34,919
an injury<font color="#E5E5E5"> an introduction as a just as a</font>

161
00:06:34,919 --> 00:06:38,969
practitioner<font color="#CCCCCC"> to convolutional neural</font>

162
00:06:38,969 --> 00:06:41,309
networks for images<font color="#E5E5E5"> and we haven't</font>

163
00:06:41,309 --> 00:06:43,389
<font color="#E5E5E5">really talked much at all about</font>

164
00:06:43,389 --> 00:06:46,330
the theory or why they work or the math

165
00:06:46,330 --> 00:06:48,280
<font color="#E5E5E5">of them but on the other</font><font color="#CCCCCC"> hand what we</font>

166
00:06:48,280 --> 00:06:52,659
<font color="#E5E5E5">have done is seen how to build a model</font>

167
00:06:52,659 --> 00:06:55,900
<font color="#E5E5E5">which actually works exceptionally well</font>

168
00:06:55,900 --> 00:06:59,319
<font color="#CCCCCC">compact</font><font color="#E5E5E5"> world-class level</font><font color="#CCCCCC"> models and</font>

169
00:06:59,319 --> 00:07:01,780
<font color="#CCCCCC">we'll kind of review a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of</font>

170
00:07:01,780 --> 00:07:06,669
that<font color="#E5E5E5"> today</font><font color="#CCCCCC"> and then also today we're</font>

171
00:07:06,669 --> 00:07:08,289
<font color="#E5E5E5">going to dig in a little quite a lot</font>

172
00:07:08,289 --> 00:07:09,819
more<font color="#CCCCCC"> actually into</font><font color="#E5E5E5"> the underlying theory</font>

173
00:07:09,819 --> 00:07:12,280
<font color="#E5E5E5">of like what is a what</font><font color="#CCCCCC"> is a CNN</font><font color="#E5E5E5"> what's a</font>

174
00:07:12,280 --> 00:07:14,650
convolution<font color="#E5E5E5"> how does this work</font><font color="#CCCCCC"> and then</font>

175
00:07:14,650 --> 00:07:16,000
we're going<font color="#E5E5E5"> to kind</font><font color="#CCCCCC"> of go through this</font>

176
00:07:16,000 --> 00:07:18,449
this<font color="#E5E5E5"> cycle where we're going to dig</font>

177
00:07:18,449 --> 00:07:21,039
we're going to do a<font color="#E5E5E5"> little intro into a</font>

178
00:07:21,039 --> 00:07:23,379
<font color="#CCCCCC">whole bunch of application</font><font color="#E5E5E5"> areas using</font>

179
00:07:23,379 --> 00:07:25,930
<font color="#E5E5E5">neural nets for structured data</font><font color="#CCCCCC"> so kind</font>

180
00:07:25,930 --> 00:07:29,560
<font color="#E5E5E5">of like logistics or forecasting or you</font>

181
00:07:29,560 --> 00:07:31,449
know financial data or that<font color="#CCCCCC"> kind of</font>

182
00:07:31,449 --> 00:07:34,360
thing and then looking at language

183
00:07:34,360 --> 00:07:36,669
applications and LP applications using

184
00:07:36,669 --> 00:07:39,210
recurrent neural<font color="#E5E5E5"> Nets</font><font color="#CCCCCC"> and then</font>

185
00:07:39,210 --> 00:07:42,689
collaborative filtering for

186
00:07:42,689 --> 00:07:45,550
<font color="#CCCCCC">recommendations and systems</font><font color="#E5E5E5"> and so these</font>

187
00:07:45,550 --> 00:07:47,740
will<font color="#E5E5E5"> all</font><font color="#CCCCCC"> be like similar</font><font color="#E5E5E5"> to what we've</font>

188
00:07:47,740 --> 00:07:50,199
done<font color="#E5E5E5"> for</font><font color="#CCCCCC"> cnn's for images would be like</font>

189
00:07:50,199 --> 00:07:51,009
here's how<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> get a</font>

190
00:07:51,009 --> 00:07:53,020
<font color="#CCCCCC">state-of-the-art result</font><font color="#E5E5E5"> without digging</font>

191
00:07:53,020 --> 00:07:55,150
<font color="#E5E5E5">into the theory but but knowing how to</font>

192
00:07:55,150 --> 00:07:57,849
<font color="#CCCCCC">actually make</font><font color="#E5E5E5"> a work and then we're kind</font>

193
00:07:57,849 --> 00:08:00,400
of going to go back<font color="#E5E5E5"> through those almost</font>

194
00:08:00,400 --> 00:08:01,839
<font color="#E5E5E5">in reverse order</font><font color="#CCCCCC"> so then we're going to</font>

195
00:08:01,839 --> 00:08:03,669
dig right<font color="#E5E5E5"> into collaborative filtering</font>

196
00:08:03,669 --> 00:08:06,250
<font color="#E5E5E5">in a lot of detail and see how how to</font>

197
00:08:06,250 --> 00:08:08,409
write the code<font color="#CCCCCC"> underneath and how the</font>

198
00:08:08,409 --> 00:08:10,479
math works<font color="#E5E5E5"> underneath and then we're</font>

199
00:08:10,479 --> 00:08:11,589
<font color="#E5E5E5">going to do the same thing for the</font>

200
00:08:11,589 --> 00:08:13,719
structured data analysis<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font>

201
00:08:13,719 --> 00:08:15,400
do the same thing for comp<font color="#CCCCCC"> nets for</font>

202
00:08:15,400 --> 00:08:18,069
images<font color="#E5E5E5"> and finally an in depth deep dive</font>

203
00:08:18,069 --> 00:08:20,620
into<font color="#CCCCCC"> apparent neural networks so that's</font>

204
00:08:20,620 --> 00:08:24,610
kind of where we're<font color="#E5E5E5"> okay so let's start</font>

205
00:08:24,610 --> 00:08:29,020
<font color="#E5E5E5">by doing a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of a review and I</font>

206
00:08:29,020 --> 00:08:32,620
want to also<font color="#E5E5E5"> provide a bit more detail</font>

207
00:08:32,620 --> 00:08:35,049
on some<font color="#CCCCCC"> on some</font><font color="#E5E5E5"> steps that we only</font>

208
00:08:35,049 --> 00:08:36,940
briefly slipped over so I want<font color="#E5E5E5"> to make</font>

209
00:08:36,940 --> 00:08:39,208
sure that we're all<font color="#E5E5E5"> able to complete</font>

210
00:08:39,208 --> 00:08:42,039
<font color="#E5E5E5">kind of last week's assignment which was</font>

211
00:08:42,039 --> 00:08:45,310
<font color="#E5E5E5">that the dog breeze</font><font color="#CCCCCC"> I mean to basically</font>

212
00:08:45,310 --> 00:08:47,050
<font color="#CCCCCC">apply what you've learned with another</font>

213
00:08:47,050 --> 00:08:48,790
data set and<font color="#E5E5E5"> I thought the easiest</font><font color="#CCCCCC"> one</font>

214
00:08:48,790 --> 00:08:50,320
to do with me the dog breeds<font color="#CCCCCC"> cattle</font>

215
00:08:50,320 --> 00:08:52,089
competition and so I want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make sure</font>

216
00:08:52,089 --> 00:08:53,709
everybody has<font color="#E5E5E5"> everything you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to do</font>

217
00:08:53,709 --> 00:08:55,889
this<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now so and</font><font color="#E5E5E5"> the</font>

218
00:08:55,889 --> 00:08:57,269
first thing is to<font color="#CCCCCC"> make sure</font><font color="#E5E5E5"> that you</font>

219
00:08:57,269 --> 00:09:01,230
know how to<font color="#E5E5E5"> download data and so there's</font>

220
00:09:01,230 --> 00:09:03,059
<font color="#E5E5E5">there's two main places at the moment</font>

221
00:09:03,059 --> 00:09:04,799
we're kind of downloading data from one

222
00:09:04,799 --> 00:09:07,439
is from cattle and the other is from

223
00:09:07,439 --> 00:09:11,339
like anywhere else<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'll first of</font>

224
00:09:11,339 --> 00:09:15,299
all do the the casual version<font color="#E5E5E5"> so to</font>

225
00:09:15,299 --> 00:09:18,569
<font color="#E5E5E5">download from cattle</font><font color="#CCCCCC"> we use something</font>

226
00:09:18,569 --> 00:09:24,809
called cattle CLI which is<font color="#CCCCCC"> gear and to</font>

227
00:09:24,809 --> 00:09:28,379
install<font color="#E5E5E5"> what I think it's already in the</font>

228
00:09:28,379 --> 00:09:34,980
system will shake yeah so<font color="#CCCCCC"> it</font><font color="#E5E5E5"> should</font>

229
00:09:34,980 --> 00:09:39,149
<font color="#E5E5E5">already be in your environment but</font><font color="#CCCCCC"> to</font>

230
00:09:39,149 --> 00:09:41,040
<font color="#CCCCCC">make sure one thing that happens is</font>

231
00:09:41,040 --> 00:09:42,449
because<font color="#E5E5E5"> this is downloading</font><font color="#CCCCCC"> from the</font>

232
00:09:42,449 --> 00:09:44,369
cattle website<font color="#CCCCCC"> through</font><font color="#E5E5E5"> experience</font><font color="#CCCCCC"> rating</font>

233
00:09:44,369 --> 00:09:45,540
<font color="#E5E5E5">every time</font><font color="#CCCCCC"> cap will change us the</font>

234
00:09:45,540 --> 00:09:48,149
<font color="#E5E5E5">website</font><font color="#CCCCCC"> it breaks</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> you try to</font>

235
00:09:48,149 --> 00:09:51,569
<font color="#E5E5E5">use it and if the cattles websites</font>

236
00:09:51,569 --> 00:09:53,279
changed recent when you'll<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to make</font>

237
00:09:53,279 --> 00:09:55,709
sure<font color="#E5E5E5"> you get the most recent version so</font>

238
00:09:55,709 --> 00:10:00,379
you<font color="#CCCCCC"> can always go to pip install</font><font color="#E5E5E5"> cable -</font>

239
00:10:00,379 --> 00:10:06,419
CL I - - upgrade<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> that'll just</font>

240
00:10:06,419 --> 00:10:07,829
<font color="#CCCCCC">make sure that you've got</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> latest</font>

241
00:10:07,829 --> 00:10:10,290
<font color="#CCCCCC">version of of it and everything that it</font>

242
00:10:10,290 --> 00:10:14,009
depends<font color="#E5E5E5"> on okay</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so then having</font><font color="#CCCCCC"> done</font>

243
00:10:14,009 --> 00:10:16,679
that<font color="#E5E5E5"> you can follow the instructions</font>

244
00:10:16,679 --> 00:10:18,749
actually<font color="#CCCCCC"> I think Reshma was kind enough</font>

245
00:10:18,749 --> 00:10:21,720
to<font color="#CCCCCC"> they go there's a cable</font><font color="#E5E5E5"> CLI you</font><font color="#CCCCCC"> know</font>

246
00:10:21,720 --> 00:10:22,919
like everything<font color="#CCCCCC"> you need to know</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

247
00:10:22,919 --> 00:10:29,910
under<font color="#E5E5E5"> Reshma's github so basically to do</font>

248
00:10:29,910 --> 00:10:35,089
that<font color="#E5E5E5"> at the next step you go</font><font color="#CCCCCC"> kg download</font>

249
00:10:35,089 --> 00:10:37,679
<font color="#E5E5E5">and then you provide your username with</font>

250
00:10:37,679 --> 00:10:41,100
- you you provide<font color="#E5E5E5"> your password with - P</font>

251
00:10:41,100 --> 00:10:44,399
and then - see<font color="#CCCCCC"> it the competition name</font>

252
00:10:44,399 --> 00:10:46,019
and a lot of<font color="#CCCCCC"> people in the forum is</font>

253
00:10:46,019 --> 00:10:47,730
being confused about what<font color="#CCCCCC"> to enter here</font>

254
00:10:47,730 --> 00:10:49,529
<font color="#E5E5E5">and so the key thing to note is that</font>

255
00:10:49,529 --> 00:10:51,439
when you're at a<font color="#CCCCCC"> capital competition</font>

256
00:10:51,439 --> 00:10:55,559
<font color="#E5E5E5">after the /c there's a specific name</font>

257
00:10:55,559 --> 00:10:58,169
<font color="#E5E5E5">planet - understanding - etcetera right</font>

258
00:10:58,169 --> 00:11:02,100
<font color="#E5E5E5">that's the name you need okay the other</font>

259
00:11:02,100 --> 00:11:03,749
<font color="#CCCCCC">thing you'll</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to make sure is that</font>

260
00:11:03,749 --> 00:11:06,809
you've on your own computer<font color="#E5E5E5"> have</font>

261
00:11:06,809 --> 00:11:08,489
attempted to click download at least

262
00:11:08,489 --> 00:11:09,670
once<font color="#E5E5E5"> because when you do</font>

263
00:11:09,670 --> 00:11:12,910
ask you to accept<font color="#E5E5E5"> the rules if you've</font>

264
00:11:12,910 --> 00:11:15,730
forgotten<font color="#E5E5E5"> to do that</font><font color="#CCCCCC"> kg download</font><font color="#E5E5E5"> will</font>

265
00:11:15,730 --> 00:11:17,170
give you a hint<font color="#CCCCCC"> it'll say</font><font color="#E5E5E5"> oh it looks</font>

266
00:11:17,170 --> 00:11:18,850
like<font color="#CCCCCC"> you might have forgotten the rules</font>

267
00:11:18,850 --> 00:11:21,700
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> log into cattle with like a</font>

268
00:11:21,700 --> 00:11:24,010
Google account<font color="#CCCCCC"> like</font><font color="#E5E5E5"> anything other than</font>

269
00:11:24,010 --> 00:11:26,800
a<font color="#CCCCCC"> username password this won't</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> so</font>

270
00:11:26,800 --> 00:11:28,720
you'll need to click forgot password<font color="#CCCCCC"> on</font>

271
00:11:28,720 --> 00:11:30,730
<font color="#CCCCCC">Kaggle and get them to send</font><font color="#E5E5E5"> you a normal</font>

272
00:11:30,730 --> 00:11:33,550
<font color="#CCCCCC">password so that's the cattle version</font>

273
00:11:33,550 --> 00:11:36,220
right<font color="#E5E5E5"> and so when you do</font><font color="#CCCCCC"> that you end up</font>

274
00:11:36,220 --> 00:11:38,410
<font color="#E5E5E5">with a whole folder created for you with</font>

275
00:11:38,410 --> 00:11:41,430
<font color="#CCCCCC">all of that</font><font color="#E5E5E5"> competition and data in it</font>

276
00:11:41,430 --> 00:11:44,080
<font color="#CCCCCC">so a couple</font><font color="#E5E5E5"> of reasons you might want</font><font color="#CCCCCC"> to</font>

277
00:11:44,080 --> 00:11:46,480
<font color="#E5E5E5">not</font><font color="#CCCCCC"> use that the first years that you're</font>

278
00:11:46,480 --> 00:11:48,220
using a data set<font color="#E5E5E5"> that's not on cattle</font>

279
00:11:48,220 --> 00:11:50,320
the second is that<font color="#E5E5E5"> you don't want all of</font>

280
00:11:50,320 --> 00:11:52,600
the data sets in a cattle competition

281
00:11:52,600 --> 00:11:55,330
for<font color="#E5E5E5"> example the planet competition that</font>

282
00:11:55,330 --> 00:11:56,800
we've<font color="#E5E5E5"> been looking at a little bit</font><font color="#CCCCCC"> we'll</font>

283
00:11:56,800 --> 00:12:00,010
look<font color="#E5E5E5"> at again</font><font color="#CCCCCC"> today has data in two</font>

284
00:12:00,010 --> 00:12:03,610
formats<font color="#CCCCCC"> TIFF and JPEG</font><font color="#E5E5E5"> the TIFF is</font><font color="#CCCCCC"> 19</font>

285
00:12:03,610 --> 00:12:06,370
gigabytes<font color="#E5E5E5"> and the JPEG is 600 megabytes</font>

286
00:12:06,370 --> 00:12:08,380
<font color="#CCCCCC">so you probably don't want</font><font color="#E5E5E5"> to download</font>

287
00:12:08,380 --> 00:12:11,890
<font color="#E5E5E5">both so I'll show you a really cool kit</font>

288
00:12:11,890 --> 00:12:13,510
which actually somebody<font color="#E5E5E5"> on the forum</font>

289
00:12:13,510 --> 00:12:14,920
taught me<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> was one of the young</font>

290
00:12:14,920 --> 00:12:18,900
<font color="#CCCCCC">MSN students here at USF there's a</font>

291
00:12:18,900 --> 00:12:24,160
<font color="#E5E5E5">Chrome extension cord curl</font><font color="#CCCCCC"> W</font><font color="#E5E5E5"> get so you</font>

292
00:12:24,160 --> 00:12:27,520
can just<font color="#E5E5E5"> search for a curl W get and</font>

293
00:12:27,520 --> 00:12:29,590
then you install<font color="#E5E5E5"> it by just clicking on</font>

294
00:12:29,590 --> 00:12:31,420
<font color="#CCCCCC">installed</font><font color="#E5E5E5"> and having an extension</font><font color="#CCCCCC"> before</font>

295
00:12:31,420 --> 00:12:35,470
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> from now on every time you</font><font color="#E5E5E5"> try</font>

296
00:12:35,470 --> 00:12:36,970
to<font color="#E5E5E5"> download something so I'll try and</font>

297
00:12:36,970 --> 00:12:39,840
<font color="#CCCCCC">download this file</font>

298
00:12:40,480 --> 00:12:42,699
and I'll just<font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead and cancel</font><font color="#E5E5E5"> it</font>

299
00:12:42,699 --> 00:12:45,220
<font color="#CCCCCC">right and now you see this</font><font color="#E5E5E5"> little yellow</font>

300
00:12:45,220 --> 00:12:47,620
button that's added up here there's a

301
00:12:47,620 --> 00:12:51,310
whole command here right<font color="#E5E5E5"> so I can copy</font>

302
00:12:51,310 --> 00:12:59,949
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and paste it into my</font><font color="#E5E5E5"> window and hit</font>

303
00:12:59,949 --> 00:13:03,670
go and it's there<font color="#E5E5E5"> cuz</font><font color="#CCCCCC"> okay so what that</font>

304
00:13:03,670 --> 00:13:06,040
<font color="#CCCCCC">does is</font><font color="#E5E5E5"> like all of</font><font color="#CCCCCC"> your cookies and</font>

305
00:13:06,040 --> 00:13:08,139
<font color="#CCCCCC">headers</font><font color="#E5E5E5"> and everything else needed to</font>

306
00:13:08,139 --> 00:13:10,449
<font color="#CCCCCC">download that file is like say so this</font>

307
00:13:10,449 --> 00:13:13,959
is not<font color="#E5E5E5"> just useful for downloading data</font>

308
00:13:13,959 --> 00:13:16,029
it's also<font color="#E5E5E5"> useful if you like trying to</font>

309
00:13:16,029 --> 00:13:18,130
<font color="#CCCCCC">download some I don't know TV</font><font color="#E5E5E5"> show or</font>

310
00:13:18,130 --> 00:13:19,420
something<font color="#CCCCCC"> anything where</font><font color="#E5E5E5"> you're it's</font>

311
00:13:19,420 --> 00:13:23,440
hidden behind a login<font color="#E5E5E5"> or something you</font>

312
00:13:23,440 --> 00:13:25,120
can you can grab it<font color="#E5E5E5"> and actually that is</font>

313
00:13:25,120 --> 00:13:26,800
<font color="#E5E5E5">very useful for data science because</font>

314
00:13:26,800 --> 00:13:28,240
quite often we<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> analyze things</font>

315
00:13:28,240 --> 00:13:31,630
like videos on<font color="#E5E5E5"> our on our consoles</font><font color="#CCCCCC"> so</font>

316
00:13:31,630 --> 00:13:33,610
this is a good<font color="#CCCCCC"> trick alright</font><font color="#E5E5E5"> so there's</font>

317
00:13:33,610 --> 00:13:40,029
two ways<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> the data</font><font color="#CCCCCC"> so then having</font>

318
00:13:40,029 --> 00:13:44,019
got the data<font color="#E5E5E5"> you then need to build your</font>

319
00:13:44,019 --> 00:13:47,410
model right<font color="#E5E5E5"> so what I tend to do like</font>

320
00:13:47,410 --> 00:13:49,209
<font color="#CCCCCC">you'll notice that I tend to assume that</font>

321
00:13:49,209 --> 00:13:51,880
the data is<font color="#E5E5E5"> in a directory called data</font>

322
00:13:51,880 --> 00:13:54,250
<font color="#E5E5E5">that's a subdirectory of wherever your</font>

323
00:13:54,250 --> 00:13:57,670
notebook is<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now you don't</font>

324
00:13:57,670 --> 00:14:00,399
necessarily<font color="#E5E5E5"> actually want</font><font color="#CCCCCC"> to put your</font>

325
00:14:00,399 --> 00:14:01,600
data there you might want to put it

326
00:14:01,600 --> 00:14:03,639
directly in your home directory or you

327
00:14:03,639 --> 00:14:04,990
might<font color="#E5E5E5"> wanna put</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> on another drive or</font>

328
00:14:04,990 --> 00:14:07,959
whatever<font color="#CCCCCC"> so what I do is if you look</font>

329
00:14:07,959 --> 00:14:11,620
<font color="#CCCCCC">inside my courses do one folder you'll</font>

330
00:14:11,620 --> 00:14:14,380
see<font color="#E5E5E5"> that data is actually a symbolic</font>

331
00:14:14,380 --> 00:14:17,949
link to a different<font color="#CCCCCC"> drive alright so you</font>

332
00:14:17,949 --> 00:14:19,600
<font color="#E5E5E5">can put it anywhere</font><font color="#CCCCCC"> you like and then</font>

333
00:14:19,600 --> 00:14:22,269
you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> just add</font><font color="#CCCCCC"> a symbolic</font><font color="#E5E5E5"> link or you</font>

334
00:14:22,269 --> 00:14:24,430
can<font color="#CCCCCC"> just put it there directly it's up</font>

335
00:14:24,430 --> 00:14:26,050
<font color="#CCCCCC">to you</font><font color="#E5E5E5"> if you haven't used symlinks</font>

336
00:14:26,050 --> 00:14:28,990
before<font color="#E5E5E5"> they're like aliases or shortcuts</font>

337
00:14:28,990 --> 00:14:32,019
on the<font color="#CCCCCC"> mac</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> windows very</font><font color="#E5E5E5"> handy and</font>

338
00:14:32,019 --> 00:14:33,760
there's some threads on the forum<font color="#CCCCCC"> about</font>

339
00:14:33,760 --> 00:14:35,829
how to use them<font color="#CCCCCC"> if you want help with</font>

340
00:14:35,829 --> 00:14:38,529
<font color="#E5E5E5">that</font><font color="#CCCCCC"> that for example is also how we</font>

341
00:14:38,529 --> 00:14:41,290
<font color="#CCCCCC">actually have the fast AI modules</font>

342
00:14:41,290 --> 00:14:43,660
available<font color="#CCCCCC"> from the same place as</font><font color="#E5E5E5"> our</font>

343
00:14:43,660 --> 00:14:45,490
<font color="#E5E5E5">notebooks it's just a symlink</font>

344
00:14:45,490 --> 00:14:48,699
to where they come from<font color="#E5E5E5"> anytime you want</font>

345
00:14:48,699 --> 00:14:51,790
to see like where things<font color="#CCCCCC"> actually point</font>

346
00:14:51,790 --> 00:14:54,250
to<font color="#E5E5E5"> in Linux you</font><font color="#CCCCCC"> can just use the</font>

347
00:14:54,250 --> 00:14:57,490
-<font color="#CCCCCC"> L flag</font><font color="#E5E5E5"> - listing a directory and</font>

348
00:14:57,490 --> 00:14:59,490
<font color="#CCCCCC">that'll</font><font color="#E5E5E5"> show you where the symlinks</font>

349
00:14:59,490 --> 00:15:01,450
<font color="#CCCCCC">exist still</font><font color="#E5E5E5"> lost</font><font color="#CCCCCC"> I'll show you which</font>

350
00:15:01,450 --> 00:15:05,170
scenes<font color="#CCCCCC"> the directories so forth okay so</font>

351
00:15:05,170 --> 00:15:12,340
one<font color="#CCCCCC"> thing which may be a</font><font color="#E5E5E5"> little unclear</font>

352
00:15:12,340 --> 00:15:14,740
based on what we've done so far is<font color="#E5E5E5"> like</font>

353
00:15:14,740 --> 00:15:17,860
how little code you actually<font color="#CCCCCC"> need to do</font>

354
00:15:17,860 --> 00:15:20,410
this<font color="#CCCCCC"> end to it</font><font color="#E5E5E5"> so what I've</font><font color="#CCCCCC"> got here is</font>

355
00:15:20,410 --> 00:15:22,870
is in a<font color="#E5E5E5"> single window is an entire</font>

356
00:15:22,870 --> 00:15:25,270
end-to-end process<font color="#E5E5E5"> to get a</font>

357
00:15:25,270 --> 00:15:27,220
<font color="#E5E5E5">state-of-the-art result put cats</font><font color="#CCCCCC"> versus</font>

358
00:15:27,220 --> 00:15:30,310
<font color="#CCCCCC">dogs all</font><font color="#E5E5E5"> right I've only step I've</font>

359
00:15:30,310 --> 00:15:31,810
skipped<font color="#E5E5E5"> is the bit where</font><font color="#CCCCCC"> we've</font>

360
00:15:31,810 --> 00:15:33,970
downloaded it from<font color="#CCCCCC"> title and then where</font>

361
00:15:33,970 --> 00:15:37,900
we<font color="#E5E5E5"> unzip it all right</font><font color="#CCCCCC"> so these</font><font color="#E5E5E5"> are</font>

362
00:15:37,900 --> 00:15:43,180
<font color="#E5E5E5">literally all the steps</font><font color="#CCCCCC"> and so we import</font>

363
00:15:43,180 --> 00:15:45,730
<font color="#E5E5E5">our libraries and</font><font color="#CCCCCC"> actually if you import</font>

364
00:15:45,730 --> 00:15:47,890
<font color="#E5E5E5">this one</font><font color="#CCCCCC"> Kampf loner</font><font color="#E5E5E5"> that basically</font>

365
00:15:47,890 --> 00:15:51,130
imports everything else<font color="#E5E5E5"> so that's that</font>

366
00:15:51,130 --> 00:15:53,020
<font color="#E5E5E5">we need to tell</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the path of where</font>

367
00:15:53,020 --> 00:15:55,630
things are the size that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want the</font>

368
00:15:55,630 --> 00:15:59,230
batch size that we<font color="#E5E5E5"> want right</font><font color="#CCCCCC"> so then</font>

369
00:15:59,230 --> 00:16:00,190
<font color="#CCCCCC">and we're going to</font><font color="#E5E5E5"> learn a lot more</font>

370
00:16:00,190 --> 00:16:02,500
about what these do very<font color="#CCCCCC"> shortly but</font>

371
00:16:02,500 --> 00:16:04,000
basically we say how do<font color="#E5E5E5"> we want to</font>

372
00:16:04,000 --> 00:16:06,670
transform our data<font color="#E5E5E5"> so we want to</font>

373
00:16:06,670 --> 00:16:08,530
transform<font color="#E5E5E5"> it in a way</font><font color="#CCCCCC"> that's suitable</font><font color="#E5E5E5"> to</font>

374
00:16:08,530 --> 00:16:10,780
this particular kind<font color="#CCCCCC"> of model and it</font>

375
00:16:10,780 --> 00:16:13,450
assumes that the<font color="#CCCCCC"> photos aside on photos</font>

376
00:16:13,450 --> 00:16:15,250
<font color="#E5E5E5">and that we're going to zoom in up to</font>

377
00:16:15,250 --> 00:16:18,490
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> percent each</font><font color="#CCCCCC"> time we say that we</font>

378
00:16:18,490 --> 00:16:21,490
want to get some data based on paths<font color="#CCCCCC"> and</font>

379
00:16:21,490 --> 00:16:23,020
so<font color="#E5E5E5"> remember this is</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> that</font>

380
00:16:23,020 --> 00:16:24,610
there's a path called cats and the path

381
00:16:24,610 --> 00:16:26,860
called dogs<font color="#E5E5E5"> and they're inside a path</font>

382
00:16:26,860 --> 00:16:28,470
called<font color="#E5E5E5"> train and a path called valid</font>

383
00:16:28,470 --> 00:16:34,360
<font color="#CCCCCC">note that you can always overwrite</font><font color="#E5E5E5"> these</font>

384
00:16:34,360 --> 00:16:36,280
with other<font color="#E5E5E5"> things so if your things are</font>

385
00:16:36,280 --> 00:16:37,360
in<font color="#E5E5E5"> different folders</font>

386
00:16:37,360 --> 00:16:39,850
you could either rename them or you can

387
00:16:39,850 --> 00:16:42,160
<font color="#CCCCCC">see here there's</font><font color="#E5E5E5"> like a train name and a</font>

388
00:16:42,160 --> 00:16:44,620
<font color="#CCCCCC">bowel name you can always</font><font color="#E5E5E5"> pick something</font>

389
00:16:44,620 --> 00:16:48,280
<font color="#E5E5E5">else here also notice there's a test</font>

390
00:16:48,280 --> 00:16:51,070
name<font color="#CCCCCC"> so if you want to</font><font color="#E5E5E5"> submit some into</font>

391
00:16:51,070 --> 00:16:52,839
cattle you'll need to fill in the name

392
00:16:52,839 --> 00:16:54,430
<font color="#E5E5E5">the name of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> folder where the test</font>

393
00:16:54,430 --> 00:16:56,380
sentence and obviously those those won't

394
00:16:56,380 --> 00:16:58,890
be labeled

395
00:16:59,770 --> 00:17:02,750
so then we create<font color="#E5E5E5"> a model from a</font>

396
00:17:02,750 --> 00:17:04,910
<font color="#CCCCCC">pre-training</font><font color="#E5E5E5"> model it's from a resonant</font>

397
00:17:04,910 --> 00:17:08,150
50 model<font color="#E5E5E5"> using this data and then we</font>

398
00:17:08,150 --> 00:17:11,599
call fit<font color="#E5E5E5"> and remember by default</font><font color="#CCCCCC"> that</font>

399
00:17:11,599 --> 00:17:13,640
has all of<font color="#E5E5E5"> the layers but the last few</font>

400
00:17:13,640 --> 00:17:15,560
frozen<font color="#E5E5E5"> and again</font><font color="#CCCCCC"> we'll learn</font><font color="#E5E5E5"> a lot more</font>

401
00:17:15,560 --> 00:17:17,420
<font color="#CCCCCC">about what that</font><font color="#E5E5E5"> means</font>

402
00:17:17,420 --> 00:17:19,369
<font color="#E5E5E5">and so that's that's what that does so</font>

403
00:17:19,369 --> 00:17:23,109
that that took two and<font color="#CCCCCC"> a half minutes</font>

404
00:17:23,109 --> 00:17:26,119
<font color="#CCCCCC">notice here I didn't say pre-compute</font>

405
00:17:26,119 --> 00:17:27,890
equals true<font color="#E5E5E5"> again there's been some</font>

406
00:17:27,890 --> 00:17:29,510
confusion on<font color="#E5E5E5"> the forums about like what</font>

407
00:17:29,510 --> 00:17:33,320
that means<font color="#E5E5E5"> it's only a is only something</font>

408
00:17:33,320 --> 00:17:35,390
<font color="#CCCCCC">that makes</font><font color="#E5E5E5"> it a little faster for</font><font color="#CCCCCC"> this</font>

409
00:17:35,390 --> 00:17:37,490
first<font color="#E5E5E5"> step right so you can always skip</font>

410
00:17:37,490 --> 00:17:39,710
it<font color="#E5E5E5"> and if you're at all confused about</font>

411
00:17:39,710 --> 00:17:41,480
it or it's causing you any problems<font color="#CCCCCC"> just</font>

412
00:17:41,480 --> 00:17:45,040
<font color="#CCCCCC">leave</font><font color="#E5E5E5"> it off</font><font color="#CCCCCC"> right because</font><font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> a</font>

413
00:17:45,040 --> 00:17:48,950
it's<font color="#CCCCCC"> just a</font><font color="#E5E5E5"> shortcut which caches some</font>

414
00:17:48,950 --> 00:17:50,660
of<font color="#E5E5E5"> the intermediate steps that don't</font>

415
00:17:50,660 --> 00:17:52,880
have to be<font color="#CCCCCC"> recalculating each time and</font>

416
00:17:52,880 --> 00:17:54,710
remember<font color="#E5E5E5"> that when we are using</font><font color="#CCCCCC"> pre</font>

417
00:17:54,710 --> 00:17:56,930
<font color="#E5E5E5">computed activations data or</font>

418
00:17:56,930 --> 00:17:59,390
augmentation<font color="#E5E5E5"> doesn't work right so even</font>

419
00:17:59,390 --> 00:18:01,460
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> ask</font><font color="#E5E5E5"> for a data augmentation if</font>

420
00:18:01,460 --> 00:18:04,070
you've got pre compute equals true it

421
00:18:04,070 --> 00:18:05,090
doesn't<font color="#CCCCCC"> actually do any data</font>

422
00:18:05,090 --> 00:18:06,710
<font color="#E5E5E5">augmentation because it's using the</font>

423
00:18:06,710 --> 00:18:11,180
cached non<font color="#E5E5E5"> augmented activations so in</font>

424
00:18:11,180 --> 00:18:12,800
this case to keep<font color="#E5E5E5"> this as simple as</font>

425
00:18:12,800 --> 00:18:14,780
<font color="#CCCCCC">possible I have no pre computed</font><font color="#E5E5E5"> anything</font>

426
00:18:14,780 --> 00:18:17,870
going on<font color="#CCCCCC"> so I do three cycles of</font><font color="#E5E5E5"> length</font>

427
00:18:17,870 --> 00:18:24,110
<font color="#E5E5E5">one and then I can then unfreeze so it's</font>

428
00:18:24,110 --> 00:18:25,870
now<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> train the</font><font color="#E5E5E5"> whole thing</font>

429
00:18:25,870 --> 00:18:27,770
<font color="#CCCCCC">something we haven't seen</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> and</font>

430
00:18:27,770 --> 00:18:30,070
<font color="#CCCCCC">we'll learn about in the second half is</font>

431
00:18:30,070 --> 00:18:33,260
called<font color="#CCCCCC"> B and freeze</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> now all</font><font color="#E5E5E5"> you need</font>

432
00:18:33,260 --> 00:18:36,050
<font color="#E5E5E5">to know is that if you're using a model</font>

433
00:18:36,050 --> 00:18:39,170
like a<font color="#E5E5E5"> bigger deeper model like</font><font color="#CCCCCC"> ResNet</font>

434
00:18:39,170 --> 00:18:42,830
50 or<font color="#CCCCCC"> rez next 101 on a data set that's</font>

435
00:18:42,830 --> 00:18:46,250
<font color="#E5E5E5">very very similar to</font><font color="#CCCCCC"> imagenet</font><font color="#E5E5E5"> like these</font>

436
00:18:46,250 --> 00:18:48,260
<font color="#CCCCCC">cat sandbox data set sort</font><font color="#E5E5E5"> of words it's</font>

437
00:18:48,260 --> 00:18:51,860
like<font color="#CCCCCC"> sidon photos of standard objects</font>

438
00:18:51,860 --> 00:18:54,590
<font color="#E5E5E5">you know of a similar size to image</font><font color="#CCCCCC"> turn</font>

439
00:18:54,590 --> 00:18:56,720
<font color="#CCCCCC">and money somewhere</font><font color="#E5E5E5"> between 200 and 500</font>

440
00:18:56,720 --> 00:18:57,970
pixels

441
00:18:57,970 --> 00:19:01,400
you should<font color="#E5E5E5"> probably add this line when</font>

442
00:19:01,400 --> 00:19:03,380
you unfreeze for those of you<font color="#E5E5E5"> that are</font>

443
00:19:03,380 --> 00:19:06,080
more advanced what it's doing is<font color="#E5E5E5"> it's</font>

444
00:19:06,080 --> 00:19:09,290
causing the batch normalization<font color="#E5E5E5"> moving</font>

445
00:19:09,290 --> 00:19:10,840
averages<font color="#CCCCCC"> to not be updated</font>

446
00:19:10,840 --> 00:19:12,070
but in the second half<font color="#CCCCCC"> of this course</font>

447
00:19:12,070 --> 00:19:14,200
<font color="#CCCCCC">we're gonna</font><font color="#E5E5E5"> learn</font><font color="#CCCCCC"> all about why we do</font>

448
00:19:14,200 --> 00:19:15,610
that it's something that's<font color="#E5E5E5"> not supported</font>

449
00:19:15,610 --> 00:19:18,129
by<font color="#E5E5E5"> any other library</font><font color="#CCCCCC"> but it turns out</font><font color="#E5E5E5"> to</font>

450
00:19:18,129 --> 00:19:20,409
be super important anyway so we do one

451
00:19:20,409 --> 00:19:21,190
more

452
00:19:21,190 --> 00:19:26,039
epoch<font color="#CCCCCC"> with training</font><font color="#E5E5E5"> the whole network</font>

453
00:19:26,039 --> 00:19:28,809
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then at the end we use test time</font>

454
00:19:28,809 --> 00:19:31,990
augmentation<font color="#CCCCCC"> to ensure that we get</font><font color="#E5E5E5"> the</font>

455
00:19:31,990 --> 00:19:34,870
best predictions we can and that gives

456
00:19:34,870 --> 00:19:37,620
us ninety nine point four five<font color="#CCCCCC"> percent</font>

457
00:19:37,620 --> 00:19:41,049
<font color="#E5E5E5">so that's that's it right so when you</font>

458
00:19:41,049 --> 00:19:44,649
try a<font color="#E5E5E5"> new data set they're basically the</font>

459
00:19:44,649 --> 00:19:47,139
<font color="#CCCCCC">minimum set of steps that you would</font><font color="#E5E5E5"> need</font>

460
00:19:47,139 --> 00:19:49,809
<font color="#E5E5E5">to follow</font><font color="#CCCCCC"> you'll</font><font color="#E5E5E5"> notice this is assuming</font>

461
00:19:49,809 --> 00:19:51,820
<font color="#CCCCCC">I already know what</font><font color="#E5E5E5"> learning wrote to</font>

462
00:19:51,820 --> 00:19:53,409
use<font color="#E5E5E5"> so you'd use the learning rate</font>

463
00:19:53,409 --> 00:19:56,019
finder for<font color="#E5E5E5"> that it's assuming that I</font>

464
00:19:56,019 --> 00:19:59,590
know<font color="#E5E5E5"> that the directory layout and so</font>

465
00:19:59,590 --> 00:20:02,799
forth so that's<font color="#E5E5E5"> kind of a minimum set</font>

466
00:20:02,799 --> 00:20:04,600
now one of<font color="#E5E5E5"> the things that I wanted to</font>

467
00:20:04,600 --> 00:20:07,210
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure you had an understanding of</font>

468
00:20:07,210 --> 00:20:10,059
how to do is how<font color="#CCCCCC"> to use other libraries</font>

469
00:20:10,059 --> 00:20:12,999
other than fast AI<font color="#E5E5E5"> and so I feel</font><font color="#CCCCCC"> like</font>

470
00:20:12,999 --> 00:20:15,039
the best thing<font color="#CCCCCC"> to to look at is to look</font>

471
00:20:15,039 --> 00:20:18,100
at care us<font color="#CCCCCC"> because care us is a library</font>

472
00:20:18,100 --> 00:20:20,590
just like fast AI sits on top of<font color="#CCCCCC"> pi</font>

473
00:20:20,590 --> 00:20:23,590
torch<font color="#E5E5E5"> care us sits on top of actually a</font>

474
00:20:23,590 --> 00:20:25,450
whole variety of different backends<font color="#CCCCCC"> it</font>

475
00:20:25,450 --> 00:20:28,029
<font color="#CCCCCC">fits</font><font color="#E5E5E5"> mainly people nowadays use it with</font>

476
00:20:28,029 --> 00:20:28,769
<font color="#CCCCCC">tensorflow</font>

477
00:20:28,769 --> 00:20:32,259
<font color="#CCCCCC">there's also an MX net version</font><font color="#E5E5E5"> there's</font>

478
00:20:32,259 --> 00:20:37,450
also a<font color="#CCCCCC"> Microsoft CNT K version so what</font>

479
00:20:37,450 --> 00:20:39,789
I've<font color="#CCCCCC"> got if you do a git pull you'll see</font>

480
00:20:39,789 --> 00:20:43,480
that there's a something<font color="#E5E5E5"> called care us</font>

481
00:20:43,480 --> 00:20:46,059
<font color="#E5E5E5">less than one where I've attempted to</font>

482
00:20:46,059 --> 00:20:48,429
replicate at least parts of lesson<font color="#CCCCCC"> one</font>

483
00:20:48,429 --> 00:20:52,090
in care us<font color="#CCCCCC"> just to give you a sense</font><font color="#E5E5E5"> of</font>

484
00:20:52,090 --> 00:20:59,110
how that<font color="#E5E5E5"> works</font><font color="#CCCCCC"> I'm not going</font><font color="#E5E5E5"> to talk</font>

485
00:20:59,110 --> 00:21:00,850
<font color="#E5E5E5">more about batch</font><font color="#CCCCCC"> two norm freeze now</font>

486
00:21:00,850 --> 00:21:04,139
other than<font color="#E5E5E5"> to</font><font color="#CCCCCC"> say if you're</font><font color="#E5E5E5"> using</font>

487
00:21:04,139 --> 00:21:07,659
something which has got a number larger

488
00:21:07,659 --> 00:21:09,039
<font color="#CCCCCC">than 34 at the end</font>

489
00:21:09,039 --> 00:21:11,950
so like<font color="#CCCCCC"> ResNet</font><font color="#E5E5E5"> 50 or res next 101 and</font>

490
00:21:11,950 --> 00:21:16,090
you're trading a data set that has that

491
00:21:16,090 --> 00:21:18,129
is very similar to<font color="#E5E5E5"> image net so it's</font>

492
00:21:18,129 --> 00:21:20,529
like<font color="#CCCCCC"> normal photos of normal sizes</font><font color="#E5E5E5"> where</font>

493
00:21:20,529 --> 00:21:22,480
the thing of interest<font color="#CCCCCC"> takes up most of</font>

494
00:21:22,480 --> 00:21:24,520
the frame<font color="#E5E5E5"> then you probably should</font>

495
00:21:24,520 --> 00:21:27,880
at the end<font color="#CCCCCC"> fries true</font><font color="#E5E5E5"> after unfreeze</font>

496
00:21:27,880 --> 00:21:30,400
if in doubt try<font color="#E5E5E5"> trading it with and then</font>

497
00:21:30,400 --> 00:21:33,580
try<font color="#E5E5E5"> trading it without more advanced</font>

498
00:21:33,580 --> 00:21:35,679
students will certainly talk<font color="#CCCCCC"> about it on</font>

499
00:21:35,679 --> 00:21:37,420
the forums<font color="#E5E5E5"> this</font><font color="#CCCCCC"> week and we</font><font color="#E5E5E5"> will be</font>

500
00:21:37,420 --> 00:21:39,910
talking<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> details of it in the</font>

501
00:21:39,910 --> 00:21:41,710
second<font color="#E5E5E5"> half of</font><font color="#CCCCCC"> the course when</font><font color="#E5E5E5"> we come</font>

502
00:21:41,710 --> 00:21:46,720
<font color="#E5E5E5">back to our CNN in death section in the</font>

503
00:21:46,720 --> 00:21:55,660
second<font color="#E5E5E5"> last lesson</font><font color="#CCCCCC"> so with care</font><font color="#E5E5E5"> us again</font>

504
00:21:55,660 --> 00:22:01,480
we import a bunch of stuff<font color="#CCCCCC"> and remember</font>

505
00:22:01,480 --> 00:22:03,130
I mentioned that this idea<font color="#E5E5E5"> that you've</font>

506
00:22:03,130 --> 00:22:04,630
got<font color="#CCCCCC"> a thing called</font><font color="#E5E5E5"> train and a thing</font>

507
00:22:04,630 --> 00:22:06,190
called<font color="#E5E5E5"> valid and inside</font><font color="#CCCCCC"> that you've got</font>

508
00:22:06,190 --> 00:22:07,540
a thing<font color="#CCCCCC"> called</font><font color="#E5E5E5"> dogs and things called</font>

509
00:22:07,540 --> 00:22:10,679
cats<font color="#E5E5E5"> is a standard way</font><font color="#CCCCCC"> of providing</font>

510
00:22:10,679 --> 00:22:14,679
<font color="#E5E5E5">image</font><font color="#CCCCCC"> labelled images so Karis does that</font>

511
00:22:14,679 --> 00:22:16,870
too right so it's going to tell it where

512
00:22:16,870 --> 00:22:18,610
the training<font color="#CCCCCC"> set and</font><font color="#E5E5E5"> the validation set</font>

513
00:22:18,610 --> 00:22:24,309
are twice what batch size<font color="#E5E5E5"> to used now</font>

514
00:22:24,309 --> 00:22:27,100
you'll notice<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Karis we need much much</font>

515
00:22:27,100 --> 00:22:32,020
much more<font color="#E5E5E5"> code to</font><font color="#CCCCCC"> do the same thing more</font>

516
00:22:32,020 --> 00:22:34,600
importantly each part of that code has

517
00:22:34,600 --> 00:22:36,460
many many<font color="#E5E5E5"> many more things you have</font><font color="#CCCCCC"> to</font>

518
00:22:36,460 --> 00:22:38,650
set and if you set them wrong everything

519
00:22:38,650 --> 00:22:43,840
breaks right<font color="#E5E5E5"> so I'll give you a summary</font>

520
00:22:43,840 --> 00:22:44,650
<font color="#E5E5E5">of what they are</font>

521
00:22:44,650 --> 00:22:47,050
so you're basically rather than creating

522
00:22:47,050 --> 00:22:51,250
a single data object<font color="#E5E5E5"> in chaos</font><font color="#CCCCCC"> we first</font>

523
00:22:51,250 --> 00:22:52,660
<font color="#E5E5E5">of all have to define something</font><font color="#CCCCCC"> called a</font>

524
00:22:52,660 --> 00:22:55,030
data<font color="#E5E5E5"> generator to say kind of generate</font>

525
00:22:55,030 --> 00:22:57,550
the data and so a data generator<font color="#E5E5E5"> we</font>

526
00:22:57,550 --> 00:23:00,010
basically have to say what kind of data

527
00:23:00,010 --> 00:23:04,780
augmentation we want to do and we also

528
00:23:04,780 --> 00:23:08,190
we actually have to say what kind<font color="#E5E5E5"> of</font>

529
00:23:08,190 --> 00:23:11,170
normalization<font color="#E5E5E5"> do we want to do</font>

530
00:23:11,170 --> 00:23:13,179
so we're else with fast AI we just say

531
00:23:13,179 --> 00:23:16,240
whatever<font color="#CCCCCC"> ResNet</font><font color="#E5E5E5"> 50 requires just do that</font>

532
00:23:16,240 --> 00:23:18,160
for<font color="#E5E5E5"> me</font><font color="#CCCCCC"> please we actually have to kind</font>

533
00:23:18,160 --> 00:23:19,929
of<font color="#CCCCCC"> know a little</font><font color="#E5E5E5"> bit about what's</font>

534
00:23:19,929 --> 00:23:21,700
<font color="#E5E5E5">expected of us</font>

535
00:23:21,700 --> 00:23:23,320
generally speaking<font color="#E5E5E5"> copying and pasting</font>

536
00:23:23,320 --> 00:23:25,300
<font color="#CCCCCC">cos code from the internet is a good way</font>

537
00:23:25,300 --> 00:23:27,160
<font color="#E5E5E5">to make</font><font color="#CCCCCC"> sure you've got the right the</font>

538
00:23:27,160 --> 00:23:30,220
<font color="#E5E5E5">right stuff</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make that work</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> again</font>

539
00:23:30,220 --> 00:23:32,110
it doesn't<font color="#E5E5E5"> have a kind of a standard</font><font color="#CCCCCC"> set</font>

540
00:23:32,110 --> 00:23:34,600
of like here<font color="#E5E5E5"> the best data</font><font color="#CCCCCC"> augmentation</font>

541
00:23:34,600 --> 00:23:37,280
parameters to<font color="#E5E5E5"> use for photos so you know</font>

542
00:23:37,280 --> 00:23:39,020
I've copied<font color="#E5E5E5"> and pasted all of this from</font>

543
00:23:39,020 --> 00:23:43,550
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Kaos documentation so I</font><font color="#E5E5E5"> don't know</font>

544
00:23:43,550 --> 00:23:45,320
if it's I<font color="#CCCCCC"> don't think</font><font color="#E5E5E5"> it's the best set</font>

545
00:23:45,320 --> 00:23:46,910
to use it all but it's the set that

546
00:23:46,910 --> 00:23:49,220
<font color="#E5E5E5">they're using in their docks so having</font>

547
00:23:49,220 --> 00:23:51,470
said this is how I want<font color="#E5E5E5"> to generate data</font>

548
00:23:51,470 --> 00:23:53,840
<font color="#E5E5E5">so horizontally fit sometimes you know</font>

549
00:23:53,840 --> 00:23:56,540
zoom sometimes<font color="#CCCCCC"> sheer sometimes we then</font>

550
00:23:56,540 --> 00:23:59,360
create<font color="#E5E5E5"> a generator from that by taking</font>

551
00:23:59,360 --> 00:24:01,880
<font color="#CCCCCC">that data generator and saying I</font><font color="#E5E5E5"> want to</font>

552
00:24:01,880 --> 00:24:04,760
generate<font color="#E5E5E5"> images by looking from a</font>

553
00:24:04,760 --> 00:24:07,070
directory<font color="#CCCCCC"> we pass in</font><font color="#E5E5E5"> the directory which</font>

554
00:24:07,070 --> 00:24:09,440
<font color="#CCCCCC">is of the</font><font color="#E5E5E5"> same directory structure that</font>

555
00:24:09,440 --> 00:24:12,470
<font color="#CCCCCC">fast AI users</font><font color="#E5E5E5"> and you'll see there's</font>

556
00:24:12,470 --> 00:24:14,090
<font color="#CCCCCC">some overlaps with</font><font color="#E5E5E5"> kind of how fast AI</font>

557
00:24:14,090 --> 00:24:16,220
works here you tell<font color="#CCCCCC"> it what size images</font>

558
00:24:16,220 --> 00:24:18,290
you want<font color="#E5E5E5"> to create you tell at what</font>

559
00:24:18,290 --> 00:24:19,850
batch size you want in your mini batches

560
00:24:19,850 --> 00:24:22,640
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then there's something you not to</font>

561
00:24:22,640 --> 00:24:24,140
worry about<font color="#E5E5E5"> too</font><font color="#CCCCCC"> much but basically if</font>

562
00:24:24,140 --> 00:24:26,390
you're<font color="#E5E5E5"> just got two possible</font><font color="#CCCCCC"> outcomes</font>

563
00:24:26,390 --> 00:24:28,760
<font color="#E5E5E5">you would generally say binary here if</font>

564
00:24:28,760 --> 00:24:29,960
you've got multiple possible outcomes

565
00:24:29,960 --> 00:24:32,390
<font color="#E5E5E5">would say categorical</font><font color="#CCCCCC"> yeah so we've only</font>

566
00:24:32,390 --> 00:24:33,440
got cats or dogs

567
00:24:33,440 --> 00:24:37,970
<font color="#E5E5E5">so it's binary</font><font color="#CCCCCC"> so an example</font><font color="#E5E5E5"> of like</font>

568
00:24:37,970 --> 00:24:39,710
where things<font color="#E5E5E5"> get a little more complex</font>

569
00:24:39,710 --> 00:24:41,510
<font color="#CCCCCC">is you</font><font color="#E5E5E5"> have to do the same thing for the</font>

570
00:24:41,510 --> 00:24:43,580
validation<font color="#E5E5E5"> set so it's up to you to</font>

571
00:24:43,580 --> 00:24:45,620
<font color="#E5E5E5">create a data generator that doesn't</font>

572
00:24:45,620 --> 00:24:47,570
have data augmentation<font color="#CCCCCC"> because obviously</font>

573
00:24:47,570 --> 00:24:49,280
<font color="#E5E5E5">for the validation set</font><font color="#CCCCCC"> unless you're</font>

574
00:24:49,280 --> 00:24:51,890
<font color="#E5E5E5">using</font><font color="#CCCCCC"> t/ta</font><font color="#E5E5E5"> that's going to start things</font>

575
00:24:51,890 --> 00:24:57,440
up<font color="#CCCCCC"> you also</font><font color="#E5E5E5"> when you train you</font><font color="#CCCCCC"> randomly</font>

576
00:24:57,440 --> 00:24:59,090
reorder the images<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that they're</font>

577
00:24:59,090 --> 00:25:01,190
always<font color="#E5E5E5"> shown in different orders</font><font color="#CCCCCC"> to make</font>

578
00:25:01,190 --> 00:25:03,170
<font color="#E5E5E5">it more random but with a validation</font>

579
00:25:03,170 --> 00:25:06,080
<font color="#E5E5E5">it's vital</font><font color="#CCCCCC"> that you don't do that</font>

580
00:25:06,080 --> 00:25:07,520
<font color="#E5E5E5">because if</font><font color="#CCCCCC"> you shuffle the validation</font>

581
00:25:07,520 --> 00:25:09,770
set<font color="#E5E5E5"> you then can't track how well</font><font color="#CCCCCC"> you're</font>

582
00:25:09,770 --> 00:25:11,270
doing<font color="#E5E5E5"> it's in a different order for the</font>

583
00:25:11,270 --> 00:25:11,810
labels

584
00:25:11,810 --> 00:25:14,870
that's a basically these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> kind of</font>

585
00:25:14,870 --> 00:25:17,180
steps you<font color="#CCCCCC"> have to do every time</font><font color="#E5E5E5"> with</font>

586
00:25:17,180 --> 00:25:22,160
<font color="#E5E5E5">care us</font><font color="#CCCCCC"> so again the reason I was using</font>

587
00:25:22,160 --> 00:25:24,320
<font color="#CCCCCC">ResNet</font><font color="#E5E5E5"> 50</font><font color="#CCCCCC"> before is chaos doesn't</font><font color="#E5E5E5"> have</font>

588
00:25:24,320 --> 00:25:26,960
<font color="#CCCCCC">ResNet</font><font color="#E5E5E5"> 34 unfortunately so I just wanted</font>

589
00:25:26,960 --> 00:25:28,370
<font color="#E5E5E5">to compare like</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> Mike so we're going</font>

590
00:25:28,370 --> 00:25:32,750
<font color="#E5E5E5">to use</font><font color="#CCCCCC"> resident</font><font color="#E5E5E5"> 50 here there isn't the</font>

591
00:25:32,750 --> 00:25:34,940
same idea with chaos of saying like

592
00:25:34,940 --> 00:25:37,520
<font color="#CCCCCC">constructor</font><font color="#E5E5E5"> model</font><font color="#CCCCCC"> that is suitable</font><font color="#E5E5E5"> for</font>

593
00:25:37,520 --> 00:25:39,860
<font color="#CCCCCC">this data</font><font color="#E5E5E5"> set for me so you have to do</font>

594
00:25:39,860 --> 00:25:42,290
it by hand<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so the way you do it is</font>

595
00:25:42,290 --> 00:25:44,360
to<font color="#CCCCCC"> basically say this is my base model</font>

596
00:25:44,360 --> 00:25:47,330
<font color="#E5E5E5">and then you have to construct on top of</font>

597
00:25:47,330 --> 00:25:50,000
<font color="#E5E5E5">that manually the layers that you want</font>

598
00:25:50,000 --> 00:25:50,600
to add

599
00:25:50,600 --> 00:25:52,220
and so by the end<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this course you'll</font>

600
00:25:52,220 --> 00:25:53,809
understand<font color="#E5E5E5"> a way it is that these</font>

601
00:25:53,809 --> 00:25:56,630
particular<font color="#E5E5E5"> three layers</font><font color="#CCCCCC"> other layers</font>

602
00:25:56,630 --> 00:26:01,370
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> add</font><font color="#CCCCCC"> so having done that</font><font color="#E5E5E5"> in chaos</font>

603
00:26:01,370 --> 00:26:03,230
you basically<font color="#E5E5E5"> say</font><font color="#CCCCCC"> okay this is my model</font>

604
00:26:03,230 --> 00:26:06,070
<font color="#E5E5E5">and then again there isn't</font><font color="#CCCCCC"> like a</font>

605
00:26:06,070 --> 00:26:08,450
concept<font color="#CCCCCC"> to it like automatically</font>

606
00:26:08,450 --> 00:26:10,880
freezing things or an<font color="#E5E5E5"> API for that so</font>

607
00:26:10,880 --> 00:26:13,280
<font color="#E5E5E5">you just have to allow look through the</font>

608
00:26:13,280 --> 00:26:16,190
layers<font color="#CCCCCC"> that you want to freeze and call</font>

609
00:26:16,190 --> 00:26:20,630
dot trainable equals false<font color="#E5E5E5"> on them</font><font color="#CCCCCC"> in</font>

610
00:26:20,630 --> 00:26:22,940
<font color="#E5E5E5">Karis there's a concept we don't have in</font>

611
00:26:22,940 --> 00:26:25,370
fast AI or play<font color="#CCCCCC"> a torch of</font><font color="#E5E5E5"> compiling a</font>

612
00:26:25,370 --> 00:26:27,110
model so basically once your<font color="#E5E5E5"> model</font><font color="#CCCCCC"> is</font>

613
00:26:27,110 --> 00:26:28,960
ready<font color="#E5E5E5"> to use you</font><font color="#CCCCCC"> have to compile it</font>

614
00:26:28,960 --> 00:26:32,000
<font color="#CCCCCC">passing in what kind of optimizer to use</font>

615
00:26:32,000 --> 00:26:33,860
what<font color="#CCCCCC"> kind of loss to look for about</font>

616
00:26:33,860 --> 00:26:37,039
<font color="#CCCCCC">metric so again with fast AI</font><font color="#E5E5E5"> you don't</font>

617
00:26:37,039 --> 00:26:38,990
have to pass this in because we know

618
00:26:38,990 --> 00:26:41,720
what loss is the<font color="#CCCCCC"> write loss to use you</font>

619
00:26:41,720 --> 00:26:43,039
<font color="#CCCCCC">can</font><font color="#E5E5E5"> always override it but for a</font>

620
00:26:43,039 --> 00:26:44,570
<font color="#CCCCCC">particular</font><font color="#E5E5E5"> model</font><font color="#CCCCCC"> we give you good</font>

621
00:26:44,570 --> 00:26:48,070
defaults<font color="#E5E5E5"> okay so having done all that</font>

622
00:26:48,070 --> 00:26:50,179
rather than<font color="#E5E5E5"> calling fit you call</font>

623
00:26:50,179 --> 00:26:53,120
generator<font color="#CCCCCC"> passing in those two</font>

624
00:26:53,120 --> 00:26:54,679
generators<font color="#CCCCCC"> that you saw</font><font color="#E5E5E5"> earlier the</font>

625
00:26:54,679 --> 00:26:55,789
<font color="#CCCCCC">Train generator in the validation</font>

626
00:26:55,789 --> 00:26:59,809
generator for reasons I<font color="#CCCCCC"> don't quite</font>

627
00:26:59,809 --> 00:27:01,820
understand<font color="#CCCCCC"> chaos expects you to</font><font color="#E5E5E5"> also</font>

628
00:27:01,820 --> 00:27:03,650
tell it how many<font color="#E5E5E5"> batches there are per</font>

629
00:27:03,650 --> 00:27:06,409
epoch<font color="#CCCCCC"> so the number</font><font color="#E5E5E5"> of batches</font><font color="#CCCCCC"> is a</font>

630
00:27:06,409 --> 00:27:08,620
quarter the<font color="#E5E5E5"> size of the generator</font>

631
00:27:08,620 --> 00:27:11,780
divided<font color="#CCCCCC"> by the batch size</font><font color="#E5E5E5"> you can tell</font>

632
00:27:11,780 --> 00:27:16,100
it how<font color="#E5E5E5"> many epochs</font><font color="#CCCCCC"> just like in</font><font color="#E5E5E5"> fast AI</font>

633
00:27:16,100 --> 00:27:18,950
you<font color="#E5E5E5"> can say how many processes or how</font>

634
00:27:18,950 --> 00:27:21,840
<font color="#CCCCCC">many workers to use for</font><font color="#E5E5E5"> pre-processing</font>

635
00:27:21,840 --> 00:27:23,200
[Music]

636
00:27:23,200 --> 00:27:26,330
<font color="#E5E5E5">unlike fast AI the default in</font><font color="#CCCCCC"> chaos is</font>

637
00:27:26,330 --> 00:27:30,830
basically not to<font color="#E5E5E5"> use any so to get good</font>

638
00:27:30,830 --> 00:27:32,090
speed you're going<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> sure you</font>

639
00:27:32,090 --> 00:27:35,870
<font color="#E5E5E5">include this and so that's basically</font>

640
00:27:35,870 --> 00:27:39,289
<font color="#E5E5E5">enough to start fine tuning the last</font>

641
00:27:39,289 --> 00:27:44,299
layers<font color="#CCCCCC"> so as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see I got</font><font color="#E5E5E5"> to a</font>

642
00:27:44,299 --> 00:27:47,750
validation accuracy of<font color="#CCCCCC"> 95%</font><font color="#E5E5E5"> but as you</font>

643
00:27:47,750 --> 00:27:48,919
can<font color="#E5E5E5"> also see</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> really weird</font>

644
00:27:48,919 --> 00:27:50,960
happened<font color="#CCCCCC"> we're after</font><font color="#E5E5E5"> one it was like 49</font>

645
00:27:50,960 --> 00:27:53,840
and<font color="#E5E5E5"> then it was 69 and then 95 I don't</font>

646
00:27:53,840 --> 00:27:56,750
know why these are so low<font color="#E5E5E5"> that's not</font>

647
00:27:56,750 --> 00:27:58,159
normal

648
00:27:58,159 --> 00:28:00,140
I may<font color="#E5E5E5"> have there may be a bug and chaos</font>

649
00:28:00,140 --> 00:28:03,290
they may be a bug in my<font color="#CCCCCC"> code I reached</font>

650
00:28:03,290 --> 00:28:04,340
out on Twitter to see if

651
00:28:04,340 --> 00:28:05,630
anybody could figure<font color="#CCCCCC"> it</font><font color="#E5E5E5"> out but they</font>

652
00:28:05,630 --> 00:28:07,130
couldn't I guess this is one of<font color="#E5E5E5"> the</font>

653
00:28:07,130 --> 00:28:09,409
<font color="#CCCCCC">challenges with using something</font><font color="#E5E5E5"> like</font>

654
00:28:09,409 --> 00:28:11,299
<font color="#E5E5E5">this is one of the reasons I wanted to</font>

655
00:28:11,299 --> 00:28:13,700
<font color="#E5E5E5">use fast AI</font><font color="#CCCCCC"> for this course is it's much</font>

656
00:28:13,700 --> 00:28:16,340
harder to screw things up so I don't

657
00:28:16,340 --> 00:28:17,419
know if I screwed<font color="#CCCCCC"> something up or</font>

658
00:28:17,419 --> 00:28:18,169
somebody<font color="#E5E5E5"> else</font><font color="#CCCCCC"> did</font>

659
00:28:18,169 --> 00:28:23,270
yes you know this<font color="#E5E5E5"> is you've</font><font color="#CCCCCC"> seen the</font>

660
00:28:23,270 --> 00:28:25,400
chance to<font color="#CCCCCC"> float back end</font><font color="#E5E5E5"> yeah yeah and</font>

661
00:28:25,400 --> 00:28:28,340
if you want to run this to try it<font color="#CCCCCC"> out</font>

662
00:28:28,340 --> 00:28:31,850
<font color="#CCCCCC">yourself you just can just go pip</font>

663
00:28:31,850 --> 00:28:39,020
install<font color="#CCCCCC"> tensorflow - GPU</font><font color="#E5E5E5"> Kerris</font><font color="#CCCCCC"> okay</font>

664
00:28:39,020 --> 00:28:40,700
because<font color="#E5E5E5"> it's not part of the</font><font color="#CCCCCC"> faster I</font>

665
00:28:40,700 --> 00:28:45,049
environment<font color="#E5E5E5"> by default but that should</font>

666
00:28:45,049 --> 00:28:47,149
be<font color="#E5E5E5"> all</font><font color="#CCCCCC"> you need to do to</font><font color="#E5E5E5"> get that</font>

667
00:28:47,149 --> 00:28:55,610
working<font color="#CCCCCC"> so then there isn't</font><font color="#E5E5E5"> a concept of</font>

668
00:28:55,610 --> 00:28:58,130
like layer groups or differential

669
00:28:58,130 --> 00:29:00,230
learning rates or partial unfreezing or

670
00:29:00,230 --> 00:29:02,120
whatever so you have to decide<font color="#E5E5E5"> like I</font>

671
00:29:02,120 --> 00:29:03,470
had to print<font color="#E5E5E5"> out all</font><font color="#CCCCCC"> of the layers and</font>

672
00:29:03,470 --> 00:29:06,380
<font color="#E5E5E5">decide manually how many I wanted to</font>

673
00:29:06,380 --> 00:29:08,539
fine-tune so I decided to fine-tune

674
00:29:08,539 --> 00:29:10,640
everything<font color="#E5E5E5"> from a layer 140 onwards so</font>

675
00:29:10,640 --> 00:29:11,809
that's why I just<font color="#CCCCCC"> looked through</font><font color="#E5E5E5"> like</font>

676
00:29:11,809 --> 00:29:14,510
this after you change that you<font color="#E5E5E5"> have to</font>

677
00:29:14,510 --> 00:29:17,210
recompile the model<font color="#E5E5E5"> and then after that</font>

678
00:29:17,210 --> 00:29:19,610
I<font color="#E5E5E5"> then ran another step</font><font color="#CCCCCC"> and again I</font>

679
00:29:19,610 --> 00:29:20,750
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> know what happened</font><font color="#CCCCCC"> here the</font>

680
00:29:20,750 --> 00:29:22,429
accuracy of the training set stayed

681
00:29:22,429 --> 00:29:24,169
about the same<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the validation set</font>

682
00:29:24,169 --> 00:29:27,830
<font color="#E5E5E5">totally fill in the hole and I mean the</font>

683
00:29:27,830 --> 00:29:29,779
main<font color="#CCCCCC"> thing to</font><font color="#E5E5E5"> notice even if we put</font>

684
00:29:29,779 --> 00:29:33,409
aside<font color="#E5E5E5"> the validation set we're getting I</font>

685
00:29:33,409 --> 00:29:35,299
mean<font color="#E5E5E5"> I guess the main thing</font><font color="#CCCCCC"> is there's a</font>

686
00:29:35,299 --> 00:29:36,740
hell of a lot more<font color="#CCCCCC"> code here which is</font>

687
00:29:36,740 --> 00:29:39,230
kind of annoying but<font color="#E5E5E5"> also the</font>

688
00:29:39,230 --> 00:29:40,940
performance<font color="#E5E5E5"> is very different</font><font color="#CCCCCC"> so where</font>

689
00:29:40,940 --> 00:29:42,860
else is here even on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> training set</font>

690
00:29:42,860 --> 00:29:46,070
<font color="#CCCCCC">we're getting like 97%</font><font color="#E5E5E5"> after four epochs</font>

691
00:29:46,070 --> 00:29:48,529
that<font color="#E5E5E5"> took a total of about eight minutes</font>

692
00:29:48,529 --> 00:29:53,899
<font color="#CCCCCC">you know over here we had 99.5% on the</font>

693
00:29:53,899 --> 00:29:57,169
validation<font color="#E5E5E5"> set</font><font color="#CCCCCC"> and it ran a lot faster</font>

694
00:29:57,169 --> 00:30:02,380
<font color="#E5E5E5">so I was like four or</font><font color="#CCCCCC"> five minutes right</font>

695
00:30:02,380 --> 00:30:05,380
so

696
00:30:06,870 --> 00:30:09,190
depending on<font color="#E5E5E5"> what you do particularly if</font>

697
00:30:09,190 --> 00:30:10,809
you end up<font color="#E5E5E5"> wanting to deploy stuff to</font>

698
00:30:10,809 --> 00:30:14,830
mobile devices<font color="#CCCCCC"> at the moment the kind</font><font color="#E5E5E5"> of</font>

699
00:30:14,830 --> 00:30:17,620
<font color="#CCCCCC">PI torch on mobile situation is very</font>

700
00:30:17,620 --> 00:30:19,690
<font color="#E5E5E5">early so you may find yourself wanting</font>

701
00:30:19,690 --> 00:30:21,760
to use tensorflow<font color="#CCCCCC"> or you may work</font><font color="#E5E5E5"> for a</font>

702
00:30:21,760 --> 00:30:23,770
<font color="#CCCCCC">company that's kind</font><font color="#E5E5E5"> of settled on</font>

703
00:30:23,770 --> 00:30:27,070
tensorflow<font color="#CCCCCC"> so if you need</font><font color="#E5E5E5"> to convert</font>

704
00:30:27,070 --> 00:30:29,080
<font color="#E5E5E5">something like redo something you've</font>

705
00:30:29,080 --> 00:30:31,929
<font color="#E5E5E5">learnt here intensive flow</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> probably</font>

706
00:30:31,929 --> 00:30:34,510
want<font color="#CCCCCC"> to do it with care us</font><font color="#E5E5E5"> but just</font>

707
00:30:34,510 --> 00:30:37,000
<font color="#CCCCCC">recognize you know it's got</font><font color="#E5E5E5"> to take a</font>

708
00:30:37,000 --> 00:30:40,630
bit<font color="#CCCCCC"> more work to get</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> and by</font>

709
00:30:40,630 --> 00:30:43,000
default it's much harder to<font color="#E5E5E5"> get I mean</font><font color="#CCCCCC"> I</font>

710
00:30:43,000 --> 00:30:45,460
to get<font color="#E5E5E5"> the same state of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> out results</font>

711
00:30:45,460 --> 00:30:46,929
you<font color="#E5E5E5"> get the faster I you'd have to like</font>

712
00:30:46,929 --> 00:30:49,690
replicate all of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> state-of-the-art</font>

713
00:30:49,690 --> 00:30:52,090
algorithms that are in<font color="#E5E5E5"> first a nice so</font>

714
00:30:52,090 --> 00:30:54,669
it's hard to<font color="#E5E5E5"> get the same level</font><font color="#CCCCCC"> of</font>

715
00:30:54,669 --> 00:30:57,130
<font color="#E5E5E5">results but</font><font color="#CCCCCC"> you can see the basic ideas</font>

716
00:30:57,130 --> 00:31:01,600
<font color="#CCCCCC">are similar okay and it's</font><font color="#E5E5E5"> certainly it's</font>

717
00:31:01,600 --> 00:31:03,970
<font color="#E5E5E5">certainly possible you know like there's</font>

718
00:31:03,970 --> 00:31:05,860
nothing I'm<font color="#CCCCCC"> doing in fast AI that like</font>

719
00:31:05,860 --> 00:31:08,110
would<font color="#CCCCCC"> be impossible but like</font><font color="#E5E5E5"> you'd have</font>

720
00:31:08,110 --> 00:31:09,910
to implement stochastic gradient percent

721
00:31:09,910 --> 00:31:11,640
with restarts<font color="#CCCCCC"> you would have to</font>

722
00:31:11,640 --> 00:31:14,169
implement<font color="#E5E5E5"> differential learning rates</font>

723
00:31:14,169 --> 00:31:16,360
<font color="#E5E5E5">you would have to implement batch norm</font>

724
00:31:16,360 --> 00:31:18,700
<font color="#CCCCCC">freezing which you</font><font color="#E5E5E5"> probably don't want</font>

725
00:31:18,700 --> 00:31:20,799
to do<font color="#E5E5E5"> I know and well that's not quite</font>

726
00:31:20,799 --> 00:31:22,179
true I<font color="#CCCCCC"> think somewhat one person at</font>

727
00:31:22,179 --> 00:31:24,160
<font color="#CCCCCC">least on the forum is attempting to</font>

728
00:31:24,160 --> 00:31:26,559
create a chaos compatible version of or

729
00:31:26,559 --> 00:31:28,179
a tensorflow compatible version of fast

730
00:31:28,179 --> 00:31:30,669
AI<font color="#CCCCCC"> which I think I hope</font><font color="#E5E5E5"> will get there I</font>

731
00:31:30,669 --> 00:31:32,559
actually spoke to Google<font color="#E5E5E5"> about this a</font>

732
00:31:32,559 --> 00:31:33,820
<font color="#CCCCCC">few weeks ago and they're very</font>

733
00:31:33,820 --> 00:31:36,040
<font color="#E5E5E5">interested in getting faster</font><font color="#CCCCCC"> i ported to</font>

734
00:31:36,040 --> 00:31:38,590
<font color="#CCCCCC">tensorflow</font><font color="#E5E5E5"> so maybe by the</font><font color="#CCCCCC"> time you're</font>

735
00:31:38,590 --> 00:31:40,059
<font color="#CCCCCC">looking at</font><font color="#E5E5E5"> this on the</font><font color="#CCCCCC"> mooc maybe that</font>

736
00:31:40,059 --> 00:31:43,270
<font color="#E5E5E5">will exist</font><font color="#CCCCCC"> I certainly</font><font color="#E5E5E5"> hope so we will</font>

737
00:31:43,270 --> 00:31:46,390
see<font color="#E5E5E5"> hey wait</font>

738
00:31:46,390 --> 00:31:49,390
so<font color="#CCCCCC"> Karis</font><font color="#E5E5E5"> is Karis intensive flow was</font>

739
00:31:49,390 --> 00:31:53,370
certainly not you know

740
00:31:53,370 --> 00:31:55,590
that difficult to handle<font color="#E5E5E5"> and so I don't</font>

741
00:31:55,590 --> 00:31:56,820
<font color="#CCCCCC">think you</font><font color="#E5E5E5"> should worry if you're</font><font color="#CCCCCC"> told</font>

742
00:31:56,820 --> 00:31:59,010
you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> learn them after this course</font>

743
00:31:59,010 --> 00:32:00,780
for some reason<font color="#CCCCCC"> even let me take</font><font color="#E5E5E5"> you a</font>

744
00:32:00,780 --> 00:32:08,309
<font color="#E5E5E5">couple of days I'm sure so that's kind</font>

745
00:32:08,309 --> 00:32:11,120
of most of the<font color="#E5E5E5"> stuff you would need to</font>

746
00:32:11,120 --> 00:32:13,380
kind of<font color="#E5E5E5"> complete this this kind of</font>

747
00:32:13,380 --> 00:32:15,030
assignment<font color="#CCCCCC"> from</font><font color="#E5E5E5"> last week which was like</font>

748
00:32:15,030 --> 00:32:17,040
try to do<font color="#E5E5E5"> everything you've seen</font><font color="#CCCCCC"> already</font>

749
00:32:17,040 --> 00:32:19,890
but on the dog<font color="#E5E5E5"> of reinstated said just</font>

750
00:32:19,890 --> 00:32:23,309
to<font color="#E5E5E5"> remind you that kind of last few</font>

751
00:32:23,309 --> 00:32:26,600
minutes of last<font color="#E5E5E5"> week's lesson I show</font><font color="#CCCCCC"> you</font>

752
00:32:26,600 --> 00:32:30,870
how<font color="#E5E5E5"> to do much</font><font color="#CCCCCC"> of that</font><font color="#E5E5E5"> including like</font>

753
00:32:30,870 --> 00:32:32,730
how I actually<font color="#E5E5E5"> explored the data to find</font>

754
00:32:32,730 --> 00:32:35,910
out like what<font color="#E5E5E5"> the classes were and how</font>

755
00:32:35,910 --> 00:32:38,100
<font color="#E5E5E5">big the images were and stuff like that</font>

756
00:32:38,100 --> 00:32:39,960
right<font color="#E5E5E5"> so if you've forgotten</font><font color="#CCCCCC"> that or</font>

757
00:32:39,960 --> 00:32:42,090
didn't quite follow at all last<font color="#E5E5E5"> week</font>

758
00:32:42,090 --> 00:32:44,100
check out the video from last<font color="#CCCCCC"> week to</font>

759
00:32:44,100 --> 00:32:47,040
see<font color="#E5E5E5"> one thing that we didn't talk</font><font color="#CCCCCC"> about</font>

760
00:32:47,040 --> 00:32:49,530
is how do<font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually submit to Carol</font>

761
00:32:49,530 --> 00:32:51,260
<font color="#E5E5E5">so how do you actually get predictions</font>

762
00:32:51,260 --> 00:32:53,520
so I<font color="#E5E5E5"> just wanted to show you</font><font color="#CCCCCC"> that last</font>

763
00:32:53,520 --> 00:32:56,429
piece as well and on the<font color="#E5E5E5"> wiki thread</font>

764
00:32:56,429 --> 00:32:58,230
<font color="#E5E5E5">this week I've already put a little</font>

765
00:32:58,230 --> 00:33:01,500
image of<font color="#E5E5E5"> this to show you these days</font><font color="#CCCCCC"> but</font>

766
00:33:01,500 --> 00:33:04,860
<font color="#E5E5E5">if you go to the</font><font color="#CCCCCC"> kaggle website for</font>

767
00:33:04,860 --> 00:33:06,210
every<font color="#CCCCCC"> competition there's a section</font>

768
00:33:06,210 --> 00:33:08,220
called evaluation and they tell you<font color="#E5E5E5"> what</font>

769
00:33:08,220 --> 00:33:10,230
it's a bit and so I just copied and

770
00:33:10,230 --> 00:33:13,590
<font color="#E5E5E5">pasted these two lines from from there</font>

771
00:33:13,590 --> 00:33:15,780
<font color="#E5E5E5">and so it says we're expected to</font><font color="#CCCCCC"> submit</font>

772
00:33:15,780 --> 00:33:18,559
a file where<font color="#CCCCCC"> the first line contains the</font>

773
00:33:18,559 --> 00:33:22,140
the work the word ID and then a<font color="#CCCCCC"> comma</font>

774
00:33:22,140 --> 00:33:23,910
<font color="#CCCCCC">separated</font><font color="#E5E5E5"> list of all of</font><font color="#CCCCCC"> the possible</font>

775
00:33:23,910 --> 00:33:26,190
dog breeds<font color="#CCCCCC"> and then every line</font><font color="#E5E5E5"> after</font>

776
00:33:26,190 --> 00:33:29,090
<font color="#E5E5E5">that will contain the idea itself</font>

777
00:33:29,090 --> 00:33:31,860
<font color="#CCCCCC">followed</font><font color="#E5E5E5"> by all the</font><font color="#CCCCCC"> probabilities</font><font color="#E5E5E5"> of all</font>

778
00:33:31,860 --> 00:33:35,610
the different dog breeds<font color="#CCCCCC"> so how do you</font>

779
00:33:35,610 --> 00:33:39,660
create<font color="#CCCCCC"> that so recognize that inside our</font>

780
00:33:39,660 --> 00:33:42,960
data object there's a dot classes which

781
00:33:42,960 --> 00:33:46,140
has<font color="#E5E5E5"> got in alphabetical order all of the</font>

782
00:33:46,140 --> 00:33:52,200
four<font color="#E5E5E5"> other classes and then so it's got</font>

783
00:33:52,200 --> 00:33:53,850
<font color="#CCCCCC">all of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> different classes and then</font>

784
00:33:53,850 --> 00:33:58,380
inside<font color="#E5E5E5"> data dot test data set</font><font color="#CCCCCC"> just yes</font>

785
00:33:58,380 --> 00:34:00,240
<font color="#CCCCCC">you can also see there's all the file</font>

786
00:34:00,240 --> 00:34:05,010
names<font color="#CCCCCC"> so and</font><font color="#E5E5E5"> just to remind you</font><font color="#CCCCCC"> dogs</font><font color="#E5E5E5"> and</font>

787
00:34:05,010 --> 00:34:05,490
<font color="#CCCCCC">cats</font>

788
00:34:05,490 --> 00:34:06,690
sorry

789
00:34:06,690 --> 00:34:11,579
<font color="#CCCCCC">cats dog breeds was not provided in the</font>

790
00:34:11,579 --> 00:34:13,679
kind of<font color="#CCCCCC"> care</font><font color="#E5E5E5"> our style format where the</font>

791
00:34:13,679 --> 00:34:15,929
<font color="#E5E5E5">dogs and</font><font color="#CCCCCC"> cats from different folders but</font>

792
00:34:15,929 --> 00:34:18,270
instead<font color="#E5E5E5"> it</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> provided as a CSV file of</font>

793
00:34:18,270 --> 00:34:21,059
labels right<font color="#E5E5E5"> so when you get a CSV file</font>

794
00:34:21,059 --> 00:34:25,109
<font color="#CCCCCC">of labels you use image classifier data</font>

795
00:34:25,109 --> 00:34:27,859
from CSV<font color="#E5E5E5"> rather than image classifier</font>

796
00:34:27,859 --> 00:34:31,799
data from parts<font color="#E5E5E5"> there isn't an</font>

797
00:34:31,799 --> 00:34:33,719
equivalent in care us so you'll see like

798
00:34:33,719 --> 00:34:36,149
on the cattle forums people share

799
00:34:36,149 --> 00:34:38,129
scripts for how to convert it to a<font color="#E5E5E5"> care</font>

800
00:34:38,129 --> 00:34:40,139
<font color="#E5E5E5">our style folders but in our case we</font>

801
00:34:40,139 --> 00:34:41,250
don't<font color="#E5E5E5"> have to we</font><font color="#CCCCCC"> just go image</font>

802
00:34:41,250 --> 00:34:44,039
<font color="#E5E5E5">classifier data from CSV passing in that</font>

803
00:34:44,039 --> 00:34:49,020
<font color="#E5E5E5">CSV file</font><font color="#CCCCCC"> and so the CSV file will you</font>

804
00:34:49,020 --> 00:34:51,210
know has automatically<font color="#E5E5E5"> told the data you</font>

805
00:34:51,210 --> 00:34:54,569
know what the masses<font color="#E5E5E5"> are and then also</font>

806
00:34:54,569 --> 00:34:57,750
we<font color="#CCCCCC"> can see</font><font color="#E5E5E5"> from the folder of test</font>

807
00:34:57,750 --> 00:35:00,200
images what the file names<font color="#CCCCCC"> of those are</font>

808
00:35:00,200 --> 00:35:03,740
so with those<font color="#E5E5E5"> two pieces of information</font>

809
00:35:03,740 --> 00:35:07,020
<font color="#E5E5E5">we're ready to go so I always think it's</font>

810
00:35:07,020 --> 00:35:09,660
a<font color="#E5E5E5"> good idea to use</font><font color="#CCCCCC"> TTA</font><font color="#E5E5E5"> as you saw with</font>

811
00:35:09,660 --> 00:35:11,549
<font color="#E5E5E5">that dogs and cats example just</font><font color="#CCCCCC"> now it</font>

812
00:35:11,549 --> 00:35:13,500
can really improve<font color="#CCCCCC"> things</font><font color="#E5E5E5"> particularly</font>

813
00:35:13,500 --> 00:35:17,099
when your model<font color="#E5E5E5"> is less good so I can</font>

814
00:35:17,099 --> 00:35:22,130
say<font color="#CCCCCC"> learn dot t ta</font><font color="#E5E5E5"> and if you pass in</font>

815
00:35:25,549 --> 00:35:29,630
<font color="#CCCCCC">yeah if you pass in</font><font color="#E5E5E5"> is test equals true</font>

816
00:35:29,630 --> 00:35:32,130
then it's going<font color="#E5E5E5"> to give you predictions</font>

817
00:35:32,130 --> 00:35:33,599
on the<font color="#E5E5E5"> test set</font><font color="#CCCCCC"> rather</font><font color="#E5E5E5"> than the</font>

818
00:35:33,599 --> 00:35:35,369
validation set<font color="#E5E5E5"> okay</font>

819
00:35:35,369 --> 00:35:39,480
and now obviously<font color="#CCCCCC"> we can't now get an</font>

820
00:35:39,480 --> 00:35:40,980
accuracy or anything because<font color="#E5E5E5"> by</font>

821
00:35:40,980 --> 00:35:42,930
definition<font color="#E5E5E5"> we don't know the labels for</font>

822
00:35:42,930 --> 00:35:48,650
the test set right<font color="#E5E5E5"> so by default most</font>

823
00:35:48,650 --> 00:35:51,240
<font color="#CCCCCC">high-touch models give you back the log</font>

824
00:35:51,240 --> 00:35:54,539
of the predictions so then we<font color="#CCCCCC"> just have</font>

825
00:35:54,539 --> 00:35:57,150
<font color="#CCCCCC">to go</font><font color="#E5E5E5"> X of that to get back</font><font color="#CCCCCC"> out</font>

826
00:35:57,150 --> 00:35:59,760
probabilities so in this case the test

827
00:35:59,760 --> 00:36:01,140
set had ten thousand three hundred and

828
00:36:01,140 --> 00:36:03,809
<font color="#E5E5E5">fifty seven images</font><font color="#CCCCCC"> in it</font><font color="#E5E5E5"> and there are</font>

829
00:36:03,809 --> 00:36:06,539
<font color="#CCCCCC">120</font><font color="#E5E5E5"> possible breeds all right so we get</font>

830
00:36:06,539 --> 00:36:10,529
back a matrix of of that<font color="#E5E5E5"> size and so we</font>

831
00:36:10,529 --> 00:36:12,890
now need<font color="#CCCCCC"> to turn that into something</font>

832
00:36:12,890 --> 00:36:16,020
<font color="#CCCCCC">that</font><font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like this</font>

833
00:36:16,020 --> 00:36:17,460
and so the easiest<font color="#E5E5E5"> way to do that is</font>

834
00:36:17,460 --> 00:36:19,470
with pandas<font color="#CCCCCC"> if you're not familiar with</font>

835
00:36:19,470 --> 00:36:21,360
pandas<font color="#CCCCCC"> there's lots of information</font>

836
00:36:21,360 --> 00:36:23,340
online about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> or check out the machine</font>

837
00:36:23,340 --> 00:36:24,630
<font color="#E5E5E5">learning course intro to machine</font>

838
00:36:24,630 --> 00:36:26,400
learning<font color="#CCCCCC"> that we have where we do lots</font>

839
00:36:26,400 --> 00:36:28,320
of stuff<font color="#CCCCCC"> with pandas</font><font color="#E5E5E5"> but basically we</font>

840
00:36:28,320 --> 00:36:30,990
<font color="#E5E5E5">can describe PD data frame and pass in</font>

841
00:36:30,990 --> 00:36:33,630
that<font color="#CCCCCC"> matrix</font><font color="#E5E5E5"> and then we can</font><font color="#CCCCCC"> say the</font>

842
00:36:33,630 --> 00:36:36,060
names of the columns are equal to data

843
00:36:36,060 --> 00:36:38,640
<font color="#CCCCCC">duck classes and then finally we</font><font color="#E5E5E5"> can</font>

844
00:36:38,640 --> 00:36:41,670
insert a<font color="#CCCCCC"> new column at position 0</font><font color="#E5E5E5"> called</font>

845
00:36:41,670 --> 00:36:45,540
ID that contains the file names<font color="#CCCCCC"> but</font>

846
00:36:45,540 --> 00:36:47,300
you'll<font color="#CCCCCC"> notice that</font><font color="#E5E5E5"> the file names</font>

847
00:36:47,300 --> 00:36:51,210
<font color="#E5E5E5">contain</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> letters at the</font><font color="#CCCCCC"> end I start</font>

848
00:36:51,210 --> 00:36:52,800
we don't want and four letters at the

849
00:36:52,800 --> 00:36:56,850
<font color="#E5E5E5">end we don't want so I just subset in</font>

850
00:36:56,850 --> 00:37:02,790
like so right<font color="#E5E5E5"> so at that point I've got</font>

851
00:37:02,790 --> 00:37:06,510
a data frame that<font color="#CCCCCC"> looks like this</font><font color="#E5E5E5"> which</font>

852
00:37:06,510 --> 00:37:10,410
<font color="#CCCCCC">is what we want</font><font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> now call a</font>

853
00:37:10,410 --> 00:37:13,470
data frame data<font color="#CCCCCC"> so social</font><font color="#E5E5E5"> cues</font><font color="#CCCCCC"> dated DF</font>

854
00:37:13,470 --> 00:37:24,000
not<font color="#E5E5E5"> des let's fix it now data frame okay</font>

855
00:37:24,000 --> 00:37:26,880
<font color="#E5E5E5">so you can now call data frame to CSV</font>

856
00:37:26,880 --> 00:37:30,900
<font color="#E5E5E5">and quite often you'll find these files</font>

857
00:37:30,900 --> 00:37:33,180
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> get quite big</font><font color="#CCCCCC"> so it's a</font><font color="#E5E5E5"> good</font>

858
00:37:33,180 --> 00:37:35,280
<font color="#E5E5E5">idea to say compression equals gzip and</font>

859
00:37:35,280 --> 00:37:37,080
that'll zip it up on the server<font color="#CCCCCC"> for you</font>

860
00:37:37,080 --> 00:37:41,180
and that's<font color="#E5E5E5"> going to create a zipped up</font>

861
00:37:41,180 --> 00:37:44,280
<font color="#CCCCCC">CSV file on the server</font><font color="#E5E5E5"> on wherever</font>

862
00:37:44,280 --> 00:37:46,230
<font color="#E5E5E5">you're running is Jupiter notebook so</font>

863
00:37:46,230 --> 00:37:47,790
you need<font color="#CCCCCC"> apps that</font><font color="#E5E5E5"> you now need to get</font>

864
00:37:47,790 --> 00:37:49,350
<font color="#E5E5E5">that back to your computer</font><font color="#CCCCCC"> so you can</font>

865
00:37:49,350 --> 00:37:53,250
<font color="#E5E5E5">upload it or you can use</font><font color="#CCCCCC"> carol CLA</font><font color="#E5E5E5"> so</font>

866
00:37:53,250 --> 00:37:55,620
you can type<font color="#CCCCCC"> kgs submit and do it</font><font color="#E5E5E5"> that</font>

867
00:37:55,620 --> 00:37:55,980
<font color="#E5E5E5">way</font>

868
00:37:55,980 --> 00:37:58,950
I generally download it to my<font color="#CCCCCC"> computer</font>

869
00:37:58,950 --> 00:38:00,660
so<font color="#E5E5E5"> like how often</font><font color="#CCCCCC"> back to this lab</font>

870
00:38:00,660 --> 00:38:04,170
<font color="#E5E5E5">double check it all looks</font><font color="#CCCCCC"> ok so to do</font>

871
00:38:04,170 --> 00:38:05,610
<font color="#CCCCCC">that there's a cool little</font><font color="#E5E5E5"> theme called</font>

872
00:38:05,610 --> 00:38:09,300
file link and if<font color="#E5E5E5"> you run file link with</font>

873
00:38:09,300 --> 00:38:11,880
a path on your<font color="#E5E5E5"> server it gives you back</font>

874
00:38:11,880 --> 00:38:14,970
a URL which<font color="#CCCCCC"> you can click on and it will</font>

875
00:38:14,970 --> 00:38:18,390
<font color="#CCCCCC">download that file from the server onto</font>

876
00:38:18,390 --> 00:38:21,390
<font color="#CCCCCC">your computer</font><font color="#E5E5E5"> so if I click on that now</font>

877
00:38:21,390 --> 00:38:25,290
<font color="#E5E5E5">I can go ahead</font><font color="#CCCCCC"> and save it</font>

878
00:38:25,290 --> 00:38:31,430
and then I can see in<font color="#E5E5E5"> my downloads</font>

879
00:38:33,490 --> 00:38:38,590
there it is<font color="#E5E5E5"> here's my submission file</font>

880
00:38:40,330 --> 00:38:44,560
<font color="#E5E5E5">they want to open</font><font color="#CCCCCC"> their yeah</font><font color="#E5E5E5"> and as you</font>

881
00:38:44,560 --> 00:38:45,820
can see<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> exactly what I</font><font color="#E5E5E5"> asked for</font>

882
00:38:45,820 --> 00:38:49,060
there's my ID<font color="#E5E5E5"> and 120</font><font color="#CCCCCC"> different dog</font>

883
00:38:49,060 --> 00:38:51,820
breeds<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then here's my first row</font>

884
00:38:51,820 --> 00:38:54,040
containing<font color="#E5E5E5"> the file name and the 120</font>

885
00:38:54,040 --> 00:38:56,470
<font color="#CCCCCC">different probabilities</font><font color="#E5E5E5"> okay so then you</font>

886
00:38:56,470 --> 00:38:58,120
can go ahead<font color="#E5E5E5"> and submit that to cattle</font>

887
00:38:58,120 --> 00:39:00,700
through<font color="#CCCCCC"> their through their regular form</font>

888
00:39:00,700 --> 00:39:03,370
and so this is also<font color="#E5E5E5"> a good way you can</font>

889
00:39:03,370 --> 00:39:05,910
see we've now<font color="#E5E5E5"> got a good way</font><font color="#CCCCCC"> of both</font>

890
00:39:05,910 --> 00:39:08,380
<font color="#CCCCCC">grabbing any file off the internet and</font>

891
00:39:08,380 --> 00:39:10,990
<font color="#E5E5E5">getting a to our AWS instance or paper</font>

892
00:39:10,990 --> 00:39:15,160
space or<font color="#E5E5E5"> whatever by using the cool</font>

893
00:39:15,160 --> 00:39:17,170
little extension in chrome<font color="#E5E5E5"> and we've</font>

894
00:39:17,170 --> 00:39:18,850
also got<font color="#E5E5E5"> a way</font><font color="#CCCCCC"> of grabbing stuff</font><font color="#E5E5E5"> off our</font>

895
00:39:18,850 --> 00:39:22,200
<font color="#E5E5E5">server easily those of you that are more</font>

896
00:39:22,200 --> 00:39:24,940
command line oriented you<font color="#E5E5E5"> can also use</font>

897
00:39:24,940 --> 00:39:28,030
SCP<font color="#E5E5E5"> of course but I kind of like doing</font>

898
00:39:28,030 --> 00:39:31,270
<font color="#CCCCCC">everything through the notebook</font><font color="#E5E5E5"> all</font>

899
00:39:31,270 --> 00:39:32,890
<font color="#E5E5E5">right</font>

900
00:39:32,890 --> 00:39:34,960
one other question I had during the week

901
00:39:34,960 --> 00:39:37,810
was like what if I want to<font color="#E5E5E5"> just get a</font>

902
00:39:37,810 --> 00:39:42,910
single a<font color="#E5E5E5"> single file that I want</font><font color="#CCCCCC"> to you</font>

903
00:39:42,910 --> 00:39:45,610
<font color="#E5E5E5">know get a prediction for so for example</font>

904
00:39:45,610 --> 00:39:47,290
<font color="#E5E5E5">you know maybe I want to get this first</font>

905
00:39:47,290 --> 00:39:49,300
<font color="#E5E5E5">file from my validation set</font>

906
00:39:49,300 --> 00:39:52,390
so there's<font color="#E5E5E5"> its name so you can</font><font color="#CCCCCC"> always</font>

907
00:39:52,390 --> 00:39:54,250
<font color="#E5E5E5">look at a file</font><font color="#CCCCCC"> just by calling image dot</font>

908
00:39:54,250 --> 00:39:59,350
open<font color="#E5E5E5"> that just uses regular - imaging</font>

909
00:39:59,350 --> 00:40:04,240
library<font color="#CCCCCC"> and so what you</font><font color="#E5E5E5"> can do is</font>

910
00:40:04,240 --> 00:40:05,800
there's actually<font color="#CCCCCC"> I'll show you the</font>

911
00:40:05,800 --> 00:40:09,400
shortest version<font color="#CCCCCC"> you can just</font><font color="#E5E5E5"> call learn</font>

912
00:40:09,400 --> 00:40:16,230
predict array passing in your your image

913
00:40:16,230 --> 00:40:20,010
<font color="#CCCCCC">okay now the</font><font color="#E5E5E5"> image needs to have been</font>

914
00:40:20,010 --> 00:40:21,390
transformed

915
00:40:21,390 --> 00:40:24,360
so you've seen transform<font color="#CCCCCC"> Trent</font>

916
00:40:24,360 --> 00:40:27,760
transforms from model before<font color="#E5E5E5"> normally we</font>

917
00:40:27,760 --> 00:40:29,890
just<font color="#E5E5E5"> put put it all in one variable but</font>

918
00:40:29,890 --> 00:40:31,270
<font color="#E5E5E5">actually behind the scenes it was</font>

919
00:40:31,270 --> 00:40:32,500
returning<font color="#E5E5E5"> to things</font>

920
00:40:32,500 --> 00:40:34,480
it was<font color="#E5E5E5"> returning training transforms and</font>

921
00:40:34,480 --> 00:40:36,310
validation transforms<font color="#E5E5E5"> so I can actually</font>

922
00:40:36,310 --> 00:40:38,770
<font color="#E5E5E5">split them apart and so here</font><font color="#CCCCCC"> you can see</font>

923
00:40:38,770 --> 00:40:41,110
I'm actually<font color="#E5E5E5"> applying example my</font>

924
00:40:41,110 --> 00:40:43,180
training transforms<font color="#E5E5E5"> or probably more</font>

925
00:40:43,180 --> 00:40:45,280
<font color="#E5E5E5">likely</font><font color="#CCCCCC"> that would apply validation</font>

926
00:40:45,280 --> 00:40:48,820
transforms<font color="#CCCCCC"> that gives</font><font color="#E5E5E5"> me back an array</font>

927
00:40:48,820 --> 00:40:51,220
containing<font color="#E5E5E5"> the image the transformed</font>

928
00:40:51,220 --> 00:40:55,110
image<font color="#E5E5E5"> which I can then past</font>

929
00:40:55,440 --> 00:40:58,210
everything that<font color="#CCCCCC"> gets passed</font><font color="#E5E5E5"> to or</font>

930
00:40:58,210 --> 00:41:01,570
returned from<font color="#CCCCCC"> bottles is generally</font>

931
00:41:01,570 --> 00:41:03,460
assumed to<font color="#CCCCCC"> be a mini batch right it's</font>

932
00:41:03,460 --> 00:41:05,320
generally assumed to<font color="#CCCCCC"> be a bunch of</font>

933
00:41:05,320 --> 00:41:07,930
images<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we'll talk</font><font color="#E5E5E5"> more about</font><font color="#CCCCCC"> some</font>

934
00:41:07,930 --> 00:41:10,690
numpy tricks later<font color="#E5E5E5"> but basically</font><font color="#CCCCCC"> in this</font>

935
00:41:10,690 --> 00:41:13,330
case<font color="#E5E5E5"> we only have one image so we have</font>

936
00:41:13,330 --> 00:41:15,250
to turn<font color="#CCCCCC"> that into a mini batch of images</font>

937
00:41:15,250 --> 00:41:16,930
<font color="#CCCCCC">so in other</font><font color="#E5E5E5"> words we</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to create a</font>

938
00:41:16,930 --> 00:41:21,490
tensor<font color="#E5E5E5"> that</font><font color="#CCCCCC"> basically is not just rows</font>

939
00:41:21,490 --> 00:41:24,130
by columns by channels<font color="#E5E5E5"> but it's number</font>

940
00:41:24,130 --> 00:41:26,230
of image<font color="#E5E5E5"> by rows by columns by channels</font>

941
00:41:26,230 --> 00:41:29,080
and as one<font color="#E5E5E5"> image so it's basically</font>

942
00:41:29,080 --> 00:41:31,330
becomes a<font color="#CCCCCC"> 4 dimensional</font><font color="#E5E5E5"> tensor so</font>

943
00:41:31,330 --> 00:41:33,430
there's a cool<font color="#CCCCCC"> little trick in numpy</font>

944
00:41:33,430 --> 00:41:36,610
that if you index into an array with

945
00:41:36,610 --> 00:41:39,880
none that basically adds additional unit

946
00:41:39,880 --> 00:41:41,350
access to the start so it turns it from

947
00:41:41,350 --> 00:41:44,080
<font color="#E5E5E5">an image into</font><font color="#CCCCCC"> a mini batch of</font><font color="#E5E5E5"> one images</font>

948
00:41:44,080 --> 00:41:46,480
and so that's why we<font color="#CCCCCC"> had</font><font color="#E5E5E5"> to do that so</font>

949
00:41:46,480 --> 00:41:48,910
if you basically<font color="#E5E5E5"> find you're trying to</font>

950
00:41:48,910 --> 00:41:52,630
do<font color="#E5E5E5"> things with a single image with any</font>

951
00:41:52,630 --> 00:41:55,540
kind of<font color="#CCCCCC"> Pi torch</font><font color="#E5E5E5"> or fast AI thing this</font>

952
00:41:55,540 --> 00:41:56,980
is<font color="#E5E5E5"> just something you might you might</font>

953
00:41:56,980 --> 00:41:59,400
<font color="#E5E5E5">find it says like expecting</font><font color="#CCCCCC"> four</font>

954
00:41:59,400 --> 00:42:02,080
dimensions<font color="#E5E5E5"> only got three it probably</font>

955
00:42:02,080 --> 00:42:04,470
means that<font color="#E5E5E5"> or if you get back a return</font>

956
00:42:04,470 --> 00:42:07,330
value<font color="#CCCCCC"> from something that has like some</font>

957
00:42:07,330 --> 00:42:10,120
weird<font color="#E5E5E5"> first access that's probably why</font>

958
00:42:10,120 --> 00:42:11,350
it's probably<font color="#CCCCCC"> giving you like back a</font>

959
00:42:11,350 --> 00:42:13,690
mini batch<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and so we'll learn a lot</font>

960
00:42:13,690 --> 00:42:15,040
<font color="#CCCCCC">more about this but</font><font color="#E5E5E5"> it's just something</font>

961
00:42:15,040 --> 00:42:22,050
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> aware of okay so that's</font><font color="#E5E5E5"> kind of</font>

962
00:42:22,080 --> 00:42:28,140
everything you need to<font color="#CCCCCC"> do in</font><font color="#E5E5E5"> practice so</font>

963
00:42:28,140 --> 00:42:29,580
now we're going<font color="#E5E5E5"> to kind of get into a</font>

964
00:42:29,580 --> 00:42:32,460
<font color="#E5E5E5">little bit</font><font color="#CCCCCC"> of theory what's actually</font>

965
00:42:32,460 --> 00:42:34,500
going on behind<font color="#E5E5E5"> the</font><font color="#CCCCCC"> scenes with these</font>

966
00:42:34,500 --> 00:42:36,990
convolutional neural networks<font color="#E5E5E5"> and you</font>

967
00:42:36,990 --> 00:42:42,410
might remember it<font color="#E5E5E5"> back in Lesson one we</font>

968
00:42:43,850 --> 00:42:48,510
<font color="#CCCCCC">actually saw our first</font><font color="#E5E5E5"> little bit of</font>

969
00:42:48,510 --> 00:42:51,720
theory which we stole<font color="#CCCCCC"> from</font><font color="#E5E5E5"> this</font>

970
00:42:51,720 --> 00:42:53,670
fantastic<font color="#E5E5E5"> websites a toaster dot</font><font color="#CCCCCC"> IO</font>

971
00:42:53,670 --> 00:42:56,730
<font color="#CCCCCC">either explained visually and we learnt</font>

972
00:42:56,730 --> 00:42:58,890
<font color="#E5E5E5">that a that a convolution is something</font>

973
00:42:58,890 --> 00:43:01,320
where we<font color="#E5E5E5"> basically have a little matrix</font>

974
00:43:01,320 --> 00:43:03,870
<font color="#CCCCCC">in deep learning</font><font color="#E5E5E5"> nearly always three by</font>

975
00:43:03,870 --> 00:43:06,600
<font color="#E5E5E5">three</font><font color="#CCCCCC"> a little matrix that we basically</font>

976
00:43:06,600 --> 00:43:09,030
multiply every element of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> matrix by</font>

977
00:43:09,030 --> 00:43:10,770
<font color="#CCCCCC">every element of</font><font color="#E5E5E5"> a three by three</font>

978
00:43:10,770 --> 00:43:14,010
section of an image<font color="#CCCCCC"> add them all</font>

979
00:43:14,010 --> 00:43:16,440
together<font color="#E5E5E5"> to get the result of that</font>

980
00:43:16,440 --> 00:43:19,670
convolution at one point<font color="#E5E5E5"> all</font><font color="#CCCCCC"> right now</font>

981
00:43:19,670 --> 00:43:22,260
<font color="#CCCCCC">let's see how that all</font><font color="#E5E5E5"> gets turned</font>

982
00:43:22,260 --> 00:43:26,370
together to create<font color="#E5E5E5"> these these</font><font color="#CCCCCC"> various</font>

983
00:43:26,370 --> 00:43:29,370
layers that we saw in the the<font color="#CCCCCC"> Zeiler and</font>

984
00:43:29,370 --> 00:43:31,860
<font color="#CCCCCC">burgers</font><font color="#E5E5E5"> paper and to do that again I'm</font>

985
00:43:31,860 --> 00:43:33,300
going to steal off somebody who's much

986
00:43:33,300 --> 00:43:35,010
smarter<font color="#CCCCCC"> than I am</font>

987
00:43:35,010 --> 00:43:38,370
we're going to steal from<font color="#E5E5E5"> a guy</font><font color="#CCCCCC"> called</font>

988
00:43:38,370 --> 00:43:39,570
<font color="#E5E5E5">Ottavia good</font>

989
00:43:39,570 --> 00:43:42,480
<font color="#E5E5E5">Ottavia oh good was the guy who created</font>

990
00:43:42,480 --> 00:43:45,540
<font color="#E5E5E5">Word Lens which nowadays is part of</font>

991
00:43:45,540 --> 00:43:47,460
<font color="#CCCCCC">Google</font><font color="#E5E5E5"> Translate if</font><font color="#CCCCCC"> I'm Google Translate</font>

992
00:43:47,460 --> 00:43:48,870
you've ever like done that thing<font color="#E5E5E5"> where</font>

993
00:43:48,870 --> 00:43:52,740
<font color="#CCCCCC">you point</font><font color="#E5E5E5"> your camera at something at</font>

994
00:43:52,740 --> 00:43:54,600
something which has any<font color="#E5E5E5"> kind of foreign</font>

995
00:43:54,600 --> 00:43:56,190
<font color="#E5E5E5">language on</font><font color="#CCCCCC"> it and in real-time it</font>

996
00:43:56,190 --> 00:43:58,080
overlays it with the translation<font color="#CCCCCC"> that</font>

997
00:43:58,080 --> 00:44:01,440
was a views company that built<font color="#CCCCCC"> that and</font>

998
00:44:01,440 --> 00:44:03,630
so<font color="#E5E5E5"> Tokyo</font><font color="#CCCCCC"> was kind enough</font><font color="#E5E5E5"> to share this</font>

999
00:44:03,630 --> 00:44:05,130
fantastic<font color="#E5E5E5"> video</font>

1000
00:44:05,130 --> 00:44:09,240
he created he's at Google now and<font color="#CCCCCC"> I want</font>

1001
00:44:09,240 --> 00:44:10,350
to kind<font color="#CCCCCC"> of step you through works I</font>

1002
00:44:10,350 --> 00:44:12,030
think<font color="#CCCCCC"> it explains</font><font color="#E5E5E5"> really really well</font>

1003
00:44:12,030 --> 00:44:14,310
<font color="#E5E5E5">what's going on and then after we look</font>

1004
00:44:14,310 --> 00:44:15,930
at the video<font color="#E5E5E5"> we're going to see how to</font>

1005
00:44:15,930 --> 00:44:18,710
implement the whole a<font color="#CCCCCC"> whole sequence of</font>

1006
00:44:18,710 --> 00:44:20,940
<font color="#CCCCCC">kintyre</font><font color="#E5E5E5"> set of layers</font><font color="#CCCCCC"> of convolution on</font>

1007
00:44:20,940 --> 00:44:23,400
your network<font color="#E5E5E5"> in Microsoft Excel</font>

1008
00:44:23,400 --> 00:44:26,160
so with you're a visual<font color="#CCCCCC"> learner or a</font>

1009
00:44:26,160 --> 00:44:27,720
spreadsheet learner hopefully you'll<font color="#CCCCCC"> be</font>

1010
00:44:27,720 --> 00:44:29,880
<font color="#E5E5E5">able to understand all this</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font>

1011
00:44:29,880 --> 00:44:32,190
we're going to start<font color="#E5E5E5"> with an image and</font>

1012
00:44:32,190 --> 00:44:33,540
<font color="#CCCCCC">something</font><font color="#E5E5E5"> that we're going</font><font color="#CCCCCC"> to do later</font>

1013
00:44:33,540 --> 00:44:35,160
<font color="#E5E5E5">in the course is we're going to</font><font color="#CCCCCC"> learn</font><font color="#E5E5E5"> to</font>

1014
00:44:35,160 --> 00:44:36,990
<font color="#CCCCCC">nice digits</font><font color="#E5E5E5"> so we'll do it like end to</font>

1015
00:44:36,990 --> 00:44:39,240
<font color="#E5E5E5">end</font><font color="#CCCCCC"> we'll do the whole</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is</font>

1016
00:44:39,240 --> 00:44:41,610
<font color="#E5E5E5">pretty similar</font><font color="#CCCCCC"> so we're going to try and</font>

1017
00:44:41,610 --> 00:44:44,100
<font color="#E5E5E5">recognize in</font><font color="#CCCCCC"> this case letters</font><font color="#E5E5E5"> so here's</font>

1018
00:44:44,100 --> 00:44:46,290
an<font color="#CCCCCC"> A which obviously it's actually a</font>

1019
00:44:46,290 --> 00:44:50,010
grid<font color="#CCCCCC"> of numbers</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so there's the</font>

1020
00:44:50,010 --> 00:44:51,990
creative numbers and so what we do is we

1021
00:44:51,990 --> 00:44:55,650
take our first convolutional filter so

1022
00:44:55,650 --> 00:44:57,150
we're assuming this is<font color="#E5E5E5"> all this is</font>

1023
00:44:57,150 --> 00:44:58,770
assuming<font color="#CCCCCC"> that these</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> learned</font>

1024
00:44:58,770 --> 00:45:01,020
<font color="#E5E5E5">right</font><font color="#CCCCCC"> and you can see this point</font><font color="#E5E5E5"> it's</font>

1025
00:45:01,020 --> 00:45:03,240
<font color="#E5E5E5">got wiped down the</font><font color="#CCCCCC"> right-hand</font><font color="#E5E5E5"> side right</font>

1026
00:45:03,240 --> 00:45:05,010
and<font color="#E5E5E5"> black down the left so it's like</font>

1027
00:45:05,010 --> 00:45:07,410
zero zero zero maybe negative 1 negative

1028
00:45:07,410 --> 00:45:10,350
<font color="#E5E5E5">1 negative 1 0 0 0 1 1 1 and so we're</font>

1029
00:45:10,350 --> 00:45:13,140
<font color="#CCCCCC">taking each 3x3 part of the image and</font>

1030
00:45:13,140 --> 00:45:16,950
multiplying it by that<font color="#E5E5E5"> 3x3 matrix not as</font>

1031
00:45:16,950 --> 00:45:18,990
a matrix<font color="#E5E5E5"> product that an element-wise</font>

1032
00:45:18,990 --> 00:45:21,330
product<font color="#E5E5E5"> and so you can see what happens</font>

1033
00:45:21,330 --> 00:45:24,450
<font color="#E5E5E5">is everywhere where the the white edge</font>

1034
00:45:24,450 --> 00:45:28,140
is matching the<font color="#CCCCCC"> edge of the a</font><font color="#E5E5E5"> and the</font>

1035
00:45:28,140 --> 00:45:30,180
black edge isn't we're getting green

1036
00:45:30,180 --> 00:45:32,340
we're getting a<font color="#CCCCCC"> positive</font><font color="#E5E5E5"> and everywhere</font>

1037
00:45:32,340 --> 00:45:33,870
where it's the opposite<font color="#E5E5E5"> we're getting a</font>

1038
00:45:33,870 --> 00:45:35,970
negative<font color="#E5E5E5"> we're getting a red right and</font>

1039
00:45:35,970 --> 00:45:39,180
so that's<font color="#E5E5E5"> the first filter creating the</font>

1040
00:45:39,180 --> 00:45:41,850
first that the result of the first

1041
00:45:41,850 --> 00:45:44,760
kernel<font color="#E5E5E5"> right and so here's a new kernel</font>

1042
00:45:44,760 --> 00:45:46,620
this one is<font color="#CCCCCC"> it's got a white stripe</font>

1043
00:45:46,620 --> 00:45:49,380
along<font color="#E5E5E5"> the top right so we literally scan</font>

1044
00:45:49,380 --> 00:45:52,760
through every<font color="#CCCCCC"> 3x3 part of the matrix</font>

1045
00:45:52,760 --> 00:45:55,890
multiplying those<font color="#CCCCCC"> 3 bits of the a the</font>

1046
00:45:55,890 --> 00:45:57,450
neighbors of the a by the<font color="#E5E5E5"> 9 bits as a</font>

1047
00:45:57,450 --> 00:45:59,940
filter<font color="#CCCCCC"> to</font><font color="#E5E5E5"> find out whether it's red or</font>

1048
00:45:59,940 --> 00:46:02,610
green and<font color="#CCCCCC"> how red or green it is ok</font><font color="#E5E5E5"> and</font>

1049
00:46:02,610 --> 00:46:04,860
so this is<font color="#E5E5E5"> assuming we had two filters</font>

1050
00:46:04,860 --> 00:46:07,080
one was a bottom edge one was a left

1051
00:46:07,080 --> 00:46:08,970
edge and you can see here the top edge

1052
00:46:08,970 --> 00:46:10,800
<font color="#CCCCCC">not surprisingly</font><font color="#E5E5E5"> it's red here</font><font color="#CCCCCC"> so a</font>

1053
00:46:10,800 --> 00:46:12,690
bottom edge was red here<font color="#CCCCCC"> and green here</font>

1054
00:46:12,690 --> 00:46:15,570
<font color="#E5E5E5">the right edge right here</font><font color="#CCCCCC"> in green here</font>

1055
00:46:15,570 --> 00:46:17,880
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> next step we add a</font>

1056
00:46:17,880 --> 00:46:20,460
<font color="#E5E5E5">non-linearity</font><font color="#CCCCCC"> ok the rectified linear</font>

1057
00:46:20,460 --> 00:46:23,040
unit which literally means<font color="#E5E5E5"> strongly the</font>

1058
00:46:23,040 --> 00:46:26,520
negatives<font color="#E5E5E5"> so here the Reds all gone okay</font>

1059
00:46:26,520 --> 00:46:28,290
so here's layer<font color="#E5E5E5"> 1 the input</font>

1060
00:46:28,290 --> 00:46:30,780
here's<font color="#E5E5E5"> layup to the result of 2</font>

1061
00:46:30,780 --> 00:46:33,660
convolutional filters<font color="#E5E5E5"> here's layer 3</font>

1062
00:46:33,660 --> 00:46:36,180
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> which is throw away all of the</font>

1063
00:46:36,180 --> 00:46:38,190
red stuff<font color="#E5E5E5"> and that's called a rectified</font>

1064
00:46:38,190 --> 00:46:41,160
linear unit and then layer 4 is

1065
00:46:41,160 --> 00:46:43,890
something called a<font color="#E5E5E5"> max pull on a layer 4</font>

1066
00:46:43,890 --> 00:46:48,090
we replace every<font color="#E5E5E5"> 2 by 2 part of this</font>

1067
00:46:48,090 --> 00:46:48,700
grid

1068
00:46:48,700 --> 00:46:51,339
and we replace it<font color="#CCCCCC"> with its</font><font color="#E5E5E5"> maximum</font><font color="#CCCCCC"> mat</font>

1069
00:46:51,339 --> 00:46:53,040
so<font color="#CCCCCC"> it basically</font><font color="#E5E5E5"> makes it half the</font><font color="#CCCCCC"> size</font>

1070
00:46:53,040 --> 00:46:55,359
<font color="#CCCCCC">it's basically the</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing but</font><font color="#E5E5E5"> half</font>

1071
00:46:55,359 --> 00:46:57,700
<font color="#E5E5E5">the size and then we can go through and</font>

1072
00:46:57,700 --> 00:46:59,619
do exactly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same thing we can</font><font color="#E5E5E5"> have</font>

1073
00:46:59,619 --> 00:47:02,619
some new filter<font color="#CCCCCC"> three by three filter</font>

1074
00:47:02,619 --> 00:47:04,510
that<font color="#E5E5E5"> we put through each of the two</font>

1075
00:47:04,510 --> 00:47:08,680
results of the previous<font color="#CCCCCC"> layer</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and</font>

1076
00:47:08,680 --> 00:47:10,510
<font color="#E5E5E5">again we can throw</font><font color="#CCCCCC"> away the red bits</font>

1077
00:47:10,510 --> 00:47:13,030
right so get rid<font color="#E5E5E5"> of all the negatives so</font>

1078
00:47:13,030 --> 00:47:14,349
we just keep the positives that's called

1079
00:47:14,349 --> 00:47:18,299
applying a rectified linear unit<font color="#E5E5E5"> and</font>

1080
00:47:18,299 --> 00:47:21,190
<font color="#CCCCCC">that gets</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> to our next layer of this</font>

1081
00:47:21,190 --> 00:47:23,530
convolutional neural network so<font color="#E5E5E5"> you can</font>

1082
00:47:23,530 --> 00:47:26,530
see that by you know<font color="#CCCCCC"> at this layer back</font>

1083
00:47:26,530 --> 00:47:29,109
here it was kind of very<font color="#E5E5E5"> interpretive</font>

1084
00:47:29,109 --> 00:47:30,490
all it's like we've either got bottom

1085
00:47:30,490 --> 00:47:33,010
edges or left<font color="#CCCCCC"> edges</font><font color="#E5E5E5"> but then the next</font>

1086
00:47:33,010 --> 00:47:36,130
layer was combining the<font color="#E5E5E5"> results of</font>

1087
00:47:36,130 --> 00:47:37,660
<font color="#CCCCCC">convolutions so it's starting</font><font color="#E5E5E5"> to become</font>

1088
00:47:37,660 --> 00:47:40,089
a lot less clear like intuitively what's

1089
00:47:40,089 --> 00:47:42,130
happening<font color="#E5E5E5"> but it's doing the</font><font color="#CCCCCC"> same thing</font>

1090
00:47:42,130 --> 00:47:45,130
and<font color="#E5E5E5"> then we do another</font><font color="#CCCCCC"> max pull</font><font color="#E5E5E5"> right so</font>

1091
00:47:45,130 --> 00:47:48,819
we replace every 2x2 or 3x3 section<font color="#E5E5E5"> with</font>

1092
00:47:48,819 --> 00:47:52,180
a single digit so here this<font color="#E5E5E5"> 2x2 it's all</font>

1093
00:47:52,180 --> 00:47:53,799
black<font color="#E5E5E5"> so we replaced it with a</font><font color="#CCCCCC"> black</font>

1094
00:47:53,799 --> 00:47:56,380
right and then we go<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we take that</font>

1095
00:47:56,380 --> 00:48:00,430
<font color="#E5E5E5">and we we compare it to</font><font color="#CCCCCC"> basically a</font><font color="#E5E5E5"> kind</font>

1096
00:48:00,430 --> 00:48:03,099
of<font color="#E5E5E5"> a template of what we would</font><font color="#CCCCCC"> expect to</font>

1097
00:48:03,099 --> 00:48:05,140
<font color="#E5E5E5">see if it was an a it was a B but the</font>

1098
00:48:05,140 --> 00:48:07,599
<font color="#CCCCCC">see</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> was d give it an E</font><font color="#E5E5E5"> and we see how</font>

1099
00:48:07,599 --> 00:48:10,690
closely it matches and we can do<font color="#E5E5E5"> it in</font>

1100
00:48:10,690 --> 00:48:12,309
<font color="#CCCCCC">exactly the same way we can multiply</font>

1101
00:48:12,309 --> 00:48:15,700
every one of<font color="#E5E5E5"> the values in this four by</font>

1102
00:48:15,700 --> 00:48:18,579
<font color="#CCCCCC">eight matrix with every</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the four</font>

1103
00:48:18,579 --> 00:48:20,650
by<font color="#CCCCCC"> eight</font><font color="#E5E5E5"> in this one and this one and</font>

1104
00:48:20,650 --> 00:48:22,390
this one<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we add we just add them</font>

1105
00:48:22,390 --> 00:48:24,579
<font color="#E5E5E5">together to</font><font color="#CCCCCC"> say like how</font><font color="#E5E5E5"> often does it</font>

1106
00:48:24,579 --> 00:48:26,859
match versus how often does<font color="#E5E5E5"> it not match</font>

1107
00:48:26,859 --> 00:48:29,799
and then that could<font color="#E5E5E5"> be converted</font><font color="#CCCCCC"> to give</font>

1108
00:48:29,799 --> 00:48:33,910
us a<font color="#CCCCCC"> percentage probability that this is</font>

1109
00:48:33,910 --> 00:48:35,530
<font color="#E5E5E5">a</font><font color="#CCCCCC"> no so in this case this particular</font>

1110
00:48:35,530 --> 00:48:39,460
<font color="#E5E5E5">template matched well with a so notice</font>

1111
00:48:39,460 --> 00:48:41,619
<font color="#E5E5E5">we're not doing an each training here</font>

1112
00:48:41,619 --> 00:48:43,540
right this<font color="#E5E5E5"> is how it would work if</font><font color="#CCCCCC"> we</font>

1113
00:48:43,540 --> 00:48:46,119
have a pre trained model<font color="#E5E5E5"> all right so</font>

1114
00:48:46,119 --> 00:48:48,040
when<font color="#CCCCCC"> we download a pre trained imagenet</font>

1115
00:48:48,040 --> 00:48:50,170
model off the internet<font color="#E5E5E5"> and isn't on an</font>

1116
00:48:50,170 --> 00:48:52,690
image<font color="#CCCCCC"> without any changing to it this</font><font color="#E5E5E5"> is</font>

1117
00:48:52,690 --> 00:48:54,460
what's happening<font color="#E5E5E5"> or if we take a model</font>

1118
00:48:54,460 --> 00:48:56,619
<font color="#CCCCCC">that you've trained and you're applying</font>

1119
00:48:56,619 --> 00:48:58,569
<font color="#CCCCCC">it to some test set or for</font><font color="#E5E5E5"> some new</font>

1120
00:48:58,569 --> 00:49:00,790
image this is what it's doing<font color="#CCCCCC"> all right</font>

1121
00:49:00,790 --> 00:49:02,500
<font color="#E5E5E5">as it's basically taking</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> through it</font>

1122
00:49:02,500 --> 00:49:04,870
<font color="#E5E5E5">buying a convolution to each layer</font><font color="#CCCCCC"> to</font>

1123
00:49:04,870 --> 00:49:08,710
<font color="#E5E5E5">each multiple convolutional filters to</font>

1124
00:49:08,710 --> 00:49:12,790
each<font color="#E5E5E5"> layer and then doing the rectified</font>

1125
00:49:12,790 --> 00:49:14,680
linear unit<font color="#E5E5E5"> so throw away the negatives</font>

1126
00:49:14,680 --> 00:49:18,370
and then do the max<font color="#E5E5E5"> pull and then repeat</font>

1127
00:49:18,370 --> 00:49:21,130
<font color="#CCCCCC">that</font><font color="#E5E5E5"> a bunch of times and so then we can</font>

1128
00:49:21,130 --> 00:49:24,520
do<font color="#E5E5E5"> it with a new letter A or letter B or</font>

1129
00:49:24,520 --> 00:49:28,030
<font color="#E5E5E5">whatever and keep going</font><font color="#CCCCCC"> through that</font>

1130
00:49:28,030 --> 00:49:31,330
<font color="#E5E5E5">process right so as</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see that's</font>

1131
00:49:31,330 --> 00:49:33,790
far nice the visualization thing and I

1132
00:49:33,790 --> 00:49:35,200
could have created because I'm not at a

1133
00:49:35,200 --> 00:49:37,810
vo<font color="#E5E5E5"> so thanks to him for sharing this</font>

1134
00:49:37,810 --> 00:49:40,420
with us because it's totally<font color="#CCCCCC"> awesome</font>

1135
00:49:40,420 --> 00:49:42,520
he actually<font color="#E5E5E5"> this is not done by hand he</font>

1136
00:49:42,520 --> 00:49:43,480
actually wrote<font color="#E5E5E5"> a piece of computer</font>

1137
00:49:43,480 --> 00:49:45,100
software<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually do these</font>

1138
00:49:45,100 --> 00:49:47,410
convolutions this is actually being

1139
00:49:47,410 --> 00:49:49,870
actually being done dynamically<font color="#CCCCCC"> which is</font>

1140
00:49:49,870 --> 00:49:52,480
pretty cool<font color="#E5E5E5"> so I'm more of a spreadsheet</font>

1141
00:49:52,480 --> 00:49:56,350
guy personally<font color="#E5E5E5"> I'm a simple person</font><font color="#CCCCCC"> so</font>

1142
00:49:56,350 --> 00:49:58,060
here is the same<font color="#CCCCCC"> thing now</font><font color="#E5E5E5"> in</font>

1143
00:49:58,060 --> 00:50:00,460
spreadsheet<font color="#E5E5E5"> all right and so you'll find</font>

1144
00:50:00,460 --> 00:50:03,490
this in<font color="#E5E5E5"> the github repo</font><font color="#CCCCCC"> so you can</font>

1145
00:50:03,490 --> 00:50:06,610
either get clone the repo to your own

1146
00:50:06,610 --> 00:50:08,950
computer<font color="#CCCCCC"> open</font><font color="#E5E5E5"> up the spreadsheet or you</font>

1147
00:50:08,950 --> 00:50:11,670
can<font color="#E5E5E5"> just go to github.com slash /</font><font color="#CCCCCC"> ji and</font>

1148
00:50:11,670 --> 00:50:21,070
click on this<font color="#E5E5E5"> it's it's inside</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> go</font>

1149
00:50:21,070 --> 00:50:23,830
to our repo<font color="#CCCCCC"> and</font><font color="#E5E5E5"> just go to courses as</font>

1150
00:50:23,830 --> 00:50:26,890
usual go to deal<font color="#CCCCCC"> 1 as</font><font color="#E5E5E5"> usual you'll see</font>

1151
00:50:26,890 --> 00:50:29,170
there's an<font color="#CCCCCC"> Excel section there okay</font><font color="#E5E5E5"> and</font>

1152
00:50:29,170 --> 00:50:30,820
<font color="#E5E5E5">so</font><font color="#CCCCCC"> he lay all</font><font color="#E5E5E5"> that so you can just</font>

1153
00:50:30,820 --> 00:50:32,230
download them by clicking<font color="#CCCCCC"> them or you</font>

1154
00:50:32,230 --> 00:50:33,970
<font color="#E5E5E5">can clone the whole repo and we're</font>

1155
00:50:33,970 --> 00:50:36,880
looking at cognitive example convolution

1156
00:50:36,880 --> 00:50:40,690
example<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so you can</font><font color="#CCCCCC"> see I have</font>

1157
00:50:40,690 --> 00:50:44,710
here<font color="#CCCCCC"> an input right so in this</font><font color="#E5E5E5"> case the</font>

1158
00:50:44,710 --> 00:50:48,250
input<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> number 7 so I grab this</font>

1159
00:50:48,250 --> 00:50:51,310
<font color="#E5E5E5">from a dataset called</font><font color="#CCCCCC"> m-must</font><font color="#E5E5E5"> MN</font><font color="#CCCCCC"> ist</font>

1160
00:50:51,310 --> 00:50:52,600
which<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> be looking</font><font color="#E5E5E5"> at in a lot of</font>

1161
00:50:52,600 --> 00:50:55,290
detail<font color="#CCCCCC"> and I just took one of those</font>

1162
00:50:55,290 --> 00:50:58,120
digits at random<font color="#E5E5E5"> and I put it into Excel</font>

1163
00:50:58,120 --> 00:51:01,360
<font color="#E5E5E5">and so you can see every Hextall is</font>

1164
00:51:01,360 --> 00:51:05,230
actually just a number between<font color="#E5E5E5"> 9 1</font><font color="#CCCCCC"> okay</font>

1165
00:51:05,230 --> 00:51:09,640
very often<font color="#CCCCCC"> actually it'll</font><font color="#E5E5E5"> be a bite</font>

1166
00:51:09,640 --> 00:51:13,060
between<font color="#E5E5E5"> Norton</font><font color="#CCCCCC"> 255</font><font color="#E5E5E5"> or sometimes it might</font>

1167
00:51:13,060 --> 00:51:15,250
be a float between<font color="#E5E5E5"> naught and</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> it</font>

1168
00:51:15,250 --> 00:51:16,089
<font color="#E5E5E5">doesn't really matter</font>

1169
00:51:16,089 --> 00:51:18,789
by the time<font color="#E5E5E5"> it gets to</font><font color="#CCCCCC"> PI torch we're</font>

1170
00:51:18,789 --> 00:51:22,449
generally<font color="#E5E5E5"> dealing with floats</font><font color="#CCCCCC"> so we if</font>

1171
00:51:22,449 --> 00:51:24,519
one of the steps we often will take will

1172
00:51:24,519 --> 00:51:25,900
be<font color="#E5E5E5"> to</font><font color="#CCCCCC"> convert it to a number between</font>

1173
00:51:25,900 --> 00:51:29,799
<font color="#CCCCCC">naught</font><font color="#E5E5E5"> 1 so then you can see I've</font><font color="#CCCCCC"> just</font>

1174
00:51:29,799 --> 00:51:32,170
use conditional<font color="#CCCCCC"> formatting in Excel to</font>

1175
00:51:32,170 --> 00:51:34,509
kind<font color="#E5E5E5"> of make the higher numbers more</font><font color="#CCCCCC"> red</font>

1176
00:51:34,509 --> 00:51:36,489
so<font color="#E5E5E5"> you can clearly</font><font color="#CCCCCC"> see that this</font><font color="#E5E5E5"> is a</font>

1177
00:51:36,489 --> 00:51:40,390
red<font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> 7</font><font color="#CCCCCC"> but but it's just</font><font color="#E5E5E5"> a</font>

1178
00:51:40,390 --> 00:51:42,400
bunch of numbers<font color="#E5E5E5"> that have</font><font color="#CCCCCC"> been imported</font>

1179
00:51:42,400 --> 00:51:49,479
<font color="#E5E5E5">into Excel okay so here's our input</font><font color="#CCCCCC"> so</font>

1180
00:51:49,479 --> 00:51:52,299
remember what at a via did was he then

1181
00:51:52,299 --> 00:51:55,839
applied<font color="#CCCCCC"> two filters right with different</font>

1182
00:51:55,839 --> 00:51:58,299
<font color="#E5E5E5">shapes so here I've created a filter</font>

1183
00:51:58,299 --> 00:52:02,049
which<font color="#CCCCCC"> is designed to detect</font><font color="#E5E5E5"> top edges so</font>

1184
00:52:02,049 --> 00:52:05,170
this is a<font color="#E5E5E5"> 3 by 3 filter okay</font><font color="#CCCCCC"> and I've</font>

1185
00:52:05,170 --> 00:52:07,269
got ones along<font color="#E5E5E5"> the top</font><font color="#CCCCCC"> zeroes in the</font>

1186
00:52:07,269 --> 00:52:10,119
middle<font color="#E5E5E5"> minus ones at the</font><font color="#CCCCCC"> bottom right so</font>

1187
00:52:10,119 --> 00:52:11,999
let's take a look at an<font color="#CCCCCC"> example that's</font>

1188
00:52:11,999 --> 00:52:16,630
here<font color="#E5E5E5"> right and so if I hit that</font><font color="#CCCCCC"> - you</font>

1189
00:52:16,630 --> 00:52:19,479
can see here<font color="#CCCCCC"> highlighted this is the 3</font>

1190
00:52:19,479 --> 00:52:22,029
<font color="#CCCCCC">by 3 part</font><font color="#E5E5E5"> of the input</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font>

1191
00:52:22,029 --> 00:52:24,519
particular thing<font color="#E5E5E5"> is calculating right so</font>

1192
00:52:24,519 --> 00:52:28,239
here<font color="#E5E5E5"> you can see it's got</font><font color="#CCCCCC"> 1 1 1</font><font color="#E5E5E5"> are all</font>

1193
00:52:28,239 --> 00:52:32,619
being multiplied<font color="#CCCCCC"> by 1 and point</font><font color="#E5E5E5"> 1 0 0</font>

1194
00:52:32,619 --> 00:52:35,249
are all being multiplied<font color="#CCCCCC"> by negative</font><font color="#E5E5E5"> 1</font>

1195
00:52:35,249 --> 00:52:37,989
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so in other words all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> positive</font>

1196
00:52:37,989 --> 00:52:39,640
bits are getting a lot of positive the

1197
00:52:39,640 --> 00:52:41,319
negative bits are getting nearly<font color="#CCCCCC"> nothing</font>

1198
00:52:41,319 --> 00:52:44,099
at all so we end up<font color="#E5E5E5"> with a high number</font>

1199
00:52:44,099 --> 00:52:47,049
<font color="#CCCCCC">okay where else on the other</font><font color="#E5E5E5"> side</font><font color="#CCCCCC"> of</font>

1200
00:52:47,049 --> 00:52:51,029
this bit of<font color="#CCCCCC"> the 7 right</font><font color="#E5E5E5"> you can see how</font>

1201
00:52:51,029 --> 00:52:54,670
<font color="#E5E5E5">you know this is basically</font><font color="#CCCCCC"> zeros here or</font>

1202
00:52:54,670 --> 00:52:56,920
<font color="#E5E5E5">perhaps more interestingly on the top of</font>

1203
00:52:56,920 --> 00:53:04,420
it<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> here we've got high numbers at</font>

1204
00:53:04,420 --> 00:53:06,039
the top<font color="#CCCCCC"> but we've also got high numbers</font>

1205
00:53:06,039 --> 00:53:08,859
at the bottom<font color="#E5E5E5"> which are negating it</font><font color="#CCCCCC"> ok</font>

1206
00:53:08,859 --> 00:53:10,719
<font color="#CCCCCC">so you</font><font color="#E5E5E5"> can see that the</font><font color="#CCCCCC"> only place that</font>

1207
00:53:10,719 --> 00:53:14,769
<font color="#CCCCCC">we end up activating is where we're</font>

1208
00:53:14,769 --> 00:53:19,179
actually at an edge so in this case this

1209
00:53:19,179 --> 00:53:22,359
here this<font color="#CCCCCC"> number 3 this is called an</font>

1210
00:53:22,359 --> 00:53:25,660
activation<font color="#CCCCCC"> ok so when I say an</font>

1211
00:53:25,660 --> 00:53:28,990
activation<font color="#E5E5E5"> I mean ah</font>

1212
00:53:28,990 --> 00:53:33,670
at number a number that is calculated

1213
00:53:33,670 --> 00:53:38,500
<font color="#CCCCCC">and it</font><font color="#E5E5E5"> is calculated by taking some</font>

1214
00:53:38,500 --> 00:53:42,880
numbers from<font color="#E5E5E5"> the input</font><font color="#CCCCCC"> and applying some</font>

1215
00:53:42,880 --> 00:53:46,000
kind of linear<font color="#E5E5E5"> operation in this case a</font>

1216
00:53:46,000 --> 00:53:48,430
convolutional kernel to calculate an

1217
00:53:48,430 --> 00:53:52,240
output right<font color="#E5E5E5"> you'll notice that other</font>

1218
00:53:52,240 --> 00:53:56,920
than going inputs<font color="#CCCCCC"> multiplied by kernel</font>

1219
00:53:56,920 --> 00:53:59,230
and summing it together

1220
00:53:59,230 --> 00:54:03,210
<font color="#E5E5E5">right so here's</font><font color="#CCCCCC"> my some and here's my x</font>

1221
00:54:03,210 --> 00:54:07,060
then take that<font color="#E5E5E5"> and I go max of 0 comma</font>

1222
00:54:07,060 --> 00:54:10,600
that<font color="#CCCCCC"> and so that's my rectified linear</font>

1223
00:54:10,600 --> 00:54:13,750
unit<font color="#E5E5E5"> so it sounds very fancy rectified</font>

1224
00:54:13,750 --> 00:54:15,340
linear unit but what they<font color="#CCCCCC"> actually mean</font>

1225
00:54:15,340 --> 00:54:17,710
is open up Excel and<font color="#E5E5E5"> type equals max 0</font>

1226
00:54:17,710 --> 00:54:22,720
comma C<font color="#CCCCCC"> ok that's all about</font><font color="#E5E5E5"> then you'll</font>

1227
00:54:22,720 --> 00:54:25,480
see<font color="#E5E5E5"> people in the biz so</font><font color="#CCCCCC"> to say value</font><font color="#E5E5E5"> a</font>

1228
00:54:25,480 --> 00:54:28,960
<font color="#E5E5E5">so</font><font color="#CCCCCC"> ral</font><font color="#E5E5E5"> you means rectified linear unit</font>

1229
00:54:28,960 --> 00:54:32,920
means<font color="#CCCCCC"> max 0</font><font color="#E5E5E5"> comma thing and I'm not like</font>

1230
00:54:32,920 --> 00:54:34,690
simplifying it I really mean it like

1231
00:54:34,690 --> 00:54:36,610
when I say like if I'm simplifying I

1232
00:54:36,610 --> 00:54:38,890
always say<font color="#E5E5E5"> so I'm simplifying but if I'm</font>

1233
00:54:38,890 --> 00:54:40,930
<font color="#E5E5E5">not saying I'm simplifying that's the</font>

1234
00:54:40,930 --> 00:54:42,970
entirety<font color="#CCCCCC"> okay so a rectified linear unit</font>

1235
00:54:42,970 --> 00:54:45,880
in its entirety is this<font color="#E5E5E5"> and a</font>

1236
00:54:45,880 --> 00:54:50,490
convolution in its entirety is is this

1237
00:54:50,490 --> 00:54:54,790
<font color="#CCCCCC">okay so a single</font><font color="#E5E5E5"> layer of a</font>

1238
00:54:54,790 --> 00:54:57,370
convolutional neural network is being

1239
00:54:57,370 --> 00:55:00,770
implemented in<font color="#E5E5E5"> its entirety</font>

1240
00:55:00,770 --> 00:55:03,560
here in Excel okay<font color="#CCCCCC"> and so you can see</font>

1241
00:55:03,560 --> 00:55:06,710
what it's done is it's deleted<font color="#CCCCCC"> pretty</font>

1242
00:55:06,710 --> 00:55:09,290
much the vertical edges and highlighted

1243
00:55:09,290 --> 00:55:12,560
<font color="#CCCCCC">the horizontal</font><font color="#E5E5E5"> edges so again this is</font>

1244
00:55:12,560 --> 00:55:15,920
assuming<font color="#E5E5E5"> that</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> network is trained and</font>

1245
00:55:15,920 --> 00:55:18,770
<font color="#CCCCCC">that at the</font><font color="#E5E5E5"> end of</font><font color="#CCCCCC"> training it a created</font>

1246
00:55:18,770 --> 00:55:20,750
a convolutional filter with these

1247
00:55:20,750 --> 00:55:24,500
specific<font color="#CCCCCC"> line numbers in</font><font color="#E5E5E5"> and so here is</font>

1248
00:55:24,500 --> 00:55:28,670
a second convolutional filter it's just

1249
00:55:28,670 --> 00:55:32,060
a different line numbers now<font color="#CCCCCC"> pi torch</font>

1250
00:55:32,060 --> 00:55:35,210
doesn't<font color="#E5E5E5"> store them as two separate nine</font>

1251
00:55:35,210 --> 00:55:38,480
digit arrays<font color="#E5E5E5"> it stores it as a tensor</font>

1252
00:55:38,480 --> 00:55:41,540
<font color="#CCCCCC">right remember a tensor</font><font color="#E5E5E5"> just means an</font>

1253
00:55:41,540 --> 00:55:46,010
array with more dimensions<font color="#CCCCCC"> okay you can</font>

1254
00:55:46,010 --> 00:55:50,060
<font color="#E5E5E5">use the word array as well it's the same</font>

1255
00:55:50,060 --> 00:55:52,850
<font color="#E5E5E5">thing but in pi torch they always use</font>

1256
00:55:52,850 --> 00:55:54,230
the word<font color="#E5E5E5"> tensor so I'm going to say</font>

1257
00:55:54,230 --> 00:55:57,440
<font color="#CCCCCC">cancer</font><font color="#E5E5E5"> okay so it's just a tensor</font><font color="#CCCCCC"> with</font>

1258
00:55:57,440 --> 00:55:59,870
an additional axis which allows us to

1259
00:55:59,870 --> 00:56:02,540
stack<font color="#E5E5E5"> each of these filters together</font>

1260
00:56:02,540 --> 00:56:07,220
<font color="#CCCCCC">right filter and kernel pretty much mean</font>

1261
00:56:07,220 --> 00:56:09,350
the same thing<font color="#E5E5E5"> yeah right it refers to</font>

1262
00:56:09,350 --> 00:56:13,490
<font color="#E5E5E5">one of these</font><font color="#CCCCCC"> three by three matrices or</font>

1263
00:56:13,490 --> 00:56:17,180
one of these<font color="#E5E5E5"> three by three slices of a</font>

1264
00:56:17,180 --> 00:56:19,700
<font color="#E5E5E5">three dimensional tensor so if I take</font>

1265
00:56:19,700 --> 00:56:22,040
this one<font color="#E5E5E5"> and here I've literally just</font>

1266
00:56:22,040 --> 00:56:23,990
copied the formulas in<font color="#CCCCCC"> Excel from above</font>

1267
00:56:23,990 --> 00:56:27,350
<font color="#E5E5E5">okay and so you can see this one is</font><font color="#CCCCCC"> now</font>

1268
00:56:27,350 --> 00:56:30,680
finding<font color="#CCCCCC"> a vertebra</font><font color="#E5E5E5"> which as we would</font>

1269
00:56:30,680 --> 00:56:31,130
expect

1270
00:56:31,130 --> 00:56:40,010
<font color="#E5E5E5">okay so we've now created one layer</font>

1271
00:56:40,010 --> 00:56:42,560
<font color="#E5E5E5">right this here is a layer them</font>

1272
00:56:42,560 --> 00:56:44,150
specifically we'd say it's<font color="#E5E5E5"> a hidden</font>

1273
00:56:44,150 --> 00:56:46,520
<font color="#E5E5E5">layer which is it's</font><font color="#CCCCCC"> not an input layer</font>

1274
00:56:46,520 --> 00:56:48,680
<font color="#CCCCCC">and it's not an output layer so</font>

1275
00:56:48,680 --> 00:56:50,810
everything else<font color="#E5E5E5"> is a hidden layer okay</font>

1276
00:56:50,810 --> 00:56:55,480
and this<font color="#E5E5E5"> particular hidden layer has is</font>

1277
00:56:55,480 --> 00:56:59,210
a size<font color="#E5E5E5"> two on this dimension right</font>

1278
00:56:59,210 --> 00:57:02,080
because it<font color="#E5E5E5"> has two</font>

1279
00:57:02,200 --> 00:57:07,810
filters right<font color="#CCCCCC"> two kernels</font><font color="#E5E5E5"> so what</font>

1280
00:57:07,810 --> 00:57:09,849
happens next

1281
00:57:09,849 --> 00:57:14,500
well let's do another one okay so as<font color="#E5E5E5"> we</font>

1282
00:57:14,500 --> 00:57:17,710
kind of<font color="#E5E5E5"> go along things can multiply a</font>

1283
00:57:17,710 --> 00:57:20,050
little bit in complexity<font color="#CCCCCC"> right</font><font color="#E5E5E5"> because</font>

1284
00:57:20,050 --> 00:57:23,589
my<font color="#CCCCCC"> next filter is going to have to</font>

1285
00:57:23,589 --> 00:57:27,010
contain two of these three<font color="#E5E5E5"> by threes</font>

1286
00:57:27,010 --> 00:57:28,930
because<font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> have to say how do I</font>

1287
00:57:28,930 --> 00:57:31,690
want<font color="#E5E5E5"> to bring Adam I want to</font><font color="#CCCCCC"> write these</font>

1288
00:57:31,690 --> 00:57:34,540
three<font color="#E5E5E5"> things</font><font color="#CCCCCC"> and at the same time how do</font>

1289
00:57:34,540 --> 00:57:36,369
I want to wait the corresponding three

1290
00:57:36,369 --> 00:57:38,589
things down here<font color="#E5E5E5"> right because in</font><font color="#CCCCCC"> pi</font>

1291
00:57:38,589 --> 00:57:41,200
torch<font color="#E5E5E5"> this is going to be this whole</font>

1292
00:57:41,200 --> 00:57:44,109
thing here is<font color="#E5E5E5"> going to be stored as a</font>

1293
00:57:44,109 --> 00:57:46,660
<font color="#E5E5E5">multi-dimensional tensor right so you</font>

1294
00:57:46,660 --> 00:57:48,430
<font color="#E5E5E5">shouldn't really think of this now as</font>

1295
00:57:48,430 --> 00:57:54,040
<font color="#CCCCCC">two</font><font color="#E5E5E5"> 3x3 kernels but one two by three by</font>

1296
00:57:54,040 --> 00:57:58,599
three eternal<font color="#E5E5E5"> okay so to</font><font color="#CCCCCC"> calculate this</font>

1297
00:57:58,599 --> 00:58:02,579
value<font color="#E5E5E5"> here I've got the sum product of</font>

1298
00:58:02,579 --> 00:58:09,510
all<font color="#E5E5E5"> of that plus the sum product of</font>

1299
00:58:09,510 --> 00:58:17,349
scroll down all of<font color="#CCCCCC"> that okay and so the</font>

1300
00:58:17,349 --> 00:58:19,119
top ones are<font color="#E5E5E5"> being multiplied by</font><font color="#CCCCCC"> this</font>

1301
00:58:19,119 --> 00:58:21,130
<font color="#E5E5E5">part of the kernel and the bottom ones</font>

1302
00:58:21,130 --> 00:58:22,420
have been multiplied by this<font color="#E5E5E5"> part of the</font>

1303
00:58:22,420 --> 00:58:25,869
kernel<font color="#CCCCCC"> and so over time you want</font><font color="#E5E5E5"> to</font>

1304
00:58:25,869 --> 00:58:28,000
start to get<font color="#CCCCCC"> very comfortable with the</font>

1305
00:58:28,000 --> 00:58:31,170
<font color="#E5E5E5">idea</font><font color="#CCCCCC"> of these like higher dimensional</font>

1306
00:58:31,170 --> 00:58:35,530
linear combinations right<font color="#CCCCCC"> like it's it's</font>

1307
00:58:35,530 --> 00:58:37,900
harder to draw it on the screen<font color="#CCCCCC"> like I</font>

1308
00:58:37,900 --> 00:58:40,720
had to put one<font color="#CCCCCC"> above the other but</font>

1309
00:58:40,720 --> 00:58:42,670
conceptually just<font color="#CCCCCC"> stuck</font><font color="#E5E5E5"> it in your mind</font>

1310
00:58:42,670 --> 00:58:44,440
<font color="#E5E5E5">like this that's really how you want to</font>

1311
00:58:44,440 --> 00:58:47,140
<font color="#E5E5E5">think right and actually Geoffrey Hinton</font>

1312
00:58:47,140 --> 00:58:50,400
in his original 2012<font color="#CCCCCC"> neural Nets</font>

1313
00:58:50,400 --> 00:58:54,160
Coursera class has a tip which<font color="#CCCCCC"> is how</font>

1314
00:58:54,160 --> 00:58:56,290
all<font color="#E5E5E5"> computer scientists deal with like</font>

1315
00:58:56,290 --> 00:58:58,990
<font color="#CCCCCC">very high</font><font color="#E5E5E5"> dimensional spaces which is</font>

1316
00:58:58,990 --> 00:59:01,000
that they basically<font color="#CCCCCC"> just visualize the</font>

1317
00:59:01,000 --> 00:59:01,930
<font color="#CCCCCC">two-dimensional space</font>

1318
00:59:01,930 --> 00:59:04,660
and then say like<font color="#CCCCCC"> twelve</font><font color="#E5E5E5"> dimensions</font>

1319
00:59:04,660 --> 00:59:06,390
<font color="#E5E5E5">really fast and they had lots of</font><font color="#CCCCCC"> tires</font>

1320
00:59:06,390 --> 00:59:08,109
<font color="#E5E5E5">so that's it</font>

1321
00:59:08,109 --> 00:59:09,760
<font color="#E5E5E5">right we can see two dimensions on the</font>

1322
00:59:09,760 --> 00:59:11,140
screen and then<font color="#E5E5E5"> you're just going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try</font>

1323
00:59:11,140 --> 00:59:14,470
to trust<font color="#CCCCCC"> that you can have more</font>

1324
00:59:14,470 --> 00:59:15,800
<font color="#E5E5E5">dimensions like the</font><font color="#CCCCCC"> Const</font>

1325
00:59:15,800 --> 00:59:17,660
<font color="#E5E5E5">it's just you know there's there's</font>

1326
00:59:17,660 --> 00:59:19,550
<font color="#CCCCCC">nothing different about them and so you</font>

1327
00:59:19,550 --> 00:59:21,830
<font color="#E5E5E5">can see in Excel you know Excel doesn't</font>

1328
00:59:21,830 --> 00:59:23,090
<font color="#E5E5E5">have the ability</font><font color="#CCCCCC"> to handle</font>

1329
00:59:23,090 --> 00:59:25,100
<font color="#CCCCCC">three-dimensional tensors</font><font color="#E5E5E5"> so I had to</font>

1330
00:59:25,100 --> 00:59:27,730
like<font color="#E5E5E5"> say okay take this two-dimensional</font>

1331
00:59:27,730 --> 00:59:31,220
dot product<font color="#CCCCCC"> add on</font><font color="#E5E5E5"> this two-dimensional</font>

1332
00:59:31,220 --> 00:59:33,170
dot product<font color="#CCCCCC"> right but if there</font><font color="#E5E5E5"> was some</font>

1333
00:59:33,170 --> 00:59:35,660
<font color="#CCCCCC">kind of 3d</font><font color="#E5E5E5"> Excel I could have to stand</font>

1334
00:59:35,660 --> 00:59:38,900
that in a single<font color="#CCCCCC"> line all right and then</font>

1335
00:59:38,900 --> 00:59:42,890
again apply<font color="#CCCCCC"> max 0 comma</font><font color="#E5E5E5"> otherwise known</font>

1336
00:59:42,890 --> 00:59:44,720
as rectified linear unit<font color="#E5E5E5"> otherwise known</font>

1337
00:59:44,720 --> 00:59:48,710
as value<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so here is my second layer</font>

1338
00:59:48,710 --> 00:59:51,970
<font color="#CCCCCC">and so when people create different</font>

1339
00:59:51,970 --> 00:59:54,740
architectures<font color="#E5E5E5"> write an architecture</font>

1340
00:59:54,740 --> 00:59:59,300
means<font color="#E5E5E5"> like how big is your kernel at</font>

1341
00:59:59,300 --> 00:59:59,960
layer 1

1342
00:59:59,960 --> 01:00:02,540
how many filters<font color="#E5E5E5"> are</font><font color="#CCCCCC"> in your kernel at</font>

1343
01:00:02,540 --> 01:00:04,630
layer 1 so here<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> got a</font><font color="#E5E5E5"> 3</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> 3</font>

1344
01:00:04,630 --> 01:00:08,510
<font color="#E5E5E5">where's number</font><font color="#CCCCCC"> 1 and a 3</font><font color="#E5E5E5"> by 3 there's</font>

1345
01:00:08,510 --> 01:00:11,330
number 2 so like this architecture I've

1346
01:00:11,330 --> 01:00:15,250
created<font color="#E5E5E5"> starts off with</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 3 by 3</font>

1347
01:00:15,250 --> 01:00:20,480
convolutional kernels<font color="#E5E5E5"> and then my second</font>

1348
01:00:20,480 --> 01:00:25,100
layer has another two kernels<font color="#E5E5E5"> of size 2</font>

1349
01:00:25,100 --> 01:00:27,020
by 3<font color="#CCCCCC"> by 3 so there's the first one</font>

1350
01:00:27,020 --> 01:00:30,650
and then down here<font color="#E5E5E5"> here's a second 2 by</font>

1351
01:00:30,650 --> 01:00:34,430
3<font color="#CCCCCC"> by 3 kernel</font><font color="#E5E5E5"> okay and so remember one</font>

1352
01:00:34,430 --> 01:00:35,930
<font color="#CCCCCC">of these</font><font color="#E5E5E5"> specific any one of these</font>

1353
01:00:35,930 --> 01:00:40,640
<font color="#CCCCCC">numbers is an activation okay so this</font>

1354
01:00:40,640 --> 01:00:43,850
<font color="#E5E5E5">activation is being calculated from</font>

1355
01:00:43,850 --> 01:00:45,680
these three things here<font color="#E5E5E5"> and other</font><font color="#CCCCCC"> 3</font>

1356
01:00:45,680 --> 01:00:47,780
things up there<font color="#CCCCCC"> and we're using these</font>

1357
01:00:47,780 --> 01:00:52,940
this 2 by 3<font color="#E5E5E5"> by 3 kernel okay</font><font color="#CCCCCC"> and so what</font>

1358
01:00:52,940 --> 01:00:55,160
tends to happen is<font color="#CCCCCC"> people generally</font><font color="#E5E5E5"> give</font>

1359
01:00:55,160 --> 01:00:57,830
names to<font color="#E5E5E5"> their layers so I say okay</font>

1360
01:00:57,830 --> 01:01:01,220
let's<font color="#CCCCCC"> call this layer here</font><font color="#E5E5E5"> con 1 and</font>

1361
01:01:01,220 --> 01:01:07,670
this layer here and this and this<font color="#E5E5E5"> layer</font>

1362
01:01:07,670 --> 01:01:11,630
here<font color="#CCCCCC"> con</font><font color="#E5E5E5"> - all right so that's you know</font>

1363
01:01:11,630 --> 01:01:13,730
<font color="#E5E5E5">but generally you'll just see that like</font>

1364
01:01:13,730 --> 01:01:15,920
when you<font color="#E5E5E5"> print out a summary of a</font>

1365
01:01:15,920 --> 01:01:17,930
network every layer will<font color="#CCCCCC"> have some kind</font>

1366
01:01:17,930 --> 01:01:22,340
<font color="#CCCCCC">of name okay and so then what happens</font>

1367
01:01:22,340 --> 01:01:26,150
next<font color="#CCCCCC"> well part</font><font color="#E5E5E5"> of the architecture is</font>

1368
01:01:26,150 --> 01:01:28,690
like do you have<font color="#E5E5E5"> some max pooling where</font>

1369
01:01:28,690 --> 01:01:30,400
bounces up<font color="#CCCCCC"> Matt spalling happen so in</font>

1370
01:01:30,400 --> 01:01:32,410
this architecture we're inventing<font color="#E5E5E5"> we're</font>

1371
01:01:32,410 --> 01:01:36,520
going to next step is do max fully<font color="#E5E5E5"> okay</font>

1372
01:01:36,520 --> 01:01:40,240
<font color="#CCCCCC">Matt spooling</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a little hard</font><font color="#E5E5E5"> to kind</font>

1373
01:01:40,240 --> 01:01:43,569
of show in Excel<font color="#E5E5E5"> but we've got it</font><font color="#CCCCCC"> so max</font>

1374
01:01:43,569 --> 01:01:45,940
pooling if I do a<font color="#CCCCCC"> two</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> two max pooling</font>

1375
01:01:45,940 --> 01:01:49,180
<font color="#CCCCCC">it's going to have the resolution</font><font color="#E5E5E5"> both</font>

1376
01:01:49,180 --> 01:01:51,579
height<font color="#CCCCCC"> and width</font><font color="#E5E5E5"> so you can see here</font>

1377
01:01:51,579 --> 01:01:57,359
<font color="#E5E5E5">that I've replaced these four numbers</font>

1378
01:01:57,359 --> 01:02:00,240
<font color="#E5E5E5">with the maximum of those four numbers</font>

1379
01:02:00,240 --> 01:02:02,560
<font color="#E5E5E5">right</font><font color="#CCCCCC"> and so because I'm</font><font color="#E5E5E5"> having the</font>

1380
01:02:02,560 --> 01:02:04,390
resolution it only makes<font color="#CCCCCC"> sense to</font>

1381
01:02:04,390 --> 01:02:06,780
<font color="#CCCCCC">actually have something every</font><font color="#E5E5E5"> two cells</font>

1382
01:02:06,780 --> 01:02:10,359
<font color="#E5E5E5">okay so you can see here the way I've</font>

1383
01:02:10,359 --> 01:02:13,690
<font color="#E5E5E5">got kind of the same looking shape as I</font>

1384
01:02:13,690 --> 01:02:15,940
had back here<font color="#E5E5E5"> okay but it's now half the</font>

1385
01:02:15,940 --> 01:02:19,030
<font color="#E5E5E5">resolution so for placed every two by</font>

1386
01:02:19,030 --> 01:02:22,119
two with<font color="#E5E5E5"> its max and you'll notice like</font>

1387
01:02:22,119 --> 01:02:24,160
<font color="#E5E5E5">it's not every possible two by two I</font>

1388
01:02:24,160 --> 01:02:26,319
skip over<font color="#E5E5E5"> from here so this</font><font color="#CCCCCC"> is like</font>

1389
01:02:26,319 --> 01:02:29,200
starting<font color="#E5E5E5"> at beat Hugh and then the next</font>

1390
01:02:29,200 --> 01:02:33,460
<font color="#E5E5E5">one starts at BS right so they're like</font>

1391
01:02:33,460 --> 01:02:35,740
<font color="#E5E5E5">non-overlapping that's why it's</font>

1392
01:02:35,740 --> 01:02:38,050
decreasing the resolution okay

1393
01:02:38,050 --> 01:02:39,940
so anybody who's comfortable with

1394
01:02:39,940 --> 01:02:43,000
<font color="#E5E5E5">spreadsheets</font><font color="#CCCCCC"> you know you can open this</font>

1395
01:02:43,000 --> 01:02:45,369
<font color="#CCCCCC">and have a look and</font><font color="#E5E5E5"> so after our max</font>

1396
01:02:45,369 --> 01:02:52,150
pooling<font color="#CCCCCC"> there's a number</font><font color="#E5E5E5"> of different</font>

1397
01:02:52,150 --> 01:02:54,010
things<font color="#E5E5E5"> we could do next</font><font color="#CCCCCC"> and I'm going to</font>

1398
01:02:54,010 --> 01:02:58,119
<font color="#E5E5E5">show you a kind of classic old style</font>

1399
01:02:58,119 --> 01:03:00,790
approach nowadays in fact what generally

1400
01:03:00,790 --> 01:03:02,890
happens nowadays is we do a max pool

1401
01:03:02,890 --> 01:03:04,900
where we kind of<font color="#E5E5E5"> like max across the</font>

1402
01:03:04,900 --> 01:03:08,260
entire size<font color="#E5E5E5"> right</font><font color="#CCCCCC"> but on older</font>

1403
01:03:08,260 --> 01:03:10,180
architectures and also on all the

1404
01:03:10,180 --> 01:03:12,790
structured data stuff we do we actually

1405
01:03:12,790 --> 01:03:14,740
do something<font color="#E5E5E5"> called a fully connected</font>

1406
01:03:14,740 --> 01:03:16,930
<font color="#E5E5E5">layer and so here's a fully</font><font color="#CCCCCC"> connected</font>

1407
01:03:16,930 --> 01:03:19,060
layer I'm going<font color="#CCCCCC"> to take every single</font><font color="#E5E5E5"> one</font>

1408
01:03:19,060 --> 01:03:22,300
<font color="#E5E5E5">of these activations</font><font color="#CCCCCC"> and I've got to</font>

1409
01:03:22,300 --> 01:03:24,510
give every<font color="#CCCCCC"> single one</font><font color="#E5E5E5"> of them or</font><font color="#CCCCCC"> weight</font>

1410
01:03:24,510 --> 01:03:28,150
right and so then I'm going<font color="#CCCCCC"> to take over</font>

1411
01:03:28,150 --> 01:03:33,130
<font color="#E5E5E5">here here is the sum product of every</font>

1412
01:03:33,130 --> 01:03:35,650
one of<font color="#E5E5E5"> the activations</font><font color="#CCCCCC"> by every one of</font>

1413
01:03:35,650 --> 01:03:40,440
<font color="#E5E5E5">the weights for both of the</font>

1414
01:03:40,670 --> 01:03:43,160
two levels<font color="#E5E5E5"> of my three-dimensional</font>

1415
01:03:43,160 --> 01:03:45,619
tensor<font color="#E5E5E5"> right and so this is called a</font>

1416
01:03:45,619 --> 01:03:47,599
fully<font color="#E5E5E5"> connected layer notice it's</font>

1417
01:03:47,599 --> 01:03:49,490
different to a convolution I'm not going

1418
01:03:49,490 --> 01:03:51,980
through<font color="#E5E5E5"> a few at a time right but I'm</font>

1419
01:03:51,980 --> 01:03:54,619
creating<font color="#E5E5E5"> a really big weight matrix</font>

1420
01:03:54,619 --> 01:03:57,079
right<font color="#E5E5E5"> so rather than having a couple of</font>

1421
01:03:57,079 --> 01:03:59,930
little 3x3 kernels<font color="#E5E5E5"> my weight matrix is</font>

1422
01:03:59,930 --> 01:04:03,290
now as big as the entire<font color="#CCCCCC"> input and so as</font>

1423
01:04:03,290 --> 01:04:07,760
you can<font color="#CCCCCC"> imagine architectures that make</font>

1424
01:04:07,760 --> 01:04:09,920
heavy use of fully convolutional layers

1425
01:04:09,920 --> 01:04:13,640
can<font color="#E5E5E5"> have a lot</font><font color="#CCCCCC"> of weights which means</font>

1426
01:04:13,640 --> 01:04:15,049
they can have trouble<font color="#E5E5E5"> with overfitting</font>

1427
01:04:15,049 --> 01:04:17,839
<font color="#CCCCCC">and they can also be</font><font color="#E5E5E5"> slow and so you're</font>

1428
01:04:17,839 --> 01:04:20,540
going<font color="#CCCCCC"> to see a lot an architecture</font>

1429
01:04:20,540 --> 01:04:23,299
called<font color="#CCCCCC"> vgg because it was the first</font><font color="#E5E5E5"> kind</font>

1430
01:04:23,299 --> 01:04:25,280
<font color="#E5E5E5">of successful deeper architecture it has</font>

1431
01:04:25,280 --> 01:04:28,880
up<font color="#CCCCCC"> to</font><font color="#E5E5E5"> 19 layers and</font><font color="#CCCCCC"> vgg actually</font>

1432
01:04:28,880 --> 01:04:31,750
contains<font color="#E5E5E5"> a fully connected layer with</font>

1433
01:04:31,750 --> 01:04:35,569
4096 weights<font color="#E5E5E5"> connected to a hidden layer</font>

1434
01:04:35,569 --> 01:04:39,710
with<font color="#E5E5E5"> 4,000 sorry 4096 activations</font>

1435
01:04:39,710 --> 01:04:42,859
<font color="#E5E5E5">connected to a hidden layer with 4096</font>

1436
01:04:42,859 --> 01:04:46,250
activations<font color="#CCCCCC"> so you've got like 4096</font><font color="#E5E5E5"> by</font>

1437
01:04:46,250 --> 01:04:50,359
4096<font color="#E5E5E5"> x remember</font><font color="#CCCCCC"> or apply</font><font color="#E5E5E5"> it by the</font>

1438
01:04:50,359 --> 01:04:53,180
number of kind<font color="#E5E5E5"> of kernels that we've</font>

1439
01:04:53,180 --> 01:04:59,839
calculated<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> vgg there's this I</font>

1440
01:04:59,839 --> 01:05:03,319
think<font color="#E5E5E5"> it's like 300 million weights of</font>

1441
01:05:03,319 --> 01:05:06,319
which something<font color="#E5E5E5"> like 250 million of them</font>

1442
01:05:06,319 --> 01:05:09,380
are in these fully connected layers<font color="#E5E5E5"> so</font>

1443
01:05:09,380 --> 01:05:11,420
we'll learn later<font color="#CCCCCC"> on in the course about</font>

1444
01:05:11,420 --> 01:05:13,700
how<font color="#E5E5E5"> we can kind of avoid using these big</font>

1445
01:05:13,700 --> 01:05:15,470
fully connected layers<font color="#CCCCCC"> and</font><font color="#E5E5E5"> behind the</font>

1446
01:05:15,470 --> 01:05:17,450
scenes<font color="#E5E5E5"> all the stuff that</font><font color="#CCCCCC"> you've seen</font><font color="#E5E5E5"> us</font>

1447
01:05:17,450 --> 01:05:20,059
using like<font color="#CCCCCC"> ResNet and res next none</font><font color="#E5E5E5"> of</font>

1448
01:05:20,059 --> 01:05:22,880
them use very large fully connected

1449
01:05:22,880 --> 01:05:26,049
layers<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> you had a question</font>

1450
01:05:26,049 --> 01:05:30,319
sorry<font color="#E5E5E5"> yeah come on um so could you tell</font>

1451
01:05:30,319 --> 01:05:32,210
<font color="#E5E5E5">us more</font><font color="#CCCCCC"> about for example if we had like</font>

1452
01:05:32,210 --> 01:05:34,819
<font color="#CCCCCC">three channels for the input what would</font>

1453
01:05:34,819 --> 01:05:40,280
be the<font color="#E5E5E5"> shape yeah these filters right so</font>

1454
01:05:40,280 --> 01:05:42,619
that's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> question so</font><font color="#E5E5E5"> if we</font><font color="#CCCCCC"> have 3</font>

1455
01:05:42,619 --> 01:05:44,960
<font color="#E5E5E5">channels of input it would look exactly</font>

1456
01:05:44,960 --> 01:05:48,950
<font color="#CCCCCC">like conv</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> right cons one kind</font><font color="#E5E5E5"> of has</font>

1457
01:05:48,950 --> 01:05:52,160
two<font color="#E5E5E5"> channels right and so you can see</font>

1458
01:05:52,160 --> 01:05:54,589
with cons one we had two channels so

1459
01:05:54,589 --> 01:05:57,440
therefore our filters<font color="#E5E5E5"> had to have like</font>

1460
01:05:57,440 --> 01:06:00,289
two channels per filter<font color="#E5E5E5"> and so you could</font>

1461
01:06:00,289 --> 01:06:02,989
like imagine that this input didn't

1462
01:06:02,989 --> 01:06:05,210
exist<font color="#E5E5E5"> you know and actually</font><font color="#CCCCCC"> this was the</font>

1463
01:06:05,210 --> 01:06:06,950
<font color="#E5E5E5">airport</font><font color="#CCCCCC"> alright so when you have a</font>

1464
01:06:06,950 --> 01:06:09,349
multi-channel<font color="#E5E5E5"> input it just means that</font>

1465
01:06:09,349 --> 01:06:11,749
your filters<font color="#E5E5E5"> look like this and</font><font color="#CCCCCC"> so</font>

1466
01:06:11,749 --> 01:06:15,410
images often<font color="#CCCCCC"> full color they have</font><font color="#E5E5E5"> three</font>

1467
01:06:15,410 --> 01:06:17,779
red green and blue<font color="#E5E5E5"> sometimes</font><font color="#CCCCCC"> they also</font>

1468
01:06:17,779 --> 01:06:20,180
have an alpha<font color="#E5E5E5"> Channel so</font><font color="#CCCCCC"> however</font><font color="#E5E5E5"> many</font>

1469
01:06:20,180 --> 01:06:23,059
you have that's how many<font color="#E5E5E5"> inputs you</font><font color="#CCCCCC"> need</font>

1470
01:06:23,059 --> 01:06:25,640
<font color="#E5E5E5">and so something which I know</font><font color="#CCCCCC"> Jeanette</font>

1471
01:06:25,640 --> 01:06:27,529
<font color="#E5E5E5">was playing with recently was like using</font>

1472
01:06:27,529 --> 01:06:32,119
<font color="#E5E5E5">a full color image net model in medical</font>

1473
01:06:32,119 --> 01:06:34,099
<font color="#CCCCCC">imaging</font><font color="#E5E5E5"> for something called bone age</font>

1474
01:06:34,099 --> 01:06:36,170
calculations which has a single<font color="#E5E5E5"> channel</font>

1475
01:06:36,170 --> 01:06:38,499
<font color="#E5E5E5">and so what she did was</font><font color="#CCCCCC"> basically take</font>

1476
01:06:38,499 --> 01:06:42,559
<font color="#E5E5E5">the the input the the single channel</font>

1477
01:06:42,559 --> 01:06:45,710
<font color="#CCCCCC">input and make three copies of it so you</font>

1478
01:06:45,710 --> 01:06:48,619
end up<font color="#E5E5E5"> with basically like one two</font><font color="#CCCCCC"> three</font>

1479
01:06:48,619 --> 01:06:52,839
versions of the<font color="#E5E5E5"> same thing which</font><font color="#CCCCCC"> is like</font>

1480
01:06:52,839 --> 01:06:55,460
it's<font color="#E5E5E5"> kind of a small idea</font><font color="#CCCCCC"> like it's kind</font>

1481
01:06:55,460 --> 01:06:57,680
of redundant information that we don't

1482
01:06:57,680 --> 01:06:59,630
<font color="#E5E5E5">quite want but it does mean that then if</font>

1483
01:06:59,630 --> 01:07:01,969
you<font color="#E5E5E5"> had a something that expected a</font>

1484
01:07:01,969 --> 01:07:05,960
three channel<font color="#E5E5E5"> convolutional filter you</font>

1485
01:07:05,960 --> 01:07:08,660
can<font color="#CCCCCC"> use it</font><font color="#E5E5E5"> right and so</font><font color="#CCCCCC"> at the moment</font>

1486
01:07:08,660 --> 01:07:11,420
there's<font color="#CCCCCC"> a cable competition for</font><font color="#E5E5E5"> iceberg</font>

1487
01:07:11,420 --> 01:07:15,680
detection using<font color="#E5E5E5"> a some funky satellite</font>

1488
01:07:15,680 --> 01:07:17,660
specific data format that<font color="#E5E5E5"> has two</font>

1489
01:07:17,660 --> 01:07:20,900
channels<font color="#CCCCCC"> so here's how you</font><font color="#E5E5E5"> could do that</font>

1490
01:07:20,900 --> 01:07:23,719
you could either copy one<font color="#E5E5E5"> of those two</font>

1491
01:07:23,719 --> 01:07:25,369
<font color="#E5E5E5">channels into the third</font><font color="#CCCCCC"> channel or I</font>

1492
01:07:25,369 --> 01:07:27,380
<font color="#E5E5E5">think what people</font><font color="#CCCCCC"> in Carroll are doing</font>

1493
01:07:27,380 --> 01:07:30,920
is to take the average<font color="#CCCCCC"> of the two again</font>

1494
01:07:30,920 --> 01:07:32,779
it's<font color="#E5E5E5"> not ideal but it's a way that</font><font color="#CCCCCC"> you</font>

1495
01:07:32,779 --> 01:07:37,460
can use pre-trained networks<font color="#CCCCCC"> yeah I've</font>

1496
01:07:37,460 --> 01:07:40,910
done<font color="#E5E5E5"> a lot of fiddling around like that</font>

1497
01:07:40,910 --> 01:07:42,650
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can also actually</font><font color="#E5E5E5"> I've actually done</font>

1498
01:07:42,650 --> 01:07:45,440
<font color="#E5E5E5">things where I wanted to use a three</font>

1499
01:07:45,440 --> 01:07:47,569
channel<font color="#E5E5E5"> image net Network</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> four</font>

1500
01:07:47,569 --> 01:07:48,410
channel data

1501
01:07:48,410 --> 01:07:50,329
<font color="#E5E5E5">I had a satellite data where the fourth</font>

1502
01:07:50,329 --> 01:07:53,029
<font color="#E5E5E5">channel was near-infrared and</font><font color="#CCCCCC"> so</font>

1503
01:07:53,029 --> 01:07:59,269
basically I added an<font color="#E5E5E5"> extra kind of level</font>

1504
01:07:59,269 --> 01:08:02,239
to my convolutional<font color="#E5E5E5"> kernels that</font><font color="#CCCCCC"> were</font>

1505
01:08:02,239 --> 01:08:04,910
all<font color="#CCCCCC"> zeros and so basically like started</font>

1506
01:08:04,910 --> 01:08:06,890
off by ignoring<font color="#E5E5E5"> the near-infrared band</font>

1507
01:08:06,890 --> 01:08:08,320
and

1508
01:08:08,320 --> 01:08:10,300
so what happens it basically<font color="#E5E5E5"> and you'll</font>

1509
01:08:10,300 --> 01:08:13,480
see this<font color="#E5E5E5"> next week is that rather than</font>

1510
01:08:13,480 --> 01:08:15,940
<font color="#CCCCCC">having these like carefully trained</font>

1511
01:08:15,940 --> 01:08:17,770
filters when you're<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> training</font>

1512
01:08:17,770 --> 01:08:19,870
<font color="#E5E5E5">something from scratch</font><font color="#CCCCCC"> we're actually</font>

1513
01:08:19,870 --> 01:08:21,450
going to<font color="#E5E5E5"> start with random</font><font color="#CCCCCC"> numbers</font>

1514
01:08:21,450 --> 01:08:23,229
<font color="#E5E5E5">that's actually what we do we actually</font>

1515
01:08:23,229 --> 01:08:25,180
<font color="#E5E5E5">start with</font><font color="#CCCCCC"> random numbers and then</font><font color="#E5E5E5"> we</font>

1516
01:08:25,180 --> 01:08:26,470
use this thing<font color="#CCCCCC"> called</font><font color="#E5E5E5"> stochastic</font>

1517
01:08:26,470 --> 01:08:27,910
gradient descent which we've kind of

1518
01:08:27,910 --> 01:08:29,050
seen<font color="#E5E5E5"> conceptually</font>

1519
01:08:29,050 --> 01:08:31,479
<font color="#E5E5E5">to slightly improve those</font><font color="#CCCCCC"> random numbers</font>

1520
01:08:31,479 --> 01:08:33,069
to<font color="#E5E5E5"> make them less random and we</font>

1521
01:08:33,069 --> 01:08:35,350
basically<font color="#E5E5E5"> do that again and again and</font>

1522
01:08:35,350 --> 01:08:37,600
<font color="#E5E5E5">again</font><font color="#CCCCCC"> okay great</font>

1523
01:08:37,600 --> 01:08:39,760
let's<font color="#E5E5E5"> take a</font><font color="#CCCCCC"> seven</font><font color="#E5E5E5"> minute break and</font>

1524
01:08:39,760 --> 01:08:48,700
<font color="#E5E5E5">we'll</font><font color="#CCCCCC"> come back</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> 7:50</font><font color="#E5E5E5"> all right so</font>

1525
01:08:48,700 --> 01:08:50,310
what happens next

1526
01:08:50,310 --> 01:08:57,580
so we've got as far<font color="#E5E5E5"> as doing a fully</font>

1527
01:08:57,580 --> 01:09:00,339
connected<font color="#CCCCCC"> layer</font><font color="#E5E5E5"> right so we had our the</font>

1528
01:09:00,339 --> 01:09:02,290
results of our<font color="#CCCCCC"> max pooling layer got fed</font>

1529
01:09:02,290 --> 01:09:04,240
to a fully<font color="#E5E5E5"> connected layer and he might</font>

1530
01:09:04,240 --> 01:09:07,180
notice those of you that remember your

1531
01:09:07,180 --> 01:09:09,339
linear algebra<font color="#CCCCCC"> the fully connected layer</font>

1532
01:09:09,339 --> 01:09:11,770
is<font color="#E5E5E5"> actually doing a classic traditional</font>

1533
01:09:11,770 --> 01:09:14,950
matrix product<font color="#CCCCCC"> okay so it's basically</font>

1534
01:09:14,950 --> 01:09:17,920
just going<font color="#CCCCCC"> through</font><font color="#E5E5E5"> each pair in turn</font>

1535
01:09:17,920 --> 01:09:19,479
multiplying them<font color="#E5E5E5"> together and then</font>

1536
01:09:19,479 --> 01:09:23,970
adding<font color="#E5E5E5"> them up to do a matrix product</font>

1537
01:09:23,970 --> 01:09:33,839
now in practice<font color="#E5E5E5"> if we want to calculate</font>

1538
01:09:33,839 --> 01:09:36,460
which one<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> ten digits we're</font>

1539
01:09:36,460 --> 01:09:40,870
looking at<font color="#CCCCCC"> their</font><font color="#E5E5E5"> single number we've</font>

1540
01:09:40,870 --> 01:09:44,740
calculated isn't enough we would

1541
01:09:44,740 --> 01:09:48,130
<font color="#CCCCCC">actually calculate ten numbers so what</font>

1542
01:09:48,130 --> 01:09:50,370
<font color="#CCCCCC">we</font><font color="#E5E5E5"> will have is rather than just</font><font color="#CCCCCC"> having</font>

1543
01:09:50,370 --> 01:09:55,240
<font color="#CCCCCC">one set</font><font color="#E5E5E5"> of fully connected weights like</font>

1544
01:09:55,240 --> 01:09:57,130
this and I say set because<font color="#CCCCCC"> remember</font>

1545
01:09:57,130 --> 01:10:00,370
there's like a whole 3d<font color="#E5E5E5"> kind of tensor</font>

1546
01:10:00,370 --> 01:10:04,030
<font color="#CCCCCC">of them we would actually need</font><font color="#E5E5E5"> ten of</font>

1547
01:10:04,030 --> 01:10:06,790
<font color="#E5E5E5">those right so you can see that these</font>

1548
01:10:06,790 --> 01:10:09,790
tensors start to get<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit high</font>

1549
01:10:09,790 --> 01:10:12,250
dimensional right<font color="#E5E5E5"> and so this is where</font>

1550
01:10:12,250 --> 01:10:14,680
<font color="#CCCCCC">my patients we're doing it</font><font color="#E5E5E5"> next cell ran</font>

1551
01:10:14,680 --> 01:10:17,140
<font color="#CCCCCC">out but</font><font color="#E5E5E5"> imagine</font><font color="#CCCCCC"> that I had done this ten</font>

1552
01:10:17,140 --> 01:10:19,810
times<font color="#E5E5E5"> I could now have</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> different</font>

1553
01:10:19,810 --> 01:10:21,499
numbers or being calculated

1554
01:10:21,499 --> 01:10:23,150
yeah<font color="#E5E5E5"> using exactly</font><font color="#CCCCCC"> the same process</font>

1555
01:10:23,150 --> 01:10:27,110
<font color="#E5E5E5">right we'll</font><font color="#CCCCCC"> just be ten of these fully</font>

1556
01:10:27,110 --> 01:10:35,679
connected<font color="#E5E5E5"> to by</font><font color="#CCCCCC"> m-by-n</font><font color="#E5E5E5"> erased basically</font>

1557
01:10:35,679 --> 01:10:40,190
<font color="#CCCCCC">and so then we would</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> ten numbers</font>

1558
01:10:40,190 --> 01:10:44,360
being spat out<font color="#E5E5E5"> so what happens next so</font>

1559
01:10:44,360 --> 01:10:48,190
next up we can open<font color="#E5E5E5"> up a different Excel</font>

1560
01:10:48,190 --> 01:10:52,070
worksheet<font color="#CCCCCC"> entropy example dot XLS that's</font>

1561
01:10:52,070 --> 01:10:56,539
got two different worksheets one of them

1562
01:10:56,539 --> 01:10:59,210
is called<font color="#E5E5E5"> soft mass and what happens</font>

1563
01:10:59,210 --> 01:11:02,030
here sorry I've changed domains rather

1564
01:11:02,030 --> 01:11:04,400
than predicting whether it's the number

1565
01:11:04,400 --> 01:11:06,199
from<font color="#CCCCCC"> one not to nine I'm going to</font>

1566
01:11:06,199 --> 01:11:07,639
predict whether something is a cat a dog

1567
01:11:07,639 --> 01:11:10,820
<font color="#CCCCCC">a plane of Fisher Building</font><font color="#E5E5E5"> okay so out</font>

1568
01:11:10,820 --> 01:11:14,179
of our that fully connected layer we've

1569
01:11:14,179 --> 01:11:16,989
got<font color="#E5E5E5"> this case we'd have five numbers and</font>

1570
01:11:16,989 --> 01:11:20,389
notice at this point there's no<font color="#CCCCCC"> rail you</font>

1571
01:11:20,389 --> 01:11:23,150
okay in the last<font color="#CCCCCC"> layer there's no rail</font>

1572
01:11:23,150 --> 01:11:27,499
you<font color="#E5E5E5"> okay so I can have negatives so I</font>

1573
01:11:27,499 --> 01:11:32,300
<font color="#E5E5E5">want to turn these five numbers</font><font color="#CCCCCC"> H into a</font>

1574
01:11:32,300 --> 01:11:34,429
probability<font color="#CCCCCC"> I want to turn</font><font color="#E5E5E5"> it into a</font>

1575
01:11:34,429 --> 01:11:37,039
probability<font color="#E5E5E5"> from naught to one that it's</font>

1576
01:11:37,039 --> 01:11:37,699
a cat

1577
01:11:37,699 --> 01:11:40,340
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> a dog there's a plane that it's a</font>

1578
01:11:40,340 --> 01:11:42,949
fish<font color="#E5E5E5"> that it's a building and I want</font>

1579
01:11:42,949 --> 01:11:44,479
those probabilities<font color="#E5E5E5"> to have a couple</font><font color="#CCCCCC"> of</font>

1580
01:11:44,479 --> 01:11:45,979
<font color="#E5E5E5">characteristics first is that each of</font>

1581
01:11:45,979 --> 01:11:48,249
<font color="#E5E5E5">them should be</font><font color="#CCCCCC"> between zero and one</font><font color="#E5E5E5"> and</font>

1582
01:11:48,249 --> 01:11:50,510
the second is<font color="#E5E5E5"> that this state together</font>

1583
01:11:50,510 --> 01:11:52,550
<font color="#E5E5E5">should add up to</font><font color="#CCCCCC"> one right it's</font>

1584
01:11:52,550 --> 01:11:55,969
definitely<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> five things okay</font>

1585
01:11:55,969 --> 01:11:58,219
<font color="#E5E5E5">so to do that we use a different kind of</font>

1586
01:11:58,219 --> 01:12:01,400
activation function what's an activation

1587
01:12:01,400 --> 01:12:04,460
function<font color="#CCCCCC"> an activation function is a</font>

1588
01:12:04,460 --> 01:12:07,449
function that<font color="#E5E5E5"> is applied to activations</font>

1589
01:12:07,449 --> 01:12:13,400
<font color="#E5E5E5">so for example max</font><font color="#CCCCCC"> 0 comma</font><font color="#E5E5E5"> something is</font>

1590
01:12:13,400 --> 01:12:16,340
a<font color="#E5E5E5"> function that I applied to an</font>

1591
01:12:16,340 --> 01:12:18,889
activation so an activation function

1592
01:12:18,889 --> 01:12:23,630
<font color="#E5E5E5">always takes in one number and spits out</font>

1593
01:12:23,630 --> 01:12:27,800
one number<font color="#E5E5E5"> so max of 0 comma X takes in</font>

1594
01:12:27,800 --> 01:12:29,780
a<font color="#CCCCCC"> number X and spits out some different</font>

1595
01:12:29,780 --> 01:12:32,920
number<font color="#E5E5E5"> value of s</font>

1596
01:12:33,070 --> 01:12:35,780
that's all an activation function is and

1597
01:12:35,780 --> 01:12:39,260
if you remember<font color="#E5E5E5"> back to that PowerPoint</font>

1598
01:12:39,260 --> 01:12:44,230
<font color="#CCCCCC">we saw in Lesson</font><font color="#E5E5E5"> one</font>

1599
01:12:45,590 --> 01:12:50,540
each of our layers<font color="#E5E5E5"> was just a</font><font color="#CCCCCC"> linear</font>

1600
01:12:50,540 --> 01:12:55,230
function<font color="#E5E5E5"> and then after every</font><font color="#CCCCCC"> layer</font><font color="#E5E5E5"> we</font>

1601
01:12:55,230 --> 01:12:58,619
said we needed some non-linearity<font color="#CCCCCC"> act as</font>

1602
01:12:58,619 --> 01:13:01,560
<font color="#E5E5E5">if you stack a bunch of linear layers</font>

1603
01:13:01,560 --> 01:13:04,500
<font color="#E5E5E5">together right then all you end up with</font>

1604
01:13:04,500 --> 01:13:06,810
is a linear layer<font color="#CCCCCC"> okay</font>

1605
01:13:06,810 --> 01:13:09,840
so somebody's talking can can you not<font color="#E5E5E5"> a</font>

1606
01:13:09,840 --> 01:13:13,340
<font color="#CCCCCC">slow just</font><font color="#E5E5E5"> acting thank you</font>

1607
01:13:13,829 --> 01:13:15,979
if you stack a number of linear

1608
01:13:15,979 --> 01:13:18,210
functions<font color="#CCCCCC"> together you just end up with</font>

1609
01:13:18,210 --> 01:13:20,729
<font color="#E5E5E5">a</font><font color="#CCCCCC"> linear function and nobody does any</font>

1610
01:13:20,729 --> 01:13:22,139
cool deep learning with<font color="#E5E5E5"> displaying your</font>

1611
01:13:22,139 --> 01:13:24,119
functions<font color="#E5E5E5"> right but remember we also</font>

1612
01:13:24,119 --> 01:13:29,179
<font color="#E5E5E5">learnt</font><font color="#CCCCCC"> that by stacking linear functions</font>

1613
01:13:29,179 --> 01:13:33,090
with<font color="#E5E5E5"> between each one a</font><font color="#CCCCCC"> non-linearity we</font>

1614
01:13:33,090 --> 01:13:34,769
could create like arbitrarily complex

1615
01:13:34,769 --> 01:13:37,349
shapes<font color="#E5E5E5"> and so the non-linearity that</font>

1616
01:13:37,349 --> 01:13:39,599
<font color="#E5E5E5">we're using after every</font><font color="#CCCCCC"> hidden layer is</font>

1617
01:13:39,599 --> 01:13:42,979
a<font color="#E5E5E5"> rally rectified linear unit</font><font color="#CCCCCC"> a</font>

1618
01:13:42,979 --> 01:13:45,570
non-linearity<font color="#E5E5E5"> is an activation function</font>

1619
01:13:45,570 --> 01:13:48,510
<font color="#CCCCCC">an activation function</font><font color="#E5E5E5"> is a</font>

1620
01:13:48,510 --> 01:13:51,269
<font color="#CCCCCC">non-linearity in with in deep</font><font color="#E5E5E5"> way</font>

1621
01:13:51,269 --> 01:13:52,619
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> there's lots of other</font>

1622
01:13:52,619 --> 01:13:54,749
nonlinearities and<font color="#E5E5E5"> in the world but in</font>

1623
01:13:54,749 --> 01:13:58,110
deep learning<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is what we mean so an</font>

1624
01:13:58,110 --> 01:14:00,239
activation function is any<font color="#CCCCCC"> function that</font>

1625
01:14:00,239 --> 01:14:02,999
<font color="#E5E5E5">takes some activation in as a single</font>

1626
01:14:02,999 --> 01:14:04,979
number<font color="#CCCCCC"> and spits</font><font color="#E5E5E5"> out some new activation</font>

1627
01:14:04,979 --> 01:14:08,969
<font color="#E5E5E5">like max of 0 comma so I'm now going to</font>

1628
01:14:08,969 --> 01:14:10,320
tell you about a different<font color="#CCCCCC"> activation</font>

1629
01:14:10,320 --> 01:14:12,300
function<font color="#E5E5E5"> it's slightly more complicated</font>

1630
01:14:12,300 --> 01:14:16,170
<font color="#E5E5E5">than value but not too much it's called</font>

1631
01:14:16,170 --> 01:14:19,289
<font color="#E5E5E5">soft max soft max only ever occurs in</font>

1632
01:14:19,289 --> 01:14:22,139
<font color="#CCCCCC">the final layer at</font><font color="#E5E5E5"> the very end and the</font>

1633
01:14:22,139 --> 01:14:24,869
<font color="#E5E5E5">reason why is that soft max always</font><font color="#CCCCCC"> spits</font>

1634
01:14:24,869 --> 01:14:27,900
<font color="#E5E5E5">out numbers as an activation function</font>

1635
01:14:27,900 --> 01:14:29,550
<font color="#E5E5E5">that always spits out a number between</font>

1636
01:14:29,550 --> 01:14:32,849
Norton<font color="#CCCCCC"> 1 and it always spits out a bunch</font>

1637
01:14:32,849 --> 01:14:35,729
of numbers<font color="#E5E5E5"> that add to</font><font color="#CCCCCC"> 1 so a soft max</font>

1638
01:14:35,729 --> 01:14:39,889
gives us what<font color="#E5E5E5"> we want right</font><font color="#CCCCCC"> in theory</font>

1639
01:14:39,889 --> 01:14:43,289
this isn't<font color="#E5E5E5"> strictly necessary right like</font>

1640
01:14:43,289 --> 01:14:46,139
we could ask our neural net<font color="#CCCCCC"> to learn a</font>

1641
01:14:46,139 --> 01:14:50,579
set of kernels which have you know which

1642
01:14:50,579 --> 01:14:53,489
which give probabilities that<font color="#CCCCCC"> line up as</font>

1643
01:14:53,489 --> 01:14:54,960
closely as possible<font color="#CCCCCC"> with</font><font color="#E5E5E5"> what we want</font>

1644
01:14:54,960 --> 01:14:57,599
but in general with deep learning<font color="#E5E5E5"> if you</font>

1645
01:14:57,599 --> 01:14:59,940
can<font color="#CCCCCC"> construct your architecture</font><font color="#E5E5E5"> so that</font>

1646
01:14:59,940 --> 01:15:03,090
<font color="#CCCCCC">the desired</font><font color="#E5E5E5"> characteristics are as easy</font>

1647
01:15:03,090 --> 01:15:06,090
to<font color="#E5E5E5"> express as possible you'll end up</font>

1648
01:15:06,090 --> 01:15:07,739
with<font color="#E5E5E5"> better models</font><font color="#CCCCCC"> like they'll learn</font>

1649
01:15:07,739 --> 01:15:10,170
more quickly with less parameters<font color="#E5E5E5"> so in</font>

1650
01:15:10,170 --> 01:15:13,139
<font color="#E5E5E5">this case we know that</font><font color="#CCCCCC"> our probabilities</font>

1651
01:15:13,139 --> 01:15:16,199
<font color="#CCCCCC">should end</font><font color="#E5E5E5"> up being</font><font color="#CCCCCC"> between 9</font><font color="#E5E5E5"> 1 we know</font>

1652
01:15:16,199 --> 01:15:18,630
<font color="#E5E5E5">that they should end up adding to 1 so</font>

1653
01:15:18,630 --> 01:15:20,190
if we construct<font color="#E5E5E5"> an activation function</font>

1654
01:15:20,190 --> 01:15:23,280
which always has those<font color="#E5E5E5"> features then</font>

1655
01:15:23,280 --> 01:15:24,869
we're going<font color="#E5E5E5"> to make our neural network</font>

1656
01:15:24,869 --> 01:15:26,670
<font color="#CCCCCC">do a better job</font>

1657
01:15:26,670 --> 01:15:27,930
it's<font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> make it easier for</font><font color="#E5E5E5"> it it</font>

1658
01:15:27,930 --> 01:15:29,610
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> have to learn to do those things</font>

1659
01:15:29,610 --> 01:15:32,400
<font color="#E5E5E5">because it all happen automatically</font><font color="#CCCCCC"> okay</font>

1660
01:15:32,400 --> 01:15:37,470
<font color="#E5E5E5">so in</font><font color="#CCCCCC"> order to make this</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> we first</font>

1661
01:15:37,470 --> 01:15:39,000
of all have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get rid</font><font color="#CCCCCC"> of all of the</font>

1662
01:15:39,000 --> 01:15:41,760
negatives<font color="#E5E5E5"> right like we can't have</font>

1663
01:15:41,760 --> 01:15:44,670
negative probabilities so to make things

1664
01:15:44,670 --> 01:15:46,500
not<font color="#E5E5E5"> being negative</font><font color="#CCCCCC"> one way we could do</font>

1665
01:15:46,500 --> 01:15:49,680
<font color="#E5E5E5">it is just go into the pair of right so</font>

1666
01:15:49,680 --> 01:15:51,420
here<font color="#E5E5E5"> you can see my first step is to go</font>

1667
01:15:51,420 --> 01:15:55,950
<font color="#E5E5E5">X of the previous one right and I think</font>

1668
01:15:55,950 --> 01:15:58,650
I've mentioned<font color="#E5E5E5"> this before</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> of all</font>

1669
01:15:58,650 --> 01:16:01,080
the math that<font color="#CCCCCC"> you just need to be super</font>

1670
01:16:01,080 --> 01:16:03,450
familiar<font color="#E5E5E5"> with to do deep learning the</font>

1671
01:16:03,450 --> 01:16:05,490
one you really<font color="#CCCCCC"> need is logarithms and</font>

1672
01:16:05,490 --> 01:16:08,670
asks<font color="#E5E5E5"> write all of deep learning and all</font>

1673
01:16:08,670 --> 01:16:10,710
of machine learning they appear<font color="#E5E5E5"> all the</font>

1674
01:16:10,710 --> 01:16:19,530
time<font color="#E5E5E5"> right so for example you absolutely</font>

1675
01:16:19,530 --> 01:16:24,930
need to<font color="#E5E5E5"> know that log of x times</font><font color="#CCCCCC"> y</font>

1676
01:16:24,930 --> 01:16:33,090
<font color="#E5E5E5">equals</font><font color="#CCCCCC"> log of X plus log of Y</font><font color="#E5E5E5"> all right</font>

1677
01:16:33,090 --> 01:16:35,070
and like not just know that that's<font color="#E5E5E5"> a</font>

1678
01:16:35,070 --> 01:16:37,260
<font color="#CCCCCC">formula that</font><font color="#E5E5E5"> exists but have a sense of</font>

1679
01:16:37,260 --> 01:16:39,240
like what<font color="#CCCCCC"> does</font><font color="#E5E5E5"> that mean why is that</font>

1680
01:16:39,240 --> 01:16:41,010
interesting<font color="#CCCCCC"> oh I can turn</font>

1681
01:16:41,010 --> 01:16:42,930
multiplications into<font color="#E5E5E5"> additions that</font>

1682
01:16:42,930 --> 01:16:45,360
could be really handy<font color="#E5E5E5"> right and</font>

1683
01:16:45,360 --> 01:16:50,820
therefore log of x over<font color="#E5E5E5"> y equals</font><font color="#CCCCCC"> log of</font>

1684
01:16:50,820 --> 01:16:56,160
X<font color="#CCCCCC"> minus</font><font color="#E5E5E5"> log of Y again that's going to</font>

1685
01:16:56,160 --> 01:16:57,480
<font color="#E5E5E5">come in pretty</font><font color="#CCCCCC"> handy you know</font><font color="#E5E5E5"> rather</font>

1686
01:16:57,480 --> 01:16:59,850
<font color="#E5E5E5">than dividing I can just subtract things</font>

1687
01:16:59,850 --> 01:17:03,390
right and<font color="#E5E5E5"> also remember that</font><font color="#CCCCCC"> if I've got</font>

1688
01:17:03,390 --> 01:17:08,040
log of<font color="#E5E5E5"> x equals y then that means</font><font color="#CCCCCC"> a to</font>

1689
01:17:08,040 --> 01:17:14,370
the y<font color="#E5E5E5"> equals x in other words log log</font>

1690
01:17:14,370 --> 01:17:17,250
and<font color="#E5E5E5"> E to the for the inverse of each</font>

1691
01:17:17,250 --> 01:17:21,450
<font color="#E5E5E5">other</font><font color="#CCCCCC"> okay again you just you need to</font>

1692
01:17:21,450 --> 01:17:23,550
really<font color="#E5E5E5"> really understand these things</font>

1693
01:17:23,550 --> 01:17:25,140
and like so if you<font color="#E5E5E5"> if you haven't spent</font>

1694
01:17:25,140 --> 01:17:27,830
<font color="#E5E5E5">much time with logs and X for a while</font>

1695
01:17:27,830 --> 01:17:31,650
<font color="#E5E5E5">try plotting them in Excel</font><font color="#CCCCCC"> or a notebook</font>

1696
01:17:31,650 --> 01:17:33,780
have a sense of what shape they are<font color="#E5E5E5"> how</font>

1697
01:17:33,780 --> 01:17:35,670
<font color="#E5E5E5">they combine together just make</font><font color="#CCCCCC"> sure</font>

1698
01:17:35,670 --> 01:17:38,260
you're really<font color="#E5E5E5"> comfortable with them so</font>

1699
01:17:38,260 --> 01:17:42,640
we're using it<font color="#CCCCCC"> here</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> we're using it</font>

1700
01:17:42,640 --> 01:17:44,590
here<font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the things that we know</font>

1701
01:17:44,590 --> 01:17:46,750
is<font color="#E5E5E5"> a to the power of something is</font>

1702
01:17:46,750 --> 01:17:49,450
positive okay<font color="#CCCCCC"> so that's great</font>

1703
01:17:49,450 --> 01:17:50,890
the other thing you'll notice<font color="#CCCCCC"> about</font><font color="#E5E5E5"> e to</font>

1704
01:17:50,890 --> 01:17:52,630
<font color="#E5E5E5">the power</font><font color="#CCCCCC"> of something</font><font color="#E5E5E5"> is because it's a</font>

1705
01:17:52,630 --> 01:17:56,290
power<font color="#E5E5E5"> numbers that are slightly bigger</font>

1706
01:17:56,290 --> 01:17:58,210
<font color="#E5E5E5">than other numbers like</font><font color="#CCCCCC"> four is a little</font>

1707
01:17:58,210 --> 01:18:00,640
bit bigger than<font color="#CCCCCC"> 2.8 when you go e to the</font>

1708
01:18:00,640 --> 01:18:02,710
<font color="#E5E5E5">power of it really accentuates</font><font color="#CCCCCC"> that</font>

1709
01:18:02,710 --> 01:18:04,120
difference okay

1710
01:18:04,120 --> 01:18:05,320
so we're going to take<font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> of both</font>

1711
01:18:05,320 --> 01:18:06,850
of these features<font color="#CCCCCC"> for the purpose of</font>

1712
01:18:06,850 --> 01:18:10,480
deep learning<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so we take our</font><font color="#E5E5E5"> the</font>

1713
01:18:10,480 --> 01:18:13,330
<font color="#CCCCCC">results of this fully connected layer we</font>

1714
01:18:13,330 --> 01:18:15,850
go e<font color="#E5E5E5"> to the power of</font><font color="#CCCCCC"> for each of them</font>

1715
01:18:15,850 --> 01:18:24,130
and<font color="#CCCCCC"> then we're gonna</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> and then we're</font>

1716
01:18:24,130 --> 01:18:28,120
<font color="#E5E5E5">going to add</font><font color="#CCCCCC"> them up</font><font color="#E5E5E5"> okay so here is the</font>

1717
01:18:28,120 --> 01:18:32,340
sum of<font color="#E5E5E5"> e to the</font><font color="#CCCCCC"> power of so then here</font>

1718
01:18:32,340 --> 01:18:35,590
we're going to take e to the power of

1719
01:18:35,590 --> 01:18:37,830
divided by the sum<font color="#CCCCCC"> of e to</font><font color="#E5E5E5"> the power of</font>

1720
01:18:37,830 --> 01:18:41,080
so if<font color="#E5E5E5"> you take all of these things</font>

1721
01:18:41,080 --> 01:18:43,860
<font color="#E5E5E5">divided by their sum then by definition</font>

1722
01:18:43,860 --> 01:18:49,140
<font color="#CCCCCC">all of those things must add up to 1 and</font>

1723
01:18:49,140 --> 01:18:51,460
<font color="#CCCCCC">furthermore since we're dividing by</font>

1724
01:18:51,460 --> 01:18:54,580
their sum they must always<font color="#E5E5E5"> vary between</font>

1725
01:18:54,580 --> 01:18:56,890
<font color="#CCCCCC">0 and 1</font><font color="#E5E5E5"> because they</font><font color="#CCCCCC"> were always</font>

1726
01:18:56,890 --> 01:18:59,590
<font color="#CCCCCC">positive alright and that's it</font><font color="#E5E5E5"> so that's</font>

1727
01:18:59,590 --> 01:19:04,840
what softmax<font color="#E5E5E5"> is</font><font color="#CCCCCC"> ok so I've got this kind</font>

1728
01:19:04,840 --> 01:19:08,470
<font color="#E5E5E5">of doing random numbers each time right</font>

1729
01:19:08,470 --> 01:19:11,050
and so<font color="#E5E5E5"> you can see like as I as I look</font>

1730
01:19:11,050 --> 01:19:14,770
through<font color="#E5E5E5"> my softmax generally has quite a</font>

1731
01:19:14,770 --> 01:19:16,510
few things<font color="#E5E5E5"> that are so close to</font><font color="#CCCCCC"> zero</font>

1732
01:19:16,510 --> 01:19:19,090
that<font color="#CCCCCC"> they round</font><font color="#E5E5E5"> down</font><font color="#CCCCCC"> to zero</font><font color="#E5E5E5"> and you</font>

1733
01:19:19,090 --> 01:19:20,739
know maybe<font color="#E5E5E5"> one thing that's nearly</font><font color="#CCCCCC"> 1</font>

1734
01:19:20,739 --> 01:19:23,110
right and the<font color="#E5E5E5"> reason for</font><font color="#CCCCCC"> that is what we</font>

1735
01:19:23,110 --> 01:19:25,320
<font color="#CCCCCC">just talked about that is with the X</font>

1736
01:19:25,320 --> 01:19:28,420
<font color="#E5E5E5">just having one</font><font color="#CCCCCC"> number a bit bigger than</font>

1737
01:19:28,420 --> 01:19:30,310
<font color="#CCCCCC">the others tends to like</font><font color="#E5E5E5"> push it out</font>

1738
01:19:30,310 --> 01:19:33,100
further right so even<font color="#E5E5E5"> though</font><font color="#CCCCCC"> my inputs</font>

1739
01:19:33,100 --> 01:19:35,440
here<font color="#E5E5E5"> around</font><font color="#CCCCCC"> on numbers between negative</font>

1740
01:19:35,440 --> 01:19:39,190
<font color="#E5E5E5">5 and 5 right my outputs from the</font>

1741
01:19:39,190 --> 01:19:41,140
softmax don't really look<font color="#CCCCCC"> that random at</font>

1742
01:19:41,140 --> 01:19:44,770
<font color="#E5E5E5">all in the sense that they tend to have</font>

1743
01:19:44,770 --> 01:19:47,140
one big number and a<font color="#E5E5E5"> bunch of small</font>

1744
01:19:47,140 --> 01:19:50,650
<font color="#CCCCCC">numbers</font><font color="#E5E5E5"> and now that's what we want</font>

1745
01:19:50,650 --> 01:19:53,680
<font color="#CCCCCC">right we want to say like in terms</font><font color="#E5E5E5"> of</font>

1746
01:19:53,680 --> 01:19:55,600
like is this<font color="#E5E5E5"> a cat a dog</font><font color="#CCCCCC"> a plane a fish</font>

1747
01:19:55,600 --> 01:19:57,700
or a building we really want it<font color="#CCCCCC"> to say</font>

1748
01:19:57,700 --> 01:20:00,100
like it's it's that<font color="#E5E5E5"> you know it's it's a</font>

1749
01:20:00,100 --> 01:20:03,880
dog<font color="#E5E5E5"> or it's a plane</font><font color="#CCCCCC"> not like I don't</font>

1750
01:20:03,880 --> 01:20:07,510
know<font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> softmax has lots of these</font>

1751
01:20:07,510 --> 01:20:10,030
cool properties right it's going<font color="#E5E5E5"> to</font>

1752
01:20:10,030 --> 01:20:12,610
return a<font color="#E5E5E5"> probability that adds up to</font><font color="#CCCCCC"> 1</font>

1753
01:20:12,610 --> 01:20:14,980
and it's going<font color="#CCCCCC"> to tend to</font><font color="#E5E5E5"> want to pick</font>

1754
01:20:14,980 --> 01:20:20,260
<font color="#CCCCCC">one thing particularly strongly okay so</font>

1755
01:20:20,260 --> 01:20:22,600
that's soft mess<font color="#E5E5E5"> your net could you pass</font>

1756
01:20:22,600 --> 01:20:29,230
actually<font color="#E5E5E5"> bust me</font><font color="#CCCCCC"> up we how would we do</font>

1757
01:20:29,230 --> 01:20:31,180
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> as let's</font><font color="#CCCCCC"> say you have any</font>

1758
01:20:31,180 --> 01:20:32,440
<font color="#E5E5E5">imaging you want to count in categorize</font>

1759
01:20:32,440 --> 01:20:34,780
<font color="#E5E5E5">I was like cat and the dog or like</font><font color="#CCCCCC"> has</font>

1760
01:20:34,780 --> 01:20:37,600
multiple things<font color="#CCCCCC"> but what kind of</font>

1761
01:20:37,600 --> 01:20:40,150
function<font color="#CCCCCC"> will we</font><font color="#E5E5E5"> try to use so happens</font>

1762
01:20:40,150 --> 01:20:43,230
we're<font color="#E5E5E5"> going to do that right now so</font>

1763
01:20:45,419 --> 01:20:47,099
so<font color="#CCCCCC"> hope you</font><font color="#E5E5E5"> think about why we</font><font color="#CCCCCC"> might</font>

1764
01:20:47,099 --> 01:20:48,840
want<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that and so</font><font color="#CCCCCC"> runways where you</font>

1765
01:20:48,840 --> 01:20:50,070
might<font color="#CCCCCC"> want to do that is to do</font>

1766
01:20:50,070 --> 01:20:53,010
multi-label classification<font color="#E5E5E5"> so we're</font>

1767
01:20:53,010 --> 01:20:54,989
looking now at<font color="#CCCCCC"> listen to image models</font>

1768
01:20:54,989 --> 01:20:57,119
and specifically we're<font color="#E5E5E5"> going to take a</font>

1769
01:20:57,119 --> 01:21:00,419
look at the planet competition satellite

1770
01:21:00,419 --> 01:21:04,139
imaging competition<font color="#CCCCCC"> now the satellite</font>

1771
01:21:04,139 --> 01:21:08,189
<font color="#E5E5E5">imaging competition has some</font>

1772
01:21:08,189 --> 01:21:09,840
similarities<font color="#CCCCCC"> to stuff we've seen before</font>

1773
01:21:09,840 --> 01:21:13,229
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so before we've seen cat versus</font>

1774
01:21:13,229 --> 01:21:15,860
dog<font color="#E5E5E5"> and these images are a cat or a dog</font>

1775
01:21:15,860 --> 01:21:19,769
<font color="#E5E5E5">they're not Maya they're not both right</font>

1776
01:21:19,769 --> 01:21:22,550
but the<font color="#E5E5E5"> satellite imaging competition</font>

1777
01:21:22,550 --> 01:21:25,559
has stayed as<font color="#E5E5E5"> images that look like this</font>

1778
01:21:25,559 --> 01:21:27,869
<font color="#E5E5E5">and in fact every single one</font><font color="#CCCCCC"> of the</font>

1779
01:21:27,869 --> 01:21:30,389
images is classified by whether there's

1780
01:21:30,389 --> 01:21:31,530
four<font color="#E5E5E5"> kinds of weather</font>

1781
01:21:31,530 --> 01:21:34,260
one of<font color="#E5E5E5"> which is haze and another of</font>

1782
01:21:34,260 --> 01:21:37,289
<font color="#E5E5E5">which is clear in addition</font><font color="#CCCCCC"> to which</font>

1783
01:21:37,289 --> 01:21:39,719
there is a list<font color="#E5E5E5"> of features</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> may be</font>

1784
01:21:39,719 --> 01:21:42,479
<font color="#E5E5E5">present including agriculture which is</font>

1785
01:21:42,479 --> 01:21:44,880
<font color="#CCCCCC">like some some cleared</font><font color="#E5E5E5"> area used for</font>

1786
01:21:44,880 --> 01:21:48,269
agriculture<font color="#E5E5E5"> primary which means primary</font>

1787
01:21:48,269 --> 01:21:50,999
rainforest<font color="#E5E5E5"> and water which means</font><font color="#CCCCCC"> a river</font>

1788
01:21:50,999 --> 01:21:54,019
or a creek<font color="#E5E5E5"> so here is a clear day</font>

1789
01:21:54,019 --> 01:21:56,969
satellite image showing some agriculture

1790
01:21:56,969 --> 01:21:59,579
some<font color="#E5E5E5"> primary rainforest and some water</font>

1791
01:21:59,579 --> 01:22:02,550
features<font color="#CCCCCC"> and here's one which is in haze</font>

1792
01:22:02,550 --> 01:22:07,079
and is entirely<font color="#CCCCCC"> primary rainforest</font><font color="#E5E5E5"> so in</font>

1793
01:22:07,079 --> 01:22:09,840
this case we're going<font color="#E5E5E5"> to want</font><font color="#CCCCCC"> to be able</font>

1794
01:22:09,840 --> 01:22:13,229
<font color="#E5E5E5">to show we're going to predict multiple</font>

1795
01:22:13,229 --> 01:22:15,689
things and so softmax wouldn't be good

1796
01:22:15,689 --> 01:22:19,439
because softmax doesn't like predicting

1797
01:22:19,439 --> 01:22:21,749
multiple things<font color="#E5E5E5"> and like I would</font>

1798
01:22:21,749 --> 01:22:23,610
<font color="#CCCCCC">definitely recommend</font><font color="#E5E5E5"> anthropomorphizing</font>

1799
01:22:23,610 --> 01:22:25,860
your activation<font color="#E5E5E5"> functions right they</font>

1800
01:22:25,860 --> 01:22:28,079
<font color="#E5E5E5">have personalities okay and the</font>

1801
01:22:28,079 --> 01:22:30,869
personality of the softmax<font color="#CCCCCC"> is it wants</font>

1802
01:22:30,869 --> 01:22:34,559
to pick a thing<font color="#E5E5E5"> and people</font><font color="#CCCCCC"> forget this</font>

1803
01:22:34,559 --> 01:22:36,679
all<font color="#E5E5E5"> the time I've seen many people even</font>

1804
01:22:36,679 --> 01:22:39,419
<font color="#E5E5E5">well-regarded researchers in famous</font>

1805
01:22:39,419 --> 01:22:44,189
<font color="#CCCCCC">academic papers using</font><font color="#E5E5E5"> like soft maps for</font>

1806
01:22:44,189 --> 01:22:46,229
multi-label classification<font color="#CCCCCC"> it happens</font>

1807
01:22:46,229 --> 01:22:46,860
all the time

1808
01:22:46,860 --> 01:22:49,590
<font color="#E5E5E5">right and it's kind of ridiculous</font>

1809
01:22:49,590 --> 01:22:52,409
<font color="#E5E5E5">because they're not understanding</font><font color="#CCCCCC"> the</font>

1810
01:22:52,409 --> 01:22:55,249
personality of their<font color="#E5E5E5"> activation function</font>

1811
01:22:55,249 --> 01:22:58,000
so<font color="#CCCCCC"> for multi</font>

1812
01:22:58,000 --> 01:23:00,550
<font color="#E5E5E5">classification where each sample can</font>

1813
01:23:00,550 --> 01:23:03,190
<font color="#E5E5E5">belong</font><font color="#CCCCCC"> to one or</font><font color="#E5E5E5"> more classes we have to</font>

1814
01:23:03,190 --> 01:23:05,590
change<font color="#E5E5E5"> a few things</font><font color="#CCCCCC"> but here's the good</font>

1815
01:23:05,590 --> 01:23:05,920
news

1816
01:23:05,920 --> 01:23:08,560
in<font color="#CCCCCC"> fast AI we don't have to change</font>

1817
01:23:08,560 --> 01:23:12,280
anything<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so fast AI will look at</font>

1818
01:23:12,280 --> 01:23:15,940
the labels in<font color="#E5E5E5"> the CSV and if there is</font>

1819
01:23:15,940 --> 01:23:21,880
<font color="#E5E5E5">more</font><font color="#CCCCCC"> than one label</font><font color="#E5E5E5"> ever for any item it</font>

1820
01:23:21,880 --> 01:23:23,710
<font color="#CCCCCC">will automatically</font><font color="#E5E5E5"> switch into like</font>

1821
01:23:23,710 --> 01:23:25,600
multi-label mode<font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to show</font>

1822
01:23:25,600 --> 01:23:27,670
you how it works behind the scenes<font color="#CCCCCC"> but</font>

1823
01:23:27,670 --> 01:23:29,770
<font color="#E5E5E5">the good news is you don't actually have</font>

1824
01:23:29,770 --> 01:23:35,950
<font color="#CCCCCC">to</font><font color="#E5E5E5"> care it happens</font><font color="#CCCCCC"> anywhere so if you</font>

1825
01:23:35,950 --> 01:23:40,690
have multi label images multi label

1826
01:23:40,690 --> 01:23:43,150
objects<font color="#E5E5E5"> you obviously can't use the</font>

1827
01:23:43,150 --> 01:23:46,000
classic<font color="#CCCCCC"> Kerris style</font><font color="#E5E5E5"> approach where</font>

1828
01:23:46,000 --> 01:23:48,370
things are in<font color="#E5E5E5"> folders</font><font color="#CCCCCC"> because something</font>

1829
01:23:48,370 --> 01:23:51,430
can't conveniently be in multiple

1830
01:23:51,430 --> 01:23:55,180
folders<font color="#E5E5E5"> at the same time right so that's</font>

1831
01:23:55,180 --> 01:23:57,610
why we you basically have to use<font color="#E5E5E5"> the</font>

1832
01:23:57,610 --> 01:24:04,050
from CSV approach<font color="#E5E5E5"> right so if we look at</font>

1833
01:24:04,050 --> 01:24:06,180
[Music]

1834
01:24:06,180 --> 01:24:12,160
an<font color="#E5E5E5"> example actually</font><font color="#CCCCCC"> I'll show you I tend</font>

1835
01:24:12,160 --> 01:24:14,350
<font color="#CCCCCC">to take you through it</font><font color="#E5E5E5"> right so we can</font>

1836
01:24:14,350 --> 01:24:16,420
<font color="#E5E5E5">say okay this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> CSV file containing</font>

1837
01:24:16,420 --> 01:24:18,970
our labels<font color="#E5E5E5"> this looks exactly the same</font>

1838
01:24:18,970 --> 01:24:21,610
<font color="#E5E5E5">as</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> did before</font><font color="#CCCCCC"> but rather than side on</font>

1839
01:24:21,610 --> 01:24:24,700
its top down<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> and top down I've</font>

1840
01:24:24,700 --> 01:24:27,220
mentioned before<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can do our</font>

1841
01:24:27,220 --> 01:24:28,810
vertical<font color="#CCCCCC"> flips it</font><font color="#E5E5E5"> actually does more</font>

1842
01:24:28,810 --> 01:24:29,800
<font color="#E5E5E5">than that there's actually eight</font>

1843
01:24:29,800 --> 01:24:32,110
possible symmetries for<font color="#CCCCCC"> a square which</font>

1844
01:24:32,110 --> 01:24:35,140
is<font color="#E5E5E5"> it can</font><font color="#CCCCCC"> be rotated through 90 180 270</font>

1845
01:24:35,140 --> 01:24:37,660
or<font color="#CCCCCC"> 0 degrees and for each of those it</font>

1846
01:24:37,660 --> 01:24:39,670
<font color="#E5E5E5">can be flipped and if you think</font><font color="#CCCCCC"> about it</font>

1847
01:24:39,670 --> 01:24:42,130
for<font color="#CCCCCC"> awhile</font><font color="#E5E5E5"> you'll realize that that's a</font>

1848
01:24:42,130 --> 01:24:45,070
complete enumeration<font color="#E5E5E5"> of everything that</font>

1849
01:24:45,070 --> 01:24:48,430
you can do in<font color="#E5E5E5"> terms of symmetries</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> a</font>

1850
01:24:48,430 --> 01:24:50,620
<font color="#CCCCCC">square so</font><font color="#E5E5E5"> they're called it's called the</font>

1851
01:24:50,620 --> 01:24:53,530
dihedral group of<font color="#CCCCCC"> eight</font><font color="#E5E5E5"> so if you see in</font>

1852
01:24:53,530 --> 01:24:55,630
the code<font color="#E5E5E5"> there's actually a transform or</font>

1853
01:24:55,630 --> 01:24:59,620
dihedral<font color="#E5E5E5"> that's why it's called</font><font color="#CCCCCC"> that so</font>

1854
01:24:59,620 --> 01:25:01,690
this transforms will basically do the

1855
01:25:01,690 --> 01:25:05,670
full set<font color="#CCCCCC"> of eight</font><font color="#E5E5E5"> symmetric dihedral</font>

1856
01:25:05,670 --> 01:25:09,280
rotations and<font color="#E5E5E5"> flips</font><font color="#CCCCCC"> plus everything</font>

1857
01:25:09,280 --> 01:25:11,130
which we can do to dogs<font color="#E5E5E5"> and</font><font color="#CCCCCC"> cats</font>

1858
01:25:11,130 --> 01:25:13,860
<font color="#E5E5E5">you know small</font><font color="#CCCCCC"> clinical rotations a</font>

1859
01:25:13,860 --> 01:25:16,290
little bit of zooming a little bit of

1860
01:25:16,290 --> 01:25:18,810
contrast<font color="#E5E5E5"> and brightness adjustment so</font>

1861
01:25:18,810 --> 01:25:23,340
these images<font color="#E5E5E5"> are a size 256 by 256 so I</font>

1862
01:25:23,340 --> 01:25:24,870
just create a little<font color="#E5E5E5"> function here to</font>

1863
01:25:24,870 --> 01:25:28,440
let me quickly grab you know<font color="#CCCCCC"> data loader</font>

1864
01:25:28,440 --> 01:25:32,429
of any size so here's a 256 by 256<font color="#E5E5E5"> once</font>

1865
01:25:32,429 --> 01:25:36,179
you've got a data<font color="#E5E5E5"> object</font><font color="#CCCCCC"> inside it we've</font>

1866
01:25:36,179 --> 01:25:37,650
already seen that there's things<font color="#E5E5E5"> called</font>

1867
01:25:37,650 --> 01:25:41,400
<font color="#E5E5E5">Val</font><font color="#CCCCCC"> D s</font><font color="#E5E5E5"> test D s train</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> s there are</font>

1868
01:25:41,400 --> 01:25:43,230
things that you can just<font color="#E5E5E5"> index into and</font>

1869
01:25:43,230 --> 01:25:45,510
grab a particular image so<font color="#E5E5E5"> you just use</font>

1870
01:25:45,510 --> 01:25:48,360
square brackets 0 you'll also see that

1871
01:25:48,360 --> 01:25:50,429
<font color="#CCCCCC">all</font><font color="#E5E5E5"> of those things have a DL that's a</font>

1872
01:25:50,429 --> 01:25:53,310
data loader<font color="#E5E5E5"> so</font><font color="#CCCCCC"> des is data set</font><font color="#E5E5E5"> DL is</font>

1873
01:25:53,310 --> 01:25:55,440
data motor<font color="#E5E5E5"> these are concepts from</font><font color="#CCCCCC"> PI</font>

1874
01:25:55,440 --> 01:25:58,080
watch so if you<font color="#CCCCCC"> Google PI torch data set</font>

1875
01:25:58,080 --> 01:26:00,300
or<font color="#CCCCCC"> pipe watch data loader</font><font color="#E5E5E5"> you can</font>

1876
01:26:00,300 --> 01:26:02,489
basically see what it means<font color="#E5E5E5"> but the</font>

1877
01:26:02,489 --> 01:26:04,650
basic idea is a data set gives you a

1878
01:26:04,650 --> 01:26:08,429
<font color="#E5E5E5">single image or a single object back a</font>

1879
01:26:08,429 --> 01:26:10,350
data loader gives you back a mini batch

1880
01:26:10,350 --> 01:26:12,900
and specifically it gives you back<font color="#CCCCCC"> a</font>

1881
01:26:12,900 --> 01:26:15,989
<font color="#CCCCCC">transformed mini - so that's why when we</font>

1882
01:26:15,989 --> 01:26:20,219
create<font color="#E5E5E5"> our data object we can pass in</font>

1883
01:26:20,219 --> 01:26:24,030
<font color="#E5E5E5">num workers and transforms it's like how</font>

1884
01:26:24,030 --> 01:26:25,560
many<font color="#E5E5E5"> processes do you want to use what</font>

1885
01:26:25,560 --> 01:26:28,199
<font color="#E5E5E5">transforms do you want</font><font color="#CCCCCC"> and so with with</font>

1886
01:26:28,199 --> 01:26:30,480
<font color="#CCCCCC">a</font><font color="#E5E5E5"> data loader you can't ask for an</font>

1887
01:26:30,480 --> 01:26:32,159
individual image<font color="#E5E5E5"> you can only get back</font>

1888
01:26:32,159 --> 01:26:35,159
at a mini batch and you can't get back a

1889
01:26:35,159 --> 01:26:37,260
particular mini batch you<font color="#E5E5E5"> can only get</font>

1890
01:26:37,260 --> 01:26:39,750
back<font color="#E5E5E5"> the next mini - so something</font>

1891
01:26:39,750 --> 01:26:42,719
<font color="#CCCCCC">reverses look through grabbing a mini</font>

1892
01:26:42,719 --> 01:26:46,560
batch at<font color="#CCCCCC"> a time and so in</font><font color="#E5E5E5"> Python</font><font color="#CCCCCC"> the</font>

1893
01:26:46,560 --> 01:26:47,880
thing<font color="#E5E5E5"> that does that</font><font color="#CCCCCC"> is called a</font>

1894
01:26:47,880 --> 01:26:50,760
generator<font color="#CCCCCC"> right</font><font color="#E5E5E5"> or an iterator this</font>

1895
01:26:50,760 --> 01:26:51,989
<font color="#E5E5E5">slightly different versions are the same</font>

1896
01:26:51,989 --> 01:26:54,480
thing so to turn a data loader<font color="#E5E5E5"> into an</font>

1897
01:26:54,480 --> 01:26:56,489
iterator<font color="#E5E5E5"> you use the standard Python</font>

1898
01:26:56,489 --> 01:26:57,480
function<font color="#E5E5E5"> cordetta</font>

1899
01:26:57,480 --> 01:27:00,030
<font color="#E5E5E5">that's a Python function just</font><font color="#CCCCCC"> a regular</font>

1900
01:27:00,030 --> 01:27:02,550
part of<font color="#E5E5E5"> the Python basic</font><font color="#CCCCCC"> language that</font>

1901
01:27:02,550 --> 01:27:04,710
returns you an iterator<font color="#E5E5E5"> and an iterator</font>

1902
01:27:04,710 --> 01:27:07,350
<font color="#CCCCCC">is something that takes you can pass the</font>

1903
01:27:07,350 --> 01:27:08,909
static give pass it to the<font color="#E5E5E5"> standard</font>

1904
01:27:08,909 --> 01:27:13,290
Python function or statement<font color="#E5E5E5"> next and</font>

1905
01:27:13,290 --> 01:27:15,840
that<font color="#CCCCCC"> just says give</font><font color="#E5E5E5"> me another batch</font>

1906
01:27:15,840 --> 01:27:18,800
from this iterator

1907
01:27:18,800 --> 01:27:21,000
so we're basically this is one<font color="#CCCCCC"> of the</font>

1908
01:27:21,000 --> 01:27:23,070
things I really like about<font color="#CCCCCC"> PI torch is</font>

1909
01:27:23,070 --> 01:27:24,829
it really leverages

1910
01:27:24,829 --> 01:27:28,760
modern pythons<font color="#E5E5E5"> kind of stuff you know in</font>

1911
01:27:28,760 --> 01:27:31,489
in tensorflow<font color="#E5E5E5"> they invent their whole</font>

1912
01:27:31,489 --> 01:27:35,090
new world<font color="#CCCCCC"> earth ways of doing</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> and</font>

1913
01:27:35,090 --> 01:27:38,329
so it's kind of more in a sense it's

1914
01:27:38,329 --> 01:27:40,040
more<font color="#E5E5E5"> like cross-platform but in another</font>

1915
01:27:40,040 --> 01:27:42,349
sense<font color="#E5E5E5"> like it's not a good fit to any</font>

1916
01:27:42,349 --> 01:27:46,429
platform<font color="#CCCCCC"> so it's nice if you if you know</font>

1917
01:27:46,429 --> 01:27:49,880
<font color="#E5E5E5">Python well</font><font color="#CCCCCC"> PI torch comes very</font>

1918
01:27:49,880 --> 01:27:52,070
naturally<font color="#E5E5E5"> if you don't know Python well</font>

1919
01:27:52,070 --> 01:27:53,960
<font color="#CCCCCC">PI torches are good</font><font color="#E5E5E5"> reason to learn</font>

1920
01:27:53,960 --> 01:27:58,369
Python well a<font color="#E5E5E5"> PI torch your module</font>

1921
01:27:58,369 --> 01:28:00,559
<font color="#E5E5E5">neural network</font><font color="#CCCCCC"> module is a standard</font>

1922
01:28:00,559 --> 01:28:03,739
Python bus for example<font color="#CCCCCC"> so any work you</font>

1923
01:28:03,739 --> 01:28:05,690
put<font color="#E5E5E5"> into</font><font color="#CCCCCC"> learning Python better</font><font color="#E5E5E5"> will pay</font>

1924
01:28:05,690 --> 01:28:08,090
off<font color="#CCCCCC"> with paid</font><font color="#E5E5E5"> watch so here I am</font><font color="#CCCCCC"> using</font>

1925
01:28:08,090 --> 01:28:12,050
standard Python iterators and<font color="#E5E5E5"> next to</font>

1926
01:28:12,050 --> 01:28:15,619
grab my next<font color="#E5E5E5"> mini batch from</font><font color="#CCCCCC"> the</font>

1927
01:28:15,619 --> 01:28:17,780
validation sets data loader<font color="#CCCCCC"> and that's</font>

1928
01:28:17,780 --> 01:28:19,159
going<font color="#E5E5E5"> to return</font><font color="#CCCCCC"> two things it's going</font><font color="#E5E5E5"> to</font>

1929
01:28:19,159 --> 01:28:20,960
return the images in the mini batch and

1930
01:28:20,960 --> 01:28:23,780
the labels<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the mini - so standard</font>

1931
01:28:23,780 --> 01:28:25,360
<font color="#E5E5E5">Python approach I can pull them apart</font>

1932
01:28:25,360 --> 01:28:30,739
<font color="#E5E5E5">like</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> and so here is one mini batch of</font>

1933
01:28:30,739 --> 01:28:34,099
labels<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> surprisingly since</font><font color="#E5E5E5"> I</font>

1934
01:28:34,099 --> 01:28:37,670
said that<font color="#CCCCCC"> my batch size let's go ahead</font>

1935
01:28:37,670 --> 01:28:40,239
and find it

1936
01:28:41,570 --> 01:28:44,389
<font color="#E5E5E5">Oh actually it's the batch size by</font>

1937
01:28:44,389 --> 01:28:47,840
default<font color="#CCCCCC"> is 64 so I didn't pass in a</font>

1938
01:28:47,840 --> 01:28:50,000
batch size and so<font color="#E5E5E5"> just remember shift</font>

1939
01:28:50,000 --> 01:28:52,099
<font color="#E5E5E5">tab to see like what are the things you</font>

1940
01:28:52,099 --> 01:28:54,440
<font color="#E5E5E5">can pass and what are the defaults so by</font>

1941
01:28:54,440 --> 01:28:57,710
default<font color="#CCCCCC"> my batch size is 64 so I've got</font>

1942
01:28:57,710 --> 01:29:01,820
that something<font color="#CCCCCC"> of size 64 by 17 so there</font>

1943
01:29:01,820 --> 01:29:07,040
are 17 of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> possible classes right so</font>

1944
01:29:07,040 --> 01:29:12,500
let's take<font color="#CCCCCC"> a look at the</font><font color="#E5E5E5"> zeroth set of</font>

1945
01:29:12,500 --> 01:29:15,829
labels so the zeroth images labels<font color="#E5E5E5"> so I</font>

1946
01:29:15,829 --> 01:29:18,349
can<font color="#E5E5E5"> zip again standard Python things it</font>

1947
01:29:18,349 --> 01:29:21,559
takes<font color="#E5E5E5"> two lists and combines it so you</font>

1948
01:29:21,559 --> 01:29:23,150
get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> zero theme from the first list</font>

1949
01:29:23,150 --> 01:29:25,489
<font color="#CCCCCC">as you're</font><font color="#E5E5E5"> asking for</font><font color="#CCCCCC"> the second list</font><font color="#E5E5E5"> and</font>

1950
01:29:25,489 --> 01:29:27,440
the first thing for<font color="#CCCCCC"> the first first this</font>

1951
01:29:27,440 --> 01:29:29,210
<font color="#E5E5E5">first thing from the second list and so</font>

1952
01:29:29,210 --> 01:29:31,190
forth so I<font color="#CCCCCC"> can zip</font><font color="#E5E5E5"> them together and</font>

1953
01:29:31,190 --> 01:29:34,250
<font color="#E5E5E5">that</font><font color="#CCCCCC"> way I can</font><font color="#E5E5E5"> find out for the zeroth</font>

1954
01:29:34,250 --> 01:29:36,790
image and the validation<font color="#E5E5E5"> set</font><font color="#CCCCCC"> is</font>

1955
01:29:36,790 --> 01:29:38,369
<font color="#CCCCCC">agriculture</font>

1956
01:29:38,369 --> 01:29:42,599
it's clear<font color="#CCCCCC"> its primary</font><font color="#E5E5E5"> rainforest</font><font color="#CCCCCC"> its</font>

1957
01:29:42,599 --> 01:29:47,280
slash-and-burn<font color="#CCCCCC"> its water</font><font color="#E5E5E5"> okay so as you</font>

1958
01:29:47,280 --> 01:29:51,869
<font color="#CCCCCC">can see here this is</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> MOLLE label you</font>

1959
01:29:51,869 --> 01:29:53,219
see here's a way to do multi-label

1960
01:29:53,219 --> 01:29:57,560
classification<font color="#E5E5E5"> so by the same token</font>

1961
01:29:57,560 --> 01:30:01,080
<font color="#E5E5E5">right if we go</font><font color="#CCCCCC"> back to our single label</font>

1962
01:30:01,080 --> 01:30:03,179
classification it's a cat dog<font color="#E5E5E5"> playing</font>

1963
01:30:03,179 --> 01:30:07,230
official building<font color="#E5E5E5"> behind</font><font color="#CCCCCC"> the scenes</font><font color="#E5E5E5"> we</font>

1964
01:30:07,230 --> 01:30:08,580
haven't actually looked<font color="#E5E5E5"> at it but behind</font>

1965
01:30:08,580 --> 01:30:12,599
<font color="#E5E5E5">the scenes</font><font color="#CCCCCC"> fast AI imply torch are</font>

1966
01:30:12,599 --> 01:30:15,389
turning our labels into something called

1967
01:30:15,389 --> 01:30:18,869
one hot encoded labels and so if it was

1968
01:30:18,869 --> 01:30:22,940
<font color="#E5E5E5">actually a dog than the actual values</font>

1969
01:30:22,940 --> 01:30:25,980
would<font color="#E5E5E5"> be like that right so these</font><font color="#CCCCCC"> are</font>

1970
01:30:25,980 --> 01:30:29,699
like<font color="#E5E5E5"> the actuals okay so do you remember</font>

1971
01:30:29,699 --> 01:30:32,219
at the<font color="#CCCCCC"> very</font><font color="#E5E5E5"> end of</font><font color="#CCCCCC"> at AV o--'s video</font><font color="#E5E5E5"> he</font>

1972
01:30:32,219 --> 01:30:34,139
showed how like the template had to

1973
01:30:34,139 --> 01:30:36,929
match to one of the like<font color="#E5E5E5"> five</font><font color="#CCCCCC"> ABCDE</font>

1974
01:30:36,929 --> 01:30:39,119
<font color="#E5E5E5">templates and so what it's actually</font>

1975
01:30:39,119 --> 01:30:42,989
doing is it's comparing when I said it's

1976
01:30:42,989 --> 01:30:44,489
<font color="#E5E5E5">basically doing a dot product it's</font>

1977
01:30:44,489 --> 01:30:46,080
<font color="#CCCCCC">actually a fully connected</font><font color="#E5E5E5"> layer</font><font color="#CCCCCC"> at the</font>

1978
01:30:46,080 --> 01:30:50,040
<font color="#E5E5E5">end right that calculates an output</font>

1979
01:30:50,040 --> 01:30:52,889
activation that goes through a soft<font color="#E5E5E5"> Max</font>

1980
01:30:52,889 --> 01:30:56,940
and then the soft max is compared to the

1981
01:30:56,940 --> 01:30:59,730
one hot encoded label right so if it was

1982
01:30:59,730 --> 01:31:03,540
a dog<font color="#CCCCCC"> there would be a</font><font color="#E5E5E5"> one here and then</font>

1983
01:31:03,540 --> 01:31:05,250
we<font color="#CCCCCC"> take the</font><font color="#E5E5E5"> difference between the</font>

1984
01:31:05,250 --> 01:31:08,670
actuals and the softmax activation is to

1985
01:31:08,670 --> 01:31:10,170
say and add those add up<font color="#E5E5E5"> those</font>

1986
01:31:10,170 --> 01:31:12,179
differences to say how much error is

1987
01:31:12,179 --> 01:31:14,489
there<font color="#E5E5E5"> essentially we're skipping over</font>

1988
01:31:14,489 --> 01:31:16,110
<font color="#CCCCCC">something called a loss function that</font>

1989
01:31:16,110 --> 01:31:17,489
we'll learn about<font color="#CCCCCC"> next week but</font>

1990
01:31:17,489 --> 01:31:21,320
<font color="#E5E5E5">essentially we're basically doing that</font>

1991
01:31:21,680 --> 01:31:25,610
now<font color="#E5E5E5"> if it's one</font><font color="#CCCCCC"> hot</font><font color="#E5E5E5"> encoded like there's</font>

1992
01:31:25,610 --> 01:31:28,250
<font color="#E5E5E5">only one thing which have a 1 in it then</font>

1993
01:31:28,250 --> 01:31:32,410
<font color="#E5E5E5">actually storing it as 0 1 0 0 0 is</font>

1994
01:31:32,410 --> 01:31:36,530
terribly inefficient<font color="#CCCCCC"> right like we could</font>

1995
01:31:36,530 --> 01:31:38,270
basically say what<font color="#E5E5E5"> are the index of each</font>

1996
01:31:38,270 --> 01:31:40,700
of these things<font color="#E5E5E5"> right so we can say it's</font>

1997
01:31:40,700 --> 01:31:44,890
like 0 1<font color="#CCCCCC"> 2 3 4</font><font color="#E5E5E5"> like so right and</font><font color="#CCCCCC"> so</font>

1998
01:31:44,890 --> 01:31:48,710
<font color="#CCCCCC">rather</font><font color="#E5E5E5"> than storing it is 0 1 0 0 0</font>

1999
01:31:48,710 --> 01:31:52,360
we actually just store the index<font color="#E5E5E5"> value</font>

2000
01:31:52,360 --> 01:31:56,420
<font color="#E5E5E5">right so if you look at the the Y values</font>

2001
01:31:56,420 --> 01:31:58,850
for<font color="#CCCCCC"> the cats and dogs competition or the</font>

2002
01:31:58,850 --> 01:32:01,160
<font color="#E5E5E5">dog breeds competition you won't</font>

2003
01:32:01,160 --> 01:32:03,140
actually see<font color="#CCCCCC"> a big lists of ones and</font>

2004
01:32:03,140 --> 01:32:04,850
<font color="#E5E5E5">zeros</font><font color="#CCCCCC"> like this you'll see a single</font>

2005
01:32:04,850 --> 01:32:07,520
<font color="#CCCCCC">integer right which is like what what</font>

2006
01:32:07,520 --> 01:32:11,680
class index is it right and internally

2007
01:32:11,680 --> 01:32:15,140
inside<font color="#E5E5E5"> pipe</font><font color="#CCCCCC"> arch it will actually turn</font>

2008
01:32:15,140 --> 01:32:17,750
<font color="#CCCCCC">that into a one hot encoded vector but</font>

2009
01:32:17,750 --> 01:32:19,360
like you<font color="#E5E5E5"> will literally never see it</font>

2010
01:32:19,360 --> 01:32:23,270
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> and and</font><font color="#CCCCCC"> pi torch has different loss</font>

2011
01:32:23,270 --> 01:32:26,090
functions where<font color="#CCCCCC"> you basically</font><font color="#E5E5E5"> say this</font>

2012
01:32:26,090 --> 01:32:27,860
<font color="#E5E5E5">thing's</font><font color="#CCCCCC"> won this thing</font><font color="#E5E5E5"> is one hot</font>

2013
01:32:27,860 --> 01:32:30,050
<font color="#CCCCCC">encoder door this</font><font color="#E5E5E5"> thing is not and it</font>

2014
01:32:30,050 --> 01:32:31,810
uses<font color="#CCCCCC"> different bus functions</font>

2015
01:32:31,810 --> 01:32:34,160
that's all hidden<font color="#E5E5E5"> by the</font><font color="#CCCCCC"> faster I</font>

2016
01:32:34,160 --> 01:32:36,500
library<font color="#CCCCCC"> right so like you don't have to</font>

2017
01:32:36,500 --> 01:32:40,040
worry<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> is but the</font><font color="#E5E5E5"> the cool</font>

2018
01:32:40,040 --> 01:32:42,640
thing to<font color="#E5E5E5"> realize is that this approach</font>

2019
01:32:42,640 --> 01:32:45,350
<font color="#E5E5E5">for multi-label encoding with these ones</font>

2020
01:32:45,350 --> 01:32:48,620
and zeros behind the scenes the exact

2021
01:32:48,620 --> 01:32:51,080
same thing happens<font color="#CCCCCC"> for single level</font>

2022
01:32:51,080 --> 01:32:56,210
classification does it make sense to

2023
01:32:56,210 --> 01:32:59,000
<font color="#E5E5E5">change the beginners of the</font><font color="#CCCCCC"> sigmoid of</font>

2024
01:32:59,000 --> 01:33:00,920
<font color="#E5E5E5">the softmax function by changing the</font>

2025
01:33:00,920 --> 01:33:07,940
base<font color="#CCCCCC"> no because when you change the more</font>

2026
01:33:07,940 --> 01:33:19,450
math<font color="#CCCCCC"> log base a of</font><font color="#E5E5E5"> B equals log B over</font>

2027
01:33:19,450 --> 01:33:24,200
log<font color="#E5E5E5"> a so changing the base is</font><font color="#CCCCCC"> just a</font>

2028
01:33:24,200 --> 01:33:27,080
linear scaling and linear scaling is

2029
01:33:27,080 --> 01:33:29,670
something which<font color="#E5E5E5"> the neural net can</font>

2030
01:33:29,670 --> 01:33:33,110
with very easily

2031
01:33:35,450 --> 01:33:42,140
good question okay so<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is that image</font>

2032
01:33:42,140 --> 01:33:44,250
right<font color="#CCCCCC"> here is</font><font color="#E5E5E5"> the image with</font>

2033
01:33:44,250 --> 01:33:47,850
<font color="#E5E5E5">slash-and-burn water etc etc one of the</font>

2034
01:33:47,850 --> 01:33:49,650
things to notice here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> like when</font><font color="#CCCCCC"> I</font>

2035
01:33:49,650 --> 01:33:54,150
first displayed this image it was so

2036
01:33:54,150 --> 01:33:56,070
washed out<font color="#CCCCCC"> I really couldn't see it</font>

2037
01:33:56,070 --> 01:34:00,420
<font color="#E5E5E5">right but remember images now you know</font>

2038
01:34:00,420 --> 01:34:02,970
we know images are just matrices<font color="#CCCCCC"> of</font>

2039
01:34:02,970 --> 01:34:04,890
numbers and so you can see here I just

2040
01:34:04,890 --> 01:34:08,670
<font color="#CCCCCC">said times</font><font color="#E5E5E5"> 1.4 just to make</font><font color="#CCCCCC"> it more</font>

2041
01:34:08,670 --> 01:34:11,580
<font color="#E5E5E5">visible right so like now that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> kind</font>

2042
01:34:11,580 --> 01:34:12,930
of it's<font color="#CCCCCC"> the kind of thing I want you</font><font color="#E5E5E5"> to</font>

2043
01:34:12,930 --> 01:34:14,820
get familiar<font color="#CCCCCC"> with is the idea that</font><font color="#E5E5E5"> this</font>

2044
01:34:14,820 --> 01:34:15,840
stuff you're dealing with

2045
01:34:15,840 --> 01:34:18,060
<font color="#CCCCCC">they're just matrices of numbers and you</font>

2046
01:34:18,060 --> 01:34:19,710
<font color="#CCCCCC">can fiddle around with them so if you're</font>

2047
01:34:19,710 --> 01:34:21,120
looking<font color="#CCCCCC"> at something like guys a bit</font>

2048
01:34:21,120 --> 01:34:22,830
washed out you can just<font color="#CCCCCC"> multiply it by</font>

2049
01:34:22,830 --> 01:34:25,920
something<font color="#CCCCCC"> to brighten it up a bit okay</font>

2050
01:34:25,920 --> 01:34:27,990
so here we<font color="#CCCCCC"> can see I guess this is the</font>

2051
01:34:27,990 --> 01:34:30,510
<font color="#E5E5E5">slash-and-burn here's the river that's</font>

2052
01:34:30,510 --> 01:34:33,300
the water<font color="#CCCCCC"> here's the primary rainforest</font>

2053
01:34:33,300 --> 01:34:35,400
maybe that's<font color="#CCCCCC"> the agriculture</font><font color="#E5E5E5"> so forth</font>

2054
01:34:35,400 --> 01:34:41,010
<font color="#E5E5E5">okay so so you know with all that</font>

2055
01:34:41,010 --> 01:34:44,300
<font color="#CCCCCC">background</font><font color="#E5E5E5"> how do we actually use this</font>

2056
01:34:44,300 --> 01:34:46,350
exactly<font color="#E5E5E5"> the same way as everything we've</font>

2057
01:34:46,350 --> 01:34:49,530
<font color="#E5E5E5">done before</font><font color="#CCCCCC"> right so you know</font><font color="#E5E5E5"> size and</font>

2058
01:34:49,530 --> 01:34:52,170
and the interesting<font color="#CCCCCC"> thing about playing</font>

2059
01:34:52,170 --> 01:34:54,270
around<font color="#E5E5E5"> with this planet competition is</font>

2060
01:34:54,270 --> 01:34:56,370
that these<font color="#CCCCCC"> images are not</font><font color="#E5E5E5"> at all like</font>

2061
01:34:56,370 --> 01:35:00,480
image there<font color="#CCCCCC"> and I would guess that the</font>

2062
01:35:00,480 --> 01:35:02,580
<font color="#E5E5E5">vast majority</font><font color="#CCCCCC"> is of stuff that the vast</font>

2063
01:35:02,580 --> 01:35:05,040
majority<font color="#CCCCCC"> of you do involving</font>

2064
01:35:05,040 --> 01:35:07,770
convolutional neural<font color="#CCCCCC"> Nets</font><font color="#E5E5E5"> won't actually</font>

2065
01:35:07,770 --> 01:35:10,110
be anything like image net you know

2066
01:35:10,110 --> 01:35:14,130
<font color="#E5E5E5">it'll be it'll be medical imaging</font><font color="#CCCCCC"> it'll</font>

2067
01:35:14,130 --> 01:35:15,870
be like classifying<font color="#CCCCCC"> different kinds of</font>

2068
01:35:15,870 --> 01:35:18,530
steel tube or figuring<font color="#E5E5E5"> out whether a</font>

2069
01:35:18,530 --> 01:35:21,300
<font color="#E5E5E5">world you know is going to break or not</font>

2070
01:35:21,300 --> 01:35:25,650
<font color="#E5E5E5">or or looking at satellite images or</font><font color="#CCCCCC"> you</font>

2071
01:35:25,650 --> 01:35:30,540
know whatever<font color="#E5E5E5"> right so it's it's good to</font>

2072
01:35:30,540 --> 01:35:32,690
experiment with stuff<font color="#E5E5E5"> like this planet</font>

2073
01:35:32,690 --> 01:35:35,190
<font color="#E5E5E5">competition to get a sense of kind of</font>

2074
01:35:35,190 --> 01:35:37,170
what<font color="#E5E5E5"> you want to do and so you'll</font><font color="#CCCCCC"> see</font>

2075
01:35:37,170 --> 01:35:40,440
here<font color="#CCCCCC"> I start out by resizing my data</font><font color="#E5E5E5"> to</font>

2076
01:35:40,440 --> 01:35:44,910
<font color="#CCCCCC">64 by 64</font><font color="#E5E5E5"> it starts out at 256 by 256</font>

2077
01:35:44,910 --> 01:35:46,410
<font color="#E5E5E5">right now</font>

2078
01:35:46,410 --> 01:35:48,270
<font color="#CCCCCC">I wouldn't want to do this for the cats</font>

2079
01:35:48,270 --> 01:35:50,280
<font color="#E5E5E5">and dogs competition because it cats end</font>

2080
01:35:50,280 --> 01:35:52,620
on<font color="#E5E5E5"> competition we start with a pre</font>

2081
01:35:52,620 --> 01:35:54,360
<font color="#E5E5E5">trained</font><font color="#CCCCCC"> imagenet Network</font><font color="#E5E5E5"> it's it's</font>

2082
01:35:54,360 --> 01:35:57,030
nearly isn't it starts off<font color="#E5E5E5"> nearly</font>

2083
01:35:57,030 --> 01:36:00,060
perfect<font color="#E5E5E5"> right so if we resized</font>

2084
01:36:00,060 --> 01:36:02,070
everything to 64 by 64 and<font color="#CCCCCC"> then</font>

2085
01:36:02,070 --> 01:36:04,980
<font color="#CCCCCC">retrained the whole set regular it we'd</font>

2086
01:36:04,980 --> 01:36:07,440
basically<font color="#E5E5E5"> destroy the weights that</font><font color="#CCCCCC"> are</font>

2087
01:36:07,440 --> 01:36:09,150
already<font color="#E5E5E5"> pre trained to be</font><font color="#CCCCCC"> very good</font>

2088
01:36:09,150 --> 01:36:12,000
remember<font color="#E5E5E5"> imagenet most imagenet models</font>

2089
01:36:12,000 --> 01:36:14,400
are trained at either<font color="#E5E5E5"> 224 by 224 or</font>

2090
01:36:14,400 --> 01:36:17,760
<font color="#CCCCCC">$2.99</font><font color="#E5E5E5"> by 299 all right so if we</font><font color="#CCCCCC"> like</font>

2091
01:36:17,760 --> 01:36:20,220
retrain them at 64 by 64<font color="#CCCCCC"> we're going to</font>

2092
01:36:20,220 --> 01:36:23,480
we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to kill it</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the other hand</font>

2093
01:36:23,480 --> 01:36:25,920
<font color="#E5E5E5">there's nothing in image net that looks</font>

2094
01:36:25,920 --> 01:36:28,050
anything like this you know there's no

2095
01:36:28,050 --> 01:36:31,260
satellite images so the only<font color="#CCCCCC"> useful bits</font>

2096
01:36:31,260 --> 01:36:36,030
of the image net<font color="#E5E5E5"> Network for us are kind</font>

2097
01:36:36,030 --> 01:36:39,870
<font color="#E5E5E5">of layers like this one you know finding</font>

2098
01:36:39,870 --> 01:36:42,810
edges and gradients<font color="#E5E5E5"> and this one you</font>

2099
01:36:42,810 --> 01:36:44,460
know finding kind of textures<font color="#CCCCCC"> and</font>

2100
01:36:44,460 --> 01:36:48,090
repeating patterns and maybe<font color="#E5E5E5"> these ones</font>

2101
01:36:48,090 --> 01:36:49,890
are kind of<font color="#E5E5E5"> finding more complex</font>

2102
01:36:49,890 --> 01:36:52,550
<font color="#E5E5E5">textures but that's probably about it</font>

2103
01:36:52,550 --> 01:36:57,530
<font color="#E5E5E5">right so so in other words you know</font>

2104
01:36:57,530 --> 01:37:00,210
starting<font color="#E5E5E5"> out by training very small</font>

2105
01:37:00,210 --> 01:37:02,850
images<font color="#E5E5E5"> works pretty</font><font color="#CCCCCC"> well when you're</font>

2106
01:37:02,850 --> 01:37:04,920
using stuff like satellites<font color="#E5E5E5"> so in this</font>

2107
01:37:04,920 --> 01:37:07,460
case I started right back at 64 by 64

2108
01:37:07,460 --> 01:37:13,410
<font color="#CCCCCC">grab some data built</font><font color="#E5E5E5"> my model</font><font color="#CCCCCC"> found out</font>

2109
01:37:13,410 --> 01:37:15,780
<font color="#E5E5E5">what learning rate to use and</font>

2110
01:37:15,780 --> 01:37:17,280
interestingly it turned out to be quite

2111
01:37:17,280 --> 01:37:22,110
<font color="#E5E5E5">high</font><font color="#CCCCCC"> it seems</font><font color="#E5E5E5"> that because like it's so</font>

2112
01:37:22,110 --> 01:37:25,920
unlike<font color="#CCCCCC"> imagenet I needed to do quite a</font>

2113
01:37:25,920 --> 01:37:28,140
bit<font color="#CCCCCC"> more</font><font color="#E5E5E5"> fitting with just that last</font>

2114
01:37:28,140 --> 01:37:30,390
layer<font color="#CCCCCC"> before it started to flatten out</font>

2115
01:37:30,390 --> 01:37:33,510
then<font color="#CCCCCC"> I unfreeze dit</font><font color="#E5E5E5"> and again this is</font>

2116
01:37:33,510 --> 01:37:38,090
<font color="#E5E5E5">the difference</font><font color="#CCCCCC"> to image net like</font>

2117
01:37:38,090 --> 01:37:41,070
<font color="#CCCCCC">datasets</font><font color="#E5E5E5"> is my learning rate in the</font>

2118
01:37:41,070 --> 01:37:44,190
initial layer<font color="#E5E5E5"> i set 2/9</font><font color="#CCCCCC"> the middle</font>

2119
01:37:44,190 --> 01:37:47,190
<font color="#E5E5E5">layers I said 2/3 where else for stuff</font>

2120
01:37:47,190 --> 01:37:48,930
like<font color="#E5E5E5"> it's like</font><font color="#CCCCCC"> image net</font><font color="#E5E5E5"> I had a</font>

2121
01:37:48,930 --> 01:37:52,410
multiple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> each of those you know</font>

2122
01:37:52,410 --> 01:37:54,780
<font color="#E5E5E5">again the idea being that that earlier</font>

2123
01:37:54,780 --> 01:37:58,140
layers probably and not as close<font color="#E5E5E5"> to what</font>

2124
01:37:58,140 --> 01:38:00,500
they need<font color="#E5E5E5"> to be compared to the</font>

2125
01:38:00,500 --> 01:38:04,620
<font color="#CCCCCC">like</font><font color="#E5E5E5"> dances again</font>

2126
01:38:04,620 --> 01:38:08,160
unfreeze<font color="#CCCCCC"> train</font><font color="#E5E5E5"> for a while</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can</font>

2127
01:38:08,160 --> 01:38:09,120
kind of see here

2128
01:38:09,120 --> 01:38:11,790
you know there's cycle<font color="#CCCCCC"> one there's cycle</font>

2129
01:38:11,790 --> 01:38:14,820
- there's cycle<font color="#E5E5E5"> three</font><font color="#CCCCCC"> and then I kind of</font>

2130
01:38:14,820 --> 01:38:18,440
increased<font color="#E5E5E5"> double the</font><font color="#CCCCCC"> size with my images</font>

2131
01:38:18,440 --> 01:38:21,840
<font color="#CCCCCC">fit for a while</font><font color="#E5E5E5"> and freeze fit for a</font>

2132
01:38:21,840 --> 01:38:23,220
while<font color="#E5E5E5"> double the</font><font color="#CCCCCC"> size of</font><font color="#E5E5E5"> the images</font>

2133
01:38:23,220 --> 01:38:25,950
<font color="#CCCCCC">again</font><font color="#E5E5E5"> fit for a while I'm</font><font color="#CCCCCC"> freeze for a</font>

2134
01:38:25,950 --> 01:38:28,740
while<font color="#CCCCCC"> and then add</font><font color="#E5E5E5"> TTA</font><font color="#CCCCCC"> and so as I</font>

2135
01:38:28,740 --> 01:38:30,090
mentioned<font color="#CCCCCC"> last time</font><font color="#E5E5E5"> we looked at this</font>

2136
01:38:30,090 --> 01:38:32,940
this process<font color="#CCCCCC"> ends up you know getting</font><font color="#E5E5E5"> us</font>

2137
01:38:32,940 --> 01:38:35,300
about 30th place<font color="#E5E5E5"> in this competition</font>

2138
01:38:35,300 --> 01:38:38,100
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> really cool because people you</font>

2139
01:38:38,100 --> 01:38:39,440
know a lot<font color="#CCCCCC"> of very very smart people</font>

2140
01:38:39,440 --> 01:38:42,150
just a few<font color="#E5E5E5"> months ago worked very very</font>

2141
01:38:42,150 --> 01:38:46,830
hard on<font color="#CCCCCC"> this competition a couple of</font>

2142
01:38:46,830 --> 01:38:51,140
things<font color="#CCCCCC"> people</font><font color="#E5E5E5"> have asked about one is</font>

2143
01:38:51,200 --> 01:38:57,420
what is this data dot resize do so a

2144
01:38:57,420 --> 01:38:59,160
couple<font color="#CCCCCC"> of different pieces</font><font color="#E5E5E5"> here the</font>

2145
01:38:59,160 --> 01:39:05,520
first is<font color="#E5E5E5"> that when we say back here what</font>

2146
01:39:05,520 --> 01:39:07,650
transforms<font color="#CCCCCC"> do we apply</font><font color="#E5E5E5"> and here's our</font>

2147
01:39:07,650 --> 01:39:10,080
transforms we actually pass in a size

2148
01:39:10,080 --> 01:39:12,810
<font color="#CCCCCC">right so one of the things that that</font><font color="#E5E5E5"> one</font>

2149
01:39:12,810 --> 01:39:14,520
<font color="#CCCCCC">of the things that</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> loaded does is</font>

2150
01:39:14,520 --> 01:39:17,130
to resize the images like<font color="#CCCCCC"> on-demand</font>

2151
01:39:17,130 --> 01:39:20,300
<font color="#E5E5E5">every time it sees them</font>

2152
01:39:21,510 --> 01:39:22,980
it's got nothing<font color="#CCCCCC"> to do with that</font><font color="#E5E5E5"> dot</font>

2153
01:39:22,980 --> 01:39:25,710
<font color="#E5E5E5">resize method right so this is</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

2154
01:39:25,710 --> 01:39:27,239
the thing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> happens at the end like</font>

2155
01:39:27,239 --> 01:39:29,699
<font color="#CCCCCC">whatever's passed in before it hits out</font>

2156
01:39:29,699 --> 01:39:31,380
that<font color="#E5E5E5"> before our data loader spits it out</font>

2157
01:39:31,380 --> 01:39:35,099
it's going<font color="#E5E5E5"> to resize</font><font color="#CCCCCC"> it to</font><font color="#E5E5E5"> this size if</font>

2158
01:39:35,099 --> 01:39:38,550
the initial<font color="#CCCCCC"> input is like a thousand by</font>

2159
01:39:38,550 --> 01:39:41,659
a thousand reading that<font color="#E5E5E5"> JPEG and</font>

2160
01:39:41,659 --> 01:39:45,989
resizing it to 64 by 64<font color="#CCCCCC"> turns out to</font>

2161
01:39:45,989 --> 01:39:48,420
<font color="#E5E5E5">actually take more time than</font><font color="#CCCCCC"> training</font>

2162
01:39:48,420 --> 01:39:51,300
<font color="#E5E5E5">the</font><font color="#CCCCCC"> content</font><font color="#E5E5E5"> that's for each batch</font><font color="#CCCCCC"> all</font>

2163
01:39:51,300 --> 01:39:55,079
<font color="#E5E5E5">right so basically</font><font color="#CCCCCC"> all resize does is it</font>

2164
01:39:55,079 --> 01:39:57,150
says hey I'm not<font color="#E5E5E5"> going to be using any</font>

2165
01:39:57,150 --> 01:40:01,320
images bigger than size times 1.3 so

2166
01:40:01,320 --> 01:40:03,389
just grow through once and<font color="#E5E5E5"> create new</font>

2167
01:40:03,389 --> 01:40:08,400
JPEGs<font color="#E5E5E5"> of this size right and</font><font color="#CCCCCC"> they're</font>

2168
01:40:08,400 --> 01:40:10,590
rectangular<font color="#E5E5E5"> right so new JPEGs where the</font>

2169
01:40:10,590 --> 01:40:14,070
smallest<font color="#CCCCCC"> edges</font><font color="#E5E5E5"> of this size and</font><font color="#CCCCCC"> again</font>

2170
01:40:14,070 --> 01:40:16,170
it's like<font color="#E5E5E5"> you never have to do this</font>

2171
01:40:16,170 --> 01:40:19,079
<font color="#E5E5E5">there's no reason to ever use it if you</font>

2172
01:40:19,079 --> 01:40:21,389
don't<font color="#CCCCCC"> want to it's just a speed-up</font><font color="#E5E5E5"> okay</font>

2173
01:40:21,389 --> 01:40:23,280
<font color="#E5E5E5">but if you've got</font><font color="#CCCCCC"> really big images</font>

2174
01:40:23,280 --> 01:40:25,289
coming<font color="#E5E5E5"> in it saves you a lot</font><font color="#CCCCCC"> of time</font><font color="#E5E5E5"> and</font>

2175
01:40:25,289 --> 01:40:27,300
you'll often see on<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Carol kernels</font>

2176
01:40:27,300 --> 01:40:30,389
or forum posts or<font color="#E5E5E5"> whatever people will</font>

2177
01:40:30,389 --> 01:40:34,409
have like bash<font color="#CCCCCC"> script</font><font color="#E5E5E5"> stuff like that -</font>

2178
01:40:34,409 --> 01:40:36,809
like loop through and<font color="#E5E5E5"> resize images to</font>

2179
01:40:36,809 --> 01:40:38,519
save time you<font color="#CCCCCC"> never have to do that</font>

2180
01:40:38,519 --> 01:40:40,440
<font color="#CCCCCC">right just you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> just say dot resize</font>

2181
01:40:40,440 --> 01:40:44,219
and it'll just create you know<font color="#CCCCCC"> once-off</font>

2182
01:40:44,219 --> 01:40:46,139
<font color="#E5E5E5">it'll go through and create that if it's</font>

2183
01:40:46,139 --> 01:40:48,389
already<font color="#E5E5E5"> there and it'll use the</font>

2184
01:40:48,389 --> 01:40:51,000
criticized ones for you<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so it's</font>

2185
01:40:51,000 --> 01:40:53,880
just<font color="#E5E5E5"> it's just a speed up convenience</font>

2186
01:40:53,880 --> 01:41:00,420
function no<font color="#E5E5E5"> more okay so</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> of</font>

2187
01:41:00,420 --> 01:41:05,119
<font color="#E5E5E5">you that are kind of</font><font color="#CCCCCC"> past</font><font color="#E5E5E5"> dog breeds</font><font color="#CCCCCC"> I</font>

2188
01:41:05,119 --> 01:41:09,210
would be looking at<font color="#E5E5E5"> planet next you know</font>

2189
01:41:09,210 --> 01:41:13,980
like<font color="#E5E5E5"> try</font><font color="#CCCCCC"> it like play around with with</font>

2190
01:41:13,980 --> 01:41:15,840
trying to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> a sense of</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> how can</font>

2191
01:41:15,840 --> 01:41:19,170
<font color="#E5E5E5">you get this as an accurate</font><font color="#CCCCCC"> model one</font>

2192
01:41:19,170 --> 01:41:20,429
thing to mention and I'm not really

2193
01:41:20,429 --> 01:41:21,840
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to go into it in</font><font color="#E5E5E5"> details there's</font>

2194
01:41:21,840 --> 01:41:22,800
nothing to do with deep learning

2195
01:41:22,800 --> 01:41:24,900
particularly<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> I'm using a</font>

2196
01:41:24,900 --> 01:41:26,880
different<font color="#CCCCCC"> metric I didn't use metrics</font>

2197
01:41:26,880 --> 01:41:29,940
<font color="#E5E5E5">equals accuracy but</font><font color="#CCCCCC"> I said metrics</font>

2198
01:41:29,940 --> 01:41:32,570
equals<font color="#CCCCCC"> f2</font>

2199
01:41:33,980 --> 01:41:37,160
remember from<font color="#E5E5E5"> last week that confusion</font>

2200
01:41:37,160 --> 01:41:39,400
matrix<font color="#E5E5E5"> that like</font><font color="#CCCCCC"> two by two you</font><font color="#E5E5E5"> know</font>

2201
01:41:39,400 --> 01:41:41,930
<font color="#E5E5E5">correct incorrect for each of dogs and</font>

2202
01:41:41,930 --> 01:41:47,090
<font color="#E5E5E5">cats</font><font color="#CCCCCC"> there's a lot of different</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> you</font>

2203
01:41:47,090 --> 01:41:48,770
could turn<font color="#CCCCCC"> that confusion</font><font color="#E5E5E5"> matrix into a</font>

2204
01:41:48,770 --> 01:41:51,140
score you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> do you care more about</font>

2205
01:41:51,140 --> 01:41:52,730
false negatives or do you care<font color="#E5E5E5"> more</font>

2206
01:41:52,730 --> 01:41:54,260
about false positives<font color="#CCCCCC"> and how do you</font>

2207
01:41:54,260 --> 01:41:55,730
<font color="#CCCCCC">weight them and how do you combine</font><font color="#E5E5E5"> them</font>

2208
01:41:55,730 --> 01:41:59,390
together right<font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> basic there's</font>

2209
01:41:59,390 --> 01:42:02,720
basically<font color="#E5E5E5"> a</font><font color="#CCCCCC"> function called F</font><font color="#E5E5E5"> beta where</font>

2210
01:42:02,720 --> 01:42:04,370
the beta says how much do you weight

2211
01:42:04,370 --> 01:42:06,170
false negatives versus false positives

2212
01:42:06,170 --> 01:42:11,540
and so f 2 is<font color="#E5E5E5"> f beta with beta equals 2</font>

2213
01:42:11,540 --> 01:42:13,730
and it's basically as particular<font color="#CCCCCC"> way of</font>

2214
01:42:13,730 --> 01:42:15,140
weighting false negatives<font color="#E5E5E5"> and false</font>

2215
01:42:15,140 --> 01:42:17,239
positives<font color="#CCCCCC"> and the reason we use it is</font>

2216
01:42:17,239 --> 01:42:19,700
because<font color="#CCCCCC"> cattle told us that planet</font><font color="#E5E5E5"> who</font>

2217
01:42:19,700 --> 01:42:21,739
<font color="#E5E5E5">are running this competition wanted to</font>

2218
01:42:21,739 --> 01:42:26,090
use this particular<font color="#E5E5E5"> F beta metric the</font>

2219
01:42:26,090 --> 01:42:28,730
important thing for<font color="#CCCCCC"> you to know</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

2220
01:42:28,730 --> 01:42:32,060
you can create custom metrics<font color="#CCCCCC"> so in this</font>

2221
01:42:32,060 --> 01:42:33,110
case you can see here it<font color="#CCCCCC"> says from</font>

2222
01:42:33,110 --> 01:42:35,930
<font color="#CCCCCC">Planet import f2 and really I've got</font>

2223
01:42:35,930 --> 01:42:38,120
<font color="#CCCCCC">this here so that you can see how to do</font>

2224
01:42:38,120 --> 01:42:43,790
<font color="#E5E5E5">it right so if you look</font><font color="#CCCCCC"> inside courses</font>

2225
01:42:43,790 --> 01:42:47,270
DL<font color="#CCCCCC"> 1 you can see there's something</font>

2226
01:42:47,270 --> 01:42:51,800
<font color="#E5E5E5">called planet</font><font color="#CCCCCC"> py right</font><font color="#E5E5E5"> and so if I</font><font color="#CCCCCC"> look</font>

2227
01:42:51,800 --> 01:42:55,540
<font color="#E5E5E5">at planet py you'll see there's a</font>

2228
01:42:55,540 --> 01:42:57,320
function there called

2229
01:42:57,320 --> 01:43:03,800
<font color="#E5E5E5">f2 right and so f2 simply calls F beta</font>

2230
01:43:03,800 --> 01:43:08,690
score<font color="#E5E5E5"> from psychic or</font><font color="#CCCCCC"> side PI and patent</font>

2231
01:43:08,690 --> 01:43:12,290
where it came from<font color="#CCCCCC"> and does a couple</font>

2232
01:43:12,290 --> 01:43:13,400
little tweets that<font color="#E5E5E5"> are particularly</font>

2233
01:43:13,400 --> 01:43:17,239
important<font color="#E5E5E5"> but the important thing is</font>

2234
01:43:17,239 --> 01:43:19,340
<font color="#E5E5E5">like you can write any metric you like</font>

2235
01:43:19,340 --> 01:43:23,030
right<font color="#E5E5E5"> as long as it takes in set of</font>

2236
01:43:23,030 --> 01:43:25,970
<font color="#CCCCCC">predictions and a set of</font><font color="#E5E5E5"> targets and</font>

2237
01:43:25,970 --> 01:43:27,980
<font color="#CCCCCC">they're both going to be numpy arrays</font>

2238
01:43:27,980 --> 01:43:30,530
<font color="#CCCCCC">one</font><font color="#E5E5E5"> dimensional</font><font color="#CCCCCC"> non pyros and then you</font>

2239
01:43:30,530 --> 01:43:33,380
return<font color="#CCCCCC"> back a number</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and so as long</font>

2240
01:43:33,380 --> 01:43:35,260
<font color="#CCCCCC">as</font><font color="#E5E5E5"> you put a function</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> takes</font><font color="#CCCCCC"> two</font>

2241
01:43:35,260 --> 01:43:38,930
vectors and returns<font color="#CCCCCC"> at number you can</font>

2242
01:43:38,930 --> 01:43:41,810
call it as a metric and so then when we

2243
01:43:41,810 --> 01:43:44,290
said

2244
01:43:46,710 --> 01:43:52,510
see here learn<font color="#E5E5E5"> metrics equals and then</font>

2245
01:43:52,510 --> 01:43:54,490
<font color="#CCCCCC">past</font><font color="#E5E5E5"> in that array which just contains a</font>

2246
01:43:54,490 --> 01:43:57,070
<font color="#CCCCCC">single function f2</font><font color="#E5E5E5"> then it's just going</font>

2247
01:43:57,070 --> 01:44:00,580
<font color="#E5E5E5">to be printed out after every for you</font>

2248
01:44:00,580 --> 01:44:03,430
<font color="#E5E5E5">okay so in</font><font color="#CCCCCC"> general like the the faster I</font>

2249
01:44:03,430 --> 01:44:06,970
library everything is customizable<font color="#CCCCCC"> so</font>

2250
01:44:06,970 --> 01:44:11,580
kind<font color="#E5E5E5"> of the idea is</font><font color="#CCCCCC"> that everything is</font>

2251
01:44:11,580 --> 01:44:15,940
<font color="#E5E5E5">everything is kind of gives you what you</font>

2252
01:44:15,940 --> 01:44:18,520
<font color="#E5E5E5">might want by default</font><font color="#CCCCCC"> but also</font>

2253
01:44:18,520 --> 01:44:23,170
everything<font color="#CCCCCC"> can be changed</font><font color="#E5E5E5"> as well yes</font>

2254
01:44:23,170 --> 01:44:26,470
you know um<font color="#E5E5E5"> we have a</font><font color="#CCCCCC"> little confusion</font>

2255
01:44:26,470 --> 01:44:30,010
about the<font color="#CCCCCC"> difference between</font><font color="#E5E5E5"> multi-label</font>

2256
01:44:30,010 --> 01:44:32,890
<font color="#E5E5E5">and a single label</font><font color="#CCCCCC"> uh-huh</font>

2257
01:44:32,890 --> 01:44:34,930
the<font color="#CCCCCC"> vanish as an example</font><font color="#E5E5E5"> in which</font>

2258
01:44:34,930 --> 01:44:38,140
compared<font color="#CCCCCC"> like similarly the example they</font>

2259
01:44:38,140 --> 01:44:42,970
just show us<font color="#E5E5E5"> ah activation function</font><font color="#CCCCCC"> yeah</font>

2260
01:44:42,970 --> 01:44:47,080
<font color="#E5E5E5">so so I'm so sorry</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> said</font><font color="#CCCCCC"> I'd do that</font>

2261
01:44:47,080 --> 01:44:49,690
then I<font color="#E5E5E5"> didn't so the activation the</font>

2262
01:44:49,690 --> 01:44:52,180
output activation function for<font color="#CCCCCC"> a single</font>

2263
01:44:52,180 --> 01:44:55,330
<font color="#CCCCCC">label classification is softmax</font><font color="#E5E5E5"> but all</font>

2264
01:44:55,330 --> 01:44:58,390
the reasons<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> talked today but if</font>

2265
01:44:58,390 --> 01:45:00,100
we were trying<font color="#CCCCCC"> to predict something that</font>

2266
01:45:00,100 --> 01:45:05,350
was like<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> 1 1</font><font color="#CCCCCC"> 0 then softmax would be</font>

2267
01:45:05,350 --> 01:45:07,060
a terrible choice because it's<font color="#CCCCCC"> very hard</font>

2268
01:45:07,060 --> 01:45:09,100
to<font color="#E5E5E5"> come up with</font><font color="#CCCCCC"> something where both of</font>

2269
01:45:09,100 --> 01:45:11,470
<font color="#CCCCCC">these are high</font><font color="#E5E5E5"> in fact it's</font><font color="#CCCCCC"> impossible</font>

2270
01:45:11,470 --> 01:45:13,510
<font color="#E5E5E5">because</font><font color="#CCCCCC"> they have to add up to 1</font><font color="#E5E5E5"> so the</font>

2271
01:45:13,510 --> 01:45:15,450
closest<font color="#CCCCCC"> they could be would be point 5</font>

2272
01:45:15,450 --> 01:45:19,690
so for multi-label classification<font color="#CCCCCC"> our</font>

2273
01:45:19,690 --> 01:45:23,650
<font color="#E5E5E5">activation function is called sigmoid</font><font color="#CCCCCC"> ok</font>

2274
01:45:23,650 --> 01:45:26,530
and again<font color="#E5E5E5"> the faster library does this</font>

2275
01:45:26,530 --> 01:45:28,690
automatically for<font color="#E5E5E5"> you if it notices you</font>

2276
01:45:28,690 --> 01:45:32,170
have a multi label<font color="#E5E5E5"> problem and it does</font>

2277
01:45:32,170 --> 01:45:34,210
that by checking<font color="#E5E5E5"> your data</font><font color="#CCCCCC"> tip to</font><font color="#E5E5E5"> see if</font>

2278
01:45:34,210 --> 01:45:36,430
anything has more than one label<font color="#E5E5E5"> applied</font>

2279
01:45:36,430 --> 01:45:40,870
to it and so sigmoid is<font color="#E5E5E5"> a function which</font>

2280
01:45:40,870 --> 01:45:44,350
is<font color="#CCCCCC"> equal to</font><font color="#E5E5E5"> it's basically the same</font>

2281
01:45:44,350 --> 01:45:48,240
<font color="#E5E5E5">thing except rather than we never add</font><font color="#CCCCCC"> up</font>

2282
01:45:48,240 --> 01:45:52,060
all of<font color="#E5E5E5"> these X but instead we just take</font>

2283
01:45:52,060 --> 01:45:55,170
this X when we say it's just equal<font color="#CCCCCC"> to it</font>

2284
01:45:55,170 --> 01:45:59,829
divided<font color="#E5E5E5"> by</font><font color="#CCCCCC"> one plus</font>

2285
01:45:59,829 --> 01:46:05,119
it and<font color="#E5E5E5"> so the nice</font><font color="#CCCCCC"> thing about that</font><font color="#E5E5E5"> is</font>

2286
01:46:05,119 --> 01:46:09,189
that<font color="#E5E5E5"> now like multiple things can be</font>

2287
01:46:09,189 --> 01:46:15,439
high<font color="#E5E5E5"> at once right</font><font color="#CCCCCC"> and so generally</font><font color="#E5E5E5"> then</font>

2288
01:46:15,439 --> 01:46:18,589
if something is less<font color="#CCCCCC"> than zero its</font>

2289
01:46:18,589 --> 01:46:21,229
sigmoid is<font color="#E5E5E5"> going to be less than 0.5</font><font color="#CCCCCC"> if</font>

2290
01:46:21,229 --> 01:46:23,089
it's greater than<font color="#CCCCCC"> zero is signal it's</font>

2291
01:46:23,089 --> 01:46:26,300
going<font color="#CCCCCC"> to be greater than</font><font color="#E5E5E5"> 0.5</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so the</font>

2292
01:46:26,300 --> 01:46:27,949
important thing<font color="#CCCCCC"> to know about a sigmoid</font>

2293
01:46:27,949 --> 01:46:34,570
function is that<font color="#E5E5E5"> its shape is</font>

2294
01:46:36,050 --> 01:46:39,710
something which asymptotes at the top<font color="#E5E5E5"> to</font>

2295
01:46:39,710 --> 01:46:44,560
<font color="#E5E5E5">one and asymptotes drew</font>

2296
01:46:45,869 --> 01:46:52,210
asymptotes at the bottom<font color="#E5E5E5"> to zero and so</font>

2297
01:46:52,210 --> 01:46:53,440
therefore it's a<font color="#CCCCCC"> good thing to model a</font>

2298
01:46:53,440 --> 01:46:57,070
<font color="#E5E5E5">probability with anybody who has</font><font color="#CCCCCC"> done</font>

2299
01:46:57,070 --> 01:47:01,960
any logistic regression will be<font color="#E5E5E5"> familiar</font>

2300
01:47:01,960 --> 01:47:03,219
<font color="#E5E5E5">with this is what we do in logistic</font>

2301
01:47:03,219 --> 01:47:05,440
regression<font color="#CCCCCC"> so it kind of appears</font>

2302
01:47:05,440 --> 01:47:06,820
everywhere in machine learning<font color="#CCCCCC"> and</font>

2303
01:47:06,820 --> 01:47:08,949
you'll see that<font color="#E5E5E5"> kind of a sigmoid</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a</font>

2304
01:47:08,949 --> 01:47:12,840
<font color="#CCCCCC">softmax they're very close to each other</font>

2305
01:47:12,840 --> 01:47:15,880
<font color="#E5E5E5">conceptually but this is what we want is</font>

2306
01:47:15,880 --> 01:47:18,280
<font color="#E5E5E5">our activation function for multi-label</font>

2307
01:47:18,280 --> 01:47:19,869
<font color="#CCCCCC">and this is what we want the single</font>

2308
01:47:19,869 --> 01:47:22,300
<font color="#CCCCCC">label and again first AI does it all for</font>

2309
01:47:22,300 --> 01:47:22,659
<font color="#CCCCCC">you</font>

2310
01:47:22,659 --> 01:47:31,119
there was a question<font color="#CCCCCC"> over here yes I</font>

2311
01:47:31,119 --> 01:47:34,059
have a<font color="#E5E5E5"> question about the initial</font>

2312
01:47:34,059 --> 01:47:35,979
training that you do if I understand

2313
01:47:35,979 --> 01:47:39,659
<font color="#CCCCCC">correctly</font><font color="#E5E5E5"> you have we have frozen the</font>

2314
01:47:39,659 --> 01:47:42,989
<font color="#E5E5E5">the premium model and you only need</font>

2315
01:47:42,989 --> 01:47:46,679
initially try to train the latest

2316
01:47:46,679 --> 01:47:50,920
<font color="#CCCCCC">playwright right but from the other hand</font>

2317
01:47:50,920 --> 01:47:53,889
<font color="#E5E5E5">we said that only the initial layer so</font>

2318
01:47:53,889 --> 01:47:55,960
let's<font color="#CCCCCC"> last probably</font><font color="#E5E5E5"> the first layer is</font>

2319
01:47:55,960 --> 01:47:58,809
<font color="#E5E5E5">like important to us and the other two</font>

2320
01:47:58,809 --> 01:48:01,599
are more<font color="#E5E5E5"> like features that are you must</font>

2321
01:48:01,599 --> 01:48:03,400
not related and<font color="#CCCCCC"> we then</font><font color="#E5E5E5"> apply in this</font>

2322
01:48:03,400 --> 01:48:07,119
case<font color="#E5E5E5"> what that they the lie is a very</font>

2323
01:48:07,119 --> 01:48:10,840
important but<font color="#CCCCCC"> the pre-trained</font><font color="#E5E5E5"> weights in</font>

2324
01:48:10,840 --> 01:48:13,420
them aren't<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's the later layers</font>

2325
01:48:13,420 --> 01:48:16,210
that<font color="#E5E5E5"> we really want to</font><font color="#CCCCCC"> train the most so</font>

2326
01:48:16,210 --> 01:48:20,159
earlier layers<font color="#CCCCCC"> likely to</font><font color="#E5E5E5"> be like already</font>

2327
01:48:20,159 --> 01:48:23,769
<font color="#CCCCCC">closer to what we want okay so you</font>

2328
01:48:23,769 --> 01:48:25,449
<font color="#E5E5E5">started with the latest one and</font><font color="#CCCCCC"> then you</font>

2329
01:48:25,449 --> 01:48:27,519
go right so if you go back<font color="#E5E5E5"> to our quick</font>

2330
01:48:27,519 --> 01:48:31,630
dogs and cats<font color="#E5E5E5"> right</font><font color="#CCCCCC"> when we create a</font>

2331
01:48:31,630 --> 01:48:33,820
model<font color="#E5E5E5"> from</font><font color="#CCCCCC"> pre train</font><font color="#E5E5E5"> from a pre train</font>

2332
01:48:33,820 --> 01:48:36,190
<font color="#E5E5E5">model it returns</font><font color="#CCCCCC"> something where</font><font color="#E5E5E5"> all of</font>

2333
01:48:36,190 --> 01:48:38,280
the convolutional layers are<font color="#CCCCCC"> frozen and</font>

2334
01:48:38,280 --> 01:48:42,969
some randomly<font color="#E5E5E5"> set fully connected layers</font>

2335
01:48:42,969 --> 01:48:46,329
we add to the end<font color="#E5E5E5"> our unfrozen and so</font>

2336
01:48:46,329 --> 01:48:50,309
when we go fit at first it just trains

2337
01:48:50,309 --> 01:48:53,920
the randomly set<font color="#CCCCCC"> a randomly initialized</font>

2338
01:48:53,920 --> 01:48:56,920
<font color="#E5E5E5">fully connected letters right</font>

2339
01:48:56,920 --> 01:48:59,739
and if<font color="#E5E5E5"> something is like really close to</font>

2340
01:48:59,739 --> 01:49:02,530
imagenet<font color="#E5E5E5"> that's often all we need</font>

2341
01:49:02,530 --> 01:49:04,330
but because the<font color="#CCCCCC"> early early layers are</font>

2342
01:49:04,330 --> 01:49:08,380
already good at finding edges gradients

2343
01:49:08,380 --> 01:49:11,949
repeating patterns for ears and dogs

2344
01:49:11,949 --> 01:49:16,830
heads<font color="#E5E5E5"> you know so then when we unfreeze</font>

2345
01:49:16,830 --> 01:49:19,570
<font color="#E5E5E5">we set the learning rates for the early</font>

2346
01:49:19,570 --> 01:49:22,960
layers to<font color="#E5E5E5"> be really low because we don't</font>

2347
01:49:22,960 --> 01:49:25,030
<font color="#E5E5E5">want to change the mesh for us the later</font>

2348
01:49:25,030 --> 01:49:28,270
ones we set them to be higher<font color="#CCCCCC"> where else</font>

2349
01:49:28,270 --> 01:49:32,830
for satellite data<font color="#E5E5E5"> right this is no</font>

2350
01:49:32,830 --> 01:49:34,690
longer<font color="#E5E5E5"> true</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> the early layers</font>

2351
01:49:34,690 --> 01:49:37,420
are still like better than<font color="#E5E5E5"> the later</font>

2352
01:49:37,420 --> 01:49:40,420
layers<font color="#E5E5E5"> but we still probably need to</font>

2353
01:49:40,420 --> 01:49:42,730
<font color="#E5E5E5">change them quite a bit</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> right</font>

2354
01:49:42,730 --> 01:49:45,460
<font color="#E5E5E5">this learning rate is</font><font color="#CCCCCC"> nine times smaller</font>

2355
01:49:45,460 --> 01:49:48,280
than the<font color="#E5E5E5"> final learning rate rather than</font>

2356
01:49:48,280 --> 01:49:52,150
a thousand<font color="#E5E5E5"> times smaller</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> final</font><font color="#CCCCCC"> loan</font>

2357
01:49:52,150 --> 01:49:55,870
<font color="#E5E5E5">rate okay</font><font color="#CCCCCC"> you play</font><font color="#E5E5E5"> with with the weights</font>

2358
01:49:55,870 --> 01:50:00,219
of the<font color="#E5E5E5"> layers yeah normally most of the</font>

2359
01:50:00,219 --> 01:50:01,810
stuff<font color="#E5E5E5"> you see online if they</font><font color="#CCCCCC"> talk about</font>

2360
01:50:01,810 --> 01:50:03,989
<font color="#E5E5E5">this at all they'll talk about</font>

2361
01:50:03,989 --> 01:50:07,300
<font color="#E5E5E5">unfreezing different subsets of layers</font>

2362
01:50:07,300 --> 01:50:10,780
<font color="#CCCCCC">and indeed we do unfreeze our randomly</font>

2363
01:50:10,780 --> 01:50:13,960
generated<font color="#E5E5E5"> runs but what I found is</font>

2364
01:50:13,960 --> 01:50:16,030
<font color="#E5E5E5">although the first layer library you can</font>

2365
01:50:16,030 --> 01:50:18,250
type learn<font color="#E5E5E5"> dot freeze</font><font color="#CCCCCC"> too and just</font>

2366
01:50:18,250 --> 01:50:20,949
freeze a subset of layers this<font color="#E5E5E5"> approach</font>

2367
01:50:20,949 --> 01:50:22,449
<font color="#CCCCCC">of using differential learning rates</font>

2368
01:50:22,449 --> 01:50:26,350
seems to<font color="#E5E5E5"> be like more flexible to</font><font color="#CCCCCC"> the</font>

2369
01:50:26,350 --> 01:50:28,179
point that I never find myself<font color="#E5E5E5"> I'm</font>

2370
01:50:28,179 --> 01:50:32,380
<font color="#E5E5E5">freezing subsets of layers</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> would</font>

2371
01:50:32,380 --> 01:50:34,960
expect<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to start with that with a</font>

2372
01:50:34,960 --> 01:50:37,900
different cell the different learning

2373
01:50:37,900 --> 01:50:40,270
<font color="#E5E5E5">rates rather than trying to learn the</font>

2374
01:50:40,270 --> 01:50:43,090
last<font color="#E5E5E5"> layer</font><font color="#CCCCCC"> so the reason</font><font color="#E5E5E5"> okay so you</font>

2375
01:50:43,090 --> 01:50:48,190
could<font color="#E5E5E5"> skip this training just the last</font>

2376
01:50:48,190 --> 01:50:49,719
layers and just<font color="#CCCCCC"> go straight to</font>

2377
01:50:49,719 --> 01:50:52,090
differential learning rates<font color="#E5E5E5"> but you</font>

2378
01:50:52,090 --> 01:50:53,890
<font color="#E5E5E5">probably don't want to</font><font color="#CCCCCC"> and the reason</font>

2379
01:50:53,890 --> 01:50:55,510
you probably<font color="#E5E5E5"> don't want to is</font><font color="#CCCCCC"> that</font>

2380
01:50:55,510 --> 01:50:57,610
there's a<font color="#E5E5E5"> difference the convolutional</font>

2381
01:50:57,610 --> 01:51:00,910
layers<font color="#E5E5E5"> all contain pre-trained weights</font>

2382
01:51:00,910 --> 01:51:03,910
<font color="#E5E5E5">so they're like they're not random</font><font color="#CCCCCC"> for</font>

2383
01:51:03,910 --> 01:51:05,290
things that are close to<font color="#CCCCCC"> imagenet</font>

2384
01:51:05,290 --> 01:51:07,060
they're actually really<font color="#CCCCCC"> good for things</font>

2385
01:51:07,060 --> 01:51:09,190
<font color="#E5E5E5">that are not</font><font color="#CCCCCC"> close to imagenet they're</font>

2386
01:51:09,190 --> 01:51:10,840
better<font color="#E5E5E5"> than that</font>

2387
01:51:10,840 --> 01:51:13,250
all of our fully connected layers

2388
01:51:13,250 --> 01:51:17,420
however are totally random<font color="#E5E5E5"> so</font><font color="#CCCCCC"> therefore</font>

2389
01:51:17,420 --> 01:51:19,969
you would always want to make the fully

2390
01:51:19,969 --> 01:51:21,980
connected weights better than random<font color="#E5E5E5"> by</font>

2391
01:51:21,980 --> 01:51:24,050
training them a bit first<font color="#E5E5E5"> because</font>

2392
01:51:24,050 --> 01:51:26,650
otherwise if you go<font color="#CCCCCC"> straight to unfreeze</font>

2393
01:51:26,650 --> 01:51:28,840
<font color="#E5E5E5">then you're actually going to be like</font>

2394
01:51:28,840 --> 01:51:31,699
fiddling around<font color="#E5E5E5"> of those early early can</font>

2395
01:51:31,699 --> 01:51:34,369
early<font color="#CCCCCC"> layer weights when the later ones</font>

2396
01:51:34,369 --> 01:51:35,809
are<font color="#E5E5E5"> still random</font><font color="#CCCCCC"> that's probably not</font>

2397
01:51:35,809 --> 01:51:37,849
<font color="#E5E5E5">what you want I think that's another</font>

2398
01:51:37,849 --> 01:51:41,900
question<font color="#E5E5E5"> here</font><font color="#CCCCCC"> any possible so when we</font>

2399
01:51:41,900 --> 01:51:46,909
unfreeze<font color="#E5E5E5"> what</font><font color="#CCCCCC"> are the things we're</font>

2400
01:51:46,909 --> 01:51:50,119
<font color="#E5E5E5">trying to change there</font><font color="#CCCCCC"> will it change</font>

2401
01:51:50,119 --> 01:51:54,349
<font color="#E5E5E5">the Colonel's themselves that that's</font>

2402
01:51:54,349 --> 01:51:57,860
always what SGD does yeah<font color="#CCCCCC"> so the only</font>

2403
01:51:57,860 --> 01:52:02,869
thing what<font color="#E5E5E5"> training means is setting</font>

2404
01:52:02,869 --> 01:52:09,619
these numbers right<font color="#CCCCCC"> and these numbers</font>

2405
01:52:09,619 --> 01:52:18,139
<font color="#E5E5E5">and these numbers</font><font color="#CCCCCC"> the weights</font><font color="#E5E5E5"> so the</font>

2406
01:52:18,139 --> 01:52:19,699
weights are the<font color="#E5E5E5"> weights of the fully</font>

2407
01:52:19,699 --> 01:52:22,460
connected layers and the weights in

2408
01:52:22,460 --> 01:52:24,320
those<font color="#CCCCCC"> kernels and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> convolutions</font><font color="#E5E5E5"> so</font>

2409
01:52:24,320 --> 01:52:27,469
that's what training means it's<font color="#E5E5E5"> and</font>

2410
01:52:27,469 --> 01:52:29,750
we'll learn<font color="#CCCCCC"> about</font><font color="#E5E5E5"> how to do it with SGD</font>

2411
01:52:29,750 --> 01:52:32,059
but<font color="#E5E5E5"> training literally is setting those</font>

2412
01:52:32,059 --> 01:52:34,730
numbers these<font color="#CCCCCC"> numbers on the other hand</font>

2413
01:52:34,730 --> 01:52:38,059
are activations<font color="#E5E5E5"> they're calculated</font>

2414
01:52:38,059 --> 01:52:41,329
they're calculated from the weights and

2415
01:52:41,329 --> 01:52:44,449
<font color="#E5E5E5">the previous layers activations or</font>

2416
01:52:44,449 --> 01:52:49,250
<font color="#CCCCCC">amounts</font><font color="#E5E5E5"> of questions so you can lift it</font>

2417
01:52:49,250 --> 01:52:51,230
<font color="#E5E5E5">up higher and speak badly</font><font color="#CCCCCC"> so in your</font>

2418
01:52:51,230 --> 01:52:52,670
<font color="#CCCCCC">example of a cheerleader set of that</font>

2419
01:52:52,670 --> 01:52:55,880
<font color="#CCCCCC">English example so</font><font color="#E5E5E5"> you start</font><font color="#CCCCCC"> with very</font>

2420
01:52:55,880 --> 01:52:58,610
<font color="#CCCCCC">small</font><font color="#E5E5E5"> size existed for yeah so does it</font>

2421
01:52:58,610 --> 01:53:00,739
literally<font color="#E5E5E5"> mean you know the model</font><font color="#CCCCCC"> takes</font>

2422
01:53:00,739 --> 01:53:03,559
a small area<font color="#E5E5E5"> from the entire image that</font>

2423
01:53:03,559 --> 01:53:08,150
is 64<font color="#E5E5E5"> bytes</font><font color="#CCCCCC"> so how do we get that 64 by</font>

2424
01:53:08,150 --> 01:53:13,489
64<font color="#E5E5E5"> depends on the transforms by default</font>

2425
01:53:13,489 --> 01:53:18,019
<font color="#E5E5E5">our transform takes the smallest edge</font>

2426
01:53:18,019 --> 01:53:22,269
and recites the whole<font color="#E5E5E5"> thing out</font>

2427
01:53:22,269 --> 01:53:24,070
samples it so the smallest<font color="#E5E5E5"> edge is</font>

2428
01:53:24,070 --> 01:53:27,010
<font color="#CCCCCC">societics t4 and then</font><font color="#E5E5E5"> it takes a</font><font color="#CCCCCC"> Center</font>

2429
01:53:27,010 --> 01:53:29,829
crop of that<font color="#E5E5E5"> okay</font>

2430
01:53:29,829 --> 01:53:33,099
although when we're<font color="#E5E5E5"> using data</font>

2431
01:53:33,099 --> 01:53:35,559
augmentation<font color="#CCCCCC"> it actually takes a</font>

2432
01:53:35,559 --> 01:53:40,539
randomly chosen<font color="#E5E5E5"> prop</font><font color="#CCCCCC"> ie the case where</font>

2433
01:53:40,539 --> 01:53:43,030
the image<font color="#E5E5E5"> ties to multiple objects</font><font color="#CCCCCC"> don't</font>

2434
01:53:43,030 --> 01:53:46,780
<font color="#E5E5E5">in this case like would it be</font><font color="#CCCCCC"> possible</font>

2435
01:53:46,780 --> 01:53:48,159
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> just lose the other</font>

2436
01:53:48,159 --> 01:53:50,170
things that<font color="#CCCCCC"> they try</font><font color="#E5E5E5"> to predict</font><font color="#CCCCCC"> yeah</font>

2437
01:53:50,170 --> 01:53:51,969
which is why data augmentation is

2438
01:53:51,969 --> 01:53:54,070
important so<font color="#CCCCCC"> by by and particularly</font>

2439
01:53:54,070 --> 01:53:57,130
<font color="#E5E5E5">their test time augmentation is going to</font>

2440
01:53:57,130 --> 01:53:59,289
be particularly important<font color="#CCCCCC"> because you</font>

2441
01:53:59,289 --> 01:54:00,940
would you wouldn't want<font color="#E5E5E5"> to you know that</font>

2442
01:54:00,940 --> 01:54:03,880
there may be a artisanal mine out in the

2443
01:54:03,880 --> 01:54:06,130
corner<font color="#CCCCCC"> which if you take a center crop</font>

2444
01:54:06,130 --> 01:54:08,860
you you don't see so data augmentation

2445
01:54:08,860 --> 01:54:15,820
becomes very important yeah<font color="#CCCCCC"> so when we</font>

2446
01:54:15,820 --> 01:54:17,499
<font color="#E5E5E5">talk on their tributaries are</font><font color="#CCCCCC"> he</font>

2447
01:54:17,499 --> 01:54:21,039
<font color="#CCCCCC">receiver up</font><font color="#E5E5E5"> to that's not really what a</font>

2448
01:54:21,039 --> 01:54:23,230
<font color="#E5E5E5">model choice</font><font color="#CCCCCC"> Delton</font><font color="#E5E5E5"> that's a great point</font>

2449
01:54:23,230 --> 01:54:25,179
that's<font color="#E5E5E5"> not the loss</font><font color="#CCCCCC"> function yeah</font><font color="#E5E5E5"> right</font>

2450
01:54:25,179 --> 01:54:27,039
the loss<font color="#CCCCCC"> function is</font><font color="#E5E5E5"> something we'll be</font>

2451
01:54:27,039 --> 01:54:30,249
learning about next week<font color="#CCCCCC"> and it uses</font>

2452
01:54:30,249 --> 01:54:33,429
<font color="#CCCCCC">cross entropy or otherwise</font><font color="#E5E5E5"> known as like</font>

2453
01:54:33,429 --> 01:54:37,179
negative<font color="#E5E5E5"> log likelihood the metric is</font>

2454
01:54:37,179 --> 01:54:39,249
just this thing<font color="#E5E5E5"> that's printed so we can</font>

2455
01:54:39,249 --> 01:54:43,960
see what's<font color="#CCCCCC"> going</font><font color="#E5E5E5"> on just next to that so</font>

2456
01:54:43,960 --> 01:54:47,079
in the context<font color="#E5E5E5"> of my deep pass modeling</font>

2457
01:54:47,079 --> 01:54:49,150
cannot change data<font color="#CCCCCC"> does it trading it</font>

2458
01:54:49,150 --> 01:54:51,280
<font color="#CCCCCC">also have to be multiplied so can I</font>

2459
01:54:51,280 --> 01:54:53,110
train on<font color="#CCCCCC"> just like</font><font color="#E5E5E5"> images of pure cats</font>

2460
01:54:53,110 --> 01:54:54,909
and dogs and<font color="#CCCCCC"> expect it at prediction</font>

2461
01:54:54,909 --> 01:54:57,610
time to predict if I give it a<font color="#E5E5E5"> picture</font>

2462
01:54:57,610 --> 01:55:04,030
<font color="#E5E5E5">of both having cat eye on it over</font><font color="#CCCCCC"> I've</font>

2463
01:55:04,030 --> 01:55:06,309
never tried<font color="#CCCCCC"> that and I've never seen</font><font color="#E5E5E5"> an</font>

2464
01:55:06,309 --> 01:55:08,409
example<font color="#E5E5E5"> of something that needed it</font>

2465
01:55:08,409 --> 01:55:11,800
<font color="#CCCCCC">I guess conceptually there's no reason</font>

2466
01:55:11,800 --> 01:55:14,949
it<font color="#E5E5E5"> wouldn't work but it's kind of out</font>

2467
01:55:14,949 --> 01:55:18,219
there and you still<font color="#CCCCCC"> use a sigmoid you</font>

2468
01:55:18,219 --> 01:55:19,389
would have to make sure you're using a

2469
01:55:19,389 --> 01:55:20,860
sigmoid<font color="#E5E5E5"> loss function so in this case</font>

2470
01:55:20,860 --> 01:55:22,659
<font color="#E5E5E5">faster eyes default would not work</font>

2471
01:55:22,659 --> 01:55:24,579
<font color="#E5E5E5">because by default first day I would say</font>

2472
01:55:24,579 --> 01:55:26,619
your training data knitter has both a

2473
01:55:26,619 --> 01:55:28,150
cat<font color="#CCCCCC"> and the dog</font><font color="#E5E5E5"> so you would have to</font>

2474
01:55:28,150 --> 01:55:31,230
override the loss<font color="#E5E5E5"> function</font>

2475
01:55:35,349 --> 01:55:37,849
when you use the differential learning

2476
01:55:37,849 --> 01:55:40,729
rates<font color="#E5E5E5"> those three learning rates do they</font>

2477
01:55:40,729 --> 01:55:42,919
just kind<font color="#E5E5E5"> of spread evenly across the</font>

2478
01:55:42,919 --> 01:55:46,550
<font color="#E5E5E5">layers yeah</font><font color="#CCCCCC"> we'll talk more about this</font>

2479
01:55:46,550 --> 01:55:48,289
later<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> course</font><font color="#CCCCCC"> but I</font><font color="#E5E5E5"> mean the</font>

2480
01:55:48,289 --> 01:55:50,689
faster I library<font color="#CCCCCC"> there's a concept of</font>

2481
01:55:50,689 --> 01:55:53,570
layer groups<font color="#E5E5E5"> so in something like a</font>

2482
01:55:53,570 --> 01:55:55,579
resonant 50 you<font color="#CCCCCC"> know there's hundreds</font><font color="#E5E5E5"> of</font>

2483
01:55:55,579 --> 01:55:57,889
layers<font color="#E5E5E5"> and I think it you don't want to</font>

2484
01:55:57,889 --> 01:56:00,709
write down hundreds of learning rates<font color="#E5E5E5"> so</font>

2485
01:56:00,709 --> 01:56:03,679
I've basically decided for you how<font color="#E5E5E5"> to</font>

2486
01:56:03,679 --> 01:56:07,489
<font color="#E5E5E5">split them and the the last one</font><font color="#CCCCCC"> always</font>

2487
01:56:07,489 --> 01:56:10,219
refers just to the fully connected

2488
01:56:10,219 --> 01:56:12,050
layers that we've randomly initialized

2489
01:56:12,050 --> 01:56:14,929
and edit to<font color="#E5E5E5"> the end</font><font color="#CCCCCC"> and then these</font><font color="#E5E5E5"> ones</font>

2490
01:56:14,929 --> 01:56:16,579
are split generally about halfway

2491
01:56:16,579 --> 01:56:19,669
through<font color="#E5E5E5"> basically I've tried to make</font><font color="#CCCCCC"> it</font>

2492
01:56:19,669 --> 01:56:22,429
<font color="#CCCCCC">so that these you know these ones are</font>

2493
01:56:22,429 --> 01:56:24,019
kind<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> ones which you hardly</font><font color="#E5E5E5"> want</font>

2494
01:56:24,019 --> 01:56:25,400
to change at all and<font color="#E5E5E5"> these are the ones</font>

2495
01:56:25,400 --> 01:56:26,630
you<font color="#E5E5E5"> might want to change a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

2496
01:56:26,630 --> 01:56:29,239
and I don't<font color="#CCCCCC"> think we're covered in the</font>

2497
01:56:29,239 --> 01:56:30,469
<font color="#E5E5E5">course but if you're interested</font><font color="#CCCCCC"> we can</font>

2498
01:56:30,469 --> 01:56:31,939
<font color="#E5E5E5">talk about in the forum there are ways</font>

2499
01:56:31,939 --> 01:56:33,860
you can override<font color="#E5E5E5"> this behavior to define</font>

2500
01:56:33,860 --> 01:56:36,159
your<font color="#E5E5E5"> own</font><font color="#CCCCCC"> layer</font><font color="#E5E5E5"> groups if you want to and</font>

2501
01:56:36,159 --> 01:56:38,869
is there any<font color="#E5E5E5"> way to visualize the model</font>

2502
01:56:38,869 --> 01:56:41,419
easily or like<font color="#E5E5E5"> don't dump the layers of</font>

2503
01:56:41,419 --> 01:56:43,999
the model yeah<font color="#E5E5E5"> absolutely</font>

2504
01:56:43,999 --> 01:56:47,239
you can<font color="#CCCCCC"> let's make sure we've got one</font>

2505
01:56:47,239 --> 01:56:54,229
here<font color="#E5E5E5"> okay so if you just type learn it</font>

2506
01:56:54,229 --> 01:56:55,519
doesn't tell you much at all but<font color="#E5E5E5"> what</font>

2507
01:56:55,519 --> 01:57:02,479
you can do is go learn<font color="#CCCCCC"> summary</font><font color="#E5E5E5"> and that</font>

2508
01:57:02,479 --> 01:57:07,579
spits out basically everything there's

2509
01:57:07,579 --> 01:57:09,590
all the letters and so you can see in

2510
01:57:09,590 --> 01:57:13,099
<font color="#E5E5E5">this case these</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> the names I</font>

2511
01:57:13,099 --> 01:57:14,419
<font color="#CCCCCC">mentioned how they</font><font color="#E5E5E5"> look up names right</font>

2512
01:57:14,419 --> 01:57:17,469
so the first layer<font color="#E5E5E5"> is</font><font color="#CCCCCC"> called con 2 d 1</font>

2513
01:57:17,469 --> 01:57:21,919
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it's going</font><font color="#E5E5E5"> to take as input</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

2514
01:57:21,919 --> 01:57:24,050
useful<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually look at it's taking</font>

2515
01:57:24,050 --> 01:57:27,110
64 by 64<font color="#CCCCCC"> images</font><font color="#E5E5E5"> which is what we told it</font>

2516
01:57:27,110 --> 01:57:28,999
we're<font color="#E5E5E5"> going to transform things to this</font>

2517
01:57:28,999 --> 01:57:33,260
is three channels<font color="#CCCCCC"> high torch like most</font>

2518
01:57:33,260 --> 01:57:35,209
<font color="#E5E5E5">things have channels at the end would</font>

2519
01:57:35,209 --> 01:57:38,449
say 64 by 64 by<font color="#E5E5E5"> 3</font><font color="#CCCCCC"> ply torch music to the</font>

2520
01:57:38,449 --> 01:57:41,869
front so it's 3 by 64 by 64<font color="#E5E5E5"> that's</font>

2521
01:57:41,869 --> 01:57:44,030
because it turns out<font color="#E5E5E5"> that some</font><font color="#CCCCCC"> of the</font>

2522
01:57:44,030 --> 01:57:46,820
GPU computations run faster when it

2523
01:57:46,820 --> 01:57:49,070
in that order<font color="#E5E5E5"> okay but that happens all</font>

2524
01:57:49,070 --> 01:57:50,900
<font color="#CCCCCC">behind-the-scenes automatic plays a part</font>

2525
01:57:50,900 --> 01:57:53,510
of that transformation<font color="#E5E5E5"> stuff that's kind</font>

2526
01:57:53,510 --> 01:57:56,260
<font color="#E5E5E5">of all done automatically is to do that</font>

2527
01:57:56,260 --> 01:58:00,830
<font color="#CCCCCC">minus one means</font><font color="#E5E5E5"> however however big the</font>

2528
01:58:00,830 --> 01:58:04,280
batch size is in<font color="#E5E5E5"> care us they use the</font>

2529
01:58:04,280 --> 01:58:07,580
number they use a<font color="#E5E5E5"> special number</font><font color="#CCCCCC"> none in</font>

2530
01:58:07,580 --> 01:58:09,740
<font color="#CCCCCC">pile</font><font color="#E5E5E5"> types that used minus one so this</font>

2531
01:58:09,740 --> 01:58:13,130
<font color="#CCCCCC">is a four dimensional mini batch</font><font color="#E5E5E5"> the</font>

2532
01:58:13,130 --> 01:58:15,920
number<font color="#E5E5E5"> of elements in the amount of</font>

2533
01:58:15,920 --> 01:58:18,290
images<font color="#E5E5E5"> in the mini batch is dynamic you</font>

2534
01:58:18,290 --> 01:58:20,270
can<font color="#CCCCCC"> change that the number of channels</font>

2535
01:58:20,270 --> 01:58:23,660
is<font color="#E5E5E5"> three number which is a 64 by 64</font><font color="#CCCCCC"> okay</font>

2536
01:58:23,660 --> 01:58:26,360
<font color="#E5E5E5">and so then you can basically see that</font>

2537
01:58:26,360 --> 01:58:29,200
<font color="#E5E5E5">this particular convolutional kernel</font>

2538
01:58:29,200 --> 01:58:32,960
apparently has 64 kernels in it and it's

2539
01:58:32,960 --> 01:58:35,240
also having<font color="#CCCCCC"> we haven't talked</font><font color="#E5E5E5"> about this</font>

2540
01:58:35,240 --> 01:58:36,500
<font color="#E5E5E5">but convolutions can have something</font>

2541
01:58:36,500 --> 01:58:39,200
called a stride<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is like Matt pullin</font>

2542
01:58:39,200 --> 01:58:41,390
it changes the size so it's returning a

2543
01:58:41,390 --> 01:58:47,870
32 by 32 564 kernel tenza and<font color="#E5E5E5"> so on and</font>

2544
01:58:47,870 --> 01:58:51,950
so forth so<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> summary and we'll</font>

2545
01:58:51,950 --> 01:58:54,080
learn all<font color="#E5E5E5"> about that's doing in detail</font>

2546
01:58:54,080 --> 01:58:57,620
<font color="#CCCCCC">on in the second</font><font color="#E5E5E5"> half of the course</font><font color="#CCCCCC"> one</font>

2547
01:58:57,620 --> 01:59:00,770
where I clicked in my own data<font color="#E5E5E5"> set and I</font>

2548
01:59:00,770 --> 01:59:02,720
try to use the in as a really small data

2549
01:59:02,720 --> 01:59:06,260
set these currencies from<font color="#CCCCCC"> Google Images</font>

2550
01:59:06,260 --> 01:59:09,470
<font color="#E5E5E5">and I tried to do a learning rate find</font>

2551
01:59:09,470 --> 01:59:12,650
and then the plot and it just it gave me

2552
01:59:12,650 --> 01:59:14,030
some numbers which I didn't understand

2553
01:59:14,030 --> 01:59:15,980
and the learning<font color="#E5E5E5"> rate font</font><font color="#CCCCCC"> yeah and then</font>

2554
01:59:15,980 --> 01:59:18,260
the plot was empty so yeah I mean let's

2555
01:59:18,260 --> 01:59:20,030
let's talk<font color="#CCCCCC"> about that on the forum</font><font color="#E5E5E5"> but</font>

2556
01:59:20,030 --> 01:59:22,910
basically the learning rate<font color="#CCCCCC"> finder is</font>

2557
01:59:22,910 --> 01:59:24,290
going to go through<font color="#CCCCCC"> a mini batch at a</font>

2558
01:59:24,290 --> 01:59:26,450
time<font color="#CCCCCC"> if you've got a tiny data set</font>

2559
01:59:26,450 --> 01:59:28,370
<font color="#E5E5E5">there's just not enough mini batches</font><font color="#CCCCCC"> so</font>

2560
01:59:28,370 --> 01:59:30,560
<font color="#CCCCCC">the trick is to make your</font><font color="#E5E5E5"> mini</font><font color="#CCCCCC"> bit make</font>

2561
01:59:30,560 --> 01:59:32,720
your batch size really<font color="#E5E5E5"> small like try</font>

2562
01:59:32,720 --> 01:59:35,530
making<font color="#E5E5E5"> it like</font><font color="#CCCCCC"> four</font>

2563
01:59:38,250 --> 01:59:40,480
okay they<font color="#E5E5E5"> were great questions it's not</font>

2564
01:59:40,480 --> 01:59:44,440
<font color="#E5E5E5">nothing</font><font color="#CCCCCC"> online to add you know they were</font>

2565
01:59:44,440 --> 01:59:45,580
great questions<font color="#CCCCCC"> we've got a little bit</font>

2566
01:59:45,580 --> 01:59:48,160
past where I hope<font color="#CCCCCC"> to but let's let's</font>

2567
01:59:48,160 --> 01:59:51,430
quickly talk about<font color="#E5E5E5"> structured data so we</font>

2568
01:59:51,430 --> 01:59:52,690
<font color="#E5E5E5">can start thinking</font><font color="#CCCCCC"> about it for</font><font color="#E5E5E5"> next</font>

2569
01:59:52,690 --> 01:59:59,770
week<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is really weird right to me</font>

2570
01:59:59,770 --> 02:00:02,500
there's basically two<font color="#CCCCCC"> types of data set</font>

2571
02:00:02,500 --> 02:00:04,090
we<font color="#CCCCCC"> use in machine learning</font><font color="#E5E5E5"> there's a</font>

2572
02:00:04,090 --> 02:00:10,300
type of<font color="#E5E5E5"> data like audio images natural</font>

2573
02:00:10,300 --> 02:00:14,320
<font color="#E5E5E5">language</font><font color="#CCCCCC"> text where all of the all of</font>

2574
02:00:14,320 --> 02:00:16,600
the<font color="#CCCCCC"> things inside</font><font color="#E5E5E5"> an object</font><font color="#CCCCCC"> like all of</font>

2575
02:00:16,600 --> 02:00:18,940
the pixels<font color="#CCCCCC"> inside</font><font color="#E5E5E5"> an image are all the</font>

2576
02:00:18,940 --> 02:00:21,850
same kind of thing<font color="#E5E5E5"> they're all pixels or</font>

2577
02:00:21,850 --> 02:00:26,410
they're all apertures<font color="#E5E5E5"> of a waveform</font><font color="#CCCCCC"> or</font>

2578
02:00:26,410 --> 02:00:30,130
they're all words<font color="#CCCCCC"> I call this</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

2579
02:00:30,130 --> 02:00:33,040
data unstructured<font color="#E5E5E5"> and then there's data</font>

2580
02:00:33,040 --> 02:00:37,199
sets like<font color="#E5E5E5"> a profit and loss statement or</font>

2581
02:00:37,199 --> 02:00:39,960
<font color="#E5E5E5">the information</font><font color="#CCCCCC"> about a</font><font color="#E5E5E5"> Facebook user</font>

2582
02:00:39,960 --> 02:00:43,960
<font color="#CCCCCC">where each column</font><font color="#E5E5E5"> is like structurally</font>

2583
02:00:43,960 --> 02:00:45,520
quite different<font color="#E5E5E5"> you know one thing is</font>

2584
02:00:45,520 --> 02:00:47,260
representing like<font color="#E5E5E5"> how many page views</font>

2585
02:00:47,260 --> 02:00:49,449
last month<font color="#E5E5E5"> another one is their sex</font>

2586
02:00:49,449 --> 02:00:51,550
<font color="#CCCCCC">another one is what zip code they're in</font>

2587
02:00:51,550 --> 02:00:55,719
and I call this<font color="#E5E5E5"> structure there</font><font color="#CCCCCC"> that</font>

2588
02:00:55,719 --> 02:00:57,940
particular terminology<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not unusual</font>

2589
02:00:57,940 --> 02:01:00,480
<font color="#E5E5E5">like lots of people use</font><font color="#CCCCCC"> that terminology</font>

2590
02:01:00,480 --> 02:01:02,410
<font color="#CCCCCC">but</font><font color="#E5E5E5"> lots of people don't</font>

2591
02:01:02,410 --> 02:01:05,489
there's no particularly agreed-upon

2592
02:01:05,489 --> 02:01:08,800
<font color="#E5E5E5">terminology so when I say structured</font>

2593
02:01:08,800 --> 02:01:11,770
data<font color="#E5E5E5"> I'm referring to kind of columnar</font>

2594
02:01:11,770 --> 02:01:14,620
data as<font color="#CCCCCC"> you might find in a database or</font>

2595
02:01:14,620 --> 02:01:16,210
<font color="#E5E5E5">a spreadsheet where different columns</font>

2596
02:01:16,210 --> 02:01:19,000
represent different<font color="#CCCCCC"> kinds</font><font color="#E5E5E5"> of things</font><font color="#CCCCCC"> and</font>

2597
02:01:19,000 --> 02:01:21,840
each row<font color="#CCCCCC"> represents an observation and</font>

2598
02:01:21,840 --> 02:01:25,630
so structured data is probably what<font color="#CCCCCC"> most</font>

2599
02:01:25,630 --> 02:01:31,199
of you are<font color="#E5E5E5"> analyzing most of the time</font>

2600
02:01:31,199 --> 02:01:34,810
funnily enough you know academics in<font color="#CCCCCC"> the</font>

2601
02:01:34,810 --> 02:01:37,180
deep learning<font color="#E5E5E5"> world don't really give a</font>

2602
02:01:37,180 --> 02:01:39,730
 about structured data<font color="#E5E5E5"> because it's</font>

2603
02:01:39,730 --> 02:01:41,590
<font color="#E5E5E5">pretty hard to get published in fancy</font>

2604
02:01:41,590 --> 02:01:44,260
conference proceedings<font color="#E5E5E5"> if you're like if</font>

2605
02:01:44,260 --> 02:01:46,179
you've got a better logistics model<font color="#E5E5E5"> you</font>

2606
02:01:46,179 --> 02:01:47,830
know it's the thing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> makes the world</font>

2607
02:01:47,830 --> 02:01:49,719
<font color="#CCCCCC">goes round it's a thing that makes</font>

2608
02:01:49,719 --> 02:01:51,139
<font color="#CCCCCC">everybody you know</font>

2609
02:01:51,139 --> 02:01:55,880
and efficiency and make<font color="#E5E5E5"> stuff work</font><font color="#CCCCCC"> but</font>

2610
02:01:55,880 --> 02:02:00,320
it's largely ignored<font color="#E5E5E5"> sadly so we're not</font>

2611
02:02:00,320 --> 02:02:01,309
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to ignore it</font><font color="#E5E5E5"> because we're a</font>

2612
02:02:01,309 --> 02:02:04,189
practical deep learning<font color="#CCCCCC"> and cackled</font>

2613
02:02:04,189 --> 02:02:05,749
doesn't ignore it either because<font color="#E5E5E5"> people</font>

2614
02:02:05,749 --> 02:02:08,090
put<font color="#CCCCCC"> prize money up on Cagle to solve</font>

2615
02:02:08,090 --> 02:02:10,070
<font color="#E5E5E5">real-world problems</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are some</font>

2616
02:02:10,070 --> 02:02:11,899
<font color="#E5E5E5">great</font><font color="#CCCCCC"> capable competitions we can look</font>

2617
02:02:11,899 --> 02:02:14,780
at there's<font color="#CCCCCC"> one running right now which</font>

2618
02:02:14,780 --> 02:02:16,519
is<font color="#E5E5E5"> the grocery sales forecasting</font>

2619
02:02:16,519 --> 02:02:21,130
competition for Ecuador's<font color="#E5E5E5"> largest chain</font>

2620
02:02:21,399 --> 02:02:24,559
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> always a little I've got to be a</font>

2621
02:02:24,559 --> 02:02:26,360
<font color="#E5E5E5">little careful about how much I show you</font>

2622
02:02:26,360 --> 02:02:28,099
<font color="#E5E5E5">about currently running competitions</font>

2623
02:02:28,099 --> 02:02:29,840
<font color="#E5E5E5">because I don't want to you know help</font>

2624
02:02:29,840 --> 02:02:32,659
you cheat<font color="#E5E5E5"> but it so happens there was</font><font color="#CCCCCC"> a</font>

2625
02:02:32,659 --> 02:02:35,989
competition a year or two ago for one<font color="#E5E5E5"> of</font>

2626
02:02:35,989 --> 02:02:38,269
Germany's<font color="#CCCCCC"> magistrate chains which is</font>

2627
02:02:38,269 --> 02:02:40,099
almost<font color="#E5E5E5"> identical</font><font color="#CCCCCC"> so I'm going to</font><font color="#E5E5E5"> show</font>

2628
02:02:40,099 --> 02:02:45,380
<font color="#E5E5E5">you how to do that</font><font color="#CCCCCC"> so that was</font><font color="#E5E5E5"> called</font>

2629
02:02:45,380 --> 02:02:50,539
the<font color="#CCCCCC"> Rossman stores data</font><font color="#E5E5E5"> and so I would</font>

2630
02:02:50,539 --> 02:02:52,489
suggest<font color="#E5E5E5"> you know first of all try</font>

2631
02:02:52,489 --> 02:02:53,780
practicing what we're learning on

2632
02:02:53,780 --> 02:02:56,119
<font color="#CCCCCC">Russman</font><font color="#E5E5E5"> right but then see if you can</font>

2633
02:02:56,119 --> 02:02:58,579
<font color="#CCCCCC">get it</font><font color="#E5E5E5"> working on on grocery because</font>

2634
02:02:58,579 --> 02:03:02,119
currently on the<font color="#CCCCCC"> leaderboard</font><font color="#E5E5E5"> no one</font>

2635
02:03:02,119 --> 02:03:03,320
seems to<font color="#E5E5E5"> basically know what they're</font>

2636
02:03:03,320 --> 02:03:05,149
doing<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the groceries competition if</font>

2637
02:03:05,149 --> 02:03:10,130
you look at the leaderboard<font color="#CCCCCC"> the</font><font color="#E5E5E5"> let's</font>

2638
02:03:10,130 --> 02:03:13,280
see here yeah these ones<font color="#E5E5E5"> around 5 to 9 v</font>

2639
02:03:13,280 --> 02:03:15,769
3o are people<font color="#E5E5E5"> that are literally finding</font>

2640
02:03:15,769 --> 02:03:18,019
like<font color="#E5E5E5"> group averages and submitting those</font>

2641
02:03:18,019 --> 02:03:19,849
<font color="#CCCCCC">I know because they're kernels</font><font color="#E5E5E5"> that</font>

2642
02:03:19,849 --> 02:03:22,369
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> using so you know the basically</font>

2643
02:03:22,369 --> 02:03:24,369
the people<font color="#E5E5E5"> around 20th place are not</font>

2644
02:03:24,369 --> 02:03:29,059
<font color="#CCCCCC">actually doing</font><font color="#E5E5E5"> any machine learning so</font>

2645
02:03:29,059 --> 02:03:31,749
yeah let's see if we can<font color="#CCCCCC"> improve things</font>

2646
02:03:31,749 --> 02:03:34,639
<font color="#CCCCCC">so you'll see there's a less than 3</font>

2647
02:03:34,639 --> 02:03:38,030
<font color="#CCCCCC">rossmann notebook sure you get pull ok</font>

2648
02:03:38,030 --> 02:03:40,189
in fact<font color="#E5E5E5"> you know just reminder you know</font>

2649
02:03:40,189 --> 02:03:42,800
before<font color="#E5E5E5"> you</font><font color="#CCCCCC"> start working</font><font color="#E5E5E5"> get pull in</font>

2650
02:03:42,800 --> 02:03:45,289
<font color="#CCCCCC">you're faster a repo and</font><font color="#E5E5E5"> from time to</font>

2651
02:03:45,289 --> 02:03:48,889
time<font color="#CCCCCC"> Condor and update for you</font><font color="#E5E5E5"> guys</font>

2652
02:03:48,889 --> 02:03:51,019
<font color="#CCCCCC">during the in-person course the Condor</font>

2653
02:03:51,019 --> 02:03:52,849
<font color="#CCCCCC">and update you should do it</font><font color="#E5E5E5"> more often</font>

2654
02:03:52,849 --> 02:03:55,309
<font color="#E5E5E5">because</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> kind of changing things a</font>

2655
02:03:55,309 --> 02:03:57,769
little<font color="#E5E5E5"> bit um folks in the MOOC</font><font color="#CCCCCC"> you know</font>

2656
02:03:57,769 --> 02:04:01,670
<font color="#E5E5E5">more like once a month should be fine</font>

2657
02:04:01,670 --> 02:04:04,010
so anyway<font color="#E5E5E5"> I just just changed this a</font>

2658
02:04:04,010 --> 02:04:05,210
little<font color="#E5E5E5"> bit so make sure you get</font><font color="#CCCCCC"> Paul</font><font color="#E5E5E5"> to</font>

2659
02:04:05,210 --> 02:04:09,560
<font color="#CCCCCC">get lesson 3 Rossman and there's a</font>

2660
02:04:09,560 --> 02:04:11,390
couple of new libraries here one is fast

2661
02:04:11,390 --> 02:04:14,600
<font color="#E5E5E5">AI dot structure</font><font color="#CCCCCC"> faster guided</font>

2662
02:04:14,600 --> 02:04:16,370
structured<font color="#CCCCCC"> contain stuff which is</font>

2663
02:04:16,370 --> 02:04:18,950
actually not at all<font color="#E5E5E5"> high torch specific</font>

2664
02:04:18,950 --> 02:04:20,600
and we actually<font color="#E5E5E5"> use that in the machine</font>

2665
02:04:20,600 --> 02:04:23,210
<font color="#CCCCCC">learning</font><font color="#E5E5E5"> course as well for</font><font color="#CCCCCC"> doing random</font>

2666
02:04:23,210 --> 02:04:25,000
<font color="#CCCCCC">forests with no tie torch at all I</font>

2667
02:04:25,000 --> 02:04:27,440
mentioned<font color="#E5E5E5"> that because you can use that</font>

2668
02:04:27,440 --> 02:04:30,230
particular<font color="#CCCCCC"> library without</font><font color="#E5E5E5"> any of the</font>

2669
02:04:30,230 --> 02:04:33,530
<font color="#E5E5E5">other parts of fast AI so that can be</font>

2670
02:04:33,530 --> 02:04:36,080
handy<font color="#CCCCCC"> and then we're also going to use</font>

2671
02:04:36,080 --> 02:04:39,020
<font color="#CCCCCC">faster column data which is basically</font>

2672
02:04:39,020 --> 02:04:41,630
some stuff that allows<font color="#CCCCCC"> us to do</font><font color="#E5E5E5"> fast a</font>

2673
02:04:41,630 --> 02:04:44,540
<font color="#E5E5E5">type a torch stuff with columnar</font>

2674
02:04:44,540 --> 02:04:49,100
<font color="#E5E5E5">structured data for structured data</font><font color="#CCCCCC"> we</font>

2675
02:04:49,100 --> 02:04:52,730
need to use pandas a lot anybody who's

2676
02:04:52,730 --> 02:04:54,710
used our data frames will be<font color="#E5E5E5"> very</font>

2677
02:04:54,710 --> 02:04:56,720
familiar with pandas pandas is basically

2678
02:04:56,720 --> 02:04:59,240
an attempt to<font color="#E5E5E5"> kind of replicate data</font>

2679
02:04:59,240 --> 02:05:03,200
friends<font color="#E5E5E5"> in Python</font><font color="#CCCCCC"> you know and a bit</font>

2680
02:05:03,200 --> 02:05:08,240
<font color="#E5E5E5">more if you're not entirely familiar</font>

2681
02:05:08,240 --> 02:05:13,690
with pandas<font color="#CCCCCC"> there's a great book</font>

2682
02:05:14,730 --> 02:05:16,849
[Music]

2683
02:05:16,849 --> 02:05:18,020
which I think<font color="#CCCCCC"> I might have mentioned</font>

2684
02:05:18,020 --> 02:05:23,150
<font color="#E5E5E5">before</font><font color="#CCCCCC"> - for data analysis by Wes</font>

2685
02:05:23,150 --> 02:05:24,920
<font color="#CCCCCC">McKinney</font><font color="#E5E5E5"> there's a new addition that</font>

2686
02:05:24,920 --> 02:05:27,849
<font color="#E5E5E5">just came out</font><font color="#CCCCCC"> a couple</font><font color="#E5E5E5"> of weeks ago</font>

2687
02:05:27,849 --> 02:05:30,619
<font color="#CCCCCC">obviously being by the pandas author its</font>

2688
02:05:30,619 --> 02:05:32,810
coverage of pandas is excellent<font color="#E5E5E5"> but it</font>

2689
02:05:32,810 --> 02:05:37,340
also<font color="#E5E5E5"> covers numpy scipy matplotlib</font>

2690
02:05:37,340 --> 02:05:42,199
scikit-learn<font color="#CCCCCC"> - and Jupiter really well</font>

2691
02:05:42,199 --> 02:05:45,940
<font color="#E5E5E5">okay and so I'm kind of going to assume</font>

2692
02:05:45,940 --> 02:05:48,949
<font color="#CCCCCC">that you know</font><font color="#E5E5E5"> your way around these</font>

2693
02:05:48,949 --> 02:05:52,820
libraries<font color="#E5E5E5"> to some extent</font><font color="#CCCCCC"> also there was</font>

2694
02:05:52,820 --> 02:05:54,980
the workshop<font color="#CCCCCC"> we did before</font><font color="#E5E5E5"> they started</font>

2695
02:05:54,980 --> 02:05:56,630
and there's a<font color="#E5E5E5"> video</font><font color="#CCCCCC"> of that online where</font>

2696
02:05:56,630 --> 02:05:59,030
we kind of have<font color="#CCCCCC"> a brief mention of all</font>

2697
02:05:59,030 --> 02:06:03,980
of those tools<font color="#CCCCCC"> structured data is</font>

2698
02:06:03,980 --> 02:06:06,710
generally shared as CSV files<font color="#CCCCCC"> it was no</font>

2699
02:06:06,710 --> 02:06:08,900
<font color="#E5E5E5">different</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this competition as you'll</font>

2700
02:06:08,900 --> 02:06:10,610
see there's a hyperlink to<font color="#CCCCCC"> the rustman</font>

2701
02:06:10,610 --> 02:06:14,210
data set<font color="#E5E5E5"> here right now if you look at</font>

2702
02:06:14,210 --> 02:06:15,500
<font color="#E5E5E5">the bottom of</font><font color="#CCCCCC"> my screen you'll see this</font>

2703
02:06:15,500 --> 02:06:17,900
goes to file start faster<font color="#CCCCCC"> day.i because</font>

2704
02:06:17,900 --> 02:06:19,579
<font color="#E5E5E5">this doesn't require any login or</font>

2705
02:06:19,579 --> 02:06:21,980
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> to grab this data set it's as</font>

2706
02:06:21,980 --> 02:06:24,409
simple as right<font color="#CCCCCC"> clicking copy link</font>

2707
02:06:24,409 --> 02:06:26,960
address<font color="#CCCCCC"> head over</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> wherever you want</font>

2708
02:06:26,960 --> 02:06:36,159
<font color="#CCCCCC">it</font><font color="#E5E5E5"> and just type</font><font color="#CCCCCC"> W get and the</font><font color="#E5E5E5"> URL okay</font>

2709
02:06:36,159 --> 02:06:40,040
so<font color="#E5E5E5"> that's because you know it's it's</font><font color="#CCCCCC"> not</font>

2710
02:06:40,040 --> 02:06:44,150
behind<font color="#CCCCCC"> a login or anything so you</font><font color="#E5E5E5"> can</font>

2711
02:06:44,150 --> 02:06:47,780
grab the<font color="#E5E5E5"> grab it</font><font color="#CCCCCC"> from there and</font><font color="#E5E5E5"> you can</font>

2712
02:06:47,780 --> 02:06:49,820
always read a CSV file with just pandas

2713
02:06:49,820 --> 02:06:52,040
don't read CSV<font color="#E5E5E5"> now in this particular</font>

2714
02:06:52,040 --> 02:06:55,639
<font color="#E5E5E5">case there's a lot of pre-processing</font>

2715
02:06:55,639 --> 02:06:57,920
<font color="#E5E5E5">that we do and what I've actually done</font>

2716
02:06:57,920 --> 02:07:03,710
here<font color="#CCCCCC"> is I've I've actually stolen the</font>

2717
02:07:03,710 --> 02:07:06,409
entire pipeline from<font color="#E5E5E5"> the third place</font>

2718
02:07:06,409 --> 02:07:08,780
<font color="#CCCCCC">winner roster okay so they made all</font>

2719
02:07:08,780 --> 02:07:11,119
<font color="#E5E5E5">their data</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> really great you know</font>

2720
02:07:11,119 --> 02:07:12,440
<font color="#E5E5E5">they better get hub available with</font>

2721
02:07:12,440 --> 02:07:14,420
everything that<font color="#E5E5E5"> we need and I've ported</font>

2722
02:07:14,420 --> 02:07:16,880
it all across<font color="#E5E5E5"> and simplified</font><font color="#CCCCCC"> it and</font>

2723
02:07:16,880 --> 02:07:18,829
tried to<font color="#E5E5E5"> make it pretty easy</font><font color="#CCCCCC"> to</font>

2724
02:07:18,829 --> 02:07:23,030
understand<font color="#CCCCCC"> this course is about deep</font>

2725
02:07:23,030 --> 02:07:25,820
learning<font color="#E5E5E5"> not about data processing so</font>

2726
02:07:25,820 --> 02:07:28,460
I'm not going<font color="#E5E5E5"> to go through it</font><font color="#CCCCCC"> but we</font>

2727
02:07:28,460 --> 02:07:29,929
<font color="#CCCCCC">will be going through it in the machine</font>

2728
02:07:29,929 --> 02:07:30,840
learning<font color="#E5E5E5"> course</font>

2729
02:07:30,840 --> 02:07:32,580
in some detail because feature

2730
02:07:32,580 --> 02:07:34,469
engineering<font color="#CCCCCC"> is really</font><font color="#E5E5E5"> important so if</font>

2731
02:07:34,469 --> 02:07:37,110
you're interested<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> check out the</font>

2732
02:07:37,110 --> 02:07:41,520
machine learning<font color="#CCCCCC"> course</font><font color="#E5E5E5"> for that</font><font color="#CCCCCC"> I will</font>

2733
02:07:41,520 --> 02:07:44,190
<font color="#E5E5E5">however show you kind of what</font><font color="#CCCCCC"> it looks</font>

2734
02:07:44,190 --> 02:07:48,780
like<font color="#CCCCCC"> so once we read the</font><font color="#E5E5E5"> CSV</font><font color="#CCCCCC"> Xin you can</font>

2735
02:07:48,780 --> 02:07:50,909
see basically<font color="#CCCCCC"> what's there so the key</font>

2736
02:07:50,909 --> 02:08:01,739
one is for a particular store<font color="#CCCCCC"> we have</font>

2737
02:08:01,739 --> 02:08:04,190
the

2738
02:08:05,400 --> 02:08:09,170
we have the date and we have the sales

2739
02:08:09,170 --> 02:08:12,270
<font color="#E5E5E5">for that particular store</font><font color="#CCCCCC"> we know</font>

2740
02:08:12,270 --> 02:08:18,239
whether that thing is on promo<font color="#CCCCCC"> or not we</font>

2741
02:08:18,239 --> 02:08:19,860
know the number of<font color="#E5E5E5"> customers at that</font>

2742
02:08:19,860 --> 02:08:23,429
<font color="#E5E5E5">particular store had we know whether</font>

2743
02:08:23,429 --> 02:08:26,510
<font color="#E5E5E5">that date was a school holiday</font>

2744
02:08:29,940 --> 02:08:36,520
we also know<font color="#E5E5E5"> what kind of store it is so</font>

2745
02:08:36,520 --> 02:08:38,320
this is<font color="#E5E5E5"> pretty common right you'll often</font>

2746
02:08:38,320 --> 02:08:41,530
get<font color="#E5E5E5"> datasets where there's some column</font>

2747
02:08:41,530 --> 02:08:43,360
with like just some kind of code we

2748
02:08:43,360 --> 02:08:44,170
<font color="#CCCCCC">don't really</font><font color="#E5E5E5"> know what the code means</font>

2749
02:08:44,170 --> 02:08:47,410
<font color="#E5E5E5">and most of the time I find it doesn't</font>

2750
02:08:47,410 --> 02:08:49,450
matter what it means<font color="#E5E5E5"> like normally you</font>

2751
02:08:49,450 --> 02:08:51,760
<font color="#CCCCCC">get given</font><font color="#E5E5E5"> a data dictionary</font><font color="#CCCCCC"> when you</font>

2752
02:08:51,760 --> 02:08:53,170
start on<font color="#E5E5E5"> a</font><font color="#CCCCCC"> project and</font><font color="#E5E5E5"> obviously if</font>

2753
02:08:53,170 --> 02:08:54,550
you're working<font color="#E5E5E5"> on an internal</font><font color="#CCCCCC"> project</font>

2754
02:08:54,550 --> 02:08:56,380
you can ask the people<font color="#E5E5E5"> at your</font><font color="#CCCCCC"> company</font>

2755
02:08:56,380 --> 02:08:59,740
<font color="#CCCCCC">what</font><font color="#E5E5E5"> does this column mean</font><font color="#CCCCCC"> I kind of</font>

2756
02:08:59,740 --> 02:09:01,810
stay<font color="#CCCCCC"> away from</font><font color="#E5E5E5"> learning too much about</font>

2757
02:09:01,810 --> 02:09:03,400
it<font color="#E5E5E5"> I prefer to like to see what the data</font>

2758
02:09:03,400 --> 02:09:08,080
<font color="#CCCCCC">says</font><font color="#E5E5E5"> first there's something about what</font>

2759
02:09:08,080 --> 02:09:10,210
kind of product are we selling in this

2760
02:09:10,210 --> 02:09:12,930
particular row

2761
02:09:13,989 --> 02:09:16,230
and then there's information about like

2762
02:09:16,230 --> 02:09:19,239
how far away is the nearest competitor

2763
02:09:19,239 --> 02:09:24,820
<font color="#E5E5E5">how long have</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> been open for how</font>

2764
02:09:24,820 --> 02:09:31,120
long<font color="#E5E5E5"> is the promo being on for for each</font>

2765
02:09:31,120 --> 02:09:32,920
store we can<font color="#CCCCCC"> find out what state it's in</font>

2766
02:09:32,920 --> 02:09:35,380
for each state we can find at<font color="#E5E5E5"> the name</font>

2767
02:09:35,380 --> 02:09:38,670
<font color="#E5E5E5">of the state this is in Germany</font><font color="#CCCCCC"> and</font>

2768
02:09:38,670 --> 02:09:40,540
interestingly they were allowed to

2769
02:09:40,540 --> 02:09:42,640
<font color="#E5E5E5">download any data external data they</font>

2770
02:09:42,640 --> 02:09:44,380
wanted in this competition<font color="#CCCCCC"> just very</font>

2771
02:09:44,380 --> 02:09:46,150
common<font color="#E5E5E5"> as long as you share it with</font>

2772
02:09:46,150 --> 02:09:48,520
<font color="#E5E5E5">everybody else and</font><font color="#CCCCCC"> so some</font><font color="#E5E5E5"> folks tried</font>

2773
02:09:48,520 --> 02:09:53,830
downloading data from Google Trends I'm

2774
02:09:53,830 --> 02:09:55,180
not sure<font color="#E5E5E5"> exactly what it was</font><font color="#CCCCCC"> that they</font>

2775
02:09:55,180 --> 02:09:56,950
would check in the trend off but we have

2776
02:09:56,950 --> 02:09:59,430
this information<font color="#CCCCCC"> from</font><font color="#E5E5E5"> Google Trends</font>

2777
02:09:59,430 --> 02:10:01,810
<font color="#CCCCCC">somebody downloaded the weather</font><font color="#E5E5E5"> for</font>

2778
02:10:01,810 --> 02:10:05,760
every day in Germany<font color="#E5E5E5"> every state</font>

2779
02:10:09,250 --> 02:10:17,320
and yeah that's<font color="#E5E5E5"> about it right so you</font>

2780
02:10:17,320 --> 02:10:20,710
can get a data frame summary<font color="#E5E5E5"> with pandas</font>

2781
02:10:20,710 --> 02:10:22,690
<font color="#E5E5E5">which kind of lets you see how many</font>

2782
02:10:22,690 --> 02:10:24,430
observations and means and<font color="#E5E5E5"> standard</font>

2783
02:10:24,430 --> 02:10:27,190
deviations<font color="#CCCCCC"> again I don't do a hell of a</font>

2784
02:10:27,190 --> 02:10:30,130
lot with that<font color="#CCCCCC"> early on</font><font color="#E5E5E5"> but it's nice</font><font color="#CCCCCC"> to</font>

2785
02:10:30,130 --> 02:10:34,000
note there<font color="#E5E5E5"> so what we do you know this</font>

2786
02:10:34,000 --> 02:10:35,530
is called a<font color="#CCCCCC"> relational data set</font><font color="#E5E5E5"> a</font>

2787
02:10:35,530 --> 02:10:37,420
relational data set is one where there's

2788
02:10:37,420 --> 02:10:38,920
quite a few tables we have<font color="#E5E5E5"> to join</font>

2789
02:10:38,920 --> 02:10:41,410
<font color="#E5E5E5">together it's very easy to do that in</font>

2790
02:10:41,410 --> 02:10:43,780
pandas there's a thing called merge<font color="#E5E5E5"> so</font>

2791
02:10:43,780 --> 02:10:45,280
<font color="#CCCCCC">great little function to do that and so</font>

2792
02:10:45,280 --> 02:10:46,360
I just<font color="#CCCCCC"> started</font><font color="#E5E5E5"> joining everything</font>

2793
02:10:46,360 --> 02:10:46,750
together

2794
02:10:46,750 --> 02:10:49,380
<font color="#CCCCCC">joining the weather or the</font><font color="#E5E5E5"> Google Trends</font>

2795
02:10:49,380 --> 02:10:57,280
<font color="#E5E5E5">stores yeah that's about</font><font color="#CCCCCC"> everything I</font>

2796
02:10:57,280 --> 02:10:59,530
guess<font color="#CCCCCC"> you'll see there's one thing that</font>

2797
02:10:59,530 --> 02:11:02,650
<font color="#E5E5E5">I'm using from the</font><font color="#CCCCCC"> FASTA a library which</font>

2798
02:11:02,650 --> 02:11:04,300
is called add date part we<font color="#E5E5E5"> talked about</font>

2799
02:11:04,300 --> 02:11:06,100
<font color="#E5E5E5">this a lot in the machine</font><font color="#CCCCCC"> learning</font>

2800
02:11:06,100 --> 02:11:07,630
course<font color="#E5E5E5"> but basically this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to</font>

2801
02:11:07,630 --> 02:11:10,570
take a date<font color="#CCCCCC"> and pull out of</font><font color="#E5E5E5"> a bunch of</font>

2802
02:11:10,570 --> 02:11:12,970
columns day of week is at the start of<font color="#E5E5E5"> a</font>

2803
02:11:12,970 --> 02:11:16,000
quarter<font color="#E5E5E5"> month</font><font color="#CCCCCC"> of year</font><font color="#E5E5E5"> so on and so forth</font>

2804
02:11:16,000 --> 02:11:18,460
<font color="#E5E5E5">and add them all in to the</font><font color="#CCCCCC"> dataset</font><font color="#E5E5E5"> okay</font>

2805
02:11:18,460 --> 02:11:22,020
so this is all standard pre-processing

2806
02:11:22,740 --> 02:11:24,640
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right so we</font><font color="#CCCCCC"> join</font><font color="#E5E5E5"> everything together</font>

2807
02:11:24,640 --> 02:11:26,800
we<font color="#E5E5E5"> fiddle around with some of</font><font color="#CCCCCC"> the dates</font>

2808
02:11:26,800 --> 02:11:28,330
a little<font color="#CCCCCC"> bit some of</font><font color="#E5E5E5"> them are in month</font>

2809
02:11:28,330 --> 02:11:29,950
<font color="#CCCCCC">in</font><font color="#E5E5E5"> year format we</font><font color="#CCCCCC"> turn it into</font><font color="#E5E5E5"> date</font>

2810
02:11:29,950 --> 02:11:35,400
format we spend a<font color="#CCCCCC"> lot of time trying to</font>

2811
02:11:35,400 --> 02:11:37,930
take<font color="#E5E5E5"> information about for example</font>

2812
02:11:37,930 --> 02:11:40,690
<font color="#E5E5E5">holidays and add a column for like how</font>

2813
02:11:40,690 --> 02:11:42,940
<font color="#E5E5E5">long until</font><font color="#CCCCCC"> the next holiday</font><font color="#E5E5E5"> how long has</font>

2814
02:11:42,940 --> 02:11:45,130
it been since<font color="#E5E5E5"> the</font><font color="#CCCCCC"> last holiday ditto for</font>

2815
02:11:45,130 --> 02:11:49,870
promos<font color="#E5E5E5"> so on and so forth okay so we do</font>

2816
02:11:49,870 --> 02:11:52,180
all that<font color="#E5E5E5"> and at the very end we</font>

2817
02:11:52,180 --> 02:11:54,610
<font color="#E5E5E5">basically save a big structured data</font>

2818
02:11:54,610 --> 02:11:57,630
file that<font color="#E5E5E5"> contains all that stuff</font>

2819
02:11:57,630 --> 02:11:59,590
<font color="#CCCCCC">something that those</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> you that use</font>

2820
02:11:59,590 --> 02:12:01,300
<font color="#E5E5E5">pandas may not be aware</font><font color="#CCCCCC"> of is that</font>

2821
02:12:01,300 --> 02:12:03,100
<font color="#E5E5E5">there's a</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> cool new format called</font>

2822
02:12:03,100 --> 02:12:05,800
feather<font color="#CCCCCC"> which you can save a panda's</font>

2823
02:12:05,800 --> 02:12:08,890
data<font color="#CCCCCC"> frame</font><font color="#E5E5E5"> into this feather format it's</font>

2824
02:12:08,890 --> 02:12:11,170
kind of pretty<font color="#E5E5E5"> much takes it as it sits</font>

2825
02:12:11,170 --> 02:12:13,960
in RAM and dumps it<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> disk and so</font>

2826
02:12:13,960 --> 02:12:16,420
it's like really really<font color="#E5E5E5"> really</font><font color="#CCCCCC"> fast</font><font color="#E5E5E5"> the</font>

2827
02:12:16,420 --> 02:12:18,130
reason that you need<font color="#E5E5E5"> to know this is</font>

2828
02:12:18,130 --> 02:12:20,770
<font color="#E5E5E5">because the ecuadorian grocery</font>

2829
02:12:20,770 --> 02:12:22,720
competition is on now has

2830
02:12:22,720 --> 02:12:26,410
<font color="#CCCCCC">350 million records so you will care</font>

2831
02:12:26,410 --> 02:12:28,420
about<font color="#E5E5E5"> how long things take</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> I</font>

2832
02:12:28,420 --> 02:12:30,850
believe<font color="#E5E5E5"> about six seconds for me to save</font>

2833
02:12:30,850 --> 02:12:32,410
<font color="#E5E5E5">three</font><font color="#CCCCCC"> hundred and fifty million records</font>

2834
02:12:32,410 --> 02:12:35,010
to feather format so that's pretty cool

2835
02:12:35,010 --> 02:12:37,540
<font color="#E5E5E5">so at the end of all that I'd save it as</font>

2836
02:12:37,540 --> 02:12:39,070
<font color="#E5E5E5">a feather format and for the rest of</font>

2837
02:12:39,070 --> 02:12:40,540
this<font color="#CCCCCC"> discussion I'm just going to take</font>

2838
02:12:40,540 --> 02:12:43,170
it<font color="#CCCCCC"> as given</font><font color="#E5E5E5"> that we've got this nicely</font>

2839
02:12:43,170 --> 02:12:45,400
<font color="#E5E5E5">pre-processed feature engineered file</font>

2840
02:12:45,400 --> 02:12:48,790
and I<font color="#E5E5E5"> can just go read better okay but</font>

2841
02:12:48,790 --> 02:12:50,650
for<font color="#E5E5E5"> you to play along at home</font><font color="#CCCCCC"> you will</font>

2842
02:12:50,650 --> 02:12:53,220
<font color="#CCCCCC">have to run those previous cells</font><font color="#E5E5E5"> oh</font>

2843
02:12:53,220 --> 02:12:57,580
except the see these ones have commented

2844
02:12:57,580 --> 02:12:59,950
out you don't<font color="#CCCCCC"> have to run those because</font>

2845
02:12:59,950 --> 02:13:01,690
the file that<font color="#E5E5E5"> you download from files</font>

2846
02:13:01,690 --> 02:13:03,730
<font color="#CCCCCC">doc bastard AI</font><font color="#E5E5E5"> has already done</font><font color="#CCCCCC"> that for</font>

2847
02:13:03,730 --> 02:13:09,400
<font color="#E5E5E5">you okay all right so we basically have</font>

2848
02:13:09,400 --> 02:13:14,740
all<font color="#CCCCCC"> these</font><font color="#E5E5E5"> columns so it basically is</font>

2849
02:13:14,740 --> 02:13:18,510
going<font color="#E5E5E5"> to tell</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> you know how many of</font>

2850
02:13:18,510 --> 02:13:23,830
this thing was sold<font color="#E5E5E5"> on this date at this</font>

2851
02:13:23,830 --> 02:13:25,780
store and so the goal of this

2852
02:13:25,780 --> 02:13:28,990
competition<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to find out how many</font>

2853
02:13:28,990 --> 02:13:32,590
<font color="#E5E5E5">things will be sold for</font><font color="#CCCCCC"> each store for</font>

2854
02:13:32,590 --> 02:13:36,160
each type<font color="#CCCCCC"> of thing in the future okay</font>

2855
02:13:36,160 --> 02:13:38,200
<font color="#CCCCCC">and so that's basically what we're going</font>

2856
02:13:38,200 --> 02:13:40,900
<font color="#E5E5E5">to be trying to do</font><font color="#CCCCCC"> and so here's an</font>

2857
02:13:40,900 --> 02:13:42,340
<font color="#CCCCCC">example of what some of the data</font><font color="#E5E5E5"> looks</font>

2858
02:13:42,340 --> 02:13:48,640
<font color="#CCCCCC">like</font><font color="#E5E5E5"> and so next week we're going to see</font>

2859
02:13:48,640 --> 02:13:50,620
how to go<font color="#CCCCCC"> through these</font><font color="#E5E5E5"> steps but</font>

2860
02:13:50,620 --> 02:13:52,300
<font color="#E5E5E5">basically what we're going to learn is</font>

2861
02:13:52,300 --> 02:13:55,150
we're going<font color="#E5E5E5"> to learn to split the</font>

2862
02:13:55,150 --> 02:13:58,480
columns into<font color="#E5E5E5"> two types some columns were</font>

2863
02:13:58,480 --> 02:14:01,390
going to treat as categorical<font color="#E5E5E5"> which is</font>

2864
02:14:01,390 --> 02:14:06,310
to say store ID<font color="#CCCCCC"> one and store ID - I'm</font>

2865
02:14:06,310 --> 02:14:08,050
not numerically related to each<font color="#E5E5E5"> other</font>

2866
02:14:08,050 --> 02:14:11,050
<font color="#CCCCCC">they're categories</font><font color="#E5E5E5"> right we're going to</font>

2867
02:14:11,050 --> 02:14:13,150
treat day of week like that<font color="#CCCCCC"> - Monday and</font>

2868
02:14:13,150 --> 02:14:15,490
Tuesday<font color="#E5E5E5"> day zero and day one not</font>

2869
02:14:15,490 --> 02:14:17,800
<font color="#E5E5E5">numerically related to each other</font><font color="#CCCCCC"> where</font>

2870
02:14:17,800 --> 02:14:20,620
else distance in<font color="#E5E5E5"> kilometers to</font><font color="#CCCCCC"> the</font>

2871
02:14:20,620 --> 02:14:24,100
nearest competitor that's a<font color="#CCCCCC"> number that</font>

2872
02:14:24,100 --> 02:14:26,170
we're<font color="#E5E5E5"> going to treat numerically right</font>

2873
02:14:26,170 --> 02:14:28,090
so in other words<font color="#E5E5E5"> the categorical</font>

2874
02:14:28,090 --> 02:14:29,770
variables we basically<font color="#E5E5E5"> are going to one</font>

2875
02:14:29,770 --> 02:14:32,410
how<font color="#E5E5E5"> to encode them you can think</font><font color="#CCCCCC"> of it</font>

2876
02:14:32,410 --> 02:14:34,039
as one hot encoding<font color="#E5E5E5"> on</font><font color="#CCCCCC"> where</font>

2877
02:14:34,039 --> 02:14:35,839
the continuous variables<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font>

2878
02:14:35,839 --> 02:14:38,199
<font color="#E5E5E5">be feeding into fully connected layers</font>

2879
02:14:38,199 --> 02:14:43,609
<font color="#CCCCCC">just as is</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so what we'll be doing</font>

2880
02:14:43,609 --> 02:14:47,199
is<font color="#CCCCCC"> we'll be basically</font><font color="#E5E5E5"> creating a</font>

2881
02:14:47,199 --> 02:14:49,849
validation set<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you'll see like a lot</font>

2882
02:14:49,849 --> 02:14:51,109
<font color="#CCCCCC">of</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> are start</font><font color="#E5E5E5"> to look familiar this</font>

2883
02:14:51,109 --> 02:14:53,419
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the same function we used on</font><font color="#CCCCCC"> planet</font>

2884
02:14:53,419 --> 02:14:54,739
and dog<font color="#E5E5E5"> breeds to create a validation</font>

2885
02:14:54,739 --> 02:14:58,669
<font color="#E5E5E5">set</font><font color="#CCCCCC"> there's some stuff that</font><font color="#E5E5E5"> you haven't</font>

2886
02:14:58,669 --> 02:14:59,659
seen<font color="#E5E5E5"> before</font>

2887
02:14:59,659 --> 02:15:02,899
where we're going<font color="#E5E5E5"> to basically rather</font>

2888
02:15:02,899 --> 02:15:06,019
than saying image data dot from CSV

2889
02:15:06,019 --> 02:15:09,109
<font color="#E5E5E5">we're going to say columnar data from</font>

2890
02:15:09,109 --> 02:15:11,030
data frame<font color="#E5E5E5"> right so you can see like the</font>

2891
02:15:11,030 --> 02:15:13,780
basic API concepts<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be the same but</font>

2892
02:15:13,780 --> 02:15:17,689
they're a<font color="#CCCCCC"> little different right but</font>

2893
02:15:17,689 --> 02:15:18,919
just<font color="#CCCCCC"> like before we're going to get</font><font color="#E5E5E5"> a</font>

2894
02:15:18,919 --> 02:15:23,659
learner<font color="#CCCCCC"> and we're going to go lr find to</font>

2895
02:15:23,659 --> 02:15:26,359
<font color="#CCCCCC">find our best learning</font><font color="#E5E5E5"> rate and then</font>

2896
02:15:26,359 --> 02:15:28,749
we're going<font color="#CCCCCC"> to go dot fit with a metric</font>

2897
02:15:28,749 --> 02:15:33,019
with a cycle length okay so the<font color="#E5E5E5"> basic</font>

2898
02:15:33,019 --> 02:15:35,469
sequence<font color="#CCCCCC"> who's going to end</font><font color="#E5E5E5"> up looking</font>

2899
02:15:35,469 --> 02:15:39,079
hopefully very familiar<font color="#CCCCCC"> okay so we're</font>

2900
02:15:39,079 --> 02:15:40,339
<font color="#E5E5E5">out of time</font>

2901
02:15:40,339 --> 02:15:42,409
<font color="#E5E5E5">so what I suggest</font><font color="#CCCCCC"> you do this week is</font>

2902
02:15:42,409 --> 02:15:47,479
like try to enter as many<font color="#E5E5E5"> capital image</font>

2903
02:15:47,479 --> 02:15:49,969
competitions as possible<font color="#E5E5E5"> like like try</font>

2904
02:15:49,969 --> 02:15:53,030
to really<font color="#E5E5E5"> get this feel for like cycling</font>

2905
02:15:53,030 --> 02:15:59,030
learning rates<font color="#CCCCCC"> plotting things you know</font>

2906
02:15:59,030 --> 02:16:03,949
that that post I showed you at the start

2907
02:16:03,949 --> 02:16:05,869
<font color="#CCCCCC">of class</font><font color="#E5E5E5"> today that kind</font><font color="#CCCCCC"> of took you</font>

2908
02:16:05,869 --> 02:16:08,929
through<font color="#CCCCCC"> lesson one like really go</font>

2909
02:16:08,929 --> 02:16:11,030
through<font color="#E5E5E5"> that</font><font color="#CCCCCC"> on as many image datasets</font>

2910
02:16:11,030 --> 02:16:13,789
as you can<font color="#E5E5E5"> you just feel</font><font color="#CCCCCC"> really</font>

2911
02:16:13,789 --> 02:16:17,059
comfortable with it<font color="#E5E5E5"> right</font><font color="#CCCCCC"> because you</font>

2912
02:16:17,059 --> 02:16:18,409
want<font color="#CCCCCC"> to get to the</font><font color="#E5E5E5"> point where next week</font>

2913
02:16:18,409 --> 02:16:19,879
when we start<font color="#E5E5E5"> talking about structured</font>

2914
02:16:19,879 --> 02:16:22,309
data that<font color="#CCCCCC"> this idea of like how learners</font>

2915
02:16:22,309 --> 02:16:24,619
kind of work and data works and data

2916
02:16:24,619 --> 02:16:26,449
loaders and<font color="#CCCCCC"> data</font><font color="#E5E5E5"> sets and looking at</font>

2917
02:16:26,449 --> 02:16:28,869
<font color="#E5E5E5">pictures should be really you know</font>

2918
02:16:28,869 --> 02:16:31,819
<font color="#E5E5E5">intuitive all right good luck</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> you</font>

2919
02:16:31,819 --> 02:16:34,119
next week

2920
02:16:35,510 --> 00:00:00,000
[Applause]

