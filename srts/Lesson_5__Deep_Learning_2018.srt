1
00:00:00,030 --> 00:00:05,279
welcome back<font color="#CCCCCC"> so we had a busy lesson</font>

2
00:00:05,279 --> 00:00:11,639
<font color="#E5E5E5">last week and I was really thrilled to</font>

3
00:00:11,639 --> 00:00:14,160
see actually one of our<font color="#CCCCCC"> masters students</font>

4
00:00:14,160 --> 00:00:18,150
here at USF actually actually took what

5
00:00:18,150 --> 00:00:23,310
we learned took what we<font color="#CCCCCC"> learned with</font>

6
00:00:23,310 --> 00:00:25,019
<font color="#CCCCCC">structured deep learning and turned it</font>

7
00:00:25,019 --> 00:00:28,199
into<font color="#E5E5E5"> a blog post which as I suspected</font>

8
00:00:28,199 --> 00:00:30,750
has been incredibly popular<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it's</font>

9
00:00:30,750 --> 00:00:33,380
<font color="#E5E5E5">just something people didn't know about</font>

10
00:00:33,380 --> 00:00:35,489
<font color="#CCCCCC">and so it actually</font><font color="#E5E5E5"> ended up getting</font>

11
00:00:35,489 --> 00:00:38,190
picked up<font color="#E5E5E5"> by the towards data science</font>

12
00:00:38,190 --> 00:00:40,260
publication which I quite<font color="#CCCCCC"> liked actually</font>

13
00:00:40,260 --> 00:00:41,790
<font color="#CCCCCC">if you're interested</font><font color="#E5E5E5"> in keeping up with</font>

14
00:00:41,790 --> 00:00:43,620
what's<font color="#CCCCCC"> going on a data science it's</font>

15
00:00:43,620 --> 00:00:46,500
quite good<font color="#E5E5E5"> medium publication</font><font color="#CCCCCC"> and so</font>

16
00:00:46,500 --> 00:00:50,160
Karen talked about<font color="#E5E5E5"> structured deep</font>

17
00:00:50,160 --> 00:00:53,129
learning and basically introduced you

18
00:00:53,129 --> 00:00:55,320
know<font color="#CCCCCC"> the the the</font><font color="#E5E5E5"> basic ideas that</font><font color="#CCCCCC"> we</font>

19
00:00:55,320 --> 00:00:58,649
learned<font color="#E5E5E5"> about last week and it got</font>

20
00:00:58,649 --> 00:01:01,170
<font color="#E5E5E5">picked up quite quite widely one of the</font>

21
00:01:01,170 --> 00:01:02,699
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things I was pleased</font><font color="#CCCCCC"> to say</font>

22
00:01:02,699 --> 00:01:04,290
actually<font color="#CCCCCC"> sebastian ruder who actually</font>

23
00:01:04,290 --> 00:01:06,180
<font color="#E5E5E5">mentioned in last week's class as being</font>

24
00:01:06,180 --> 00:01:09,240
one<font color="#CCCCCC"> of my</font><font color="#E5E5E5"> favorite researchers tweeted</font>

25
00:01:09,240 --> 00:01:11,159
it and then<font color="#E5E5E5"> somebody from stitch fix</font>

26
00:01:11,159 --> 00:01:12,780
<font color="#E5E5E5">said oh yeah we've</font><font color="#CCCCCC"> actually been doing</font>

27
00:01:12,780 --> 00:01:16,590
<font color="#CCCCCC">that for ages</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is kind of cute I I</font>

28
00:01:16,590 --> 00:01:18,600
<font color="#E5E5E5">kind of know</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is happening in</font>

29
00:01:18,600 --> 00:01:20,130
industry<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> and I've</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> telling</font>

30
00:01:20,130 --> 00:01:21,450
people<font color="#E5E5E5"> this is happening in industry a</font>

31
00:01:21,450 --> 00:01:23,070
lot but nobody's been talking about<font color="#E5E5E5"> it</font>

32
00:01:23,070 --> 00:01:24,900
<font color="#E5E5E5">and now the</font><font color="#CCCCCC"> Karen's kind of published a</font>

33
00:01:24,900 --> 00:01:26,340
blog saying hey check out<font color="#E5E5E5"> this cool</font>

34
00:01:26,340 --> 00:01:28,140
<font color="#E5E5E5">thing and they all stitch</font><font color="#CCCCCC"> fixes</font><font color="#E5E5E5"> like</font>

35
00:01:28,140 --> 00:01:30,979
yeah we're doing<font color="#E5E5E5"> that already so so</font>

36
00:01:30,979 --> 00:01:34,979
<font color="#CCCCCC">that's been great great</font><font color="#E5E5E5"> to see and I</font>

37
00:01:34,979 --> 00:01:38,130
<font color="#E5E5E5">think there's still a lot more that can</font>

38
00:01:38,130 --> 00:01:39,990
<font color="#E5E5E5">be dug into with this structured people</font>

39
00:01:39,990 --> 00:01:42,210
learning stuff you know to build<font color="#E5E5E5"> on</font><font color="#CCCCCC"> top</font>

40
00:01:42,210 --> 00:01:44,270
of Karen's post<font color="#E5E5E5"> would be that maybe like</font>

41
00:01:44,270 --> 00:01:46,110
experiment with some<font color="#E5E5E5"> different</font><font color="#CCCCCC"> datasets</font>

42
00:01:46,110 --> 00:01:48,450
<font color="#CCCCCC">maybe find some old careful competitions</font>

43
00:01:48,450 --> 00:01:50,729
and see like there's some competitions

44
00:01:50,729 --> 00:01:53,490
that<font color="#E5E5E5"> you could now win with this or some</font>

45
00:01:53,490 --> 00:01:55,259
which doesn't<font color="#CCCCCC"> work for</font><font color="#E5E5E5"> would be equally</font>

46
00:01:55,259 --> 00:01:58,130
interesting<font color="#E5E5E5"> and also like just</font>

47
00:01:58,130 --> 00:01:59,700
experimenting a<font color="#CCCCCC"> bit with different</font>

48
00:01:59,700 --> 00:02:01,710
amounts of<font color="#CCCCCC"> dropout different layer sizes</font>

49
00:02:01,710 --> 00:02:05,430
<font color="#E5E5E5">you know because nobody much is written</font>

50
00:02:05,430 --> 00:02:07,439
<font color="#CCCCCC">about this I don't</font><font color="#E5E5E5"> think there's been</font>

51
00:02:07,439 --> 00:02:09,000
<font color="#CCCCCC">any blog posts</font><font color="#E5E5E5"> about this before that</font>

52
00:02:09,000 --> 00:02:10,788
I've seen anywhere

53
00:02:10,788 --> 00:02:13,970
there's a lot of unexplored territory so

54
00:02:13,970 --> 00:02:16,370
I think there's a lot we<font color="#CCCCCC"> could we could</font>

55
00:02:16,370 --> 00:02:17,870
build on top of<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and there's</font>

56
00:02:17,870 --> 00:02:19,760
definitely<font color="#CCCCCC"> a lot of interest as</font><font color="#E5E5E5"> well one</font>

57
00:02:19,760 --> 00:02:21,950
person<font color="#CCCCCC"> on Twitter</font><font color="#E5E5E5"> saying this is what</font>

58
00:02:21,950 --> 00:02:25,310
I've<font color="#CCCCCC"> been looking</font><font color="#E5E5E5"> for for</font><font color="#CCCCCC"> ages</font><font color="#E5E5E5"> another</font>

59
00:02:25,310 --> 00:02:27,670
thing which I was pleased<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see is</font>

60
00:02:27,670 --> 00:02:31,190
<font color="#CCCCCC">Nikki</font><font color="#E5E5E5"> or who we saw his cricket versus</font>

61
00:02:31,190 --> 00:02:33,620
baseball predictor as well as<font color="#CCCCCC"> his a</font>

62
00:02:33,620 --> 00:02:36,940
currency predictor after less than<font color="#CCCCCC"> one</font>

63
00:02:36,940 --> 00:02:40,819
<font color="#CCCCCC">went on to download</font><font color="#E5E5E5"> something a bit</font>

64
00:02:40,819 --> 00:02:43,489
bigger<font color="#E5E5E5"> which was to download a couple of</font>

65
00:02:43,489 --> 00:02:46,459
<font color="#E5E5E5">hundred of images of actors and he</font>

66
00:02:46,459 --> 00:02:48,739
manually<font color="#E5E5E5"> went through and checked which</font>

67
00:02:48,739 --> 00:02:50,599
well I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> first of all he like used</font>

68
00:02:50,599 --> 00:02:52,069
Google to try<font color="#E5E5E5"> and find ones with glasses</font>

69
00:02:52,069 --> 00:02:53,780
and<font color="#E5E5E5"> ones without then he manually went</font>

70
00:02:53,780 --> 00:02:55,010
through and checked<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that they put</font>

71
00:02:55,010 --> 00:02:57,140
in the right spot and<font color="#E5E5E5"> this was a good</font>

72
00:02:57,140 --> 00:03:00,140
example<font color="#CCCCCC"> of one where</font><font color="#E5E5E5"> vanilla</font><font color="#CCCCCC"> ResNet</font>

73
00:03:00,140 --> 00:03:01,970
didn't do so well<font color="#E5E5E5"> with just the last</font>

74
00:03:01,970 --> 00:03:06,019
layer and so what<font color="#E5E5E5"> Nikhil did was he went</font>

75
00:03:06,019 --> 00:03:07,670
<font color="#E5E5E5">through and tried on freezing the layers</font>

76
00:03:07,670 --> 00:03:09,140
and<font color="#E5E5E5"> using differential learning rates</font>

77
00:03:09,140 --> 00:03:11,709
<font color="#E5E5E5">and got up to a hundred percent accuracy</font>

78
00:03:11,709 --> 00:03:14,420
<font color="#CCCCCC">and the thing I like about these things</font>

79
00:03:14,420 --> 00:03:15,889
that<font color="#E5E5E5"> Nikhil was doing is the way he's</font>

80
00:03:15,889 --> 00:03:18,650
he's<font color="#CCCCCC"> not downloading a kegel data set</font>

81
00:03:18,650 --> 00:03:20,690
he's like deciding on a<font color="#E5E5E5"> problem that</font>

82
00:03:20,690 --> 00:03:22,280
he's going<font color="#CCCCCC"> to try</font><font color="#E5E5E5"> and solve he's going</font>

83
00:03:22,280 --> 00:03:24,590
from scratch from<font color="#CCCCCC"> google and he's</font>

84
00:03:24,590 --> 00:03:26,720
actually got a link here even to the

85
00:03:26,720 --> 00:03:28,280
suggested way to help you download

86
00:03:28,280 --> 00:03:30,410
images from Google<font color="#CCCCCC"> so I think this</font><font color="#E5E5E5"> is</font>

87
00:03:30,410 --> 00:03:33,680
great<font color="#CCCCCC"> and actually gave a talk just this</font>

88
00:03:33,680 --> 00:03:36,290
<font color="#CCCCCC">afternoon at singularity University to</font>

89
00:03:36,290 --> 00:03:38,870
<font color="#CCCCCC">an executive</font><font color="#E5E5E5"> team of one of the world's</font>

90
00:03:38,870 --> 00:03:40,910
largest telecommunications companies<font color="#CCCCCC"> and</font>

91
00:03:40,910 --> 00:03:43,989
actually<font color="#E5E5E5"> show them this post</font><font color="#CCCCCC"> because the</font>

92
00:03:43,989 --> 00:03:46,430
<font color="#E5E5E5">folks there were telling</font><font color="#CCCCCC"> me that that</font>

93
00:03:46,430 --> 00:03:47,900
<font color="#CCCCCC">all the vendors that</font><font color="#E5E5E5"> come to them and</font>

94
00:03:47,900 --> 00:03:50,180
tell<font color="#CCCCCC"> them they need</font><font color="#E5E5E5"> like millions of</font>

95
00:03:50,180 --> 00:03:52,010
<font color="#E5E5E5">images and huge data centers will have</font>

96
00:03:52,010 --> 00:03:53,630
hardware and you<font color="#E5E5E5"> know they have to buy a</font>

97
00:03:53,630 --> 00:03:56,720
<font color="#CCCCCC">special software</font><font color="#E5E5E5"> that only these vendors</font>

98
00:03:56,720 --> 00:03:58,910
can provide and I said<font color="#E5E5E5"> like actually</font>

99
00:03:58,910 --> 00:04:00,230
<font color="#E5E5E5">this person has been doing it of course</font>

100
00:04:00,230 --> 00:04:01,760
for<font color="#E5E5E5"> three weeks now and look at what</font>

101
00:04:01,760 --> 00:04:04,130
he's just<font color="#E5E5E5"> done with a computer</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> cost</font>

102
00:04:04,130 --> 00:04:06,260
<font color="#CCCCCC">him</font><font color="#E5E5E5"> 60 cents an hour and</font><font color="#CCCCCC"> they were like</font>

103
00:04:06,260 --> 00:04:08,989
they<font color="#CCCCCC"> were so happy to hear that like</font>

104
00:04:08,989 --> 00:04:11,090
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> they're you know this actually is</font>

105
00:04:11,090 --> 00:04:13,760
in the reach of<font color="#E5E5E5"> normal people</font><font color="#CCCCCC"> I'm</font>

106
00:04:13,760 --> 00:04:15,290
<font color="#E5E5E5">assuming Nikhil is a normal person I</font>

107
00:04:15,290 --> 00:04:15,980
haven't<font color="#E5E5E5"> actually</font>

108
00:04:15,980 --> 00:04:20,029
<font color="#CCCCCC">and</font><font color="#E5E5E5"> if your proudly abnormal</font><font color="#CCCCCC"> Nicole</font><font color="#E5E5E5"> I</font>

109
00:04:20,029 --> 00:04:23,510
apologize I actually went and<font color="#CCCCCC"> actually</font>

110
00:04:23,510 --> 00:04:26,090
had a look at his<font color="#E5E5E5"> cricket classifier and</font>

111
00:04:26,090 --> 00:04:27,620
<font color="#E5E5E5">I was really pleased to see that his</font>

112
00:04:27,620 --> 00:04:29,900
code actually<font color="#E5E5E5"> is the exact same code</font>

113
00:04:29,900 --> 00:04:32,300
that<font color="#CCCCCC"> were used in Lesson one I was</font>

114
00:04:32,300 --> 00:04:33,500
hoping that would<font color="#E5E5E5"> be the case you know</font>

115
00:04:33,500 --> 00:04:35,840
the only<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> he changed was</font><font color="#E5E5E5"> the number</font>

116
00:04:35,840 --> 00:04:38,690
of epochs I guess<font color="#E5E5E5"> so this idea that we</font>

117
00:04:38,690 --> 00:04:40,250
can<font color="#E5E5E5"> take those four lines of</font><font color="#CCCCCC"> code and</font>

118
00:04:40,250 --> 00:04:41,660
reuse it to<font color="#CCCCCC"> do other things that's</font>

119
00:04:41,660 --> 00:04:44,900
definitely<font color="#CCCCCC"> turned out to be</font><font color="#E5E5E5"> true and</font><font color="#CCCCCC"> so</font>

120
00:04:44,900 --> 00:04:46,729
these<font color="#CCCCCC"> are good things to</font><font color="#E5E5E5"> show like it</font>

121
00:04:46,729 --> 00:04:49,160
<font color="#CCCCCC">yeah your organization if you're</font>

122
00:04:49,160 --> 00:04:51,320
anything like the executives<font color="#E5E5E5"> of this big</font>

123
00:04:51,320 --> 00:04:52,729
<font color="#E5E5E5">company I spoke to today there'll be a</font>

124
00:04:52,729 --> 00:04:55,220
<font color="#E5E5E5">certain</font><font color="#CCCCCC"> amount</font><font color="#E5E5E5"> of like not</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> surprise</font>

125
00:04:55,220 --> 00:04:58,130
but almost<font color="#E5E5E5"> like</font><font color="#CCCCCC"> pushback like if this</font>

126
00:04:58,130 --> 00:04:59,900
<font color="#E5E5E5">was true somebody does it all that</font>

127
00:04:59,900 --> 00:05:00,950
<font color="#CCCCCC">message she said if this</font><font color="#E5E5E5"> was true</font>

128
00:05:00,950 --> 00:05:02,810
somebody would<font color="#CCCCCC"> have told us so</font><font color="#E5E5E5"> like why</font>

129
00:05:02,810 --> 00:05:04,820
isn't<font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> doing this</font><font color="#E5E5E5"> already so</font>

130
00:05:04,820 --> 00:05:05,930
<font color="#CCCCCC">we'd like</font><font color="#E5E5E5"> it I think you might have to</font>

131
00:05:05,930 --> 00:05:08,150
actually<font color="#CCCCCC"> show them you</font><font color="#E5E5E5"> know maybe you</font>

132
00:05:08,150 --> 00:05:09,979
can build<font color="#CCCCCC"> your own there's some internal</font>

133
00:05:09,979 --> 00:05:11,300
data you've got at<font color="#E5E5E5"> work or something</font>

134
00:05:11,300 --> 00:05:14,570
<font color="#CCCCCC">like here it</font><font color="#E5E5E5"> is you know didn't cost me</font>

135
00:05:14,570 --> 00:05:20,570
anything<font color="#CCCCCC"> it's all finished fiddly</font><font color="#E5E5E5"> or</font>

136
00:05:20,570 --> 00:05:21,590
badly<font color="#CCCCCC"> I don't know how to pronounce</font><font color="#E5E5E5"> his</font>

137
00:05:21,590 --> 00:05:23,030
name correctly has done another very

138
00:05:23,030 --> 00:05:26,150
nice post on just an introductory<font color="#E5E5E5"> post</font>

139
00:05:26,150 --> 00:05:28,700
on how we train<font color="#E5E5E5"> neural networks and I've</font>

140
00:05:28,700 --> 00:05:30,620
wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> point this one out as being</font>

141
00:05:30,620 --> 00:05:33,080
like I<font color="#CCCCCC"> think this</font><font color="#E5E5E5"> is one of the</font>

142
00:05:33,080 --> 00:05:34,520
<font color="#E5E5E5">participants in this course who has got</font>

143
00:05:34,520 --> 00:05:36,350
a particular knack for technical

144
00:05:36,350 --> 00:05:37,910
communication and I think we can all

145
00:05:37,910 --> 00:05:40,340
learn<font color="#CCCCCC"> from</font><font color="#E5E5E5"> you know from his</font><font color="#CCCCCC"> post about</font>

146
00:05:40,340 --> 00:05:43,280
about good technical writing what I

147
00:05:43,280 --> 00:05:46,310
really<font color="#E5E5E5"> like particularly is</font><font color="#CCCCCC"> that he he</font>

148
00:05:46,310 --> 00:05:48,110
assumes almost nothing like he has a

149
00:05:48,110 --> 00:05:50,240
<font color="#E5E5E5">kind of a very chatty tone and describes</font>

150
00:05:50,240 --> 00:05:52,220
<font color="#E5E5E5">everything but he also assumes that the</font>

151
00:05:52,220 --> 00:05:54,410
reader<font color="#CCCCCC"> is intelligent but you know so</font>

152
00:05:54,410 --> 00:05:55,700
<font color="#E5E5E5">like he's not afraid</font><font color="#CCCCCC"> to kind of say</font>

153
00:05:55,700 --> 00:05:57,560
<font color="#CCCCCC">here's a paper</font><font color="#E5E5E5"> or here's an equation or</font>

154
00:05:57,560 --> 00:05:59,539
or whatever<font color="#E5E5E5"> but then he's going to</font><font color="#CCCCCC"> go</font>

155
00:05:59,539 --> 00:06:00,830
<font color="#E5E5E5">through and tell you</font><font color="#CCCCCC"> exactly what that</font>

156
00:06:00,830 --> 00:06:03,889
<font color="#CCCCCC">equation means so it's kind of like</font><font color="#E5E5E5"> this</font>

157
00:06:03,889 --> 00:06:06,490
<font color="#E5E5E5">nice mix of like writing for</font>

158
00:06:06,490 --> 00:06:08,450
respectfully for<font color="#CCCCCC"> an intelligent audience</font>

159
00:06:08,450 --> 00:06:11,450
but<font color="#CCCCCC"> also not assuming any particular</font>

160
00:06:11,450 --> 00:06:16,880
background<font color="#E5E5E5"> knowledge</font><font color="#CCCCCC"> so then I</font><font color="#E5E5E5"> made the</font>

161
00:06:16,880 --> 00:06:18,860
mistake earlier this week of posting a

162
00:06:18,860 --> 00:06:21,979
<font color="#CCCCCC">picture of my first placing on the</font>

163
00:06:21,979 --> 00:06:24,200
<font color="#CCCCCC">Carroll seedlings competition</font><font color="#E5E5E5"> at which</font>

164
00:06:24,200 --> 00:06:26,780
<font color="#E5E5E5">point five other fast AI students posted</font>

165
00:06:26,780 --> 00:06:28,510
their pictures<font color="#CCCCCC"> of them pass</font>

166
00:06:28,510 --> 00:06:31,720
over the next<font color="#E5E5E5"> few days</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is the</font>

167
00:06:31,720 --> 00:06:33,640
<font color="#E5E5E5">current leaderboard</font><font color="#CCCCCC"> for the cattle plant</font>

168
00:06:33,640 --> 00:06:35,140
seedlings competition I believe the

169
00:06:35,140 --> 00:06:38,080
<font color="#CCCCCC">product top six are all fast AI students</font>

170
00:06:38,080 --> 00:06:42,220
or in the worst of those<font color="#E5E5E5"> teachers and</font><font color="#CCCCCC"> so</font>

171
00:06:42,220 --> 00:06:45,760
I think<font color="#E5E5E5"> this is like a really</font><font color="#CCCCCC"> Oh James</font>

172
00:06:45,760 --> 00:06:48,370
is<font color="#E5E5E5"> just passed he was first</font><font color="#CCCCCC"> this is a</font>

173
00:06:48,370 --> 00:06:52,150
really good<font color="#E5E5E5"> example of</font><font color="#CCCCCC"> like what you can</font>

174
00:06:52,150 --> 00:06:55,630
do<font color="#CCCCCC"> but this</font><font color="#E5E5E5"> is trying to think it was</font>

175
00:06:55,630 --> 00:06:58,540
like a small<font color="#E5E5E5"> number of thousands of</font>

176
00:06:58,540 --> 00:07:02,800
images<font color="#E5E5E5"> and most of the images were only</font>

177
00:07:02,800 --> 00:07:04,480
<font color="#E5E5E5">were less than</font><font color="#CCCCCC"> a hundred pixels by a</font>

178
00:07:04,480 --> 00:07:09,820
hundred pixels<font color="#E5E5E5"> and yet week you know I</font>

179
00:07:09,820 --> 00:07:11,710
bet my approach was basically to say

180
00:07:11,710 --> 00:07:13,060
let's<font color="#CCCCCC"> just run through the notebook we</font>

181
00:07:13,060 --> 00:07:15,130
have pretty much default<font color="#E5E5E5"> took</font><font color="#CCCCCC"> the I</font>

182
00:07:15,130 --> 00:07:19,270
don't know an<font color="#E5E5E5"> hour</font><font color="#CCCCCC"> and I'm I think</font><font color="#E5E5E5"> the</font>

183
00:07:19,270 --> 00:07:21,310
other students<font color="#E5E5E5"> doing a little bit more</font>

184
00:07:21,310 --> 00:07:23,170
than that but<font color="#CCCCCC"> not</font><font color="#E5E5E5"> a lot more and</font>

185
00:07:23,170 --> 00:07:25,750
<font color="#E5E5E5">basically what this is saying is yeah</font>

186
00:07:25,750 --> 00:07:28,720
these<font color="#CCCCCC"> these techniques work</font><font color="#E5E5E5"> pretty</font>

187
00:07:28,720 --> 00:07:30,730
reliably to a point where people<font color="#CCCCCC"> that</font>

188
00:07:30,730 --> 00:07:33,450
aren't using<font color="#E5E5E5"> the fast I know</font><font color="#CCCCCC"> libraries</font>

189
00:07:33,450 --> 00:07:37,410
<font color="#E5E5E5">you know literally really struggling</font>

190
00:07:37,410 --> 00:07:40,000
<font color="#E5E5E5">let's just pick off these are</font><font color="#CCCCCC"> first aid</font>

191
00:07:40,000 --> 00:07:41,620
<font color="#CCCCCC">a students might have to go down quite a</font>

192
00:07:41,620 --> 00:07:43,870
way so I<font color="#E5E5E5"> thought that was</font><font color="#CCCCCC"> very</font>

193
00:07:43,870 --> 00:07:48,520
<font color="#CCCCCC">interesting and really really</font><font color="#E5E5E5"> cool so</font>

194
00:07:48,520 --> 00:07:52,330
today we are<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to start what I would</font>

195
00:07:52,330 --> 00:07:55,510
kind of call like the second<font color="#E5E5E5"> half of</font>

196
00:07:55,510 --> 00:07:58,300
<font color="#E5E5E5">this</font><font color="#CCCCCC"> course so the first half</font><font color="#E5E5E5"> of this</font>

197
00:07:58,300 --> 00:08:01,350
course is being like getting through

198
00:08:01,350 --> 00:08:04,030
like these<font color="#E5E5E5"> are the applications that we</font>

199
00:08:04,030 --> 00:08:07,660
can<font color="#E5E5E5"> use this for here's kind of the code</font>

200
00:08:07,660 --> 00:08:10,840
<font color="#CCCCCC">you have to write</font><font color="#E5E5E5"> here's a fairly high</font>

201
00:08:10,840 --> 00:08:13,590
level ish description of what it's doing

202
00:08:13,590 --> 00:08:17,830
<font color="#CCCCCC">and we're kind of we're kind of done for</font>

203
00:08:17,830 --> 00:08:19,510
that bit and what we're now<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do</font>

204
00:08:19,510 --> 00:08:21,670
<font color="#E5E5E5">is go in reverse we're going to go back</font>

205
00:08:21,670 --> 00:08:23,320
<font color="#CCCCCC">over all</font><font color="#E5E5E5"> of those exact</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> things</font>

206
00:08:23,320 --> 00:08:25,570
<font color="#CCCCCC">again</font><font color="#E5E5E5"> but this time we're going</font><font color="#CCCCCC"> to dig</font>

207
00:08:25,570 --> 00:08:27,550
<font color="#E5E5E5">into the detail of every one and we're</font>

208
00:08:27,550 --> 00:08:29,020
<font color="#E5E5E5">going to look inside the source code</font><font color="#CCCCCC"> of</font>

209
00:08:29,020 --> 00:08:30,550
<font color="#E5E5E5">the first idea library to see what it's</font>

210
00:08:30,550 --> 00:08:35,590
doing<font color="#E5E5E5"> and try to replicate that so in a</font>

211
00:08:35,590 --> 00:08:38,049
students like there's not going to be a

212
00:08:38,049 --> 00:08:40,709
lot<font color="#CCCCCC"> more</font>

213
00:08:41,500 --> 00:08:43,630
best practices<font color="#CCCCCC"> to show you like I've</font>

214
00:08:43,630 --> 00:08:45,370
kind<font color="#E5E5E5"> of shown you the best best</font>

215
00:08:45,370 --> 00:08:47,830
practices I know but I feel<font color="#CCCCCC"> like for</font><font color="#E5E5E5"> us</font>

216
00:08:47,830 --> 00:08:50,020
<font color="#E5E5E5">to</font><font color="#CCCCCC"> now build on top</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> those to debug</font>

217
00:08:50,020 --> 00:08:52,540
those models<font color="#E5E5E5"> to come back to part two</font>

218
00:08:52,540 --> 00:08:54,250
<font color="#E5E5E5">where we're going to</font><font color="#CCCCCC"> kind of try out</font>

219
00:08:54,250 --> 00:08:56,380
some new<font color="#CCCCCC"> things</font><font color="#E5E5E5"> you know it really helps</font>

220
00:08:56,380 --> 00:08:58,780
<font color="#CCCCCC">to understand what's going on behind</font><font color="#E5E5E5"> the</font>

221
00:08:58,780 --> 00:09:02,830
<font color="#CCCCCC">scenes okay so the goal here today is</font>

222
00:09:02,830 --> 00:09:06,070
we're<font color="#E5E5E5"> going to try and create a pretty</font>

223
00:09:06,070 --> 00:09:09,930
effective collaborative filtering model

224
00:09:09,960 --> 00:09:13,150
<font color="#CCCCCC">almost entirely from scratch so we'll</font>

225
00:09:13,150 --> 00:09:15,390
<font color="#E5E5E5">use the kind of we'll use</font><font color="#CCCCCC"> PI torch as a</font>

226
00:09:15,390 --> 00:09:17,560
automatic differentiation tool and

227
00:09:17,560 --> 00:09:19,330
there's a<font color="#E5E5E5"> GPU programming tool and not</font>

228
00:09:19,330 --> 00:09:21,340
<font color="#E5E5E5">very much else</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> try not to use its</font>

229
00:09:21,340 --> 00:09:23,190
neural net features we'll try not<font color="#CCCCCC"> to use</font>

230
00:09:23,190 --> 00:09:26,170
fast AI<font color="#E5E5E5"> library</font><font color="#CCCCCC"> anymore than</font><font color="#E5E5E5"> necessary</font>

231
00:09:26,170 --> 00:09:30,640
<font color="#CCCCCC">so that's the goal</font><font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> go back and</font>

232
00:09:30,640 --> 00:09:31,990
you know we<font color="#CCCCCC"> only very quickly know</font>

233
00:09:31,990 --> 00:09:33,700
collaborative<font color="#E5E5E5"> filtering last time so</font>

234
00:09:33,700 --> 00:09:35,800
let's let's go<font color="#CCCCCC"> back and</font><font color="#E5E5E5"> have a look at</font>

235
00:09:35,800 --> 00:09:37,570
collaborative<font color="#E5E5E5"> filtering and so we're</font>

236
00:09:37,570 --> 00:09:40,660
going<font color="#E5E5E5"> to look at this movie lens data</font>

237
00:09:40,660 --> 00:09:47,230
set<font color="#E5E5E5"> so the movie lens data set basically</font>

238
00:09:47,230 --> 00:09:49,750
is a list of ratings<font color="#E5E5E5"> it's got a bunch of</font>

239
00:09:49,750 --> 00:09:51,850
different<font color="#CCCCCC"> users that</font><font color="#E5E5E5"> are represented</font><font color="#CCCCCC"> by</font>

240
00:09:51,850 --> 00:09:54,550
some ID and a bunch of<font color="#E5E5E5"> movies</font><font color="#CCCCCC"> that are</font>

241
00:09:54,550 --> 00:09:57,850
represented by<font color="#E5E5E5"> some ID and rating it</font>

242
00:09:57,850 --> 00:09:58,900
also has a<font color="#CCCCCC"> timestamp</font>

243
00:09:58,900 --> 00:10:00,310
I haven't actually ever tried to<font color="#CCCCCC"> use</font>

244
00:10:00,310 --> 00:10:02,770
this I guess this is just<font color="#CCCCCC"> like what what</font>

245
00:10:02,770 --> 00:10:07,450
time did that person<font color="#CCCCCC"> read that movie so</font>

246
00:10:07,450 --> 00:10:09,070
that's all we're going to<font color="#E5E5E5"> use for</font>

247
00:10:09,070 --> 00:10:13,000
<font color="#CCCCCC">modelling is</font><font color="#E5E5E5"> three columns user ID movie</font>

248
00:10:13,000 --> 00:10:16,330
ID and rating<font color="#E5E5E5"> and so thinking of that in</font>

249
00:10:16,330 --> 00:10:18,700
<font color="#E5E5E5">kind of structured data terms user ID</font>

250
00:10:18,700 --> 00:10:20,380
and movie ID<font color="#E5E5E5"> would be categorical</font>

251
00:10:20,380 --> 00:10:23,770
variables we have<font color="#CCCCCC"> two of them</font><font color="#E5E5E5"> and rating</font>

252
00:10:23,770 --> 00:10:28,410
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be a with the independent variable</font>

253
00:10:28,410 --> 00:10:30,670
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> not going to use this for modeling</font>

254
00:10:30,670 --> 00:10:32,770
but<font color="#E5E5E5"> we can use it</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> looking at stuff</font>

255
00:10:32,770 --> 00:10:35,080
later we<font color="#E5E5E5"> can grab a list of the names of</font>

256
00:10:35,080 --> 00:10:37,990
the movies<font color="#E5E5E5"> as well and</font><font color="#CCCCCC"> reproduce</font><font color="#E5E5E5"> this</font>

257
00:10:37,990 --> 00:10:40,839
genre information I haven't tried to<font color="#E5E5E5"> be</font>

258
00:10:40,839 --> 00:10:42,160
interested if<font color="#E5E5E5"> during the week anybody</font>

259
00:10:42,160 --> 00:10:44,740
tries it and<font color="#E5E5E5"> finds it helpful</font><font color="#CCCCCC"> my guess</font>

260
00:10:44,740 --> 00:10:46,089
<font color="#CCCCCC">is</font><font color="#E5E5E5"> you might not find it helpful</font>

261
00:10:46,089 --> 00:10:50,709
we'll see so<font color="#E5E5E5"> in order to kind of look at</font>

262
00:10:50,709 --> 00:10:55,180
<font color="#E5E5E5">this better I just</font><font color="#CCCCCC"> grabbed</font>

263
00:10:55,180 --> 00:10:57,880
the users<font color="#CCCCCC"> that have watched the</font><font color="#E5E5E5"> most</font>

264
00:10:57,880 --> 00:10:59,860
movies and the movies<font color="#CCCCCC"> that have been the</font>

265
00:10:59,860 --> 00:11:03,820
most watched and made<font color="#E5E5E5"> a crosstab of it</font>

266
00:11:03,820 --> 00:11:05,620
right<font color="#E5E5E5"> so this is exactly the same data</font>

267
00:11:05,620 --> 00:11:08,500
but<font color="#E5E5E5"> it's a subset and now rather than</font>

268
00:11:08,500 --> 00:11:11,400
<font color="#E5E5E5">being user movie rating we've got user</font>

269
00:11:11,400 --> 00:11:16,960
movie rating<font color="#CCCCCC"> and so some users haven't</font>

270
00:11:16,960 --> 00:11:19,120
watched some<font color="#CCCCCC"> of these movies that's</font><font color="#E5E5E5"> why</font>

271
00:11:19,120 --> 00:11:23,650
<font color="#E5E5E5">some of these okay</font><font color="#CCCCCC"> then I copied that</font>

272
00:11:23,650 --> 00:11:27,820
into<font color="#E5E5E5"> Excel</font><font color="#CCCCCC"> and you'll see there's a</font>

273
00:11:27,820 --> 00:11:31,540
thing called<font color="#E5E5E5"> collab your XLS if you</font>

274
00:11:31,540 --> 00:11:32,950
don't see<font color="#E5E5E5"> it there now</font><font color="#CCCCCC"> I'll make</font><font color="#E5E5E5"> sure I</font>

275
00:11:32,950 --> 00:11:37,840
put<font color="#E5E5E5"> it there</font><font color="#CCCCCC"> back tomorrow and here is</font>

276
00:11:37,840 --> 00:11:43,060
where I've copied that table okay so as

277
00:11:43,060 --> 00:11:46,000
I go through<font color="#E5E5E5"> this like</font><font color="#CCCCCC"> setup of the</font>

278
00:11:46,000 --> 00:11:47,740
<font color="#E5E5E5">problem and kind</font><font color="#CCCCCC"> of how its described</font>

279
00:11:47,740 --> 00:11:50,890
and stuff if<font color="#E5E5E5"> you're ever feeling lost</font>

280
00:11:50,890 --> 00:11:54,280
feel free to ask<font color="#E5E5E5"> either directly or</font>

281
00:11:54,280 --> 00:11:56,950
through the forum<font color="#CCCCCC"> if you ask through the</font>

282
00:11:56,950 --> 00:11:59,200
forum and<font color="#E5E5E5"> somebody answers there I want</font>

283
00:11:59,200 --> 00:12:02,050
<font color="#CCCCCC">you to answer</font><font color="#E5E5E5"> it here but if somebody</font>

284
00:12:02,050 --> 00:12:03,400
<font color="#CCCCCC">else asks a question you would like</font>

285
00:12:03,400 --> 00:12:07,450
answered of course<font color="#CCCCCC"> just</font><font color="#E5E5E5"> like it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> your</font>

286
00:12:07,450 --> 00:12:09,790
<font color="#E5E5E5">network keep an eye out</font><font color="#CCCCCC"> for that because</font>

287
00:12:09,790 --> 00:12:11,920
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that's we're digging in to the</font>

288
00:12:11,920 --> 00:12:13,330
details of what's going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> behind the</font>

289
00:12:13,330 --> 00:12:14,890
<font color="#E5E5E5">scenes it's kind of important that at</font>

290
00:12:14,890 --> 00:12:16,590
each stage you<font color="#CCCCCC"> feel</font><font color="#E5E5E5"> like okay I can see</font>

291
00:12:16,590 --> 00:12:26,740
what's<font color="#CCCCCC"> going</font><font color="#E5E5E5"> on okay so we can</font><font color="#CCCCCC"> actually</font>

292
00:12:26,740 --> 00:12:29,860
<font color="#E5E5E5">not going to build a neural net to</font><font color="#CCCCCC"> start</font>

293
00:12:29,860 --> 00:12:32,530
with instead we're<font color="#E5E5E5"> going to do something</font>

294
00:12:32,530 --> 00:12:36,910
called<font color="#E5E5E5"> a</font><font color="#CCCCCC"> matrix factorization the reason</font>

295
00:12:36,910 --> 00:12:38,050
we're not going<font color="#E5E5E5"> to build a neural net to</font>

296
00:12:38,050 --> 00:12:39,970
start with is<font color="#CCCCCC"> that it so happens there's</font>

297
00:12:39,970 --> 00:12:43,000
a really<font color="#E5E5E5"> really simple kind of way</font><font color="#CCCCCC"> of</font>

298
00:12:43,000 --> 00:12:44,650
solving these kinds of problems<font color="#CCCCCC"> which</font>

299
00:12:44,650 --> 00:12:47,440
I'm<font color="#E5E5E5"> going to show you and so if I scroll</font>

300
00:12:47,440 --> 00:12:50,290
down<font color="#E5E5E5"> I've basically what I've got here</font>

301
00:12:50,290 --> 00:12:53,560
is the<font color="#CCCCCC"> same the</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing but this time</font>

302
00:12:53,560 --> 00:12:56,020
these<font color="#CCCCCC"> are my predictions</font><font color="#E5E5E5"> rather than my</font>

303
00:12:56,020 --> 00:12:57,220
actuals<font color="#CCCCCC"> and I'm going</font><font color="#E5E5E5"> to show you how I</font>

304
00:12:57,220 --> 00:12:59,680
created these predictions<font color="#E5E5E5"> okay so here</font>

305
00:12:59,680 --> 00:13:03,450
<font color="#E5E5E5">my actuals right here my predictions and</font>

306
00:13:03,450 --> 00:13:07,790
then down here<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

307
00:13:07,790 --> 00:13:11,959
our score which is<font color="#CCCCCC"> the sum of the</font>

308
00:13:11,959 --> 00:13:15,290
<font color="#E5E5E5">different squared average square root</font>

309
00:13:15,290 --> 00:13:18,470
<font color="#E5E5E5">okay so this is I</font><font color="#CCCCCC"> are MSE down here</font><font color="#E5E5E5"> okay</font>

310
00:13:18,470 --> 00:13:22,100
so<font color="#CCCCCC"> on average we're randomly initialized</font>

311
00:13:22,100 --> 00:13:25,760
model is out by<font color="#CCCCCC"> 2.8 so let me show you</font>

312
00:13:25,760 --> 00:13:28,010
<font color="#E5E5E5">what this model is and I'm going to show</font>

313
00:13:28,010 --> 00:13:30,709
<font color="#E5E5E5">you by saying how do we guess how much</font>

314
00:13:30,709 --> 00:13:35,779
user ID<font color="#CCCCCC"> number 14 likes movie ID number</font>

315
00:13:35,779 --> 00:13:39,199
27<font color="#CCCCCC"> and the prediction here this is just</font>

316
00:13:39,199 --> 00:13:41,560
at this stage<font color="#E5E5E5"> this is still random is</font>

317
00:13:41,560 --> 00:13:46,670
<font color="#CCCCCC">0.9 1 so how we calculate 0.9 1</font><font color="#E5E5E5"> and the</font>

318
00:13:46,670 --> 00:13:50,990
<font color="#E5E5E5">answer is we're</font><font color="#CCCCCC"> taking it as this vector</font>

319
00:13:50,990 --> 00:13:55,790
<font color="#E5E5E5">here dot product with this vector here</font>

320
00:13:55,790 --> 00:13:59,600
so dot product means<font color="#CCCCCC"> 0.71 times 0.1 9</font>

321
00:13:59,600 --> 00:14:03,320
plus 0.8 1 times<font color="#E5E5E5"> point</font><font color="#CCCCCC"> 6</font><font color="#E5E5E5"> 3 plus point 7</font>

322
00:14:03,320 --> 00:14:05,990
volt plus point 3<font color="#CCCCCC"> 1 and so forth and in</font>

323
00:14:05,990 --> 00:14:08,240
you know<font color="#E5E5E5"> linear algebra speak because</font>

324
00:14:08,240 --> 00:14:09,560
one<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> is a column and one of them</font>

325
00:14:09,560 --> 00:14:11,959
is a row<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the same as a matrix</font>

326
00:14:11,959 --> 00:14:13,550
<font color="#E5E5E5">product so you can see here I've</font><font color="#CCCCCC"> used</font>

327
00:14:13,550 --> 00:14:17,029
the<font color="#E5E5E5"> Excel fashion matrix multiplier</font><font color="#CCCCCC"> and</font>

328
00:14:17,029 --> 00:14:21,380
that's my prediction<font color="#CCCCCC"> having said that if</font>

329
00:14:21,380 --> 00:14:28,089
the original<font color="#CCCCCC"> rating doesn't exist at all</font>

330
00:14:28,089 --> 00:14:30,649
<font color="#CCCCCC">then I'm just going to set this to 0</font>

331
00:14:30,649 --> 00:14:33,050
<font color="#E5E5E5">right because like there's no error in</font>

332
00:14:33,050 --> 00:14:34,220
<font color="#CCCCCC">predicting something</font><font color="#E5E5E5"> that hasn't</font>

333
00:14:34,220 --> 00:14:37,100
happened<font color="#CCCCCC"> okay so what I'm going</font><font color="#E5E5E5"> to do is</font>

334
00:14:37,100 --> 00:14:38,360
I'm<font color="#CCCCCC"> basically going to say alright</font>

335
00:14:38,360 --> 00:14:40,819
<font color="#E5E5E5">everyone of</font><font color="#CCCCCC"> my right rate</font><font color="#E5E5E5"> my predictions</font>

336
00:14:40,819 --> 00:14:43,519
<font color="#E5E5E5">is not going to be a neural net it's</font>

337
00:14:43,519 --> 00:14:45,560
going to be a single<font color="#E5E5E5"> matrix</font>

338
00:14:45,560 --> 00:14:48,880
multiplication<font color="#E5E5E5"> all right now the matrix</font>

339
00:14:48,880 --> 00:14:51,670
<font color="#CCCCCC">multiplication</font><font color="#E5E5E5"> that it's doing is</font>

340
00:14:51,670 --> 00:14:54,829
<font color="#E5E5E5">basically in practice is between like</font>

341
00:14:54,829 --> 00:15:02,120
this matrix and this matrix<font color="#E5E5E5"> right so</font>

342
00:15:02,120 --> 00:15:04,430
each one of<font color="#CCCCCC"> these is a single part of</font>

343
00:15:04,430 --> 00:15:11,240
<font color="#E5E5E5">that</font><font color="#CCCCCC"> so I randomly initialize these</font>

344
00:15:11,240 --> 00:15:14,060
these are just<font color="#E5E5E5"> random</font><font color="#CCCCCC"> numbers that I've</font>

345
00:15:14,060 --> 00:15:16,670
just pasted in<font color="#CCCCCC"> here so I've basically</font>

346
00:15:16,670 --> 00:15:20,000
started off with two<font color="#E5E5E5"> random matrices and</font>

347
00:15:20,000 --> 00:15:21,570
I've said let's

348
00:15:21,570 --> 00:15:24,450
assume for<font color="#CCCCCC"> the time being that every</font>

349
00:15:24,450 --> 00:15:27,990
rating<font color="#E5E5E5"> can be represented as the</font><font color="#CCCCCC"> matrix</font>

350
00:15:27,990 --> 00:15:31,980
<font color="#E5E5E5">product of those</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> so then in Excel</font>

351
00:15:31,980 --> 00:15:36,200
<font color="#CCCCCC">you can actually do a gradient</font><font color="#E5E5E5"> descent</font>

352
00:15:36,680 --> 00:15:39,390
<font color="#E5E5E5">you have to go to your</font><font color="#CCCCCC"> options</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

353
00:15:39,390 --> 00:15:41,700
<font color="#CCCCCC">add-ins section and check</font><font color="#E5E5E5"> the box</font><font color="#CCCCCC"> to say</font>

354
00:15:41,700 --> 00:15:43,230
<font color="#E5E5E5">turn it on</font><font color="#CCCCCC"> and once you do you'll see</font>

355
00:15:43,230 --> 00:15:44,670
<font color="#E5E5E5">there's something there called solver</font>

356
00:15:44,670 --> 00:15:47,850
<font color="#CCCCCC">and</font><font color="#E5E5E5"> if I go solver it says okay what's</font>

357
00:15:47,850 --> 00:15:51,180
your<font color="#E5E5E5"> objective function and you just</font>

358
00:15:51,180 --> 00:15:54,020
choose<font color="#E5E5E5"> the cell so in this case we chose</font>

359
00:15:54,020 --> 00:15:56,250
the cell that<font color="#E5E5E5"> contains that repeats</font>

360
00:15:56,250 --> 00:15:59,790
<font color="#CCCCCC">grade error</font><font color="#E5E5E5"> and then it says okay what</font>

361
00:15:59,790 --> 00:16:02,910
do<font color="#E5E5E5"> you want to change and you can see</font>

362
00:16:02,910 --> 00:16:05,460
here we've selected this matrix and<font color="#E5E5E5"> this</font>

363
00:16:05,460 --> 00:16:07,200
matrix<font color="#E5E5E5"> and so it's</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do a</font>

364
00:16:07,200 --> 00:16:09,690
gradient descent<font color="#E5E5E5"> for us by changing</font>

365
00:16:09,690 --> 00:16:12,120
these matrices to try and in this case

366
00:16:12,120 --> 00:16:16,410
minimize<font color="#CCCCCC"> this min minimize this</font><font color="#E5E5E5"> Excel so</font>

367
00:16:16,410 --> 00:16:20,520
<font color="#E5E5E5">right GRG nonlinear is a gradient</font><font color="#CCCCCC"> just</font>

368
00:16:20,520 --> 00:16:23,340
yet so I'll say solve<font color="#E5E5E5"> and you'll see it</font>

369
00:16:23,340 --> 00:16:26,760
starts<font color="#CCCCCC"> at 2.8</font><font color="#E5E5E5"> and then down</font><font color="#CCCCCC"> here you'll</font>

370
00:16:26,760 --> 00:16:29,430
see<font color="#E5E5E5"> that numbers drain down it's not</font>

371
00:16:29,430 --> 00:16:30,840
actually showing us what it's doing but

372
00:16:30,840 --> 00:16:32,100
<font color="#CCCCCC">we can see</font><font color="#E5E5E5"> that the numbers going down</font>

373
00:16:32,100 --> 00:16:37,230
so this<font color="#CCCCCC"> has kind of got a near or nettie</font>

374
00:16:37,230 --> 00:16:39,360
feel to it in<font color="#E5E5E5"> that we're</font><font color="#CCCCCC"> doing like a</font>

375
00:16:39,360 --> 00:16:41,010
<font color="#E5E5E5">matrix product and we're</font><font color="#CCCCCC"> doing a</font>

376
00:16:41,010 --> 00:16:43,340
<font color="#E5E5E5">gradient descent but we don't have a</font>

377
00:16:43,340 --> 00:16:46,770
nonlinear layer and we don't have<font color="#CCCCCC"> a</font>

378
00:16:46,770 --> 00:16:49,710
second linear<font color="#E5E5E5"> layer on top of</font><font color="#CCCCCC"> that so we</font>

379
00:16:49,710 --> 00:16:51,630
<font color="#E5E5E5">don't get to call this deep learning</font><font color="#CCCCCC"> so</font>

380
00:16:51,630 --> 00:16:53,490
things where<font color="#CCCCCC"> people do like deep</font>

381
00:16:53,490 --> 00:16:55,080
learning<font color="#CCCCCC"> each things where they have</font>

382
00:16:55,080 --> 00:16:58,380
<font color="#E5E5E5">kind of matrix products and gradient</font>

383
00:16:58,380 --> 00:17:00,150
descents but it's not deep people<font color="#CCCCCC"> tend</font>

384
00:17:00,150 --> 00:17:01,830
to<font color="#E5E5E5"> just call that shallow learning okay</font>

385
00:17:01,830 --> 00:17:05,160
<font color="#CCCCCC">so we're doing this chattering yeah</font><font color="#E5E5E5"> all</font>

386
00:17:05,160 --> 00:17:06,119
<font color="#E5E5E5">right so I'm just going</font><font color="#CCCCCC"> to go ahead and</font>

387
00:17:06,119 --> 00:17:07,949
press<font color="#E5E5E5"> escape</font><font color="#CCCCCC"> to stop it because</font><font color="#E5E5E5"> I'm sick</font>

388
00:17:07,949 --> 00:17:12,810
of waiting and so you can see we've<font color="#CCCCCC"> now</font>

389
00:17:12,810 --> 00:17:17,189
got<font color="#CCCCCC"> down to the 0.39 all right so for</font>

390
00:17:17,189 --> 00:17:22,589
example<font color="#CCCCCC"> it</font><font color="#E5E5E5"> guessed that movie 72 for</font>

391
00:17:22,589 --> 00:17:24,780
sorry movie 27 for<font color="#CCCCCC"> user seventy two</font>

392
00:17:24,780 --> 00:17:30,360
would get 4.4 for rating 2772<font color="#E5E5E5"> and</font>

393
00:17:30,360 --> 00:17:32,670
actually got<font color="#CCCCCC"> a four ready</font><font color="#E5E5E5"> so you can see</font>

394
00:17:32,670 --> 00:17:34,350
like it's it's it's doing<font color="#E5E5E5"> something</font>

395
00:17:34,350 --> 00:17:36,650
<font color="#E5E5E5">quite useful</font>

396
00:17:36,650 --> 00:17:40,680
so why is<font color="#E5E5E5"> it doing</font><font color="#CCCCCC"> something quite</font>

397
00:17:40,680 --> 00:17:42,890
<font color="#E5E5E5">useful I mean something to note here is</font>

398
00:17:42,890 --> 00:17:45,120
the<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of things</font><font color="#E5E5E5"> we're trying to</font>

399
00:17:45,120 --> 00:17:48,170
predict here is there's<font color="#CCCCCC"> 225</font><font color="#E5E5E5"> of them</font>

400
00:17:48,170 --> 00:17:51,300
<font color="#E5E5E5">right and the number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> things we're</font>

401
00:17:51,300 --> 00:17:54,210
using to predict<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that times</font><font color="#E5E5E5"> two so</font>

402
00:17:54,210 --> 00:17:56,040
hundred and fifty of<font color="#E5E5E5"> them so it's not</font>

403
00:17:56,040 --> 00:17:57,810
like we can just<font color="#E5E5E5"> exactly fit we actually</font>

404
00:17:57,810 --> 00:18:00,240
have to do some kind<font color="#E5E5E5"> of machine learning</font>

405
00:18:00,240 --> 00:18:03,420
<font color="#CCCCCC">here so basically what this is</font><font color="#E5E5E5"> saying is</font>

406
00:18:03,420 --> 00:18:06,950
<font color="#CCCCCC">that</font><font color="#E5E5E5"> there does seem to be some way of</font>

407
00:18:06,950 --> 00:18:11,190
making<font color="#CCCCCC"> predictions in this way and</font><font color="#E5E5E5"> so</font>

408
00:18:11,190 --> 00:18:12,300
for those of<font color="#E5E5E5"> you that have</font><font color="#CCCCCC"> done some</font>

409
00:18:12,300 --> 00:18:14,580
<font color="#E5E5E5">linear</font><font color="#CCCCCC"> algebra and this is actually a</font>

410
00:18:14,580 --> 00:18:17,310
matrix decomposition<font color="#E5E5E5"> normally in linear</font>

411
00:18:17,310 --> 00:18:19,220
<font color="#CCCCCC">algebra</font><font color="#E5E5E5"> you would do this using a</font>

412
00:18:19,220 --> 00:18:22,140
analytical technique or using some

413
00:18:22,140 --> 00:18:23,130
<font color="#E5E5E5">techniques that are specifically</font>

414
00:18:23,130 --> 00:18:25,410
<font color="#CCCCCC">designed for this purpose but</font><font color="#E5E5E5"> the nice</font>

415
00:18:25,410 --> 00:18:27,810
thing<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> we can use gradient</font>

416
00:18:27,810 --> 00:18:29,430
<font color="#CCCCCC">descent to</font><font color="#E5E5E5"> solve pretty much everything</font>

417
00:18:29,430 --> 00:18:32,490
including this<font color="#CCCCCC"> I don't like to so much</font>

418
00:18:32,490 --> 00:18:33,900
think of it from a linear algebra point

419
00:18:33,900 --> 00:18:35,130
of view though<font color="#E5E5E5"> I</font><font color="#CCCCCC"> like to think of it</font>

420
00:18:35,130 --> 00:18:36,960
from an insured<font color="#E5E5E5"> point of view which is</font>

421
00:18:36,960 --> 00:18:39,810
<font color="#CCCCCC">this let's say movie sorry let's say</font>

422
00:18:39,810 --> 00:18:45,170
movie<font color="#CCCCCC"> id 27 is Lord of</font><font color="#E5E5E5"> the Rings part</font><font color="#CCCCCC"> 1</font>

423
00:18:45,170 --> 00:18:51,720
<font color="#CCCCCC">and let's say move and so let's say</font>

424
00:18:51,720 --> 00:18:53,190
we're trying<font color="#E5E5E5"> to make that prediction for</font>

425
00:18:53,190 --> 00:18:56,430
user<font color="#E5E5E5"> 2072 are they going to like Lord of</font>

426
00:18:56,430 --> 00:18:59,360
<font color="#CCCCCC">the</font><font color="#E5E5E5"> Rings part 1 and so conceptually</font>

427
00:18:59,360 --> 00:19:02,970
<font color="#E5E5E5">that particular movie maybe there's like</font>

428
00:19:02,970 --> 00:19:03,840
this<font color="#CCCCCC"> 4</font>

429
00:19:03,840 --> 00:19:07,560
so there's<font color="#CCCCCC"> 5 numbers here</font><font color="#E5E5E5"> and we could</font>

430
00:19:07,560 --> 00:19:09,480
say like well what if the<font color="#E5E5E5"> first one</font><font color="#CCCCCC"> was</font>

431
00:19:09,480 --> 00:19:11,250
like<font color="#E5E5E5"> how much is it sci-fi and fantasy</font>

432
00:19:11,250 --> 00:19:15,960
<font color="#E5E5E5">and the second one is</font><font color="#CCCCCC"> like how recent a</font>

433
00:19:15,960 --> 00:19:17,760
movie and how much special effects<font color="#E5E5E5"> is</font>

434
00:19:17,760 --> 00:19:19,230
there you know<font color="#E5E5E5"> and the one at the</font><font color="#CCCCCC"> top</font>

435
00:19:19,230 --> 00:19:21,390
might be<font color="#E5E5E5"> like how dialogue-driven is it</font>

436
00:19:21,390 --> 00:19:23,310
right like let's<font color="#E5E5E5"> say those kind of</font><font color="#CCCCCC"> five</font>

437
00:19:23,310 --> 00:19:25,230
these<font color="#CCCCCC"> five numbers represented</font>

438
00:19:25,230 --> 00:19:27,570
<font color="#E5E5E5">particular things about the movie and so</font>

439
00:19:27,570 --> 00:19:30,510
if<font color="#E5E5E5"> that was the case then we could</font><font color="#CCCCCC"> have</font>

440
00:19:30,510 --> 00:19:32,730
the same<font color="#E5E5E5"> five numbers for the user</font>

441
00:19:32,730 --> 00:19:34,770
<font color="#E5E5E5">saying like</font><font color="#CCCCCC"> ok how much</font><font color="#E5E5E5"> does the use of</font>

442
00:19:34,770 --> 00:19:37,380
<font color="#E5E5E5">like sci-fi</font><font color="#CCCCCC"> fantasy how much</font><font color="#E5E5E5"> does the</font>

443
00:19:37,380 --> 00:19:42,510
user<font color="#E5E5E5"> like modern modern</font><font color="#CCCCCC"> CGI driven</font>

444
00:19:42,510 --> 00:19:45,810
movies how much does this give<font color="#CCCCCC"> us a like</font>

445
00:19:45,810 --> 00:19:48,120
<font color="#CCCCCC">dialogue different movies and so if you</font>

446
00:19:48,120 --> 00:19:48,720
then<font color="#E5E5E5"> took that</font>

447
00:19:48,720 --> 00:19:51,690
<font color="#CCCCCC">cross-product you would expect to</font><font color="#E5E5E5"> have a</font>

448
00:19:51,690 --> 00:19:53,730
good<font color="#E5E5E5"> model</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> would expect to have a</font>

449
00:19:53,730 --> 00:19:57,030
reasonable<font color="#E5E5E5"> reading now the problem is we</font>

450
00:19:57,030 --> 00:19:58,590
<font color="#CCCCCC">don't have</font><font color="#E5E5E5"> this information for each</font>

451
00:19:58,590 --> 00:20:00,840
user<font color="#E5E5E5"> we don't have the</font><font color="#CCCCCC"> information for</font>

452
00:20:00,840 --> 00:20:02,940
<font color="#E5E5E5">each movie so we're just going to like</font>

453
00:20:02,940 --> 00:20:06,690
assume that this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a reasonable kind of</font>

454
00:20:06,690 --> 00:20:08,280
way<font color="#CCCCCC"> of thinking about this system and</font>

455
00:20:08,280 --> 00:20:10,020
<font color="#E5E5E5">let's unless stochastic gradient descent</font>

456
00:20:10,020 --> 00:20:13,950
try and find these<font color="#CCCCCC"> models</font><font color="#E5E5E5"> right so so in</font>

457
00:20:13,950 --> 00:20:16,200
other<font color="#E5E5E5"> words these these factors we call</font>

458
00:20:16,200 --> 00:20:19,080
these<font color="#CCCCCC"> things factors</font><font color="#E5E5E5"> these factors and</font>

459
00:20:19,080 --> 00:20:20,549
<font color="#E5E5E5">we call them factors because you can</font>

460
00:20:20,549 --> 00:20:22,530
multiply<font color="#E5E5E5"> them</font><font color="#CCCCCC"> together to create this</font>

461
00:20:22,530 --> 00:20:24,480
<font color="#E5E5E5">not</font><font color="#CCCCCC"> they're factors and how many</font>

462
00:20:24,480 --> 00:20:26,730
addresses<font color="#E5E5E5"> these factors we call them</font>

463
00:20:26,730 --> 00:20:29,490
<font color="#E5E5E5">latent factors because they're not</font>

464
00:20:29,490 --> 00:20:33,450
<font color="#E5E5E5">actually this is not actually a vector</font>

465
00:20:33,450 --> 00:20:36,030
<font color="#CCCCCC">that we've like named and understood and</font>

466
00:20:36,030 --> 00:20:38,240
like entered in manually we've kind of

467
00:20:38,240 --> 00:20:41,940
assumed<font color="#E5E5E5"> that we can think of movie</font>

468
00:20:41,940 --> 00:20:43,650
<font color="#CCCCCC">ratings this way we've assumed that</font><font color="#E5E5E5"> we</font>

469
00:20:43,650 --> 00:20:46,740
can<font color="#E5E5E5"> think of them as a dot product of</font>

470
00:20:46,740 --> 00:20:49,169
some<font color="#CCCCCC"> particular features about a movie</font>

471
00:20:49,169 --> 00:20:51,720
and some particular features<font color="#E5E5E5"> of to look</font>

472
00:20:51,720 --> 00:20:53,520
what users like those kinds of movies

473
00:20:53,520 --> 00:20:55,590
right and then we've used gradient

474
00:20:55,590 --> 00:20:58,679
descent<font color="#CCCCCC"> to just say</font><font color="#E5E5E5"> okay try and</font><font color="#CCCCCC"> find</font>

475
00:20:58,679 --> 00:21:03,360
some numbers that<font color="#E5E5E5"> work so that's that's</font>

476
00:21:03,360 --> 00:21:05,280
<font color="#E5E5E5">basically the technique right and it's</font>

477
00:21:05,280 --> 00:21:09,090
kind of the<font color="#E5E5E5"> end and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> entirety is in</font>

478
00:21:09,090 --> 00:21:10,500
this<font color="#CCCCCC"> printing right so that is</font>

479
00:21:10,500 --> 00:21:12,539
<font color="#E5E5E5">collaborative filtering using what we</font>

480
00:21:12,539 --> 00:21:14,510
call probabilistic matrix factorization

481
00:21:14,510 --> 00:21:17,340
<font color="#CCCCCC">and as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see the whole thing</font><font color="#E5E5E5"> is</font>

482
00:21:17,340 --> 00:21:19,169
easy to do in<font color="#CCCCCC"> an excel spreadsheet and</font>

483
00:21:19,169 --> 00:21:21,539
the<font color="#E5E5E5"> entirety of</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> really is this single</font>

484
00:21:21,539 --> 00:21:23,429
thing which<font color="#E5E5E5"> is a single matrix</font>

485
00:21:23,429 --> 00:21:26,490
<font color="#E5E5E5">multiplication plus randomly</font>

486
00:21:26,490 --> 00:21:32,490
initializing<font color="#CCCCCC"> if it would</font><font color="#E5E5E5"> be better</font><font color="#CCCCCC"> to</font>

487
00:21:32,490 --> 00:21:38,250
cap this to<font color="#CCCCCC"> 0 and 5 maybe</font><font color="#E5E5E5"> yes yeah and</font>

488
00:21:38,250 --> 00:21:39,690
we're<font color="#E5E5E5"> gonna do that later right there's</font>

489
00:21:39,690 --> 00:21:41,039
a whole lot<font color="#CCCCCC"> of stuff we can do to</font>

490
00:21:41,039 --> 00:21:44,159
<font color="#E5E5E5">improve this this is like our simple as</font>

491
00:21:44,159 --> 00:21:46,380
possible starting point<font color="#CCCCCC"> all right so so</font>

492
00:21:46,380 --> 00:21:47,490
what we're<font color="#E5E5E5"> going to do now is we're</font>

493
00:21:47,490 --> 00:21:50,850
going to try<font color="#CCCCCC"> and implement this in</font>

494
00:21:50,850 --> 00:21:54,750
<font color="#E5E5E5">Python and run it on the whole data set</font>

495
00:21:54,750 --> 00:21:56,940
another question is how do you<font color="#E5E5E5"> figure</font>

496
00:21:56,940 --> 00:22:00,360
out how many you know<font color="#CCCCCC"> how it's clear how</font>

497
00:22:00,360 --> 00:22:02,540
long<font color="#CCCCCC"> are the matrix</font>

498
00:22:02,540 --> 00:22:05,840
five<font color="#E5E5E5"> yeah yeah</font><font color="#CCCCCC"> so something to think</font>

499
00:22:05,840 --> 00:22:09,230
<font color="#E5E5E5">about given</font><font color="#CCCCCC"> that this is</font><font color="#E5E5E5"> like movie 49</font>

500
00:22:09,230 --> 00:22:13,010
right<font color="#CCCCCC"> and we're</font><font color="#E5E5E5"> looking at a rating for</font>

501
00:22:13,010 --> 00:22:16,280
movie<font color="#CCCCCC"> 49</font><font color="#E5E5E5"> think about this this is</font>

502
00:22:16,280 --> 00:22:21,290
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> at embedding</font><font color="#E5E5E5"> matrix and so this</font>

503
00:22:21,290 --> 00:22:24,410
length is actually<font color="#E5E5E5"> the size of the</font>

504
00:22:24,410 --> 00:22:26,780
embedding matrix<font color="#E5E5E5"> I'm not saying this is</font>

505
00:22:26,780 --> 00:22:29,060
<font color="#CCCCCC">an analogy</font><font color="#E5E5E5"> I'm saying it literally this</font>

506
00:22:29,060 --> 00:22:31,520
is literally<font color="#E5E5E5"> an embedding</font><font color="#CCCCCC"> mattress we</font>

507
00:22:31,520 --> 00:22:34,450
could have a<font color="#E5E5E5"> one hot encoding where 72</font>

508
00:22:34,450 --> 00:22:37,730
<font color="#CCCCCC">where a</font><font color="#E5E5E5"> one is in the 72nd position and</font>

509
00:22:37,730 --> 00:22:39,920
so we'd<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to look it up</font><font color="#E5E5E5"> and it would</font>

510
00:22:39,920 --> 00:22:43,220
return this list of five<font color="#E5E5E5"> numbers so the</font>

511
00:22:43,220 --> 00:22:45,920
question is<font color="#CCCCCC"> actually how do we decide on</font>

512
00:22:45,920 --> 00:22:47,330
the dimensionality<font color="#CCCCCC"> of our embedding</font>

513
00:22:47,330 --> 00:22:50,210
vectors and the answer to<font color="#CCCCCC"> that</font><font color="#E5E5E5"> question</font>

514
00:22:50,210 --> 00:22:53,780
is we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> no idea</font><font color="#CCCCCC"> we have to try a</font><font color="#E5E5E5"> few</font>

515
00:22:53,780 --> 00:22:57,250
things and<font color="#E5E5E5"> see</font><font color="#CCCCCC"> what was the underlying</font>

516
00:22:57,250 --> 00:23:01,010
<font color="#E5E5E5">concept is you need</font><font color="#CCCCCC"> to pick an embedding</font>

517
00:23:01,010 --> 00:23:04,280
dimensionality which is enough to

518
00:23:04,280 --> 00:23:06,770
<font color="#CCCCCC">reflect the kind</font><font color="#E5E5E5"> of true complexity</font><font color="#CCCCCC"> of</font>

519
00:23:06,770 --> 00:23:11,060
this causal system but not so<font color="#E5E5E5"> big that</font>

520
00:23:11,060 --> 00:23:14,150
<font color="#CCCCCC">you have too many parameters</font><font color="#E5E5E5"> that it</font>

521
00:23:14,150 --> 00:23:16,310
could<font color="#E5E5E5"> take forever to Tehran or even</font>

522
00:23:16,310 --> 00:23:20,870
with<font color="#CCCCCC"> regularization</font><font color="#E5E5E5"> in my</font><font color="#CCCCCC"> overfit so</font>

523
00:23:20,870 --> 00:23:23,780
what does it mean when<font color="#E5E5E5"> the factor is</font>

524
00:23:23,780 --> 00:23:27,350
negative<font color="#E5E5E5"> that the factor being negative</font>

525
00:23:27,350 --> 00:23:30,050
in the movie case would mean<font color="#E5E5E5"> like this</font>

526
00:23:30,050 --> 00:23:32,300
<font color="#E5E5E5">is not dialogue-driven in fact it's like</font>

527
00:23:32,300 --> 00:23:34,610
the opposite<font color="#E5E5E5"> dialogue here is terrible</font><font color="#CCCCCC"> a</font>

528
00:23:34,610 --> 00:23:37,580
negative for the<font color="#E5E5E5"> user would be</font><font color="#CCCCCC"> like I</font>

529
00:23:37,580 --> 00:23:41,540
actually<font color="#E5E5E5"> dislike modern CGI movies</font><font color="#CCCCCC"> so</font>

530
00:23:41,540 --> 00:23:44,030
it's not from<font color="#E5E5E5"> zero to whatever it's the</font>

531
00:23:44,030 --> 00:23:47,480
<font color="#CCCCCC">range of score it'd be</font><font color="#E5E5E5"> negative</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

532
00:23:47,480 --> 00:23:49,970
a range of score even<font color="#E5E5E5"> like no</font><font color="#CCCCCC"> net Maxim</font>

533
00:23:49,970 --> 00:23:51,910
<font color="#E5E5E5">no there's no constraints at all here</font>

534
00:23:51,910 --> 00:23:54,260
these are<font color="#E5E5E5"> just standard embedding</font>

535
00:23:54,260 --> 00:24:02,360
matrices<font color="#E5E5E5"> questions so first question is</font>

536
00:24:02,360 --> 00:24:05,120
why do what why can we trust this

537
00:24:05,120 --> 00:24:07,160
<font color="#CCCCCC">embeddings</font><font color="#E5E5E5"> because like if you take a</font>

538
00:24:07,160 --> 00:24:09,170
<font color="#E5E5E5">number</font><font color="#CCCCCC"> six it can be expressed as 1</font><font color="#E5E5E5"> into</font>

539
00:24:09,170 --> 00:24:11,840
<font color="#E5E5E5">6 or like 6 into 1</font><font color="#CCCCCC"> or 22 3 & 3</font><font color="#E5E5E5"> into 2</font>

540
00:24:11,840 --> 00:24:14,900
<font color="#CCCCCC">all so you're</font><font color="#E5E5E5"> saying like we could like</font>

541
00:24:14,900 --> 00:24:17,630
reorder<font color="#CCCCCC"> these higher</font>

542
00:24:17,630 --> 00:24:19,340
<font color="#E5E5E5">hardly the value itself might be</font>

543
00:24:19,340 --> 00:24:21,410
<font color="#E5E5E5">different</font><font color="#CCCCCC"> as long</font><font color="#E5E5E5"> as the product is</font>

544
00:24:21,410 --> 00:24:23,690
<font color="#CCCCCC">something well but you see</font><font color="#E5E5E5"> we're using</font>

545
00:24:23,690 --> 00:24:26,180
gradient descent<font color="#CCCCCC"> to find the best</font>

546
00:24:26,180 --> 00:24:29,990
numbers so like once<font color="#E5E5E5"> we've found a good</font>

547
00:24:29,990 --> 00:24:33,380
minimum the idea is like yeah there are

548
00:24:33,380 --> 00:24:35,180
other numbers<font color="#E5E5E5"> but they don't give you as</font>

549
00:24:35,180 --> 00:24:39,620
good<font color="#CCCCCC"> an objective value</font><font color="#E5E5E5"> and of course we</font>

550
00:24:39,620 --> 00:24:40,790
<font color="#CCCCCC">should</font><font color="#E5E5E5"> be checking that on a validation</font>

551
00:24:40,790 --> 00:24:42,800
<font color="#E5E5E5">set really which we'll be doing</font><font color="#CCCCCC"> in the</font>

552
00:24:42,800 --> 00:24:44,750
Python<font color="#CCCCCC"> version okay and the second</font>

553
00:24:44,750 --> 00:24:47,420
<font color="#CCCCCC">question is when</font><font color="#E5E5E5"> we have a new movie</font><font color="#CCCCCC"> or</font>

554
00:24:47,420 --> 00:24:50,240
a new user<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be a</font><font color="#E5E5E5"> 30 trainer model that</font>

555
00:24:50,240 --> 00:24:51,830
is a really good<font color="#CCCCCC"> question and there</font>

556
00:24:51,830 --> 00:24:53,950
isn't a straightforward answer<font color="#E5E5E5"> to that</font>

557
00:24:53,950 --> 00:24:56,840
<font color="#E5E5E5">time</font><font color="#CCCCCC"> permitting will come back</font><font color="#E5E5E5"> but</font>

558
00:24:56,840 --> 00:24:58,880
basically you would need to<font color="#E5E5E5"> have like a</font>

559
00:24:58,880 --> 00:25:01,970
<font color="#E5E5E5">kind of a new user model or a new movie</font>

560
00:25:01,970 --> 00:25:05,900
model that you would use initially and

561
00:25:05,900 --> 00:25:08,000
then over<font color="#E5E5E5"> time yes you would then</font><font color="#CCCCCC"> have</font>

562
00:25:08,000 --> 00:25:11,000
<font color="#CCCCCC">to retrain the model so like I don't</font>

563
00:25:11,000 --> 00:25:12,440
<font color="#E5E5E5">know if they</font><font color="#CCCCCC"> still do it</font><font color="#E5E5E5"> but Netflix</font>

564
00:25:12,440 --> 00:25:13,610
used to have this<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that when you</font>

565
00:25:13,610 --> 00:25:15,890
<font color="#E5E5E5">were first on boarded</font><font color="#CCCCCC"> on Netflix</font><font color="#E5E5E5"> it</font>

566
00:25:15,890 --> 00:25:17,500
would say<font color="#E5E5E5"> like what movies do you like</font>

567
00:25:17,500 --> 00:25:19,640
and<font color="#E5E5E5"> you'd have to go</font><font color="#CCCCCC"> through and let's</font>

568
00:25:19,640 --> 00:25:21,650
<font color="#E5E5E5">say a bunch</font><font color="#CCCCCC"> of movies you like</font><font color="#E5E5E5"> and it</font>

569
00:25:21,650 --> 00:25:29,570
would then my<font color="#CCCCCC"> train is moral just find</font>

570
00:25:29,570 --> 00:25:34,670
the nearest movie yeah you could<font color="#CCCCCC"> use</font>

571
00:25:34,670 --> 00:25:39,980
nearest neighbors<font color="#CCCCCC"> for sure but the thing</font>

572
00:25:39,980 --> 00:25:43,220
is initially at<font color="#CCCCCC"> least in this case we</font>

573
00:25:43,220 --> 00:25:47,210
have no columns to describe a movie<font color="#E5E5E5"> so</font>

574
00:25:47,210 --> 00:25:48,410
if you had something<font color="#CCCCCC"> about like the</font>

575
00:25:48,410 --> 00:25:51,560
movies genre release date who<font color="#CCCCCC"> was in it</font>

576
00:25:51,560 --> 00:25:53,060
<font color="#E5E5E5">or something</font><font color="#CCCCCC"> you could</font><font color="#E5E5E5"> have some kind of</font>

577
00:25:53,060 --> 00:25:55,610
non collaborative filtering<font color="#CCCCCC"> model and</font>

578
00:25:55,610 --> 00:25:58,010
<font color="#E5E5E5">that's kind of what I meant</font><font color="#CCCCCC"> a new movie</font>

579
00:25:58,010 --> 00:26:00,110
model you have<font color="#E5E5E5"> to have some some kind</font><font color="#CCCCCC"> of</font>

580
00:26:00,110 --> 00:26:08,990
predictors<font color="#E5E5E5"> okay so a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this is</font>

581
00:26:08,990 --> 00:26:10,460
<font color="#E5E5E5">going to look familiar and and the way</font>

582
00:26:10,460 --> 00:26:12,290
I'm<font color="#E5E5E5"> going to do this is again it's kind</font>

583
00:26:12,290 --> 00:26:14,030
of this top-down<font color="#E5E5E5"> approach we're going to</font>

584
00:26:14,030 --> 00:26:17,660
start using a few features<font color="#CCCCCC"> of Pi torch</font>

585
00:26:17,660 --> 00:26:20,090
and<font color="#E5E5E5"> fast AI and gradually</font><font color="#CCCCCC"> we're going to</font>

586
00:26:20,090 --> 00:26:20,720
redo it

587
00:26:20,720 --> 00:26:24,050
<font color="#CCCCCC">a few</font><font color="#E5E5E5"> times in a few different ways kind</font>

588
00:26:24,050 --> 00:26:26,800
<font color="#CCCCCC">of doing a little</font><font color="#E5E5E5"> bit deeper each time</font>

589
00:26:26,800 --> 00:26:29,270
<font color="#E5E5E5">um regardless we do need a validation</font>

590
00:26:29,270 --> 00:26:30,050
<font color="#E5E5E5">set</font>

591
00:26:30,050 --> 00:26:31,780
so we can use our standard

592
00:26:31,780 --> 00:26:34,850
<font color="#CCCCCC">cross-validation indexes approach to</font>

593
00:26:34,850 --> 00:26:39,860
grab a<font color="#E5E5E5"> random set of ID's</font><font color="#CCCCCC"> this is</font>

594
00:26:39,860 --> 00:26:41,120
something called weight decay<font color="#E5E5E5"> which</font>

595
00:26:41,120 --> 00:26:43,460
we'll talk about<font color="#E5E5E5"> later in the course</font><font color="#CCCCCC"> for</font>

596
00:26:43,460 --> 00:26:45,170
<font color="#CCCCCC">those</font><font color="#E5E5E5"> of you that have done</font><font color="#CCCCCC"> some machine</font>

597
00:26:45,170 --> 00:26:47,050
learning<font color="#CCCCCC"> it's l2 regularization</font>

598
00:26:47,050 --> 00:26:50,210
<font color="#E5E5E5">basically and this is where we choose</font>

599
00:26:50,210 --> 00:26:52,640
how big a embedding matrix do we want

600
00:26:52,640 --> 00:26:54,820
<font color="#E5E5E5">okay</font>

601
00:26:54,820 --> 00:26:57,350
so again you know here's<font color="#E5E5E5"> where we get</font>

602
00:26:57,350 --> 00:27:02,450
<font color="#E5E5E5">our model data object from CSV</font><font color="#CCCCCC"> passing</font>

603
00:27:02,450 --> 00:27:06,730
in that<font color="#CCCCCC"> ratings file</font><font color="#E5E5E5"> which remember</font>

604
00:27:06,730 --> 00:27:10,400
looks like that<font color="#E5E5E5"> okay so you'll see like</font>

605
00:27:10,400 --> 00:27:12,800
stuff tends<font color="#E5E5E5"> to look pretty familiar</font>

606
00:27:12,800 --> 00:27:17,360
after<font color="#CCCCCC"> a while and then</font><font color="#E5E5E5"> you just have to</font>

607
00:27:17,360 --> 00:27:22,850
<font color="#E5E5E5">pass in the what are your rows</font>

608
00:27:22,850 --> 00:27:24,470
effectively what are your columns

609
00:27:24,470 --> 00:27:25,850
<font color="#E5E5E5">effectively and what are your values</font>

610
00:27:25,850 --> 00:27:28,400
<font color="#E5E5E5">effectively</font><font color="#CCCCCC"> alright so any any</font>

611
00:27:28,400 --> 00:27:31,100
<font color="#E5E5E5">collaborative filtering recommendation</font>

612
00:27:31,100 --> 00:27:32,630
system approach there's<font color="#E5E5E5"> basically a</font>

613
00:27:32,630 --> 00:27:35,780
concept<font color="#E5E5E5"> of like you know a user and an</font>

614
00:27:35,780 --> 00:27:39,200
item<font color="#CCCCCC"> now they might not be users and</font>

615
00:27:39,200 --> 00:27:40,660
items like if you're doing<font color="#E5E5E5"> the</font>

616
00:27:40,660 --> 00:27:43,280
<font color="#CCCCCC">Ecuadorian groceries competition</font><font color="#E5E5E5"> there</font>

617
00:27:43,280 --> 00:27:45,770
are<font color="#E5E5E5"> stores and items and you're trying</font>

618
00:27:45,770 --> 00:27:47,090
<font color="#E5E5E5">to predict how many things are you going</font>

619
00:27:47,090 --> 00:27:53,530
to sell at this<font color="#CCCCCC"> store</font><font color="#E5E5E5"> of this type</font><font color="#CCCCCC"> but</font>

620
00:27:53,530 --> 00:27:55,700
<font color="#CCCCCC">generally speaking</font><font color="#E5E5E5"> just this idea</font><font color="#CCCCCC"> of</font>

621
00:27:55,700 --> 00:27:57,140
like you've got a<font color="#CCCCCC"> couple of kind of high</font>

622
00:27:57,140 --> 00:27:59,240
cardinality categorical variables and

623
00:27:59,240 --> 00:28:00,470
something<font color="#E5E5E5"> that you're measuring and</font>

624
00:28:00,470 --> 00:28:02,450
you're kind of conceptualizing and

625
00:28:02,450 --> 00:28:05,960
saying okay we could predict<font color="#CCCCCC"> the rating</font>

626
00:28:05,960 --> 00:28:08,120
we can predict<font color="#E5E5E5"> the value by</font><font color="#CCCCCC"> doing this</font>

627
00:28:08,120 --> 00:28:12,230
this<font color="#CCCCCC"> dot</font><font color="#E5E5E5"> for that</font><font color="#CCCCCC"> interestingly</font><font color="#E5E5E5"> this is</font>

628
00:28:12,230 --> 00:28:13,700
<font color="#E5E5E5">kind of relevant to that that last</font>

629
00:28:13,700 --> 00:28:17,450
<font color="#E5E5E5">question or suggestion an identical way</font>

630
00:28:17,450 --> 00:28:19,610
to<font color="#E5E5E5"> think about this what</font><font color="#CCCCCC"> I've expressed</font>

631
00:28:19,610 --> 00:28:23,170
<font color="#CCCCCC">this is to say when we're deciding</font>

632
00:28:23,170 --> 00:28:26,810
whether user<font color="#E5E5E5"> 72 will like movie</font>

633
00:28:26,810 --> 00:28:30,530
<font color="#CCCCCC">twenty-seven it's basically</font><font color="#E5E5E5"> saying which</font>

634
00:28:30,530 --> 00:28:36,230
other users liked<font color="#E5E5E5"> movies that 72 liked</font>

635
00:28:36,230 --> 00:28:40,490
and which<font color="#E5E5E5"> other movies were liked by</font>

636
00:28:40,490 --> 00:28:43,580
people<font color="#E5E5E5"> like you</font>

637
00:28:43,580 --> 00:28:46,880
<font color="#CCCCCC">user 72</font><font color="#E5E5E5"> it turns out that these are</font>

638
00:28:46,880 --> 00:28:49,700
<font color="#CCCCCC">basically two ways</font><font color="#E5E5E5"> of saying the</font><font color="#CCCCCC"> exact</font>

639
00:28:49,700 --> 00:28:50,870
same<font color="#E5E5E5"> thing so basically what</font>

640
00:28:50,870 --> 00:28:53,540
collaborative<font color="#E5E5E5"> filtering is doing you</font>

641
00:28:53,540 --> 00:28:56,240
know kind of<font color="#E5E5E5"> conceptually is to say okay</font>

642
00:28:56,240 --> 00:28:59,510
<font color="#CCCCCC">this movie and this user</font><font color="#E5E5E5"> which other</font>

643
00:28:59,510 --> 00:29:01,940
<font color="#CCCCCC">movies are similar to it in terms of</font>

644
00:29:01,940 --> 00:29:04,520
<font color="#E5E5E5">like similar people enjoyed them and</font>

645
00:29:04,520 --> 00:29:07,280
which<font color="#E5E5E5"> people are similar to this person</font>

646
00:29:07,280 --> 00:29:08,960
based<font color="#E5E5E5"> on people that like the same kind</font>

647
00:29:08,960 --> 00:29:11,050
<font color="#CCCCCC">of</font><font color="#E5E5E5"> movies so</font><font color="#CCCCCC"> that's kind of the</font>

648
00:29:11,050 --> 00:29:14,480
<font color="#E5E5E5">underlying structure</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> any time there's</font>

649
00:29:14,480 --> 00:29:16,250
an<font color="#E5E5E5"> underlying structure like this that</font>

650
00:29:16,250 --> 00:29:17,480
kind of collaborative filtering approach

651
00:29:17,480 --> 00:29:22,730
is likely to be useful<font color="#E5E5E5"> okay so so you</font>

652
00:29:22,730 --> 00:29:25,100
yeah<font color="#E5E5E5"> so there's basically two parts the</font>

653
00:29:25,100 --> 00:29:26,660
two bits<font color="#E5E5E5"> of your thing that</font><font color="#CCCCCC"> you're</font>

654
00:29:26,660 --> 00:29:28,460
factoring and then the<font color="#E5E5E5"> the value of the</font>

655
00:29:28,460 --> 00:29:31,910
<font color="#E5E5E5">dependent variable</font><font color="#CCCCCC"> so as per usual we</font>

656
00:29:31,910 --> 00:29:34,310
can take our<font color="#CCCCCC"> model data and ask for</font><font color="#E5E5E5"> a</font>

657
00:29:34,310 --> 00:29:36,380
<font color="#E5E5E5">learner from it and we need to tell</font><font color="#CCCCCC"> it</font>

658
00:29:36,380 --> 00:29:39,530
<font color="#E5E5E5">what size of any matrix</font><font color="#CCCCCC"> to use how many</font>

659
00:29:39,530 --> 00:29:42,350
<font color="#E5E5E5">sorry what validation set index is to</font>

660
00:29:42,350 --> 00:29:45,290
use what batch size to use and what

661
00:29:45,290 --> 00:29:47,780
optimizer<font color="#E5E5E5"> to use and we're going to be</font>

662
00:29:47,780 --> 00:29:51,380
talking<font color="#CCCCCC"> more about</font><font color="#E5E5E5"> optimizes surely we</font>

663
00:29:51,380 --> 00:29:54,650
want to Adam today Adam<font color="#E5E5E5"> next week or</font><font color="#CCCCCC"> the</font>

664
00:29:54,650 --> 00:29:57,530
<font color="#E5E5E5">week after</font><font color="#CCCCCC"> and then we can go ahead and</font>

665
00:29:57,530 --> 00:30:00,860
<font color="#E5E5E5">say fit</font><font color="#CCCCCC"> alright and it all looks pretty</font>

666
00:30:00,860 --> 00:30:03,350
similar<font color="#E5E5E5"> interest is usually</font>

667
00:30:03,350 --> 00:30:05,660
<font color="#E5E5E5">interestingly I only had to do three</font>

668
00:30:05,660 --> 00:30:08,030
<font color="#E5E5E5">pops like this kind of model</font><font color="#CCCCCC"> seem to</font>

669
00:30:08,030 --> 00:30:08,660
<font color="#E5E5E5">Train</font>

670
00:30:08,660 --> 00:30:11,450
super quickly<font color="#CCCCCC"> you can use the learning</font>

671
00:30:11,450 --> 00:30:13,250
rate finder as per usual all the stuff

672
00:30:13,250 --> 00:30:15,890
you're familiar with<font color="#E5E5E5"> will work fine</font><font color="#CCCCCC"> and</font>

673
00:30:15,890 --> 00:30:17,810
<font color="#E5E5E5">that was it so this talk you know about</font>

674
00:30:17,810 --> 00:30:21,080
<font color="#CCCCCC">two</font><font color="#E5E5E5"> seconds the</font><font color="#CCCCCC"> Train</font><font color="#E5E5E5"> there's no free</font>

675
00:30:21,080 --> 00:30:22,940
trained anything's here this is from

676
00:30:22,940 --> 00:30:27,200
<font color="#E5E5E5">random from scratch okay</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is our</font>

677
00:30:27,200 --> 00:30:29,840
validation set<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> compare it we</font>

678
00:30:29,840 --> 00:30:31,730
have this is a mean squared error not<font color="#E5E5E5"> a</font>

679
00:30:31,730 --> 00:30:33,380
root mean squared error<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can take a</font>

680
00:30:33,380 --> 00:30:37,040
square<font color="#CCCCCC"> root</font><font color="#E5E5E5"> so with that last time I ran</font>

681
00:30:37,040 --> 00:30:39,260
<font color="#E5E5E5">it was point seven seven six and that's</font>

682
00:30:39,260 --> 00:30:42,170
0.88<font color="#E5E5E5"> and there's some benchmarks</font>

683
00:30:42,170 --> 00:30:45,260
<font color="#E5E5E5">available for this data set and when I</font>

684
00:30:45,260 --> 00:30:46,700
<font color="#E5E5E5">scrolled through and found the bench the</font>

685
00:30:46,700 --> 00:30:48,470
best benchmark I<font color="#E5E5E5"> could find here from</font>

686
00:30:48,470 --> 00:30:51,020
this<font color="#E5E5E5"> recommendation system specific</font>

687
00:30:51,020 --> 00:30:54,170
library<font color="#E5E5E5"> they had point nine one so we've</font>

688
00:30:54,170 --> 00:30:58,880
got a better loss in two seconds

689
00:30:58,880 --> 00:31:03,960
<font color="#CCCCCC">already</font><font color="#E5E5E5"> so that's good</font><font color="#CCCCCC"> so that's</font>

690
00:31:03,960 --> 00:31:05,610
<font color="#CCCCCC">basically how you can do</font><font color="#E5E5E5"> collaborative</font>

691
00:31:05,610 --> 00:31:09,300
filtering with the faster I library

692
00:31:09,300 --> 00:31:12,480
without thinking too much<font color="#CCCCCC"> but so now</font>

693
00:31:12,480 --> 00:31:14,400
we're going<font color="#CCCCCC"> to dig in and try and</font>

694
00:31:14,400 --> 00:31:16,290
rebuild<font color="#E5E5E5"> that we'll try and get to the</font>

695
00:31:16,290 --> 00:31:17,790
<font color="#E5E5E5">point</font><font color="#CCCCCC"> that we're getting</font><font color="#E5E5E5"> something</font>

696
00:31:17,790 --> 00:31:21,000
around<font color="#CCCCCC"> 0.7</font><font color="#E5E5E5"> seven point seven eight from</font>

697
00:31:21,000 --> 00:31:25,020
scratch<font color="#CCCCCC"> but if you want to do this</font>

698
00:31:25,020 --> 00:31:26,040
<font color="#E5E5E5">yourself at home</font>

699
00:31:26,040 --> 00:31:27,800
you know without<font color="#E5E5E5"> worry about the detail</font>

700
00:31:27,800 --> 00:31:30,450
that's you know those three<font color="#CCCCCC"> lines of</font>

701
00:31:30,450 --> 00:31:33,930
<font color="#E5E5E5">code</font><font color="#CCCCCC"> here's</font><font color="#E5E5E5"> what you need okay</font><font color="#CCCCCC"> so we can</font>

702
00:31:33,930 --> 00:31:35,520
get<font color="#E5E5E5"> the predictions in the usual way</font><font color="#CCCCCC"> and</font>

703
00:31:35,520 --> 00:31:39,000
you know we could for example<font color="#E5E5E5"> plot</font><font color="#CCCCCC"> SNS</font>

704
00:31:39,000 --> 00:31:40,770
is<font color="#CCCCCC"> Seabourn see one's a</font><font color="#E5E5E5"> really great</font>

705
00:31:40,770 --> 00:31:42,660
flooding library<font color="#E5E5E5"> it sits on top of</font>

706
00:31:42,660 --> 00:31:45,120
matplotlib<font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually leverages</font>

707
00:31:45,120 --> 00:31:47,430
matplotlib<font color="#E5E5E5"> so anything you learn about</font>

708
00:31:47,430 --> 00:31:48,960
<font color="#E5E5E5">matplotlib will help you with SIBO and</font>

709
00:31:48,960 --> 00:31:50,310
it's got a<font color="#E5E5E5"> few like nice</font><font color="#CCCCCC"> little plots</font>

710
00:31:50,310 --> 00:31:54,230
like this<font color="#E5E5E5"> joint plot</font><font color="#CCCCCC"> here is I'm doing</font>

711
00:31:54,230 --> 00:31:58,740
<font color="#CCCCCC">predictions</font><font color="#E5E5E5"> against against actuals</font><font color="#CCCCCC"> so</font>

712
00:31:58,740 --> 00:32:00,120
these are my actual<font color="#E5E5E5"> season my</font>

713
00:32:00,120 --> 00:32:02,340
predictions<font color="#E5E5E5"> and you can kind of see the</font>

714
00:32:02,340 --> 00:32:04,620
the shape here is<font color="#E5E5E5"> that as we predict</font>

715
00:32:04,620 --> 00:32:06,150
higher numbers they actually are higher

716
00:32:06,150 --> 00:32:07,800
numbers and you<font color="#CCCCCC"> can also see the</font>

717
00:32:07,800 --> 00:32:10,620
histogram<font color="#E5E5E5"> of the predictions and a</font>

718
00:32:10,620 --> 00:32:12,960
histogram of<font color="#E5E5E5"> the ashes so that's kind of</font>

719
00:32:12,960 --> 00:32:14,370
<font color="#CCCCCC">floating</font><font color="#E5E5E5"> that is to show you another</font>

720
00:32:14,370 --> 00:32:18,420
<font color="#CCCCCC">interesting visualization would you</font>

721
00:32:18,420 --> 00:32:22,260
please explain the<font color="#E5E5E5"> n factors why it's</font>

722
00:32:22,260 --> 00:32:25,110
set to<font color="#E5E5E5"> 50 it's set to 50 because</font><font color="#CCCCCC"> I tried</font>

723
00:32:25,110 --> 00:32:29,400
a few<font color="#CCCCCC"> things in the</font><font color="#E5E5E5"> world it's the</font>

724
00:32:29,400 --> 00:32:31,910
dimensionality<font color="#CCCCCC"> of the embedding images</font>

725
00:32:31,910 --> 00:32:34,890
or to think<font color="#CCCCCC"> for it another way it's like</font>

726
00:32:34,890 --> 00:32:39,860
how you know<font color="#E5E5E5"> rather</font><font color="#CCCCCC"> than five it's fit</font>

727
00:32:41,750 --> 00:32:45,780
Jeremy<font color="#CCCCCC"> I have a</font><font color="#E5E5E5"> question about suppose</font>

728
00:32:45,780 --> 00:32:50,220
that your recommendation system is more

729
00:32:50,220 --> 00:32:52,670
implicit<font color="#E5E5E5"> so you have zeros or ones</font>

730
00:32:52,670 --> 00:32:56,610
instead of just actual numbers right<font color="#CCCCCC"> so</font>

731
00:32:56,610 --> 00:32:59,730
basically<font color="#CCCCCC"> we</font><font color="#E5E5E5"> would then need</font><font color="#CCCCCC"> to use a</font>

732
00:32:59,730 --> 00:33:01,760
classifier instead of regresa

733
00:33:01,760 --> 00:33:05,520
<font color="#CCCCCC">I have to sample the negative or</font>

734
00:33:05,520 --> 00:33:06,960
<font color="#CCCCCC">something like that so if you don't</font><font color="#E5E5E5"> have</font>

735
00:33:06,960 --> 00:33:09,510
<font color="#E5E5E5">it which</font><font color="#CCCCCC"> is up once let's say like just</font>

736
00:33:09,510 --> 00:33:11,280
<font color="#E5E5E5">kind of implicit feedback</font>

737
00:33:11,280 --> 00:33:13,890
<font color="#E5E5E5">oh I'm not</font><font color="#CCCCCC"> sure we'll get</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> that one in</font>

738
00:33:13,890 --> 00:33:15,870
this class<font color="#E5E5E5"> but what</font><font color="#CCCCCC"> I will say is</font><font color="#E5E5E5"> like</font>

739
00:33:15,870 --> 00:33:16,980
in the case that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> just doing</font>

740
00:33:16,980 --> 00:33:20,730
classification rather than regression<font color="#CCCCCC"> we</font>

741
00:33:20,730 --> 00:33:21,600
haven't actually built<font color="#CCCCCC"> that in the</font>

742
00:33:21,600 --> 00:33:23,040
<font color="#E5E5E5">library yet maybe somebody this week</font>

743
00:33:23,040 --> 00:33:24,570
<font color="#CCCCCC">that wants</font><font color="#E5E5E5"> to try adding it it would</font>

744
00:33:24,570 --> 00:33:26,340
<font color="#CCCCCC">only be a small number</font><font color="#E5E5E5"> of lines of code</font>

745
00:33:26,340 --> 00:33:28,160
you basically have<font color="#E5E5E5"> to change the</font>

746
00:33:28,160 --> 00:33:30,720
activation function<font color="#E5E5E5"> to be a sigmoid and</font>

747
00:33:30,720 --> 00:33:34,080
you would have<font color="#E5E5E5"> to change the criterion</font>

748
00:33:34,080 --> 00:33:37,040
or the<font color="#E5E5E5"> loss function to be cross-entropy</font>

749
00:33:37,040 --> 00:33:41,670
rather than rmse<font color="#CCCCCC"> and that will give you</font>

750
00:33:41,670 --> 00:33:44,850
a classifier rather than<font color="#E5E5E5"> a regresar how</font>

751
00:33:44,850 --> 00:33:45,990
those are the<font color="#E5E5E5"> only things you'll have</font><font color="#CCCCCC"> to</font>

752
00:33:45,990 --> 00:33:47,550
change<font color="#E5E5E5"> so hopefully somebody this week</font>

753
00:33:47,550 --> 00:33:49,320
won't take up that<font color="#CCCCCC"> challenge and by the</font>

754
00:33:49,320 --> 00:33:50,940
time we come back<font color="#CCCCCC"> next week we've all</font>

755
00:33:50,940 --> 00:33:57,030
have that working<font color="#CCCCCC"> ok so I said that</font>

756
00:33:57,030 --> 00:33:59,430
we're basically<font color="#E5E5E5"> doing a dot product</font>

757
00:33:59,430 --> 00:34:02,580
<font color="#CCCCCC">right or</font><font color="#E5E5E5"> you know a dot product is kind</font>

758
00:34:02,580 --> 00:34:04,800
of<font color="#CCCCCC"> the vector version I guess of this</font>

759
00:34:04,800 --> 00:34:07,950
<font color="#E5E5E5">matrix product</font><font color="#CCCCCC"> so we're basically</font><font color="#E5E5E5"> doing</font>

760
00:34:07,950 --> 00:34:10,409
each of these things<font color="#E5E5E5"> times each of these</font>

761
00:34:10,409 --> 00:34:14,130
things<font color="#E5E5E5"> and then add it together so let's</font>

762
00:34:14,130 --> 00:34:16,110
just have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> look at how we do that in</font>

763
00:34:16,110 --> 00:34:20,310
<font color="#E5E5E5">Python</font><font color="#CCCCCC"> so we can create a tensor in pi</font>

764
00:34:20,310 --> 00:34:22,110
torch just using this<font color="#E5E5E5"> little capital T</font>

765
00:34:22,110 --> 00:34:25,080
thing<font color="#CCCCCC"> you can just say that's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> first</font>

766
00:34:25,080 --> 00:34:26,610
day<font color="#CCCCCC"> I version the full version is torch</font>

767
00:34:26,610 --> 00:34:29,699
<font color="#E5E5E5">dot from</font><font color="#CCCCCC"> I'm pie</font><font color="#E5E5E5"> or something but I've</font>

768
00:34:29,699 --> 00:34:31,290
got to set<font color="#E5E5E5"> up so you</font><font color="#CCCCCC"> can possibly pass</font>

769
00:34:31,290 --> 00:34:34,409
in even a list of lists so this is going

770
00:34:34,409 --> 00:34:37,679
<font color="#E5E5E5">to create a torch tensor with one two</font>

771
00:34:37,679 --> 00:34:39,929
three four<font color="#CCCCCC"> and then here's a torch</font>

772
00:34:39,929 --> 00:34:43,440
tensor with two<font color="#E5E5E5"> to ten ten</font><font color="#CCCCCC"> ok so here</font>

773
00:34:43,440 --> 00:34:45,239
are<font color="#CCCCCC"> two more chances</font>

774
00:34:45,239 --> 00:34:48,840
I didn't say<font color="#E5E5E5"> doc</font><font color="#CCCCCC"> CUDA so they're</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> on</font>

775
00:34:48,840 --> 00:34:51,389
the GPU they're sitting on<font color="#E5E5E5"> the CPU just</font>

776
00:34:51,389 --> 00:34:55,560
<font color="#E5E5E5">FYI</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> multiply them together right</font>

777
00:34:55,560 --> 00:34:57,510
<font color="#E5E5E5">and so anytime you</font><font color="#CCCCCC"> have a mathematical</font>

778
00:34:57,510 --> 00:35:01,470
<font color="#E5E5E5">operator between tensors in numpy or</font>

779
00:35:01,470 --> 00:35:04,820
pipe torch<font color="#E5E5E5"> it will do element wise</font>

780
00:35:04,820 --> 00:35:06,330
assuming that they're the same

781
00:35:06,330 --> 00:35:07,920
dimensionality which they are they're

782
00:35:07,920 --> 00:35:11,010
both<font color="#CCCCCC"> to about two</font><font color="#E5E5E5"> okay and so here we've</font>

783
00:35:11,010 --> 00:35:15,960
<font color="#CCCCCC">got 2 by 2 is 4</font><font color="#E5E5E5"> 3 by 10 is 30 and so</font>

784
00:35:15,960 --> 00:35:19,590
forth<font color="#CCCCCC"> ok so there's a a times B so if</font>

785
00:35:19,590 --> 00:35:21,540
you think<font color="#E5E5E5"> about basically what</font><font color="#CCCCCC"> we want</font>

786
00:35:21,540 --> 00:35:25,610
<font color="#E5E5E5">to do here is we want to take</font>

787
00:35:29,120 --> 00:35:35,940
<font color="#CCCCCC">ok so I've got</font><font color="#E5E5E5"> 1 times 2</font><font color="#CCCCCC"> is 2 2 times 2</font>

788
00:35:35,940 --> 00:35:40,140
is 4 2 plus 4 is<font color="#E5E5E5"> 6</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so that is</font>

789
00:35:40,140 --> 00:35:43,860
actually<font color="#E5E5E5"> the dot product between 1 2</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 2</font>

790
00:35:43,860 --> 00:35:48,150
4 and then here we've<font color="#E5E5E5"> got</font><font color="#CCCCCC"> 3 by 10 is</font><font color="#E5E5E5"> 34</font>

791
00:35:48,150 --> 00:35:51,780
by 40 sorry 4 by 10 is 40<font color="#E5E5E5"> 30 and 40</font><font color="#CCCCCC"> and</font>

792
00:35:51,780 --> 00:35:56,520
70 so in other words a times B dot some

793
00:35:56,520 --> 00:35:58,380
along<font color="#E5E5E5"> the first</font><font color="#CCCCCC"> dimension</font>

794
00:35:58,380 --> 00:36:00,240
so that's summing up the columns<font color="#CCCCCC"> in</font>

795
00:36:00,240 --> 00:36:03,180
other words<font color="#E5E5E5"> across</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> row</font><font color="#CCCCCC"> okay this thing</font>

796
00:36:03,180 --> 00:36:07,560
here<font color="#E5E5E5"> is doing</font><font color="#CCCCCC"> the dot product</font><font color="#E5E5E5"> of each of</font>

797
00:36:07,560 --> 00:36:11,400
these rows<font color="#E5E5E5"> with each</font><font color="#CCCCCC"> of these rows so it</font>

798
00:36:11,400 --> 00:36:13,110
makes sense<font color="#CCCCCC"> and obviously we could do</font>

799
00:36:13,110 --> 00:36:16,080
that with you know some kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> matrix</font>

800
00:36:16,080 --> 00:36:17,640
<font color="#CCCCCC">multiplication approach but</font><font color="#E5E5E5"> I'm trying</font>

801
00:36:17,640 --> 00:36:20,150
<font color="#E5E5E5">to really do things</font><font color="#CCCCCC"> with this</font><font color="#E5E5E5"> little</font>

802
00:36:20,150 --> 00:36:24,060
special case stuff as<font color="#CCCCCC"> possible ok so</font>

803
00:36:24,060 --> 00:36:25,220
that's what we're going<font color="#CCCCCC"> to use for our</font>

804
00:36:25,220 --> 00:36:28,080
dot products from now on so basically

805
00:36:28,080 --> 00:36:31,680
<font color="#CCCCCC">all</font><font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to do now is remember we</font>

806
00:36:31,680 --> 00:36:34,260
have the data we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> in that</font>

807
00:36:34,260 --> 00:36:36,930
crosstab format<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> excel we've got it</font>

808
00:36:36,930 --> 00:36:39,270
in this crosstab format but we've got it

809
00:36:39,270 --> 00:36:42,360
<font color="#E5E5E5">here in this listed format</font><font color="#CCCCCC"> here's</font><font color="#E5E5E5"> our</font>

810
00:36:42,360 --> 00:36:44,640
movie rating user movie<font color="#CCCCCC"> revenue so</font>

811
00:36:44,640 --> 00:36:46,650
conceptually<font color="#E5E5E5"> we want to be like looking</font>

812
00:36:46,650 --> 00:36:49,320
up this user into our embedding matrix

813
00:36:49,320 --> 00:36:51,390
to<font color="#CCCCCC"> find</font><font color="#E5E5E5"> their 50 factors looking up that</font>

814
00:36:51,390 --> 00:36:53,880
movie to find<font color="#E5E5E5"> their 50 factors and then</font>

815
00:36:53,880 --> 00:36:56,940
take the dot product<font color="#E5E5E5"> of those</font><font color="#CCCCCC"> two 50</font>

816
00:36:56,940 --> 00:37:05,130
long vectors so let's do that<font color="#CCCCCC"> to do it</font>

817
00:37:05,130 --> 00:37:08,520
we're going<font color="#E5E5E5"> to build a layer our own</font>

818
00:37:08,520 --> 00:37:12,210
custom<font color="#E5E5E5"> neural net layer that's not right</font>

819
00:37:12,210 --> 00:37:15,630
so the the the<font color="#E5E5E5"> more generic vocabulary</font>

820
00:37:15,630 --> 00:37:17,370
<font color="#E5E5E5">we call this is we're going to build a</font>

821
00:37:17,370 --> 00:37:21,120
high torch module<font color="#E5E5E5"> okay so a PI torch</font>

822
00:37:21,120 --> 00:37:24,180
module is a very specific<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> it's</font>

823
00:37:24,180 --> 00:37:26,370
something<font color="#CCCCCC"> that you can use as a layer</font>

824
00:37:26,370 --> 00:37:27,870
and<font color="#E5E5E5"> a neural net once you've created</font>

825
00:37:27,870 --> 00:37:29,910
<font color="#E5E5E5">your</font><font color="#CCCCCC"> own height watch module you</font><font color="#E5E5E5"> can</font>

826
00:37:29,910 --> 00:37:32,550
throw it<font color="#CCCCCC"> into a mirror on it and a</font>

827
00:37:32,550 --> 00:37:35,610
module<font color="#E5E5E5"> works by assuming</font><font color="#CCCCCC"> we've already</font>

828
00:37:35,610 --> 00:37:36,720
got<font color="#E5E5E5"> once a cordon</font>

829
00:37:36,720 --> 00:37:39,060
model<font color="#E5E5E5"> you can pass in some things in</font>

830
00:37:39,060 --> 00:37:40,619
<font color="#E5E5E5">parentheses and it will calculate it</font>

831
00:37:40,619 --> 00:37:43,980
<font color="#CCCCCC">right so assuming that</font><font color="#E5E5E5"> we already have a</font>

832
00:37:43,980 --> 00:37:48,330
<font color="#E5E5E5">modular</font><font color="#CCCCCC"> product we can instantiate</font><font color="#E5E5E5"> it</font>

833
00:37:48,330 --> 00:37:52,950
like so to<font color="#E5E5E5"> create our product object and</font>

834
00:37:52,950 --> 00:37:54,900
we can<font color="#CCCCCC"> basically now treat that</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> a</font>

835
00:37:54,900 --> 00:37:57,960
function<font color="#CCCCCC"> right but the thing is it's</font><font color="#E5E5E5"> not</font>

836
00:37:57,960 --> 00:38:00,810
just a<font color="#CCCCCC"> function</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we'll be able to</font>

837
00:38:00,810 --> 00:38:02,640
do things<font color="#CCCCCC"> like take derivatives of it</font>

838
00:38:02,640 --> 00:38:06,359
stack them up together<font color="#E5E5E5"> into</font><font color="#CCCCCC"> a big stack</font>

839
00:38:06,359 --> 00:38:08,369
of neural network layers<font color="#E5E5E5"> blah blah blah</font>

840
00:38:08,369 --> 00:38:11,400
<font color="#CCCCCC">so it's basically a function that</font><font color="#E5E5E5"> we can</font>

841
00:38:11,400 --> 00:38:14,730
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of compose</font><font color="#CCCCCC"> very conveniently so</font>

842
00:38:14,730 --> 00:38:18,510
here how do<font color="#E5E5E5"> we define a module which as</font>

843
00:38:18,510 --> 00:38:20,070
you can<font color="#CCCCCC"> see here returns a dot</font><font color="#E5E5E5"> product</font>

844
00:38:20,070 --> 00:38:23,270
<font color="#E5E5E5">well we have to create a Python class</font>

845
00:38:23,270 --> 00:38:26,550
and so if you<font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> done -</font><font color="#CCCCCC"> oo</font><font color="#E5E5E5"> before</font>

846
00:38:26,550 --> 00:38:28,830
you're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to have to learn because</font>

847
00:38:28,830 --> 00:38:31,410
<font color="#E5E5E5">all my torch modules are written in</font>

848
00:38:31,410 --> 00:38:33,690
Python<font color="#CCCCCC"> oo</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's one of</font><font color="#E5E5E5"> the things I</font>

849
00:38:33,690 --> 00:38:35,760
really like about<font color="#E5E5E5"> PI torch is that it</font>

850
00:38:35,760 --> 00:38:38,400
doesn't reinvent totally new ways of

851
00:38:38,400 --> 00:38:40,740
doing<font color="#E5E5E5"> things by tensorflow does all the</font>

852
00:38:40,740 --> 00:38:43,440
<font color="#E5E5E5">time</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> pi torch that you know really</font>

853
00:38:43,440 --> 00:38:46,050
tend to<font color="#E5E5E5"> use pythonic ways to do things</font>

854
00:38:46,050 --> 00:38:48,660
<font color="#CCCCCC">so in this case</font><font color="#E5E5E5"> how do you create you</font>

855
00:38:48,660 --> 00:38:51,060
<font color="#CCCCCC">know some kind of new behavior</font><font color="#E5E5E5"> you</font>

856
00:38:51,060 --> 00:38:55,770
create a<font color="#E5E5E5"> Python plus it's so Jeremy</font>

857
00:38:55,770 --> 00:38:59,790
suppose that you have a lot of<font color="#E5E5E5"> data not</font>

858
00:38:59,790 --> 00:39:01,230
<font color="#CCCCCC">just a little bit</font><font color="#E5E5E5"> of data you</font><font color="#CCCCCC"> can have</font>

859
00:39:01,230 --> 00:39:03,570
in memory<font color="#CCCCCC"> will you be</font><font color="#E5E5E5"> able to use fossae</font>

860
00:39:03,570 --> 00:39:07,020
<font color="#CCCCCC">I to solve glory filtering yes</font>

861
00:39:07,020 --> 00:39:08,460
<font color="#E5E5E5">absolutely</font>

862
00:39:08,460 --> 00:39:15,060
it's it uses mini-batch stochastic

863
00:39:15,060 --> 00:39:16,530
gradient descent<font color="#E5E5E5"> which does have a batch</font>

864
00:39:16,530 --> 00:39:26,820
at a time<font color="#E5E5E5"> the this particular</font><font color="#CCCCCC"> version</font><font color="#E5E5E5"> is</font>

865
00:39:26,820 --> 00:39:30,030
going to create a panda's data frame and

866
00:39:30,030 --> 00:39:33,560
<font color="#CCCCCC">panda's data frame</font><font color="#E5E5E5"> has to live in memory</font>

867
00:39:33,560 --> 00:39:37,560
<font color="#CCCCCC">having said that you can</font><font color="#E5E5E5"> get easily 512</font>

868
00:39:37,560 --> 00:39:40,920
gig you know<font color="#E5E5E5"> instances on Amazon so like</font>

869
00:39:40,920 --> 00:39:42,900
if<font color="#E5E5E5"> you had a CSV that was bigger than</font>

870
00:39:42,900 --> 00:39:46,200
512 gig<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> that would be</font>

871
00:39:46,200 --> 00:39:48,510
<font color="#CCCCCC">impressive if that did happen I guess</font>

872
00:39:48,510 --> 00:39:50,099
you would have<font color="#CCCCCC"> to instead</font>

873
00:39:50,099 --> 00:39:52,769
save that as a<font color="#CCCCCC"> be calls array and create</font>

874
00:39:52,769 --> 00:39:54,210
a slightly different version that reads

875
00:39:54,210 --> 00:39:56,339
from a because<font color="#CCCCCC"> array</font><font color="#E5E5E5"> just streaming in</font>

876
00:39:56,339 --> 00:40:00,359
or maybe from a desk<font color="#E5E5E5"> data frame which</font>

877
00:40:00,359 --> 00:40:03,779
also so it would be easy to do I<font color="#E5E5E5"> don't</font>

878
00:40:03,779 --> 00:40:06,779
think<font color="#CCCCCC"> I've seen real-world situations</font>

879
00:40:06,779 --> 00:40:09,029
where you have 512 gigabyte

880
00:40:09,029 --> 00:40:11,130
<font color="#E5E5E5">collaborative filtering matrices but</font>

881
00:40:11,130 --> 00:40:18,029
yeah we<font color="#E5E5E5"> can do it okay now this is</font><font color="#CCCCCC"> PI</font>

882
00:40:18,029 --> 00:40:20,069
torch specific this next bit is that

883
00:40:20,069 --> 00:40:23,099
<font color="#E5E5E5">when you define like the actual work</font><font color="#CCCCCC"> to</font>

884
00:40:23,099 --> 00:40:26,279
be done<font color="#CCCCCC"> which is here</font><font color="#E5E5E5"> return user times</font>

885
00:40:26,279 --> 00:40:29,190
movie dot some you have to put it in a

886
00:40:29,190 --> 00:40:32,640
special<font color="#CCCCCC"> method</font><font color="#E5E5E5"> called forward</font><font color="#CCCCCC"> okay and</font>

887
00:40:32,640 --> 00:40:34,470
this<font color="#E5E5E5"> is this idea</font><font color="#CCCCCC"> that like it's</font><font color="#E5E5E5"> very</font>

888
00:40:34,470 --> 00:40:37,109
likely<font color="#CCCCCC"> you're on that right in</font><font color="#E5E5E5"> a neural</font>

889
00:40:37,109 --> 00:40:39,089
net the thing where you calculate the

890
00:40:39,089 --> 00:40:43,019
next set of activations<font color="#E5E5E5"> is called the</font>

891
00:40:43,019 --> 00:40:45,210
<font color="#E5E5E5">the forward pass and so that's doing a</font>

892
00:40:45,210 --> 00:40:48,180
forward<font color="#CCCCCC"> calculation the gradients is</font>

893
00:40:48,180 --> 00:40:50,039
called the backward calculation we don't

894
00:40:50,039 --> 00:40:51,989
have to do that<font color="#E5E5E5"> because</font><font color="#CCCCCC"> PI torch</font>

895
00:40:51,989 --> 00:40:53,970
calculates that<font color="#E5E5E5"> automatically so we just</font>

896
00:40:53,970 --> 00:40:56,849
have<font color="#E5E5E5"> to define forward so we create a</font>

897
00:40:56,849 --> 00:40:59,460
<font color="#E5E5E5">new class we define forward and here we</font>

898
00:40:59,460 --> 00:41:01,529
write in<font color="#E5E5E5"> our definition</font><font color="#CCCCCC"> of dot product</font>

899
00:41:01,529 --> 00:41:05,460
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so that's it so now that we've</font>

900
00:41:05,460 --> 00:41:08,130
created this<font color="#E5E5E5"> class definition we can</font>

901
00:41:08,130 --> 00:41:11,670
instantiate our model<font color="#E5E5E5"> right and we can</font>

902
00:41:11,670 --> 00:41:13,979
call our model<font color="#E5E5E5"> and get back</font><font color="#CCCCCC"> the numbers</font>

903
00:41:13,979 --> 00:41:16,529
be expected<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so that's it that's how</font>

904
00:41:16,529 --> 00:41:20,640
we create<font color="#E5E5E5"> a custom</font><font color="#CCCCCC"> PI torch layer and if</font>

905
00:41:20,640 --> 00:41:23,390
you compare<font color="#CCCCCC"> that to like any other</font>

906
00:41:23,390 --> 00:41:25,979
library<font color="#E5E5E5"> around pretty</font><font color="#CCCCCC"> much this is</font><font color="#E5E5E5"> way</font>

907
00:41:25,979 --> 00:41:28,349
easier<font color="#CCCCCC"> basically I guess because we're</font>

908
00:41:28,349 --> 00:41:32,249
leveraging<font color="#E5E5E5"> what's already in</font><font color="#CCCCCC"> person so</font>

909
00:41:32,249 --> 00:41:34,499
let's go ahead<font color="#E5E5E5"> and now create a more</font>

910
00:41:34,499 --> 00:41:38,039
complex<font color="#E5E5E5"> module and we're going</font><font color="#CCCCCC"> to</font>

911
00:41:38,039 --> 00:41:40,259
<font color="#CCCCCC">basically do the same thing we've got to</font>

912
00:41:40,259 --> 00:41:43,319
<font color="#CCCCCC">have a forward</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to have</font>

913
00:41:43,319 --> 00:41:46,289
our users<font color="#CCCCCC"> x movies dot sum but we're</font>

914
00:41:46,289 --> 00:41:47,700
going<font color="#E5E5E5"> to do one</font><font color="#CCCCCC"> more thing before</font><font color="#E5E5E5"> hand</font>

915
00:41:47,700 --> 00:41:49,670
which is<font color="#E5E5E5"> we're going to create two</font>

916
00:41:49,670 --> 00:41:52,619
<font color="#E5E5E5">embedding matrices and then we're going</font>

917
00:41:52,619 --> 00:41:54,930
to look<font color="#E5E5E5"> up</font><font color="#CCCCCC"> our users and</font><font color="#E5E5E5"> our movies in</font>

918
00:41:54,930 --> 00:41:57,509
those<font color="#E5E5E5"> inventing matrices so let's go</font>

919
00:41:57,509 --> 00:42:01,410
<font color="#E5E5E5">through and and do that so the first</font>

920
00:42:01,410 --> 00:42:03,099
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> to realize is</font>

921
00:42:03,099 --> 00:42:07,690
that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> uses the</font><font color="#CCCCCC"> user IDs</font><font color="#E5E5E5"> and the movie</font>

922
00:42:07,690 --> 00:42:11,109
IDs<font color="#CCCCCC"> may not be contiguous you know like</font>

923
00:42:11,109 --> 00:42:12,549
<font color="#CCCCCC">they're maybe they start at a million</font>

924
00:42:12,549 --> 00:42:16,749
<font color="#E5E5E5">and go to a million</font><font color="#CCCCCC"> in 1000</font><font color="#E5E5E5"> so right so</font>

925
00:42:16,749 --> 00:42:21,279
if we just used those IDs directly to

926
00:42:21,279 --> 00:42:23,440
look up into<font color="#E5E5E5"> an embedding matrix</font><font color="#CCCCCC"> we</font>

927
00:42:23,440 --> 00:42:24,880
would have to create an embedding matrix

928
00:42:24,880 --> 00:42:27,369
of size 1 million<font color="#E5E5E5"> 1000 right which we</font>

929
00:42:27,369 --> 00:42:29,470
<font color="#E5E5E5">don't want to do so the</font><font color="#CCCCCC"> first thing I do</font>

930
00:42:29,470 --> 00:42:33,880
is to get a list of the unique user IDs

931
00:42:33,880 --> 00:42:37,930
<font color="#CCCCCC">and then I create a</font><font color="#E5E5E5"> mapping from every</font>

932
00:42:37,930 --> 00:42:42,640
user ID to<font color="#CCCCCC"> a contiguous integer this</font>

933
00:42:42,640 --> 00:42:44,470
thing I've done here where I've created

934
00:42:44,470 --> 00:42:48,759
a dictionary which maps from every

935
00:42:48,759 --> 00:42:51,670
unique thing to<font color="#CCCCCC"> a unique index is</font><font color="#E5E5E5"> well</font>

936
00:42:51,670 --> 00:42:52,569
worth studying

937
00:42:52,569 --> 00:42:54,309
<font color="#E5E5E5">during the week because like it's is</font>

938
00:42:54,309 --> 00:42:56,170
super super handy it's something you

939
00:42:56,170 --> 00:42:58,930
very very<font color="#CCCCCC"> often have to do in all kinds</font>

940
00:42:58,930 --> 00:43:00,789
of machine learning<font color="#CCCCCC"> all right and so I</font>

941
00:43:00,789 --> 00:43:02,019
<font color="#E5E5E5">won't go through</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> here it's easy</font>

942
00:43:02,019 --> 00:43:03,640
<font color="#E5E5E5">enough to figure out if you can't figure</font>

943
00:43:03,640 --> 00:43:06,729
it out<font color="#CCCCCC"> just ask on the forum anyway so</font>

944
00:43:06,729 --> 00:43:10,150
once we've<font color="#CCCCCC"> got the mapping from user</font><font color="#E5E5E5"> to</font>

945
00:43:10,150 --> 00:43:14,859
a contiguous<font color="#E5E5E5"> index we then can say let's</font>

946
00:43:14,859 --> 00:43:18,759
now replace the user ID column<font color="#E5E5E5"> with that</font>

947
00:43:18,759 --> 00:43:22,119
contiguous index right so pandas dot

948
00:43:22,119 --> 00:43:25,210
apply applies an arbitrary function<font color="#CCCCCC"> and</font>

949
00:43:25,210 --> 00:43:27,729
<font color="#CCCCCC">python lambda is how you</font><font color="#E5E5E5"> create an</font>

950
00:43:27,729 --> 00:43:29,920
<font color="#CCCCCC">anonymous function on the fly and this</font>

951
00:43:29,920 --> 00:43:32,559
anonymous function simply returns<font color="#CCCCCC"> the NS</font>

952
00:43:32,559 --> 00:43:36,039
through<font color="#E5E5E5"> the same thing for movies and so</font>

953
00:43:36,039 --> 00:43:38,380
after<font color="#CCCCCC"> that we now have the same ratings</font>

954
00:43:38,380 --> 00:43:41,319
table we had before<font color="#E5E5E5"> but our IDs have</font>

955
00:43:41,319 --> 00:43:43,690
been mapped to contiguous integers

956
00:43:43,690 --> 00:43:45,519
<font color="#E5E5E5">therefore they're things that</font><font color="#CCCCCC"> we can</font>

957
00:43:45,519 --> 00:43:49,239
look up<font color="#E5E5E5"> into an embedding matrix so</font>

958
00:43:49,239 --> 00:43:51,579
let's get the count of our users<font color="#E5E5E5"> in our</font>

959
00:43:51,579 --> 00:43:54,819
<font color="#E5E5E5">movies and let's now go ahead and try</font>

960
00:43:54,819 --> 00:43:59,430
and<font color="#E5E5E5"> create our</font><font color="#CCCCCC"> Python version</font><font color="#E5E5E5"> of this</font>

961
00:43:59,430 --> 00:44:00,609
okay

962
00:44:00,609 --> 00:44:05,499
so<font color="#E5E5E5"> earlier on when we created our</font>

963
00:44:05,499 --> 00:44:10,599
simplest possible<font color="#E5E5E5"> PI torch module</font>

964
00:44:10,599 --> 00:44:14,529
there was no like<font color="#E5E5E5"> state we didn't need a</font>

965
00:44:14,529 --> 00:44:16,910
constructor because<font color="#CCCCCC"> we weren't</font><font color="#E5E5E5"> like</font>

966
00:44:16,910 --> 00:44:18,650
saying how many<font color="#E5E5E5"> users are there or how</font>

967
00:44:18,650 --> 00:44:19,850
many movies are there or how many

968
00:44:19,850 --> 00:44:21,760
factors<font color="#E5E5E5"> do we want or whatever right</font>

969
00:44:21,760 --> 00:44:25,720
<font color="#E5E5E5">anytime we want to do something like</font>

970
00:44:25,720 --> 00:44:28,850
this<font color="#E5E5E5"> where we're passing in and saying</font>

971
00:44:28,850 --> 00:44:32,450
we want<font color="#E5E5E5"> to construct our module with</font>

972
00:44:32,450 --> 00:44:34,730
this<font color="#E5E5E5"> number of users and this number of</font>

973
00:44:34,730 --> 00:44:37,850
movies then we need a constructor for

974
00:44:37,850 --> 00:44:40,040
<font color="#E5E5E5">our class and you create a constructor</font>

975
00:44:40,040 --> 00:44:44,000
<font color="#CCCCCC">in Python by defining a dunder init</font>

976
00:44:44,000 --> 00:44:45,650
<font color="#E5E5E5">underscore underscore</font><font color="#CCCCCC"> init underscore</font>

977
00:44:45,650 --> 00:44:47,840
underscore<font color="#E5E5E5"> yet special</font><font color="#CCCCCC"> name</font>

978
00:44:47,840 --> 00:44:50,750
so this just<font color="#CCCCCC"> creates a constructor and</font>

979
00:44:50,750 --> 00:44:53,360
<font color="#CCCCCC">if you</font><font color="#E5E5E5"> haven't done over before you</font>

980
00:44:53,360 --> 00:44:54,710
wanted to do some study during the week

981
00:44:54,710 --> 00:44:57,890
but<font color="#E5E5E5"> it's pretty simple</font><font color="#CCCCCC"> idea this</font><font color="#E5E5E5"> is just</font>

982
00:44:57,890 --> 00:44:59,120
the thing that when we create<font color="#E5E5E5"> this</font>

983
00:44:59,120 --> 00:45:01,700
object this<font color="#E5E5E5"> is what gets wrong okay</font>

984
00:45:01,700 --> 00:45:04,840
<font color="#E5E5E5">again special</font><font color="#CCCCCC"> python thing when you</font>

985
00:45:04,840 --> 00:45:07,340
create your<font color="#CCCCCC"> own constructor you have to</font>

986
00:45:07,340 --> 00:45:09,560
call the parent class constructor<font color="#E5E5E5"> and if</font>

987
00:45:09,560 --> 00:45:11,090
you want to have all of<font color="#E5E5E5"> the cool</font>

988
00:45:11,090 --> 00:45:13,910
behavior of a<font color="#E5E5E5"> PI porch module you get</font>

989
00:45:13,910 --> 00:45:17,270
that by inheriting from<font color="#E5E5E5"> an end module</font>

990
00:45:17,270 --> 00:45:20,030
<font color="#E5E5E5">neural net module</font><font color="#CCCCCC"> okay so basically by</font>

991
00:45:20,030 --> 00:45:22,400
inheriting here<font color="#CCCCCC"> and calling the</font>

992
00:45:22,400 --> 00:45:25,280
superclass<font color="#E5E5E5"> constructor we now have a</font>

993
00:45:25,280 --> 00:45:28,580
fully functioning<font color="#CCCCCC"> PI torch layer</font><font color="#E5E5E5"> okay so</font>

994
00:45:28,580 --> 00:45:30,190
now we have to give it some<font color="#E5E5E5"> behavior and</font>

995
00:45:30,190 --> 00:45:32,990
so we give us some behavior by storing

996
00:45:32,990 --> 00:45:35,900
some things in it<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> so here</font>

997
00:45:35,900 --> 00:45:38,140
we're going<font color="#CCCCCC"> to create something</font><font color="#E5E5E5"> called</font>

998
00:45:38,140 --> 00:45:41,870
self dot<font color="#E5E5E5"> you users and that is going to</font>

999
00:45:41,870 --> 00:45:45,050
be an embedding layer<font color="#E5E5E5"> a number of rows</font>

1000
00:45:45,050 --> 00:45:47,780
is<font color="#E5E5E5"> an user's number of columns is in</font>

1001
00:45:47,780 --> 00:45:51,890
factors so<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> exactly this right</font>

1002
00:45:51,890 --> 00:45:55,280
the number of rows is<font color="#E5E5E5"> M users number of</font>

1003
00:45:55,280 --> 00:45:58,880
columns is inventors<font color="#E5E5E5"> and then we'll have</font>

1004
00:45:58,880 --> 00:46:01,880
to do the same thing for movies okay so

1005
00:46:01,880 --> 00:46:04,160
that's going<font color="#E5E5E5"> to go ahead and</font><font color="#CCCCCC"> create</font>

1006
00:46:04,160 --> 00:46:09,910
these two randomly initialized<font color="#E5E5E5"> arrays</font>

1007
00:46:09,910 --> 00:46:12,920
however when you<font color="#E5E5E5"> randomly initialize</font>

1008
00:46:12,920 --> 00:46:14,990
<font color="#E5E5E5">over an</font><font color="#CCCCCC"> array it's important to randomly</font>

1009
00:46:14,990 --> 00:46:17,750
initialize<font color="#CCCCCC"> it to a reasonable set of</font>

1010
00:46:17,750 --> 00:46:20,600
<font color="#E5E5E5">numbers like</font><font color="#CCCCCC"> a reasonable scale right if</font>

1011
00:46:20,600 --> 00:46:22,400
<font color="#E5E5E5">we randomly initialize them from like</font>

1012
00:46:22,400 --> 00:46:24,770
naught to a million<font color="#E5E5E5"> then we would start</font>

1013
00:46:24,770 --> 00:46:26,180
out and you know these things would

1014
00:46:26,180 --> 00:46:29,210
start<font color="#E5E5E5"> out being like you know billions</font>

1015
00:46:29,210 --> 00:46:30,350
<font color="#E5E5E5">and billions of</font>

1016
00:46:30,350 --> 00:46:32,300
<font color="#CCCCCC">writing and that's going</font><font color="#E5E5E5"> to be very hard</font>

1017
00:46:32,300 --> 00:46:35,660
<font color="#E5E5E5">to do gradient descent</font><font color="#CCCCCC"> on so I just kind</font>

1018
00:46:35,660 --> 00:46:38,060
of<font color="#E5E5E5"> manually figured here like okay about</font>

1019
00:46:38,060 --> 00:46:41,870
<font color="#E5E5E5">what size numbers are going to give me</font>

1020
00:46:41,870 --> 00:46:43,700
<font color="#E5E5E5">about the right</font><font color="#CCCCCC"> readiness and so we</font>

1021
00:46:43,700 --> 00:46:44,930
<font color="#E5E5E5">don't we know we did ratings between</font>

1022
00:46:44,930 --> 00:46:48,200
<font color="#E5E5E5">about normal</font><font color="#CCCCCC"> five so if we start</font><font color="#E5E5E5"> out</font>

1023
00:46:48,200 --> 00:46:51,020
with stuff<font color="#E5E5E5"> between about naught and 0.05</font>

1024
00:46:51,020 --> 00:46:52,970
then<font color="#E5E5E5"> we're going to get ratings of about</font>

1025
00:46:52,970 --> 00:46:56,420
the right level<font color="#CCCCCC"> you can easily enough</font>

1026
00:46:56,420 --> 00:46:58,970
like<font color="#CCCCCC"> that calculate that in in neural</font>

1027
00:46:58,970 --> 00:47:02,830
<font color="#CCCCCC">nets there are standard algorithms for</font>

1028
00:47:02,830 --> 00:47:05,330
basically doing<font color="#E5E5E5"> doing that</font><font color="#CCCCCC"> calculation</font>

1029
00:47:05,330 --> 00:47:08,920
<font color="#CCCCCC">and the basic the key algorithm is</font>

1030
00:47:08,920 --> 00:47:12,170
something called initialization<font color="#E5E5E5"> from</font>

1031
00:47:12,170 --> 00:47:19,100
<font color="#CCCCCC">climbing her</font><font color="#E5E5E5"> and the basic idea</font><font color="#CCCCCC"> is that</font>

1032
00:47:19,100 --> 00:47:25,640
<font color="#E5E5E5">you take the</font><font color="#CCCCCC"> yeah you</font><font color="#E5E5E5"> basically set</font><font color="#CCCCCC"> the</font>

1033
00:47:25,640 --> 00:47:29,350
weights equal to a normal<font color="#E5E5E5"> distribution</font>

1034
00:47:32,320 --> 00:47:35,150
with a standard<font color="#CCCCCC"> deviation which is</font>

1035
00:47:35,150 --> 00:47:37,310
<font color="#E5E5E5">basically inversely proportional to the</font>

1036
00:47:37,310 --> 00:47:40,990
<font color="#E5E5E5">number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> things in the previous layer</font>

1037
00:47:40,990 --> 00:47:48,950
<font color="#CCCCCC">and so in our previous layer so in this</font>

1038
00:47:48,950 --> 00:47:51,620
case<font color="#E5E5E5"> we basically if you basically take</font>

1039
00:47:51,620 --> 00:47:54,860
<font color="#E5E5E5">that nor to 0.05 and multiply it by</font><font color="#CCCCCC"> the</font>

1040
00:47:54,860 --> 00:47:58,640
fact that you've<font color="#CCCCCC"> got</font><font color="#E5E5E5"> 40</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> with a 40</font>

1041
00:47:58,640 --> 00:48:00,850
or<font color="#E5E5E5"> 50 things coming out of it</font>

1042
00:48:00,850 --> 00:48:03,800
<font color="#E5E5E5">50 50 things coming out of it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

1043
00:48:03,800 --> 00:48:04,940
you're<font color="#E5E5E5"> going to get something about the</font>

1044
00:48:04,940 --> 00:48:09,500
right size<font color="#CCCCCC"> pi torch has already has like</font>

1045
00:48:09,500 --> 00:48:13,160
her initialization<font color="#CCCCCC"> class they're like we</font>

1046
00:48:13,160 --> 00:48:15,440
don't<font color="#E5E5E5"> in normally in real life have to</font>

1047
00:48:15,440 --> 00:48:16,970
think about<font color="#E5E5E5"> this we can</font><font color="#CCCCCC"> just call the</font>

1048
00:48:16,970 --> 00:48:19,310
existing initialization functions but

1049
00:48:19,310 --> 00:48:21,230
we're<font color="#E5E5E5"> trying to do this all like from</font>

1050
00:48:21,230 --> 00:48:24,950
<font color="#E5E5E5">scratch here</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> without any special</font>

1051
00:48:24,950 --> 00:48:28,430
stuff going on so there's<font color="#E5E5E5"> quite a bit</font><font color="#CCCCCC"> of</font>

1052
00:48:28,430 --> 00:48:31,700
<font color="#E5E5E5">pi torch notation here so self dot</font><font color="#CCCCCC"> u</font>

1053
00:48:31,700 --> 00:48:34,970
we've already set to an instance<font color="#E5E5E5"> of the</font>

1054
00:48:34,970 --> 00:48:39,490
embedding class<font color="#CCCCCC"> it has</font><font color="#E5E5E5"> a dot weight</font>

1055
00:48:39,490 --> 00:48:42,950
attribute which contains the<font color="#CCCCCC"> actual the</font>

1056
00:48:42,950 --> 00:48:44,749
actual<font color="#CCCCCC"> embed images</font>

1057
00:48:44,749 --> 00:48:49,969
so that contains this the actual

1058
00:48:49,969 --> 00:48:53,989
<font color="#E5E5E5">embedding matrix is not a tensor it's a</font>

1059
00:48:53,989 --> 00:48:57,680
variable a variable is exactly the same

1060
00:48:57,680 --> 00:48:59,569
as a tensor in other words it supports

1061
00:48:59,569 --> 00:49:02,479
<font color="#E5E5E5">the exact same operations as a tensor</font>

1062
00:49:02,479 --> 00:49:05,599
but it also does automatic

1063
00:49:05,599 --> 00:49:08,329
differentiation<font color="#E5E5E5"> that's all a variable is</font>

1064
00:49:08,329 --> 00:49:13,670
basically to pull the tensor out of a

1065
00:49:13,670 --> 00:49:16,339
variable<font color="#E5E5E5"> you get its data attribute okay</font>

1066
00:49:16,339 --> 00:49:19,729
so this is so this is<font color="#E5E5E5"> now the tensor of</font>

1067
00:49:19,729 --> 00:49:22,640
the weight<font color="#E5E5E5"> matrix of the self dot</font><font color="#CCCCCC"> you're</font>

1068
00:49:22,640 --> 00:49:25,339
inventing and then something<font color="#CCCCCC"> that's</font>

1069
00:49:25,339 --> 00:49:27,709
really<font color="#E5E5E5"> handy to</font><font color="#CCCCCC"> know is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> the</font>

1070
00:49:27,709 --> 00:49:31,039
tensor functions in pi torch<font color="#CCCCCC"> you can</font>

1071
00:49:31,039 --> 00:49:32,559
stick an underscore at the end and that

1072
00:49:32,559 --> 00:49:35,900
<font color="#CCCCCC">means do it in place all right</font><font color="#E5E5E5"> so this</font>

1073
00:49:35,900 --> 00:49:38,839
is<font color="#E5E5E5"> say create a random</font><font color="#CCCCCC"> uniform random</font>

1074
00:49:38,839 --> 00:49:41,959
<font color="#E5E5E5">number of an appropriate size</font><font color="#CCCCCC"> for this</font>

1075
00:49:41,959 --> 00:49:45,319
tensor<font color="#CCCCCC"> and don't return it but actually</font>

1076
00:49:45,319 --> 00:49:49,519
fill in<font color="#E5E5E5"> that matrix</font><font color="#CCCCCC"> unless okay</font><font color="#E5E5E5"> so</font>

1077
00:49:49,519 --> 00:49:51,469
that's a<font color="#E5E5E5"> super handy thing</font><font color="#CCCCCC"> to know about</font>

1078
00:49:51,469 --> 00:49:53,749
<font color="#CCCCCC">I mean it wouldn't be rocket science</font>

1079
00:49:53,749 --> 00:49:57,099
<font color="#E5E5E5">otherwise we would</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have gone</font>

1080
00:49:59,670 --> 00:50:02,799
[Music]

1081
00:50:02,799 --> 00:50:05,269
okay here's the non in-place version

1082
00:50:05,269 --> 00:50:07,609
that's<font color="#E5E5E5"> what saves us</font><font color="#CCCCCC"> some typing saves</font>

1083
00:50:07,609 --> 00:50:15,019
us<font color="#CCCCCC"> some screen noise</font><font color="#E5E5E5"> that's all okay</font><font color="#CCCCCC"> so</font>

1084
00:50:15,019 --> 00:50:18,229
<font color="#CCCCCC">now we've</font><font color="#E5E5E5"> got our randomly initialized</font>

1085
00:50:18,229 --> 00:50:21,499
<font color="#E5E5E5">embedding weight matrices and so</font><font color="#CCCCCC"> now the</font>

1086
00:50:21,499 --> 00:50:24,769
forward<font color="#E5E5E5"> I'm actually going to use the</font>

1087
00:50:24,769 --> 00:50:27,349
<font color="#E5E5E5">same columnar model data that we used</font>

1088
00:50:27,349 --> 00:50:31,069
for<font color="#E5E5E5"> Russman and so it's</font><font color="#CCCCCC"> actually going</font>

1089
00:50:31,069 --> 00:50:32,959
<font color="#E5E5E5">to be passed both categorical variables</font>

1090
00:50:32,959 --> 00:50:35,839
and continuous variables<font color="#CCCCCC"> and in this</font>

1091
00:50:35,839 --> 00:50:38,539
<font color="#E5E5E5">case there are</font><font color="#CCCCCC"> no continuous variables</font>

1092
00:50:38,539 --> 00:50:41,420
so I'm just<font color="#E5E5E5"> going to grab the 0th column</font>

1093
00:50:41,420 --> 00:50:43,400
<font color="#E5E5E5">out of the categorical variables and</font>

1094
00:50:43,400 --> 00:50:45,829
call it users and the first column<font color="#CCCCCC"> and</font>

1095
00:50:45,829 --> 00:50:48,229
call it movies<font color="#E5E5E5"> okay so I'm just kind of</font>

1096
00:50:48,229 --> 00:50:50,929
too lazy to create my<font color="#CCCCCC"> own</font><font color="#E5E5E5"> I've lots to</font>

1097
00:50:50,929 --> 00:50:52,400
do<font color="#E5E5E5"> about</font><font color="#CCCCCC"> too lazy</font><font color="#E5E5E5"> out that we do have a</font>

1098
00:50:52,400 --> 00:50:53,660
<font color="#E5E5E5">special class with this but I'm trying</font>

1099
00:50:53,660 --> 00:50:55,489
<font color="#CCCCCC">to</font><font color="#E5E5E5"> avoid creating a special class so</font>

1100
00:50:55,489 --> 00:50:57,809
just<font color="#CCCCCC"> going to leverage this columnar</font>

1101
00:50:57,809 --> 00:51:01,140
model data<font color="#E5E5E5"> plus okay so we can basically</font>

1102
00:51:01,140 --> 00:51:04,430
grab our user and movies mini-batches

1103
00:51:04,430 --> 00:51:07,049
<font color="#E5E5E5">right and remember this is not a single</font>

1104
00:51:07,049 --> 00:51:08,729
user in a single movie<font color="#E5E5E5"> this is going to</font>

1105
00:51:08,729 --> 00:51:13,680
be a whole mini batch of them<font color="#E5E5E5"> we can now</font>

1106
00:51:13,680 --> 00:51:15,930
look up that mini batch of users in our

1107
00:51:15,930 --> 00:51:18,900
embedding matrix<font color="#CCCCCC"> U and the movies in are</font>

1108
00:51:18,900 --> 00:51:21,689
embedding matrix<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so this is like</font>

1109
00:51:21,689 --> 00:51:23,640
<font color="#CCCCCC">exactly the same</font><font color="#E5E5E5"> is just</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> an array</font>

1110
00:51:23,640 --> 00:51:27,049
<font color="#E5E5E5">lookup to grab the user ID numbered</font>

1111
00:51:27,049 --> 00:51:29,339
value but we're<font color="#CCCCCC"> doing that a whole</font><font color="#E5E5E5"> mini</font>

1112
00:51:29,339 --> 00:51:31,319
<font color="#E5E5E5">batch at a time right and so it's</font>

1113
00:51:31,319 --> 00:51:33,479
because<font color="#CCCCCC"> PI torch</font><font color="#E5E5E5"> can do a whole mini</font>

1114
00:51:33,479 --> 00:51:34,709
batch at a time with pretty<font color="#E5E5E5"> much</font>

1115
00:51:34,709 --> 00:51:36,839
everything<font color="#E5E5E5"> that we can get really easy</font>

1116
00:51:36,839 --> 00:51:39,209
<font color="#E5E5E5">speed up we don't have to write any</font>

1117
00:51:39,209 --> 00:51:41,489
loops on the whole to do everything

1118
00:51:41,489 --> 00:51:43,920
<font color="#E5E5E5">through our mini batch</font><font color="#CCCCCC"> and in fact if</font>

1119
00:51:43,920 --> 00:51:45,509
you do ever loop through your mini batch

1120
00:51:45,509 --> 00:51:48,089
manually<font color="#E5E5E5"> you don't get GPU acceleration</font>

1121
00:51:48,089 --> 00:51:50,489
that's really important to know right so

1122
00:51:50,489 --> 00:51:52,619
you never<font color="#E5E5E5"> want to loop have a for loop</font>

1123
00:51:52,619 --> 00:51:54,630
<font color="#CCCCCC">going through</font><font color="#E5E5E5"> your mini batch you always</font>

1124
00:51:54,630 --> 00:51:56,640
want to do things in this<font color="#E5E5E5"> kind of like</font>

1125
00:51:56,640 --> 00:51:59,339
whole mini batch at a time<font color="#CCCCCC"> but</font><font color="#E5E5E5"> pretty</font>

1126
00:51:59,339 --> 00:52:01,619
much everything<font color="#E5E5E5"> imply torch does things</font>

1127
00:52:01,619 --> 00:52:03,269
are<font color="#CCCCCC"> holding</font><font color="#E5E5E5"> events at a time so you</font>

1128
00:52:03,269 --> 00:52:05,119
<font color="#E5E5E5">shouldn't have to worry about it</font>

1129
00:52:05,119 --> 00:52:08,039
and then here's our product<font color="#E5E5E5"> just like</font>

1130
00:52:08,039 --> 00:52:14,849
before<font color="#CCCCCC"> right so having</font><font color="#E5E5E5"> to find that I'm</font>

1131
00:52:14,849 --> 00:52:18,539
now going<font color="#CCCCCC"> to go ahead</font><font color="#E5E5E5"> and say</font><font color="#CCCCCC"> alright my</font>

1132
00:52:18,539 --> 00:52:22,079
<font color="#E5E5E5">X values is everything except the rating</font>

1133
00:52:22,079 --> 00:52:24,630
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> timestamp in my writings table</font>

1134
00:52:24,630 --> 00:52:27,299
my Y is<font color="#CCCCCC"> my rating and then I can just</font>

1135
00:52:27,299 --> 00:52:30,839
say<font color="#E5E5E5"> okay let's grab</font><font color="#CCCCCC"> a model data from a</font>

1136
00:52:30,839 --> 00:52:33,929
data frame using<font color="#E5E5E5"> that X and that</font><font color="#CCCCCC"> Y and</font>

1137
00:52:33,929 --> 00:52:36,989
<font color="#CCCCCC">here is</font><font color="#E5E5E5"> our list of categorical</font>

1138
00:52:36,989 --> 00:52:43,049
variables okay<font color="#CCCCCC"> and then so let's now</font>

1139
00:52:43,049 --> 00:52:47,519
instantiate that<font color="#CCCCCC"> PI torch object</font><font color="#E5E5E5"> alright</font>

1140
00:52:47,519 --> 00:52:49,549
so we've now created that from scratch

1141
00:52:49,549 --> 00:52:52,229
and then the next<font color="#E5E5E5"> thing we</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to do is</font>

1142
00:52:52,229 --> 00:52:55,469
to create an optimizer<font color="#CCCCCC"> so this is part</font>

1143
00:52:55,469 --> 00:53:00,150
of<font color="#CCCCCC"> pi torch the</font><font color="#E5E5E5"> only fast AI thing here</font>

1144
00:53:00,150 --> 00:53:02,640
is this line<font color="#E5E5E5"> right because that's like I</font>

1145
00:53:02,640 --> 00:53:05,160
<font color="#E5E5E5">don't think showing you how to build</font>

1146
00:53:05,160 --> 00:53:07,499
data sets and<font color="#E5E5E5"> data load is interesting</font>

1147
00:53:07,499 --> 00:53:09,509
<font color="#CCCCCC">enough really we might do</font><font color="#E5E5E5"> that in part</font>

1148
00:53:09,509 --> 00:53:11,400
two of the course<font color="#E5E5E5"> and</font>

1149
00:53:11,400 --> 00:53:12,839
it's actually so straightforward<font color="#E5E5E5"> like a</font>

1150
00:53:12,839 --> 00:53:14,430
lot of you are already<font color="#E5E5E5"> doing it on the</font>

1151
00:53:14,430 --> 00:53:17,220
forums<font color="#CCCCCC"> so I'm not going</font><font color="#E5E5E5"> to show you that</font>

1152
00:53:17,220 --> 00:53:19,049
in<font color="#E5E5E5"> this part but if you're interested</font>

1153
00:53:19,049 --> 00:53:21,960
<font color="#E5E5E5">feel free</font><font color="#CCCCCC"> to talk on the forums</font><font color="#E5E5E5"> about it</font>

1154
00:53:21,960 --> 00:53:24,380
<font color="#CCCCCC">but I'm just</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> take the</font>

1155
00:53:24,380 --> 00:53:26,670
thing that<font color="#E5E5E5"> feeds us data is a given</font>

1156
00:53:26,670 --> 00:53:27,930
particularly cuz these things are so

1157
00:53:27,930 --> 00:53:29,700
<font color="#CCCCCC">flexible</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know if you've got</font>

1158
00:53:29,700 --> 00:53:31,380
<font color="#CCCCCC">stuff enough data frame you</font><font color="#E5E5E5"> can just use</font>

1159
00:53:31,380 --> 00:53:34,589
this you<font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> to rewrite</font><font color="#CCCCCC"> it so</font>

1160
00:53:34,589 --> 00:53:35,940
that's<font color="#CCCCCC"> the only</font><font color="#E5E5E5"> fast AI thing we're</font>

1161
00:53:35,940 --> 00:53:39,230
using so<font color="#E5E5E5"> this is a PI torch thing and so</font>

1162
00:53:39,230 --> 00:53:42,420
<font color="#E5E5E5">optiom is the thing</font><font color="#CCCCCC"> and pi torch that</font>

1163
00:53:42,420 --> 00:53:44,640
gives us an optimizer will be learning

1164
00:53:44,640 --> 00:53:48,359
<font color="#CCCCCC">about that very shortly so it's actually</font>

1165
00:53:48,359 --> 00:53:49,859
<font color="#E5E5E5">the thing that's going</font><font color="#CCCCCC"> to update our</font>

1166
00:53:49,859 --> 00:53:54,900
weights<font color="#CCCCCC"> pi torch calls them the</font>

1167
00:53:54,900 --> 00:53:58,799
<font color="#E5E5E5">parameters of the model so earlier on</font><font color="#CCCCCC"> we</font>

1168
00:53:58,799 --> 00:54:01,079
<font color="#CCCCCC">set model</font><font color="#E5E5E5"> equals embedding dot blah blah</font>

1169
00:54:01,079 --> 00:54:04,829
right and because embedding dot derives

1170
00:54:04,829 --> 00:54:07,859
from<font color="#CCCCCC"> NN</font><font color="#E5E5E5"> module we get all of the</font><font color="#CCCCCC"> pi</font>

1171
00:54:07,859 --> 00:54:10,230
torch module behavior and one of the

1172
00:54:10,230 --> 00:54:12,359
things we<font color="#E5E5E5"> got for free is the ability to</font>

1173
00:54:12,359 --> 00:54:16,890
say<font color="#E5E5E5"> got parameters so that's pretty</font>

1174
00:54:16,890 --> 00:54:19,529
that's<font color="#E5E5E5"> pretty any right that's the thing</font>

1175
00:54:19,529 --> 00:54:21,230
that<font color="#CCCCCC"> basically is</font><font color="#E5E5E5"> going to automatically</font>

1176
00:54:21,230 --> 00:54:24,839
give us a list<font color="#E5E5E5"> of all of the weights in</font>

1177
00:54:24,839 --> 00:54:27,359
our model<font color="#E5E5E5"> that have to be updated and so</font>

1178
00:54:27,359 --> 00:54:29,059
that's what<font color="#E5E5E5"> gets passed to</font><font color="#CCCCCC"> the optimizer</font>

1179
00:54:29,059 --> 00:54:31,380
<font color="#CCCCCC">we also passed the</font><font color="#E5E5E5"> optimized at the</font>

1180
00:54:31,380 --> 00:54:34,650
learning rate<font color="#CCCCCC"> the weight decay which</font>

1181
00:54:34,650 --> 00:54:37,079
we'll talk about<font color="#E5E5E5"> later and momentum that</font>

1182
00:54:37,079 --> 00:54:42,119
we'll talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> later okay one other</font>

1183
00:54:42,119 --> 00:54:43,950
<font color="#E5E5E5">thing that I'm not going to do right</font><font color="#CCCCCC"> now</font>

1184
00:54:43,950 --> 00:54:45,809
<font color="#E5E5E5">but we</font><font color="#CCCCCC"> will do later is to write a</font>

1185
00:54:45,809 --> 00:54:48,240
training loop<font color="#E5E5E5"> so the training loop is a</font>

1186
00:54:48,240 --> 00:54:51,170
thing<font color="#E5E5E5"> that lives for each mini batch and</font>

1187
00:54:51,170 --> 00:54:54,779
updates the<font color="#CCCCCC"> weight to subtract the</font>

1188
00:54:54,779 --> 00:54:58,230
gradient times the moment<font color="#E5E5E5"> there's a</font>

1189
00:54:58,230 --> 00:55:01,079
function in fast AI which is the

1190
00:55:01,079 --> 00:55:07,740
training loop<font color="#CCCCCC"> and it's it's pretty</font>

1191
00:55:07,740 --> 00:55:12,510
<font color="#E5E5E5">simple here it is right</font><font color="#CCCCCC"> for a POC in</font>

1192
00:55:12,510 --> 00:55:16,049
epochs<font color="#CCCCCC"> this is just the thing that shows</font>

1193
00:55:16,049 --> 00:55:18,359
<font color="#E5E5E5">a progress bar so ignore this for X</font>

1194
00:55:18,359 --> 00:55:21,770
comma<font color="#E5E5E5"> Y in my</font><font color="#CCCCCC"> training data loader</font>

1195
00:55:21,770 --> 00:55:25,099
<font color="#CCCCCC">calculate the loss</font>

1196
00:55:25,490 --> 00:55:28,860
print out<font color="#E5E5E5"> the</font><font color="#CCCCCC"> lots</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know in a</font>

1197
00:55:28,860 --> 00:55:32,070
progress bar<font color="#CCCCCC"> call any</font><font color="#E5E5E5"> callbacks you have</font>

1198
00:55:32,070 --> 00:55:37,980
and at the end<font color="#CCCCCC"> call the call the metrics</font>

1199
00:55:37,980 --> 00:55:39,960
on the validation<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so there's</font>

1200
00:55:39,960 --> 00:55:41,670
there's<font color="#CCCCCC"> just</font><font color="#E5E5E5"> eh</font>

1201
00:55:41,670 --> 00:55:46,110
<font color="#CCCCCC">Apoc go through each mini batch</font><font color="#E5E5E5"> and do</font>

1202
00:55:46,110 --> 00:55:50,760
one step of optimizer<font color="#E5E5E5"> step is basically</font>

1203
00:55:50,760 --> 00:55:52,050
going to take<font color="#E5E5E5"> advantage of this</font>

1204
00:55:52,050 --> 00:55:54,060
optimizer but<font color="#E5E5E5"> we'll be writing that from</font>

1205
00:55:54,060 --> 00:55:58,290
scratch shortly so this is notice we're

1206
00:55:58,290 --> 00:56:00,660
<font color="#CCCCCC">not using a learner</font><font color="#E5E5E5"> okay we're just</font>

1207
00:56:00,660 --> 00:56:04,590
<font color="#E5E5E5">using</font><font color="#CCCCCC"> a hi book module so this this fit</font>

1208
00:56:04,590 --> 00:56:05,970
thing although<font color="#E5E5E5"> it's passed to a part of</font>

1209
00:56:05,970 --> 00:56:09,000
fast AI<font color="#E5E5E5"> it's like lower down the layers</font>

1210
00:56:09,000 --> 00:56:10,920
of abstraction<font color="#CCCCCC"> now this is the thing</font>

1211
00:56:10,920 --> 00:56:14,700
<font color="#CCCCCC">that</font><font color="#E5E5E5"> takes a regular high torch model so</font>

1212
00:56:14,700 --> 00:56:19,160
if you ever want to like skip as much

1213
00:56:19,160 --> 00:56:21,510
<font color="#E5E5E5">faster eye stuff as</font><font color="#CCCCCC"> possible like you've</font>

1214
00:56:21,510 --> 00:56:23,610
got some high<font color="#E5E5E5"> torch model you've got</font>

1215
00:56:23,610 --> 00:56:24,990
some code<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> internet you basically</font>

1216
00:56:24,990 --> 00:56:27,300
want to run it<font color="#E5E5E5"> that you don't want to</font>

1217
00:56:27,300 --> 00:56:29,280
write your<font color="#CCCCCC"> own training loop then this</font>

1218
00:56:29,280 --> 00:56:30,960
is<font color="#E5E5E5"> this is what you want to do you want</font>

1219
00:56:30,960 --> 00:56:33,210
<font color="#E5E5E5">to call fast a high speed</font><font color="#CCCCCC"> version</font><font color="#E5E5E5"> and so</font>

1220
00:56:33,210 --> 00:56:35,850
what you'll find is like the<font color="#CCCCCC"> library is</font>

1221
00:56:35,850 --> 00:56:37,920
designed so that you<font color="#E5E5E5"> can kind of dig in</font>

1222
00:56:37,920 --> 00:56:41,250
at any layer abstraction<font color="#E5E5E5"> you</font><font color="#CCCCCC"> like right</font>

1223
00:56:41,250 --> 00:56:43,040
and<font color="#E5E5E5"> so at this layer</font><font color="#CCCCCC"> of abstraction</font>

1224
00:56:43,040 --> 00:56:46,040
<font color="#CCCCCC">you're not going to get things like</font>

1225
00:56:46,040 --> 00:56:47,700
stochastic gradient descent<font color="#CCCCCC"> with</font>

1226
00:56:47,700 --> 00:56:49,980
<font color="#CCCCCC">restarts</font><font color="#E5E5E5"> you're not going to get like</font>

1227
00:56:49,980 --> 00:56:51,780
differential learning rates<font color="#E5E5E5"> like all</font>

1228
00:56:51,780 --> 00:56:53,400
that stuff<font color="#CCCCCC"> that's in the learner like</font>

1229
00:56:53,400 --> 00:56:55,050
you could do it<font color="#CCCCCC"> but you'd have to write</font>

1230
00:56:55,050 --> 00:56:57,540
it all<font color="#CCCCCC"> about by hand yourself alright</font>

1231
00:56:57,540 --> 00:56:59,490
and that's the<font color="#CCCCCC"> downside of kind of</font><font color="#E5E5E5"> going</font>

1232
00:56:59,490 --> 00:57:02,100
<font color="#CCCCCC">down to this level</font><font color="#E5E5E5"> of abstraction</font><font color="#CCCCCC"> the</font>

1233
00:57:02,100 --> 00:57:04,560
upside<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that as you saw the code for</font>

1234
00:57:04,560 --> 00:57:06,540
this<font color="#CCCCCC"> is very simple it's just a simple</font>

1235
00:57:06,540 --> 00:57:08,369
training loop it takes a standard<font color="#CCCCCC"> 5</font>

1236
00:57:08,369 --> 00:57:11,130
torch model<font color="#CCCCCC"> so this is like this is a</font>

1237
00:57:11,130 --> 00:57:13,710
<font color="#E5E5E5">good thing</font><font color="#CCCCCC"> for us to</font><font color="#E5E5E5"> use here we can we</font>

1238
00:57:13,710 --> 00:57:15,720
just<font color="#E5E5E5"> call it and it looks exactly like</font>

1239
00:57:15,720 --> 00:57:19,100
<font color="#E5E5E5">what we used</font><font color="#CCCCCC"> to see</font><font color="#E5E5E5"> all right we got our</font>

1240
00:57:19,100 --> 00:57:22,890
validation and training loss for the<font color="#CCCCCC"> 3 e</font>

1241
00:57:22,890 --> 00:57:29,460
<font color="#CCCCCC">bus now you'll notice that we</font><font color="#E5E5E5"> wanted</font>

1242
00:57:29,460 --> 00:57:34,050
something around<font color="#E5E5E5"> 0.76</font><font color="#CCCCCC"> so we're not there</font>

1243
00:57:34,050 --> 00:57:37,020
so in other words the the<font color="#E5E5E5"> the default</font>

1244
00:57:37,020 --> 00:57:38,640
<font color="#CCCCCC">fast AI collaborative dory</font>

1245
00:57:38,640 --> 00:57:41,369
rhythm is doing something smarter than

1246
00:57:41,369 --> 00:57:44,539
this<font color="#CCCCCC"> so we're going to</font><font color="#E5E5E5"> try and do that</font>

1247
00:57:44,539 --> 00:57:46,920
<font color="#E5E5E5">one</font><font color="#CCCCCC"> thing that we can do</font><font color="#E5E5E5"> since we're</font>

1248
00:57:46,920 --> 00:57:49,019
calling our you know<font color="#E5E5E5"> this lower level</font>

1249
00:57:49,019 --> 00:57:50,940
<font color="#CCCCCC">fifth function there's no learning</font><font color="#E5E5E5"> rate</font>

1250
00:57:50,940 --> 00:57:52,410
and<font color="#E5E5E5"> kneeling we could do our own</font>

1251
00:57:52,410 --> 00:57:54,089
<font color="#CCCCCC">learning rate annealing so you can hear</font>

1252
00:57:54,089 --> 00:57:55,829
it<font color="#E5E5E5"> see here there's a first</font><font color="#CCCCCC"> day I</font>

1253
00:57:55,829 --> 00:57:57,960
function<font color="#E5E5E5"> called set</font><font color="#CCCCCC"> learning rates you</font>

1254
00:57:57,960 --> 00:57:59,789
<font color="#CCCCCC">can pass in a standard</font><font color="#E5E5E5"> height watch</font>

1255
00:57:59,789 --> 00:58:02,160
optimizer<font color="#CCCCCC"> and pass in your new learning</font>

1256
00:58:02,160 --> 00:58:05,250
rate and then call fit again and so this

1257
00:58:05,250 --> 00:58:08,490
is how we can let manually<font color="#E5E5E5"> do a learning</font>

1258
00:58:08,490 --> 00:58:10,170
rate schedule and so you can see we've

1259
00:58:10,170 --> 00:58:13,740
got<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit better</font><font color="#CCCCCC"> 1.13</font><font color="#E5E5E5"> where you</font>

1260
00:58:13,740 --> 00:58:18,930
still got a long<font color="#E5E5E5"> way to go okay so</font><font color="#CCCCCC"> I</font>

1261
00:58:18,930 --> 00:58:20,730
think what we might do is we might have

1262
00:58:20,730 --> 00:58:24,329
a<font color="#E5E5E5"> seven minute break and</font><font color="#CCCCCC"> then we're</font>

1263
00:58:24,329 --> 00:58:27,630
<font color="#E5E5E5">going to come back</font><font color="#CCCCCC"> and try and</font><font color="#E5E5E5"> improve</font>

1264
00:58:27,630 --> 00:58:38,490
<font color="#CCCCCC">this core of it for those</font><font color="#E5E5E5"> who are</font>

1265
00:58:38,490 --> 00:58:39,809
interested somebody was asking me the

1266
00:58:39,809 --> 00:58:42,349
break for<font color="#E5E5E5"> a kind of a quick</font><font color="#CCCCCC"> walkthrough</font>

1267
00:58:42,349 --> 00:58:45,779
<font color="#E5E5E5">so this is totally optional but if you</font>

1268
00:58:45,779 --> 00:58:47,400
<font color="#E5E5E5">go into the first day I library there's</font>

1269
00:58:47,400 --> 00:58:54,960
a model<font color="#E5E5E5"> py file and that's where fit is</font>

1270
00:58:54,960 --> 00:58:57,119
which we're just looking at<font color="#E5E5E5"> which goes</font>

1271
00:58:57,119 --> 00:59:01,049
through<font color="#E5E5E5"> each epoch in epochs and then</font>

1272
00:59:01,049 --> 00:59:03,569
goes through<font color="#CCCCCC"> each x and y in the mini</font>

1273
00:59:03,569 --> 00:59:07,470
batch and then it calls this step

1274
00:59:07,470 --> 00:59:15,390
function<font color="#CCCCCC"> so the step function is</font><font color="#E5E5E5"> here</font>

1275
00:59:15,390 --> 00:59:17,039
and you<font color="#E5E5E5"> can see the key thing</font><font color="#CCCCCC"> is it</font>

1276
00:59:17,039 --> 00:59:19,410
calculates the output from the model the

1277
00:59:19,410 --> 00:59:20,940
models<font color="#E5E5E5"> for M right and so if you</font>

1278
00:59:20,940 --> 00:59:26,250
remember<font color="#E5E5E5"> our dot product we didn't</font>

1279
00:59:26,250 --> 00:59:28,500
actually call model dot forward<font color="#E5E5E5"> we just</font>

1280
00:59:28,500 --> 00:59:30,720
<font color="#E5E5E5">called model parentheses and that's</font>

1281
00:59:30,720 --> 00:59:35,059
because the<font color="#E5E5E5"> N n dot module automatically</font>

1282
00:59:35,059 --> 00:59:37,140
you<font color="#E5E5E5"> know when you call it as if it's a</font>

1283
00:59:37,140 --> 00:59:39,569
function<font color="#E5E5E5"> it passes it along to forward</font>

1284
00:59:39,569 --> 00:59:42,059
<font color="#E5E5E5">okay so that's that's what that's doing</font>

1285
00:59:42,059 --> 00:59:44,099
there right<font color="#E5E5E5"> and then the rest of this</font>

1286
00:59:44,099 --> 00:59:45,960
world will learn about shortly<font color="#CCCCCC"> which is</font>

1287
00:59:45,960 --> 00:59:49,680
<font color="#E5E5E5">basically doing the the loss function</font>

1288
00:59:49,680 --> 00:59:50,550
and

1289
00:59:50,550 --> 00:59:53,790
the<font color="#CCCCCC"> backward</font><font color="#E5E5E5"> pass okay so for those who</font>

1290
00:59:53,790 --> 00:59:55,740
<font color="#CCCCCC">are interested</font><font color="#E5E5E5"> that's that's kind of</font>

1291
00:59:55,740 --> 00:59:57,480
<font color="#CCCCCC">gets</font><font color="#E5E5E5"> you a bit of a sense of how the</font>

1292
00:59:57,480 --> 00:59:59,010
<font color="#CCCCCC">cone it's structured if you want to</font><font color="#E5E5E5"> look</font>

1293
00:59:59,010 --> 01:00:02,880
at it and as I say like the the faster<font color="#E5E5E5"> I</font>

1294
01:00:02,880 --> 01:00:06,450
code is designed to both be<font color="#E5E5E5"> world-class</font>

1295
01:00:06,450 --> 01:00:09,780
performance but<font color="#CCCCCC"> also pretty easy to read</font>

1296
01:00:09,780 --> 01:00:13,470
<font color="#E5E5E5">so</font><font color="#CCCCCC"> like feel free</font><font color="#E5E5E5"> like take a look at it</font>

1297
01:00:13,470 --> 01:00:15,210
and<font color="#CCCCCC"> if you want to know what's</font><font color="#E5E5E5"> going on</font>

1298
01:00:15,210 --> 01:00:18,000
<font color="#E5E5E5">just ask on the forums</font><font color="#CCCCCC"> and if you you</font>

1299
01:00:18,000 --> 01:00:19,230
<font color="#E5E5E5">know if you think is anything that could</font>

1300
01:00:19,230 --> 01:00:25,350
<font color="#E5E5E5">be clearer</font><font color="#CCCCCC"> let us know</font><font color="#E5E5E5"> because yeah the</font>

1301
01:00:25,350 --> 01:00:26,550
code is definitely<font color="#E5E5E5"> now we're going to be</font>

1302
01:00:26,550 --> 01:00:31,830
<font color="#CCCCCC">digging into the code or in law</font><font color="#E5E5E5"> okay so</font>

1303
01:00:31,830 --> 01:00:33,540
let's try and improve this a little<font color="#E5E5E5"> bit</font>

1304
01:00:33,540 --> 01:00:36,120
and<font color="#E5E5E5"> let's start off by improving it in</font>

1305
01:00:36,120 --> 01:00:40,140
Excel<font color="#CCCCCC"> so you might have noticed here</font>

1306
01:00:40,140 --> 01:00:43,530
<font color="#CCCCCC">that we've kind of got the idea that use</font>

1307
01:00:43,530 --> 01:00:44,790
a 72

1308
01:00:44,790 --> 01:00:48,210
you know like sci-fi<font color="#E5E5E5"> modern movies with</font>

1309
01:00:48,210 --> 01:00:50,970
special effects<font color="#CCCCCC"> you know whatever</font><font color="#E5E5E5"> and</font>

1310
01:00:50,970 --> 01:00:53,760
movie number<font color="#E5E5E5"> 27 is sci-fi and</font><font color="#CCCCCC"> that</font>

1311
01:00:53,760 --> 01:00:57,150
<font color="#E5E5E5">special effects so much dialogue</font><font color="#CCCCCC"> but</font>

1312
01:00:57,150 --> 01:01:00,240
we're missing<font color="#E5E5E5"> an important case which is</font>

1313
01:01:00,240 --> 01:01:05,400
like user 72 is pretty enthusiastic<font color="#E5E5E5"> on</font>

1314
01:01:05,400 --> 01:01:07,920
the hall<font color="#E5E5E5"> and on average rates things</font>

1315
01:01:07,920 --> 01:01:10,710
higher and Highland<font color="#CCCCCC"> you know and movie</font>

1316
01:01:10,710 --> 01:01:14,420
<font color="#CCCCCC">27 you know it's just</font><font color="#E5E5E5"> a popular movie</font>

1317
01:01:14,420 --> 01:01:17,040
you know<font color="#CCCCCC"> it's just</font><font color="#E5E5E5"> on average</font><font color="#CCCCCC"> its higher</font>

1318
01:01:17,040 --> 01:01:20,040
so what<font color="#E5E5E5"> would really like is to add a</font>

1319
01:01:20,040 --> 01:01:24,300
<font color="#E5E5E5">constant for the user and a constant for</font>

1320
01:01:24,300 --> 01:01:26,700
the movie and remember in neural network

1321
01:01:26,700 --> 01:01:29,640
terms we call<font color="#E5E5E5"> that a bias that's what we</font>

1322
01:01:29,640 --> 01:01:32,280
want<font color="#E5E5E5"> to add a bias so we could</font><font color="#CCCCCC"> easily do</font>

1323
01:01:32,280 --> 01:01:35,070
that<font color="#CCCCCC"> and if we go</font><font color="#E5E5E5"> into the bias tab</font><font color="#CCCCCC"> here</font>

1324
01:01:35,070 --> 01:01:37,380
we've<font color="#E5E5E5"> got the same data as before and</font>

1325
01:01:37,380 --> 01:01:41,430
we've got the same<font color="#E5E5E5"> latent factors as</font>

1326
01:01:41,430 --> 01:01:44,420
before<font color="#CCCCCC"> and I've just</font><font color="#E5E5E5"> got</font><font color="#CCCCCC"> one extra</font><font color="#E5E5E5"> row</font>

1327
01:01:44,420 --> 01:01:48,420
here and one<font color="#E5E5E5"> extra column here and you</font>

1328
01:01:48,420 --> 01:01:51,780
<font color="#E5E5E5">won't be surprised here that we now take</font>

1329
01:01:51,780 --> 01:01:53,460
<font color="#CCCCCC">these same matrix multiplication as</font>

1330
01:01:53,460 --> 01:01:58,400
before and<font color="#E5E5E5"> we add in that and we add in</font>

1331
01:01:58,400 --> 01:02:01,750
that okay so that's

1332
01:02:01,750 --> 01:02:05,559
bias<font color="#E5E5E5"> so other than that we've got</font>

1333
01:02:05,559 --> 01:02:07,510
<font color="#CCCCCC">exactly</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> loss function over here</font>

1334
01:02:07,510 --> 01:02:11,200
<font color="#CCCCCC">and so just</font><font color="#E5E5E5"> like before we can now go</font>

1335
01:02:11,200 --> 01:02:14,650
ahead<font color="#E5E5E5"> and solve that</font><font color="#CCCCCC"> and now our</font>

1336
01:02:14,650 --> 01:02:18,520
changing variables include the bias<font color="#CCCCCC"> and</font>

1337
01:02:18,520 --> 01:02:20,980
we can say solve and if we leave that

1338
01:02:20,980 --> 01:02:23,140
for<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little while</font><font color="#E5E5E5"> it will come to a</font>

1339
01:02:23,140 --> 01:02:27,630
better<font color="#E5E5E5"> result than we had before</font>

1340
01:02:27,630 --> 01:02:30,579
<font color="#E5E5E5">okay so that's the</font><font color="#CCCCCC"> first thing</font><font color="#E5E5E5"> we're</font>

1341
01:02:30,579 --> 01:02:32,579
going to do to improve<font color="#CCCCCC"> our model</font><font color="#E5E5E5"> and</font>

1342
01:02:32,579 --> 01:02:37,900
there's really very little show<font color="#CCCCCC"> just</font><font color="#E5E5E5"> to</font>

1343
01:02:37,900 --> 01:02:41,559
make the code a bit shorter<font color="#CCCCCC"> I have to</font>

1344
01:02:41,559 --> 01:02:43,690
find a function called get embedding

1345
01:02:43,690 --> 01:02:46,900
which takes a<font color="#CCCCCC"> number of</font><font color="#E5E5E5"> inputs and a</font>

1346
01:02:46,900 --> 01:02:48,730
<font color="#CCCCCC">number</font><font color="#E5E5E5"> of factors so the number of</font><font color="#CCCCCC"> rows</font>

1347
01:02:48,730 --> 01:02:50,470
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the embedding matrix</font><font color="#CCCCCC"> Nomos</font><font color="#E5E5E5"> they're</font>

1348
01:02:50,470 --> 01:02:52,450
both medications<font color="#E5E5E5"> creates the embedding</font>

1349
01:02:52,450 --> 01:02:57,190
and then randomly initializes it<font color="#CCCCCC"> I don't</font>

1350
01:02:57,190 --> 01:02:59,020
know why I'm doing<font color="#CCCCCC"> negative to positive</font>

1351
01:02:59,020 --> 01:03:00,940
here and<font color="#CCCCCC"> it zeroed last time honestly it</font>

1352
01:03:00,940 --> 01:03:02,230
doesn't<font color="#E5E5E5"> matter much as long as it's in</font>

1353
01:03:02,230 --> 01:03:05,349
<font color="#E5E5E5">the right ballpark</font><font color="#CCCCCC"> and then we</font><font color="#E5E5E5"> return</font>

1354
01:03:05,349 --> 01:03:09,400
that initialized<font color="#CCCCCC"> emitting so now we need</font>

1355
01:03:09,400 --> 01:03:11,950
not just<font color="#E5E5E5"> our users by factors which are</font>

1356
01:03:11,950 --> 01:03:14,710
Chuck<font color="#E5E5E5"> into you our movies by factors</font>

1357
01:03:14,710 --> 01:03:16,750
which I've shocked into<font color="#E5E5E5"> M</font><font color="#CCCCCC"> but we also</font>

1358
01:03:16,750 --> 01:03:20,440
need users<font color="#E5E5E5"> by one which</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> put into</font><font color="#CCCCCC"> UV</font>

1359
01:03:20,440 --> 01:03:23,529
user bias and movies by one which<font color="#E5E5E5"> will</font>

1360
01:03:23,529 --> 01:03:25,900
put<font color="#CCCCCC"> into the movie bias okay</font><font color="#E5E5E5"> so this is</font>

1361
01:03:25,900 --> 01:03:28,480
<font color="#CCCCCC">just doing a list</font><font color="#E5E5E5"> comprehension going</font>

1362
01:03:28,480 --> 01:03:29,890
through each<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> tuples create an</font>

1363
01:03:29,890 --> 01:03:31,599
embedding for each of them and putting

1364
01:03:31,599 --> 01:03:34,630
them<font color="#E5E5E5"> into these things okay so</font><font color="#CCCCCC"> now our</font>

1365
01:03:34,630 --> 01:03:40,510
forward is exactly the same as before<font color="#CCCCCC"> u</font>

1366
01:03:40,510 --> 01:03:44,260
times M sub I mean this is actually<font color="#CCCCCC"> a</font>

1367
01:03:44,260 --> 01:03:45,520
little confusing because<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> it</font>

1368
01:03:45,520 --> 01:03:50,289
into two steps<font color="#CCCCCC"> maybe they make it a bit</font>

1369
01:03:50,289 --> 01:03:51,750
easier<font color="#CCCCCC"> let's pull this out</font>

1370
01:03:51,750 --> 01:03:58,380
<font color="#E5E5E5">put it up here put this in</font><font color="#CCCCCC"> parentheses</font>

1371
01:03:58,440 --> 01:04:00,460
okay so maybe that looks<font color="#CCCCCC"> a little bit</font>

1372
01:04:00,460 --> 01:04:02,770
more familiar<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right you times n dot</font>

1373
01:04:02,770 --> 01:04:04,390
some that's the same dot product and

1374
01:04:04,390 --> 01:04:07,150
<font color="#E5E5E5">then here it is going to add in our user</font>

1375
01:04:07,150 --> 01:04:08,650
pious and

1376
01:04:08,650 --> 01:04:14,260
<font color="#CCCCCC">our movie</font><font color="#E5E5E5"> bus dot squeeze is the</font><font color="#CCCCCC"> PI</font>

1377
01:04:14,260 --> 01:04:17,830
torch thing that adds an additional<font color="#E5E5E5"> unit</font>

1378
01:04:17,830 --> 01:04:21,370
<font color="#E5E5E5">axis that's not going to make any</font><font color="#CCCCCC"> sense</font>

1379
01:04:21,370 --> 01:04:23,340
if you haven't done broadcasting before

1380
01:04:23,340 --> 01:04:25,720
<font color="#E5E5E5">I'm not going to do a broadcasting in</font>

1381
01:04:25,720 --> 01:04:27,640
this course<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we've already done</font>

1382
01:04:27,640 --> 01:04:28,030
<font color="#CCCCCC">it</font>

1383
01:04:28,030 --> 01:04:29,380
and we're doing it in<font color="#E5E5E5"> the machine</font>

1384
01:04:29,380 --> 01:04:31,750
learning<font color="#E5E5E5"> course but basically in in</font>

1385
01:04:31,750 --> 01:04:34,720
<font color="#E5E5E5">short broadcasting is what happens when</font>

1386
01:04:34,720 --> 01:04:36,760
you do<font color="#CCCCCC"> something like</font><font color="#E5E5E5"> this where um is a</font>

1387
01:04:36,760 --> 01:04:40,690
matrix<font color="#E5E5E5"> you be</font><font color="#CCCCCC"> self-taught you the users</font>

1388
01:04:40,690 --> 01:04:44,740
is a is a vector<font color="#CCCCCC"> how do you add a</font><font color="#E5E5E5"> vector</font>

1389
01:04:44,740 --> 01:04:46,900
to a<font color="#CCCCCC"> matrix</font><font color="#E5E5E5"> and basically what it</font><font color="#CCCCCC"> does</font>

1390
01:04:46,900 --> 01:04:51,220
is it duplicates<font color="#CCCCCC"> the vector</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> it</font>

1391
01:04:51,220 --> 01:04:53,800
makes<font color="#E5E5E5"> it the same size as the matrix and</font>

1392
01:04:53,800 --> 01:04:55,630
the particular way whether it duplicates

1393
01:04:55,630 --> 01:04:58,000
<font color="#E5E5E5">it across columns or down rows or how it</font>

1394
01:04:58,000 --> 01:05:00,550
does it is called broadcasting the

1395
01:05:00,550 --> 01:05:03,300
broadcasting rules are the same as numpy

1396
01:05:03,300 --> 01:05:05,380
<font color="#CCCCCC">Pytor didn't actually</font><font color="#E5E5E5"> used to support</font>

1397
01:05:05,380 --> 01:05:07,360
broadcasting so<font color="#E5E5E5"> I was actually the guy</font>

1398
01:05:07,360 --> 01:05:09,730
<font color="#E5E5E5">who first added</font><font color="#CCCCCC"> broadcasting to</font><font color="#E5E5E5"> PI torch</font>

1399
01:05:09,730 --> 01:05:11,920
using an ugly hack and then the pipe or

1400
01:05:11,920 --> 01:05:13,720
<font color="#CCCCCC">authors did an awesome job</font><font color="#E5E5E5"> of supporting</font>

1401
01:05:13,720 --> 01:05:17,110
it<font color="#E5E5E5"> actually inside the language so now</font>

1402
01:05:17,110 --> 01:05:19,150
you can use<font color="#CCCCCC"> the same broadcasting</font>

1403
01:05:19,150 --> 01:05:22,180
operations in<font color="#E5E5E5"> five torches</font><font color="#CCCCCC"> non-player</font><font color="#E5E5E5"> if</font>

1404
01:05:22,180 --> 01:05:24,640
you haven't dealt<font color="#E5E5E5"> with this before it's</font>

1405
01:05:24,640 --> 01:05:27,400
really important to<font color="#E5E5E5"> learn it because</font>

1406
01:05:27,400 --> 01:05:29,470
<font color="#CCCCCC">like it's it's kind of the most</font>

1407
01:05:29,470 --> 01:05:31,450
important<font color="#CCCCCC"> fundamental way to do</font>

1408
01:05:31,450 --> 01:05:34,180
computations quickly in the<font color="#CCCCCC"> high-end</font>

1409
01:05:34,180 --> 01:05:35,980
<font color="#CCCCCC">paid warship it's the thing that lets</font>

1410
01:05:35,980 --> 01:05:37,390
you not have to do loops

1411
01:05:37,390 --> 01:05:38,890
<font color="#CCCCCC">how could you imagine here if I had to</font>

1412
01:05:38,890 --> 01:05:40,510
<font color="#E5E5E5">look through every row</font><font color="#CCCCCC"> of this matrix</font>

1413
01:05:40,510 --> 01:05:43,930
<font color="#E5E5E5">and add each did you know this vector to</font>

1414
01:05:43,930 --> 01:05:46,870
every row<font color="#E5E5E5"> it would be slow the you know</font>

1415
01:05:46,870 --> 01:05:50,590
a lot<font color="#E5E5E5"> more code and the idea of</font>

1416
01:05:50,590 --> 01:05:52,300
<font color="#E5E5E5">broadcasting it actually goes all the</font>

1417
01:05:52,300 --> 01:05:54,610
way<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> APL which was a language</font>

1418
01:05:54,610 --> 01:05:56,890
<font color="#CCCCCC">designed in the 50s</font><font color="#E5E5E5"> by an extraordinary</font>

1419
01:05:56,890 --> 01:05:59,770
<font color="#E5E5E5">guy called Ken Iverson</font><font color="#CCCCCC"> yeah APL was</font>

1420
01:05:59,770 --> 01:06:02,110
originally designed<font color="#E5E5E5"> or written out as a</font>

1421
01:06:02,110 --> 01:06:05,110
new type<font color="#CCCCCC"> of mathematical notation he has</font>

1422
01:06:05,110 --> 01:06:08,170
this great essay called notation as a

1423
01:06:08,170 --> 01:06:10,330
tool for thought and the idea<font color="#E5E5E5"> was that</font>

1424
01:06:10,330 --> 01:06:12,160
like<font color="#E5E5E5"> really good notation could actually</font>

1425
01:06:12,160 --> 01:06:15,220
make you think of better things<font color="#E5E5E5"> and part</font>

1426
01:06:15,220 --> 01:06:17,560
of that notation<font color="#E5E5E5"> is this idea of</font>

1427
01:06:17,560 --> 01:06:20,110
broadcasting I'm incredibly<font color="#CCCCCC"> enthusiastic</font>

1428
01:06:20,110 --> 01:06:21,430
about<font color="#E5E5E5"> it</font>

1429
01:06:21,430 --> 01:06:25,630
and we're gonna<font color="#E5E5E5"> use it</font><font color="#CCCCCC"> plenty so either</font>

1430
01:06:25,630 --> 01:06:30,880
watch the machine learning lesson or you

1431
01:06:30,880 --> 01:06:33,880
know<font color="#CCCCCC"> google numpy broadcasting for</font>

1432
01:06:33,880 --> 01:06:36,220
information<font color="#CCCCCC"> anyway</font>

1433
01:06:36,220 --> 01:06:37,990
so basically it<font color="#E5E5E5"> works reasonably</font>

1434
01:06:37,990 --> 01:06:40,860
intuitively we can add on<font color="#CCCCCC"> we can add the</font>

1435
01:06:40,860 --> 01:06:46,920
vectors to the<font color="#E5E5E5"> matrix</font><font color="#CCCCCC"> all right</font>

1436
01:06:46,920 --> 01:06:49,630
having done that<font color="#E5E5E5"> we're now going</font><font color="#CCCCCC"> to do</font>

1437
01:06:49,630 --> 01:06:53,620
one more<font color="#CCCCCC"> trick which is I think</font><font color="#E5E5E5"> it was</font>

1438
01:06:53,620 --> 01:06:56,220
your net asked earlier about could we

1439
01:06:56,220 --> 01:06:59,890
squish<font color="#E5E5E5"> the ratings to be between one and</font>

1440
01:06:59,890 --> 01:07:05,290
<font color="#E5E5E5">five and the answer is we could right</font>

1441
01:07:05,290 --> 01:07:09,100
and specifically<font color="#E5E5E5"> what we could do is</font><font color="#CCCCCC"> we</font>

1442
01:07:09,100 --> 01:07:12,840
could put<font color="#CCCCCC"> it through a sigmoid function</font>

1443
01:07:12,840 --> 01:07:14,110
<font color="#CCCCCC">all right</font>

1444
01:07:14,110 --> 01:07:19,360
<font color="#E5E5E5">so remind you a sigmoid function looks</font>

1445
01:07:19,360 --> 01:07:24,900
like that<font color="#E5E5E5"> right and this is that's one</font>

1446
01:07:24,900 --> 01:07:27,400
okay we could<font color="#E5E5E5"> put it through a secret</font>

1447
01:07:27,400 --> 01:07:29,500
function<font color="#E5E5E5"> so we could take like four</font>

1448
01:07:29,500 --> 01:07:31,600
point<font color="#E5E5E5"> nine six and put it through a</font>

1449
01:07:31,600 --> 01:07:33,520
sigmoid function and like that you know

1450
01:07:33,520 --> 01:07:35,170
<font color="#E5E5E5">that's kind of high so it kind of be</font>

1451
01:07:35,170 --> 01:07:37,450
over<font color="#E5E5E5"> here somewhere right</font>

1452
01:07:37,450 --> 01:07:41,170
and then we could multiply that sigmoid

1453
01:07:41,170 --> 01:07:44,800
like the result of that by five for

1454
01:07:44,800 --> 01:07:46,000
example all right

1455
01:07:46,000 --> 01:07:47,020
and in<font color="#CCCCCC"> this</font><font color="#E5E5E5"> case we want it to be</font>

1456
01:07:47,020 --> 01:07:49,360
between<font color="#E5E5E5"> one and five right so</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> we</font>

1457
01:07:49,360 --> 01:07:51,610
<font color="#E5E5E5">would multiply it by four and add one</font>

1458
01:07:51,610 --> 01:07:56,500
instance that's the basic idea<font color="#CCCCCC"> and so</font>

1459
01:07:56,500 --> 01:08:00,100
here is that trick we take the result<font color="#E5E5E5"> so</font>

1460
01:08:00,100 --> 01:08:01,630
the result is<font color="#CCCCCC"> basically the</font><font color="#E5E5E5"> the thing</font>

1461
01:08:01,630 --> 01:08:03,940
that<font color="#CCCCCC"> comes straight</font><font color="#E5E5E5"> out of</font><font color="#CCCCCC"> the dot</font>

1462
01:08:03,940 --> 01:08:05,770
product plus<font color="#E5E5E5"> the addition</font><font color="#CCCCCC"> of the biases</font>

1463
01:08:05,770 --> 01:08:08,710
and put it through a sigmoid function

1464
01:08:08,710 --> 01:08:13,960
now in<font color="#CCCCCC"> pi torch basically all of the</font>

1465
01:08:13,960 --> 01:08:16,450
functions<font color="#CCCCCC"> you can do to tensors are</font>

1466
01:08:16,450 --> 01:08:19,149
available inside<font color="#E5E5E5"> this thing called</font>

1467
01:08:19,149 --> 01:08:21,430
capital F and this<font color="#CCCCCC"> is like totally</font>

1468
01:08:21,430 --> 01:08:23,979
standard in<font color="#E5E5E5"> pi torch</font><font color="#CCCCCC"> it's actually</font>

1469
01:08:23,979 --> 01:08:26,470
called<font color="#E5E5E5"> torch</font><font color="#CCCCCC"> and or functional but</font>

1470
01:08:26,470 --> 01:08:28,060
everybody including all of the pipe

1471
01:08:28,060 --> 01:08:30,580
torch<font color="#E5E5E5"> Doc's import torch start and end</font>

1472
01:08:30,580 --> 01:08:33,658
<font color="#CCCCCC">are functional as capital</font><font color="#E5E5E5"> F</font><font color="#CCCCCC"> all right so</font>

1473
01:08:33,658 --> 01:08:36,810
capital F dot sigmoid means<font color="#E5E5E5"> a function</font>

1474
01:08:36,810 --> 01:08:38,750
called sigmoid that is<font color="#E5E5E5"> coming from</font>

1475
01:08:38,750 --> 01:08:42,988
<font color="#E5E5E5">tortures functional module right and so</font>

1476
01:08:42,988 --> 01:08:44,729
that's going<font color="#E5E5E5"> to apply a sigmoid function</font>

1477
01:08:44,729 --> 01:08:46,799
<font color="#E5E5E5">for the result so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> squish them all</font>

1478
01:08:46,799 --> 01:08:48,389
between<font color="#CCCCCC"> zero and one using that nice</font>

1479
01:08:48,389 --> 01:08:50,279
little<font color="#E5E5E5"> shape and then I can multiply</font>

1480
01:08:50,279 --> 01:08:54,988
<font color="#E5E5E5">that</font><font color="#CCCCCC"> by five minus one</font><font color="#E5E5E5"> plus four</font><font color="#CCCCCC"> right</font>

1481
01:08:54,988 --> 01:08:57,149
and then add on one<font color="#E5E5E5"> and that's gonna</font>

1482
01:08:57,149 --> 01:08:58,408
give me<font color="#CCCCCC"> plumbing between</font><font color="#E5E5E5"> one and five</font>

1483
01:08:58,408 --> 01:09:03,120
<font color="#E5E5E5">okay so like there's no need to</font><font color="#CCCCCC"> do this</font>

1484
01:09:03,120 --> 01:09:04,979
I<font color="#E5E5E5"> could comment it out and</font><font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> still</font>

1485
01:09:04,979 --> 01:09:08,429
work<font color="#CCCCCC"> right</font><font color="#E5E5E5"> but now it has</font><font color="#CCCCCC"> to come up</font>

1486
01:09:08,429 --> 01:09:09,988
with<font color="#E5E5E5"> a set of calculations</font><font color="#CCCCCC"> that are</font>

1487
01:09:09,988 --> 01:09:13,290
<font color="#E5E5E5">always between</font><font color="#CCCCCC"> one and five right where</font>

1488
01:09:13,290 --> 01:09:15,270
else if I leave this in then it's like

1489
01:09:15,270 --> 01:09:16,710
makes it really easy it's basically like

1490
01:09:16,710 --> 01:09:17,880
<font color="#E5E5E5">oh if you think</font><font color="#CCCCCC"> this is a really</font><font color="#E5E5E5"> good</font>

1491
01:09:17,880 --> 01:09:20,100
movie<font color="#E5E5E5"> just calculate a really high</font>

1492
01:09:20,100 --> 01:09:22,920
number<font color="#CCCCCC"> it's a really crappy movies low</font>

1493
01:09:22,920 --> 01:09:24,569
number and<font color="#E5E5E5"> I'll make sure</font><font color="#CCCCCC"> it's in the</font>

1494
01:09:24,569 --> 01:09:26,339
right<font color="#CCCCCC"> regions so even though this</font><font color="#E5E5E5"> is a</font>

1495
01:09:26,339 --> 01:09:28,439
neural network<font color="#E5E5E5"> it's still a good example</font>

1496
01:09:28,439 --> 01:09:30,689
<font color="#E5E5E5">of this kind of like if you're doing any</font>

1497
01:09:30,689 --> 01:09:33,210
kind<font color="#E5E5E5"> of parameter fitting try and make</font>

1498
01:09:33,210 --> 01:09:35,399
it<font color="#E5E5E5"> so that the thing that you want your</font>

1499
01:09:35,399 --> 01:09:37,259
function to return<font color="#E5E5E5"> it's like it's easy</font>

1500
01:09:37,259 --> 01:09:40,620
for<font color="#E5E5E5"> it to</font><font color="#CCCCCC"> return that</font><font color="#E5E5E5"> okay so that's why</font>

1501
01:09:40,620 --> 01:09:44,759
we do that that<font color="#CCCCCC"> function</font><font color="#E5E5E5"> squishing</font><font color="#CCCCCC"> so we</font>

1502
01:09:44,759 --> 01:09:48,089
call this embedding dot bias<font color="#CCCCCC"> so we can</font>

1503
01:09:48,089 --> 01:09:49,710
<font color="#CCCCCC">create that in the same</font><font color="#E5E5E5"> way as</font><font color="#CCCCCC"> before</font>

1504
01:09:49,710 --> 01:09:53,189
you'll see here I'm<font color="#E5E5E5"> calling dr. to put</font>

1505
01:09:53,189 --> 01:09:54,929
it on the GPU because we're<font color="#E5E5E5"> not using</font>

1506
01:09:54,929 --> 01:09:56,790
any learner<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> normally it'll</font><font color="#E5E5E5"> all</font>

1507
01:09:56,790 --> 01:09:58,199
happen for<font color="#CCCCCC"> you but we have to manually</font>

1508
01:09:58,199 --> 01:10:01,350
say<font color="#E5E5E5"> put it on the GPU this is the same</font>

1509
01:10:01,350 --> 01:10:03,659
as before create our optimizer<font color="#E5E5E5"> fit</font>

1510
01:10:03,659 --> 01:10:05,580
exactly<font color="#CCCCCC"> the same as before and these</font>

1511
01:10:05,580 --> 01:10:08,130
numbers<font color="#CCCCCC"> are looking</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right and</font>

1512
01:10:08,130 --> 01:10:11,520
again<font color="#CCCCCC"> we'll do a little change to our</font>

1513
01:10:11,520 --> 01:10:13,199
learning<font color="#CCCCCC"> rate learning rate schedule and</font>

1514
01:10:13,199 --> 01:10:16,050
we're<font color="#E5E5E5"> down</font><font color="#CCCCCC"> to 0.8 so we're actually</font>

1515
01:10:16,050 --> 01:10:23,639
pretty<font color="#CCCCCC"> close pretty close so that's</font><font color="#E5E5E5"> the</font>

1516
01:10:23,639 --> 01:10:31,590
key steps and this is how this is<font color="#CCCCCC"> how</font>

1517
01:10:31,590 --> 01:10:35,810
most collaborative<font color="#E5E5E5"> filtering is done and</font>

1518
01:10:35,810 --> 01:10:38,280
<font color="#E5E5E5">unit reminded me of an important point</font>

1519
01:10:38,280 --> 01:10:42,389
which is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is not strictly</font>

1520
01:10:42,389 --> 01:10:46,139
<font color="#CCCCCC">speaking a matrix factorization</font><font color="#E5E5E5"> because</font>

1521
01:10:46,139 --> 01:10:46,800
<font color="#E5E5E5">strictly</font>

1522
01:10:46,800 --> 01:10:49,290
<font color="#CCCCCC">a matrix factorization would take that</font>

1523
01:10:49,290 --> 01:10:54,120
matrix by<font color="#CCCCCC"> that</font><font color="#E5E5E5"> matrix to</font><font color="#CCCCCC"> create this</font>

1524
01:10:54,120 --> 01:11:03,150
matrix<font color="#E5E5E5"> and remembering anywhere that</font>

1525
01:11:03,150 --> 01:11:08,610
this is<font color="#E5E5E5"> empty like here</font><font color="#CCCCCC"> or here we're</font>

1526
01:11:08,610 --> 01:11:11,730
putting<font color="#CCCCCC"> in a zero right we're saying if</font>

1527
01:11:11,730 --> 01:11:14,450
the original<font color="#E5E5E5"> was empty put in a zero</font>

1528
01:11:14,450 --> 01:11:18,090
right<font color="#E5E5E5"> now normally you can't do that</font>

1529
01:11:18,090 --> 01:11:20,280
with normal<font color="#E5E5E5"> matrix factorization normal</font>

1530
01:11:20,280 --> 01:11:22,290
matrix factorization it creates the

1531
01:11:22,290 --> 01:11:25,020
whole matrix<font color="#CCCCCC"> and so it was a real</font>

1532
01:11:25,020 --> 01:11:27,450
problem<font color="#CCCCCC"> actually when people used to</font><font color="#E5E5E5"> try</font>

1533
01:11:27,450 --> 01:11:29,580
<font color="#CCCCCC">and use traditional linear algebra</font><font color="#E5E5E5"> for</font>

1534
01:11:29,580 --> 01:11:31,950
this because<font color="#CCCCCC"> when you have these sparse</font>

1535
01:11:31,950 --> 01:11:33,450
matrices like in practice

1536
01:11:33,450 --> 01:11:36,780
<font color="#E5E5E5">this matrix is not</font><font color="#CCCCCC"> doesn't have</font><font color="#E5E5E5"> many</font>

1537
01:11:36,780 --> 01:11:38,580
gaps because<font color="#E5E5E5"> we picked the users that</font>

1538
01:11:38,580 --> 01:11:40,500
<font color="#E5E5E5">watch the most movies and the movies</font>

1539
01:11:40,500 --> 01:11:42,120
that<font color="#E5E5E5"> are the most</font><font color="#CCCCCC"> watched but if you</font>

1540
01:11:42,120 --> 01:11:43,650
look at the whole matrix<font color="#E5E5E5"> it's it's</font>

1541
01:11:43,650 --> 01:11:46,200
<font color="#CCCCCC">mainly empty and so traditional</font>

1542
01:11:46,200 --> 01:11:49,980
techniques treated empty is zero<font color="#E5E5E5"> and so</font>

1543
01:11:49,980 --> 01:11:51,750
like you basically<font color="#E5E5E5"> have to predict a</font>

1544
01:11:51,750 --> 01:11:54,120
<font color="#E5E5E5">zero as if the fact that I haven't</font>

1545
01:11:54,120 --> 01:11:55,680
watched a movie means I don't<font color="#E5E5E5"> like the</font>

1546
01:11:55,680 --> 01:11:58,950
movie<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> gives terrible answers so</font>

1547
01:11:58,950 --> 01:12:01,350
this probabilistic matrix factorization

1548
01:12:01,350 --> 01:12:05,580
approach<font color="#E5E5E5"> takes advantage of the fact</font>

1549
01:12:05,580 --> 01:12:08,640
<font color="#CCCCCC">that</font><font color="#E5E5E5"> our data structure actually looks</font>

1550
01:12:08,640 --> 01:12:11,220
like<font color="#E5E5E5"> this rather than</font><font color="#CCCCCC"> that cross tab</font>

1551
01:12:11,220 --> 01:12:13,770
right and so it's only calculating the

1552
01:12:13,770 --> 01:12:16,110
loss for<font color="#E5E5E5"> the user ID movie ID</font>

1553
01:12:16,110 --> 01:12:18,240
combinations that actually appear<font color="#E5E5E5"> that's</font>

1554
01:12:18,240 --> 01:12:20,160
<font color="#CCCCCC">its if you</font><font color="#E5E5E5"> like use</font><font color="#CCCCCC"> red</font><font color="#E5E5E5"> a1 movie I think</font>

1555
01:12:20,160 --> 01:12:22,860
<font color="#CCCCCC">102 9 should be 3</font><font color="#E5E5E5"> it's actually three</font>

1556
01:12:22,860 --> 01:12:25,530
and a half<font color="#CCCCCC"> sauce is</font><font color="#E5E5E5"> 0.5 like there's</font>

1557
01:12:25,530 --> 01:12:27,300
<font color="#E5E5E5">nothing here that's ever going to</font>

1558
01:12:27,300 --> 01:12:30,960
<font color="#CCCCCC">calculate a prediction or</font><font color="#E5E5E5"> a loss for a</font>

1559
01:12:30,960 --> 01:12:32,850
user movie combination that doesn't

1560
01:12:32,850 --> 01:12:36,030
appear<font color="#E5E5E5"> in this table by definition the</font>

1561
01:12:36,030 --> 01:12:38,130
only stuff<font color="#CCCCCC"> that we can appear in a mini</font>

1562
01:12:38,130 --> 01:12:45,390
batch is what's in<font color="#CCCCCC"> this table okay</font><font color="#E5E5E5"> and</font>

1563
01:12:45,390 --> 01:12:46,620
like<font color="#CCCCCC"> a lot of this happened</font>

1564
01:12:46,620 --> 01:12:48,000
interestingly enough actually in the

1565
01:12:48,000 --> 01:12:50,760
Netflix<font color="#CCCCCC"> price so before the Netflix</font>

1566
01:12:50,760 --> 01:12:54,180
prize<font color="#E5E5E5"> came along</font><font color="#CCCCCC"> there's probabilistic</font>

1567
01:12:54,180 --> 01:12:56,340
matrix factorization<font color="#CCCCCC"> it had actually</font>

1568
01:12:56,340 --> 01:12:59,130
<font color="#CCCCCC">already been</font><font color="#E5E5E5"> invented</font><font color="#CCCCCC"> but nobody noticed</font>

1569
01:12:59,130 --> 01:13:00,640
<font color="#CCCCCC">all right and then in the</font>

1570
01:13:00,640 --> 01:13:02,740
first year of<font color="#CCCCCC"> the Netflix price</font><font color="#E5E5E5"> someone</font>

1571
01:13:02,740 --> 01:13:04,540
wrote this like really<font color="#E5E5E5"> really famous</font>

1572
01:13:04,540 --> 01:13:06,700
<font color="#E5E5E5">blog post where they basically said like</font>

1573
01:13:06,700 --> 01:13:08,710
<font color="#E5E5E5">hey</font><font color="#CCCCCC"> check this out</font>

1574
01:13:08,710 --> 01:13:10,990
<font color="#E5E5E5">incredibly simple technique works</font>

1575
01:13:10,990 --> 01:13:12,640
incredibly well when suddenly all the

1576
01:13:12,640 --> 01:13:17,260
net<font color="#E5E5E5"> fix leaderboard entries and so</font>

1577
01:13:17,260 --> 01:13:19,180
<font color="#CCCCCC">that's quite a few</font><font color="#E5E5E5"> years ago now and</font>

1578
01:13:19,180 --> 01:13:21,490
<font color="#CCCCCC">this is like now every</font><font color="#E5E5E5"> collaborative</font>

1579
01:13:21,490 --> 01:13:23,920
filtering approach<font color="#E5E5E5"> does this not every</font>

1580
01:13:23,920 --> 01:13:25,180
collaborative filtering approach<font color="#E5E5E5"> adds</font>

1581
01:13:25,180 --> 01:13:27,640
this sigmoid thing by the<font color="#E5E5E5"> way it's not</font>

1582
01:13:27,640 --> 01:13:30,940
<font color="#CCCCCC">like rocket science this is this is</font><font color="#E5E5E5"> not</font>

1583
01:13:30,940 --> 01:13:32,800
like the NLP thing we saw last week

1584
01:13:32,800 --> 01:13:33,850
which<font color="#E5E5E5"> is like hey this</font><font color="#CCCCCC"> is a new</font>

1585
01:13:33,850 --> 01:13:35,770
<font color="#CCCCCC">state-of-the-art</font><font color="#E5E5E5"> like this is you know</font>

1586
01:13:35,770 --> 01:13:37,660
<font color="#CCCCCC">not particularly uncommon but there are</font>

1587
01:13:37,660 --> 01:13:39,640
still people that don't do this<font color="#E5E5E5"> it</font>

1588
01:13:39,640 --> 01:13:41,620
<font color="#CCCCCC">definitely helps a lot I have to have</font>

1589
01:13:41,620 --> 01:13:45,280
this and so<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> you know what we</font>

1590
01:13:45,280 --> 01:13:47,800
could do is maybe now's a good time<font color="#E5E5E5"> to</font>

1591
01:13:47,800 --> 01:13:50,080
<font color="#CCCCCC">have a look at the</font><font color="#E5E5E5"> definition of this</font>

1592
01:13:50,080 --> 01:13:56,590
right so the column data module contains

1593
01:13:56,590 --> 01:14:00,370
all<font color="#E5E5E5"> these definitions</font><font color="#CCCCCC"> and we can now</font>

1594
01:14:00,370 --> 01:14:03,640
compare this to the thing we<font color="#E5E5E5"> originally</font>

1595
01:14:03,640 --> 01:14:07,210
used which was<font color="#E5E5E5"> whatever came out of</font>

1596
01:14:07,210 --> 01:14:09,550
<font color="#E5E5E5">collaborative data set all right so</font>

1597
01:14:09,550 --> 01:14:16,060
let's go to collab filter<font color="#E5E5E5"> data set here</font>

1598
01:14:16,060 --> 01:14:20,050
it is<font color="#CCCCCC"> and we called get</font><font color="#E5E5E5"> learner</font><font color="#CCCCCC"> all</font>

1599
01:14:20,050 --> 01:14:22,660
<font color="#E5E5E5">right so we can</font><font color="#CCCCCC"> go down to get Elena</font><font color="#E5E5E5"> and</font>

1600
01:14:22,660 --> 01:14:27,330
that created a collab<font color="#E5E5E5"> filter learner</font>

1601
01:14:27,330 --> 01:14:29,710
<font color="#E5E5E5">passing in the model from get model is</font>

1602
01:14:29,710 --> 01:14:32,740
get model so<font color="#E5E5E5"> created an embedding bias</font>

1603
01:14:32,740 --> 01:14:37,120
<font color="#E5E5E5">and so here is embedding drop</font><font color="#CCCCCC"> bias</font><font color="#E5E5E5"> and</font>

1604
01:14:37,120 --> 01:14:40,300
you<font color="#CCCCCC"> can see here here it</font><font color="#E5E5E5"> is like it's</font>

1605
01:14:40,300 --> 01:14:42,460
the same thing<font color="#CCCCCC"> there's the embedding for</font>

1606
01:14:42,460 --> 01:14:44,920
each of the<font color="#E5E5E5"> things here's our forward</font>

1607
01:14:44,920 --> 01:14:49,000
that does the<font color="#CCCCCC"> you times</font><font color="#E5E5E5"> I dot some plus</font>

1608
01:14:49,000 --> 01:14:52,750
plus sigmoid<font color="#E5E5E5"> so in fact we have just</font>

1609
01:14:52,750 --> 01:14:55,810
<font color="#CCCCCC">actually rebuilt</font><font color="#E5E5E5"> what's in the past</font><font color="#CCCCCC"> our</font>

1610
01:14:55,810 --> 01:15:00,340
<font color="#E5E5E5">library literally okay</font><font color="#CCCCCC"> it's a little</font>

1611
01:15:00,340 --> 01:15:03,070
<font color="#E5E5E5">shorter and easier because we're taking</font>

1612
01:15:03,070 --> 01:15:04,960
<font color="#E5E5E5">advantage of the fact</font><font color="#CCCCCC"> that there's a</font>

1613
01:15:04,960 --> 01:15:08,850
special<font color="#CCCCCC"> collaborative filtering data</font><font color="#E5E5E5"> set</font>

1614
01:15:08,850 --> 01:15:11,410
so we<font color="#E5E5E5"> can actually we're getting</font><font color="#CCCCCC"> past in</font>

1615
01:15:11,410 --> 01:15:12,610
the users<font color="#E5E5E5"> and the items and we don't</font>

1616
01:15:12,610 --> 01:15:13,889
have<font color="#E5E5E5"> to pull them out of cat</font>

1617
01:15:13,889 --> 01:15:16,800
<font color="#CCCCCC">Kant's but other</font><font color="#E5E5E5"> than that this</font><font color="#CCCCCC"> is</font>

1618
01:15:16,800 --> 01:15:18,420
<font color="#CCCCCC">exactly the</font><font color="#E5E5E5"> same so hopefully you can</font>

1619
01:15:18,420 --> 01:15:20,670
<font color="#E5E5E5">see like the faster you have ivory is</font>

1620
01:15:20,670 --> 01:15:22,710
not some inscrutable code containing

1621
01:15:22,710 --> 01:15:24,630
concepts you can<font color="#E5E5E5"> never understand we've</font>

1622
01:15:24,630 --> 01:15:26,880
actually<font color="#CCCCCC"> just built</font><font color="#E5E5E5"> up this entire thing</font>

1623
01:15:26,880 --> 01:15:31,320
from scratch<font color="#CCCCCC"> ourselves and so why did we</font>

1624
01:15:31,320 --> 01:15:38,429
get 0.76 rather than 0.8<font color="#CCCCCC"> you know I</font><font color="#E5E5E5"> I</font>

1625
01:15:38,429 --> 01:15:40,320
think<font color="#E5E5E5"> it's simply because we used</font>

1626
01:15:40,320 --> 01:15:41,940
stochastic gradient descent with

1627
01:15:41,940 --> 01:15:44,460
<font color="#CCCCCC">restarts or the cycle multiplier</font><font color="#E5E5E5"> and an</font>

1628
01:15:44,460 --> 01:15:46,230
atom optimizer<font color="#E5E5E5"> you know like a few</font>

1629
01:15:46,230 --> 01:15:51,690
<font color="#CCCCCC">little training</font><font color="#E5E5E5"> chase some I'm looking</font>

1630
01:15:51,690 --> 01:15:54,710
at this and thinking<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is we could</font>

1631
01:15:54,710 --> 01:15:58,159
totally improve<font color="#E5E5E5"> this small but</font><font color="#CCCCCC"> maybe</font>

1632
01:15:58,159 --> 01:16:00,929
looking at<font color="#E5E5E5"> the date and doing some</font>

1633
01:16:00,929 --> 01:16:02,820
tricks<font color="#CCCCCC"> with the date because this this</font>

1634
01:16:02,820 --> 01:16:05,639
<font color="#E5E5E5">is kind of a just a regular kind of</font>

1635
01:16:05,639 --> 01:16:08,219
smaller<font color="#CCCCCC"> no way yeah you can add more</font>

1636
01:16:08,219 --> 01:16:10,560
features<font color="#E5E5E5"> yeah exactly exactly</font><font color="#CCCCCC"> so like</font>

1637
01:16:10,560 --> 01:16:13,260
now<font color="#CCCCCC"> that you've seen this you could now</font>

1638
01:16:13,260 --> 01:16:15,770
<font color="#E5E5E5">you know even if you didn't</font><font color="#CCCCCC"> have</font>

1639
01:16:15,770 --> 01:16:18,179
embedding<font color="#E5E5E5"> dot bias in a notebook that</font>

1640
01:16:18,179 --> 01:16:19,619
<font color="#E5E5E5">you've written yourself through some</font>

1641
01:16:19,619 --> 01:16:21,600
other model that's in<font color="#E5E5E5"> fast AI you could</font>

1642
01:16:21,600 --> 01:16:23,489
look at it in faster and be like oh that

1643
01:16:23,489 --> 01:16:25,889
<font color="#E5E5E5">does most of the things that I'd want</font><font color="#CCCCCC"> to</font>

1644
01:16:25,889 --> 01:16:28,320
do but it<font color="#E5E5E5"> doesn't deal with time and so</font>

1645
01:16:28,320 --> 01:16:29,850
you<font color="#E5E5E5"> could just go oh okay let's grab</font><font color="#CCCCCC"> it</font>

1646
01:16:29,850 --> 01:16:33,000
copy<font color="#E5E5E5"> it you know pop it</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> my notebook</font>

1647
01:16:33,000 --> 01:16:36,449
<font color="#CCCCCC">and let's create you know the better</font>

1648
01:16:36,449 --> 01:16:38,969
version<font color="#CCCCCC"> all right and then</font><font color="#E5E5E5"> you can start</font>

1649
01:16:38,969 --> 01:16:41,670
playing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can now create your</font>

1650
01:16:41,670 --> 01:16:46,830
<font color="#CCCCCC">own model class from the open</font><font color="#E5E5E5"> source</font>

1651
01:16:46,830 --> 01:16:49,619
code here<font color="#E5E5E5"> and so yeah your that's</font>

1652
01:16:49,619 --> 01:16:50,850
mentioning a<font color="#CCCCCC"> couple things we could do</font>

1653
01:16:50,850 --> 01:16:52,409
we<font color="#CCCCCC"> could try and</font><font color="#E5E5E5"> incorporate in</font><font color="#CCCCCC"> time</font>

1654
01:16:52,409 --> 01:16:55,560
<font color="#CCCCCC">stamp so we could assume that</font><font color="#E5E5E5"> maybe well</font>

1655
01:16:55,560 --> 01:16:57,960
maybe<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> just like some for a</font>

1656
01:16:57,960 --> 01:17:00,389
particular<font color="#E5E5E5"> user over time users tend to</font>

1657
01:17:00,389 --> 01:17:03,590
get more or<font color="#CCCCCC"> less positive</font><font color="#E5E5E5"> about movies</font>

1658
01:17:03,590 --> 01:17:06,690
<font color="#CCCCCC">also remember there was the list of</font>

1659
01:17:06,690 --> 01:17:08,940
genres for each movie maybe we could

1660
01:17:08,940 --> 01:17:12,690
incorporate<font color="#E5E5E5"> that so one problem is it's</font>

1661
01:17:12,690 --> 01:17:13,800
a<font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit difficult to</font><font color="#E5E5E5"> incorporate</font>

1662
01:17:13,800 --> 01:17:17,580
that stuff into this embedding bias

1663
01:17:17,580 --> 01:17:19,650
model because it's kind of it's pretty

1664
01:17:19,650 --> 01:17:21,900
custom right so what we're going<font color="#E5E5E5"> to do</font>

1665
01:17:21,900 --> 01:17:25,369
next<font color="#E5E5E5"> is we're</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> try to create a</font>

1666
01:17:25,369 --> 01:17:27,110
neural net version

1667
01:17:27,110 --> 01:17:33,160
of this<font color="#CCCCCC"> hey</font><font color="#E5E5E5"> so the basic idea here is</font>

1668
01:17:33,160 --> 01:17:36,770
we're going to take<font color="#E5E5E5"> exactly the same</font>

1669
01:17:36,770 --> 01:17:38,240
thing as we<font color="#E5E5E5"> had before here's our list</font>

1670
01:17:38,240 --> 01:17:43,450
<font color="#E5E5E5">of users right and here is Erin Bates</font>

1671
01:17:43,450 --> 01:17:46,130
<font color="#CCCCCC">alright and here's our</font><font color="#E5E5E5"> list of movies</font>

1672
01:17:46,130 --> 01:17:51,020
<font color="#CCCCCC">and here is our embedded right and so as</font>

1673
01:17:51,020 --> 01:17:52,840
you can<font color="#CCCCCC"> see I've just kind of transposed</font>

1674
01:17:52,840 --> 01:17:55,460
<font color="#CCCCCC">the movie ones so that so that</font><font color="#E5E5E5"> they're</font>

1675
01:17:55,460 --> 01:17:58,880
all in the<font color="#E5E5E5"> same orientation</font><font color="#CCCCCC"> and here is</font>

1676
01:17:58,880 --> 01:18:02,960
<font color="#CCCCCC">our user movie rating but</font><font color="#E5E5E5"> D cross tab</font>

1677
01:18:02,960 --> 01:18:05,300
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so in the original format</font><font color="#E5E5E5"> so each</font>

1678
01:18:05,300 --> 01:18:10,370
<font color="#E5E5E5">row is a user movie rating okay so the</font>

1679
01:18:10,370 --> 01:18:13,540
first<font color="#E5E5E5"> thing I do is I need to replace</font>

1680
01:18:13,540 --> 01:18:19,010
user<font color="#E5E5E5"> 14 with that</font><font color="#CCCCCC"> users contiguous in</font>

1681
01:18:19,010 --> 01:18:22,180
this right<font color="#E5E5E5"> and so I can do that in Excel</font>

1682
01:18:22,180 --> 01:18:25,430
<font color="#E5E5E5">using this match that basically says</font>

1683
01:18:25,430 --> 01:18:27,710
what you know how far<font color="#CCCCCC"> down this list do</font>

1684
01:18:27,710 --> 01:18:31,880
<font color="#E5E5E5">you have to go and it said user 14 was</font>

1685
01:18:31,880 --> 01:18:34,040
<font color="#CCCCCC">the first thing in</font><font color="#E5E5E5"> that list okay</font>

1686
01:18:34,040 --> 01:18:36,260
user 29 was the second thing<font color="#E5E5E5"> in that</font>

1687
01:18:36,260 --> 01:18:39,980
<font color="#E5E5E5">list so forth okay</font><font color="#CCCCCC"> so this is the same</font>

1688
01:18:39,980 --> 01:18:43,220
<font color="#E5E5E5">as that thing that we did in our Python</font>

1689
01:18:43,220 --> 01:18:45,170
code where<font color="#CCCCCC"> we basically</font><font color="#E5E5E5"> created a</font>

1690
01:18:45,170 --> 01:18:49,910
dictionary<font color="#E5E5E5"> to master</font><font color="#CCCCCC"> so now we can for</font>

1691
01:18:49,910 --> 01:18:52,180
<font color="#E5E5E5">this particular user movie rating</font>

1692
01:18:52,180 --> 01:18:54,850
combination we<font color="#E5E5E5"> can look up the</font>

1693
01:18:54,850 --> 01:18:58,640
<font color="#CCCCCC">appropriate</font><font color="#E5E5E5"> embedding right and so you</font>

1694
01:18:58,640 --> 01:19:01,400
<font color="#E5E5E5">can see here what it's doing is it's</font>

1695
01:19:01,400 --> 01:19:01,700
saying

1696
01:19:01,700 --> 01:19:05,120
<font color="#CCCCCC">all right let's</font><font color="#E5E5E5"> basically offset from</font>

1697
01:19:05,120 --> 01:19:08,600
<font color="#CCCCCC">the start of this list</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> number of</font>

1698
01:19:08,600 --> 01:19:10,130
rows<font color="#E5E5E5"> we're going to go down is equal to</font>

1699
01:19:10,130 --> 01:19:12,200
the user index and the number of<font color="#E5E5E5"> columns</font>

1700
01:19:12,200 --> 01:19:14,810
we're going to go<font color="#E5E5E5"> across is one two</font>

1701
01:19:14,810 --> 01:19:16,880
<font color="#E5E5E5">three</font><font color="#CCCCCC"> four or five</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and so you can</font>

1702
01:19:16,880 --> 01:19:18,590
see what it<font color="#CCCCCC"> does is it creates point one</font>

1703
01:19:18,590 --> 01:19:19,850
nine point six three point<font color="#CCCCCC"> three one</font>

1704
01:19:19,850 --> 01:19:22,580
<font color="#E5E5E5">here it is point one nine point okay so</font>

1705
01:19:22,580 --> 01:19:25,910
so this<font color="#E5E5E5"> is literally modern embedding</font>

1706
01:19:25,910 --> 01:19:29,240
this but<font color="#E5E5E5"> remember this is exactly the</font>

1707
01:19:29,240 --> 01:19:34,310
<font color="#E5E5E5">same as doing a one hot encoding right</font>

1708
01:19:34,310 --> 01:19:37,820
because if instead this was a<font color="#E5E5E5"> vector</font>

1709
01:19:37,820 --> 01:19:40,420
containing<font color="#CCCCCC"> one zero zero zero zero</font>

1710
01:19:40,420 --> 01:19:44,150
right and we multiplied that by this

1711
01:19:44,150 --> 01:19:46,700
matrix then the only<font color="#E5E5E5"> row it's going</font><font color="#CCCCCC"> to</font>

1712
01:19:46,700 --> 01:19:51,800
return would<font color="#E5E5E5"> be the first one okay</font><font color="#CCCCCC"> so so</font>

1713
01:19:51,800 --> 01:19:53,420
it's really<font color="#E5E5E5"> useful to remember that</font>

1714
01:19:53,420 --> 01:19:56,210
embedding<font color="#E5E5E5"> actually just is a matrix</font>

1715
01:19:56,210 --> 01:19:59,300
product<font color="#E5E5E5"> the only reason it exists the</font>

1716
01:19:59,300 --> 01:20:02,270
only reason it exists is<font color="#CCCCCC"> because this is</font>

1717
01:20:02,270 --> 01:20:04,550
an optimization<font color="#E5E5E5"> you know this let's pipe</font>

1718
01:20:04,550 --> 01:20:07,280
or<font color="#E5E5E5"> to know like okay this is just a</font>

1719
01:20:07,280 --> 01:20:10,460
<font color="#E5E5E5">matrix multiply</font><font color="#CCCCCC"> but I guarantee you that</font>

1720
01:20:10,460 --> 01:20:13,370
you know<font color="#E5E5E5"> this thing is one hard encoded</font>

1721
01:20:13,370 --> 01:20:15,320
therefore you<font color="#E5E5E5"> don't have to actually do</font>

1722
01:20:15,320 --> 01:20:16,850
the matrix multiply you can just do a

1723
01:20:16,850 --> 01:20:19,280
<font color="#CCCCCC">directory of that okay so that's</font>

1724
01:20:19,280 --> 01:20:21,940
literally all an embedding is is it<font color="#CCCCCC"> is a</font>

1725
01:20:21,940 --> 01:20:26,420
<font color="#E5E5E5">computational performance thing for a</font>

1726
01:20:26,420 --> 01:20:28,460
particular<font color="#E5E5E5"> kind of matrix multiplier</font><font color="#CCCCCC"> all</font>

1727
01:20:28,460 --> 01:20:31,340
<font color="#E5E5E5">right so that looks up that uses user</font>

1728
01:20:31,340 --> 01:20:34,550
and then we can<font color="#E5E5E5"> look up that users movie</font>

1729
01:20:34,550 --> 01:20:38,420
<font color="#E5E5E5">all right so here</font><font color="#CCCCCC"> is movie</font><font color="#E5E5E5"> ID movie ID</font>

1730
01:20:38,420 --> 01:20:41,060
<font color="#CCCCCC">four</font><font color="#E5E5E5"> one seven which apparently is</font>

1731
01:20:41,060 --> 01:20:43,550
indexed number<font color="#CCCCCC"> fourteen here it</font><font color="#E5E5E5"> is here</font>

1732
01:20:43,550 --> 01:20:45,320
<font color="#E5E5E5">so it should have been point seven five</font>

1733
01:20:45,320 --> 01:20:47,900
point four seven yes it is point seven

1734
01:20:47,900 --> 01:20:49,460
five point<font color="#E5E5E5"> plus it okay</font>

1735
01:20:49,460 --> 01:20:52,250
so we've now<font color="#CCCCCC"> got the user embedding and</font>

1736
01:20:52,250 --> 01:20:55,040
the movie embedding and rather than

1737
01:20:55,040 --> 01:21:02,480
doing a dot product<font color="#CCCCCC"> of those two</font><font color="#E5E5E5"> okay</font>

1738
01:21:02,480 --> 01:21:06,370
which is what<font color="#CCCCCC"> we do normally instead</font>

1739
01:21:06,370 --> 01:21:09,340
what if we concatenate the two together

1740
01:21:09,340 --> 01:21:15,310
into<font color="#CCCCCC"> a single vector of length 10 and</font>

1741
01:21:15,310 --> 01:21:19,820
then feed<font color="#CCCCCC"> that into a neural</font><font color="#E5E5E5"> net okay</font>

1742
01:21:19,820 --> 01:21:24,620
and so<font color="#E5E5E5"> anytime we've got you know</font><font color="#CCCCCC"> a</font>

1743
01:21:24,620 --> 01:21:27,920
tensor of import activations or in this

1744
01:21:27,920 --> 01:21:30,110
case<font color="#E5E5E5"> a tensor of actually this is a</font>

1745
01:21:30,110 --> 01:21:31,820
tensor of output activations this is

1746
01:21:31,820 --> 01:21:34,130
coming out<font color="#CCCCCC"> of an embedding layer we can</font>

1747
01:21:34,130 --> 01:21:35,960
<font color="#CCCCCC">chuck</font><font color="#E5E5E5"> it in a neural net because neural</font>

1748
01:21:35,960 --> 01:21:40,120
<font color="#CCCCCC">Nets we now know can calculate anything</font>

1749
01:21:40,120 --> 01:21:43,190
<font color="#E5E5E5">okay including hopefully collaborative</font>

1750
01:21:43,190 --> 01:21:46,940
filtering<font color="#E5E5E5"> so let's try that so here is</font>

1751
01:21:46,940 --> 01:21:51,599
our embedding net so

1752
01:21:51,599 --> 01:21:54,719
this time I have not bothered to create

1753
01:21:54,719 --> 01:22:01,320
a separate bias<font color="#CCCCCC"> because instead the</font>

1754
01:22:01,320 --> 01:22:05,940
linear layer in<font color="#CCCCCC"> pi torch already has a</font>

1755
01:22:05,940 --> 01:22:10,050
bias in it<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> so when we go</font><font color="#CCCCCC"> NN</font>

1756
01:22:10,050 --> 01:22:17,929
<font color="#E5E5E5">Linea right that's kind</font><font color="#CCCCCC"> of draw this out</font>

1757
01:22:18,050 --> 01:22:24,060
so we've got<font color="#E5E5E5"> our</font><font color="#CCCCCC"> U matrix</font><font color="#E5E5E5"> right and this</font>

1758
01:22:24,060 --> 01:22:27,650
is<font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of users and this is the</font>

1759
01:22:27,650 --> 01:22:31,290
number of factors right<font color="#E5E5E5"> and we've got</font>

1760
01:22:31,290 --> 01:22:36,300
our<font color="#E5E5E5"> M matrix that so here's our number</font>

1761
01:22:36,300 --> 01:22:39,210
<font color="#CCCCCC">of movies</font><font color="#E5E5E5"> and here's our again number of</font>

1762
01:22:39,210 --> 01:22:42,960
factors<font color="#CCCCCC"> okay and so remember</font><font color="#E5E5E5"> we look up</font>

1763
01:22:42,960 --> 01:22:50,099
a single user<font color="#E5E5E5"> we look up a single movie</font>

1764
01:22:50,099 --> 01:22:53,790
<font color="#E5E5E5">and let's grab them and concatenate them</font>

1765
01:22:53,790 --> 01:22:57,239
together<font color="#CCCCCC"> okay so here's like the</font><font color="#E5E5E5"> user</font>

1766
01:22:57,239 --> 01:23:00,480
part here's the<font color="#E5E5E5"> movie part and then</font>

1767
01:23:00,480 --> 01:23:05,000
let's<font color="#E5E5E5"> put that through a matrix product</font>

1768
01:23:05,000 --> 01:23:08,010
right so that number<font color="#E5E5E5"> of rows here</font><font color="#CCCCCC"> is</font>

1769
01:23:08,010 --> 01:23:09,510
<font color="#E5E5E5">going to have to be the number</font><font color="#CCCCCC"> of users</font>

1770
01:23:09,510 --> 01:23:12,090
plus the number<font color="#CCCCCC"> of movies</font><font color="#E5E5E5"> right because</font>

1771
01:23:12,090 --> 01:23:14,880
that's<font color="#E5E5E5"> how long</font><font color="#CCCCCC"> that is and then the</font>

1772
01:23:14,880 --> 01:23:18,000
number of<font color="#E5E5E5"> columns can</font><font color="#CCCCCC"> be anything we</font>

1773
01:23:18,000 --> 01:23:23,250
<font color="#CCCCCC">want because we're going to</font><font color="#E5E5E5"> take that</font><font color="#CCCCCC"> so</font>

1774
01:23:23,250 --> 01:23:25,020
in this case we're going to pick<font color="#CCCCCC"> 10</font>

1775
01:23:25,020 --> 01:23:27,690
apparently<font color="#E5E5E5"> so it's pick 10 and then</font>

1776
01:23:27,690 --> 01:23:30,300
we're going<font color="#E5E5E5"> to stick</font><font color="#CCCCCC"> that through</font><font color="#E5E5E5"> a rail</font>

1777
01:23:30,300 --> 01:23:34,940
you and then stick<font color="#CCCCCC"> that</font><font color="#E5E5E5"> through another</font>

1778
01:23:34,940 --> 01:23:37,349
<font color="#E5E5E5">matrix which obviously needs to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> of</font>

1779
01:23:37,349 --> 01:23:40,590
size<font color="#E5E5E5"> 10 here and then the number</font><font color="#CCCCCC"> of</font>

1780
01:23:40,590 --> 01:23:43,889
<font color="#E5E5E5">columns is a size</font><font color="#CCCCCC"> 1 because we want</font><font color="#E5E5E5"> to</font>

1781
01:23:43,889 --> 01:23:51,030
predict a single rating<font color="#CCCCCC"> okay and so</font>

1782
01:23:51,030 --> 01:23:54,869
that's<font color="#E5E5E5"> our kind of flow chart of what's</font>

1783
01:23:54,869 --> 01:23:58,889
going on<font color="#E5E5E5"> right it is a standard</font><font color="#CCCCCC"> I'm</font>

1784
01:23:58,889 --> 01:24:00,989
<font color="#CCCCCC">called a one hidden layer neural net it</font>

1785
01:24:00,989 --> 01:24:02,730
depends how you<font color="#E5E5E5"> think of it like there's</font>

1786
01:24:02,730 --> 01:24:05,190
kind of an embedding layer but because

1787
01:24:05,190 --> 01:24:07,920
<font color="#E5E5E5">is linear and this is linear</font><font color="#CCCCCC"> the two</font>

1788
01:24:07,920 --> 01:24:09,360
together is really<font color="#E5E5E5"> one linear layer</font>

1789
01:24:09,360 --> 01:24:11,190
<font color="#E5E5E5">right this just a</font><font color="#CCCCCC"> computational</font>

1790
01:24:11,190 --> 01:24:14,100
convenience<font color="#E5E5E5"> so it's really got one</font>

1791
01:24:14,100 --> 01:24:15,900
hidden layer<font color="#CCCCCC"> because it's got one</font><font color="#E5E5E5"> layer</font>

1792
01:24:15,900 --> 01:24:21,270
before<font color="#E5E5E5"> this nonlinear activation so in</font>

1793
01:24:21,270 --> 01:24:26,520
order to<font color="#E5E5E5"> create a linear layer with</font><font color="#CCCCCC"> some</font>

1794
01:24:26,520 --> 01:24:27,690
number of<font color="#E5E5E5"> rows and some number of</font>

1795
01:24:27,690 --> 01:24:31,290
columns you<font color="#E5E5E5"> just go in</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> on in the</font>

1796
01:24:31,290 --> 01:24:34,350
machine learning<font color="#CCCCCC"> class</font><font color="#E5E5E5"> this week we</font>

1797
01:24:34,350 --> 01:24:37,230
learnt how to create<font color="#E5E5E5"> a</font><font color="#CCCCCC"> linear layer from</font>

1798
01:24:37,230 --> 01:24:39,300
scratch by creating<font color="#E5E5E5"> our own weight</font>

1799
01:24:39,300 --> 01:24:41,760
matrix and<font color="#E5E5E5"> our own biases</font><font color="#CCCCCC"> so if you want</font>

1800
01:24:41,760 --> 01:24:43,739
to<font color="#E5E5E5"> check</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> you couldn't do so</font>

1801
01:24:43,739 --> 01:24:46,020
there right but it's the same<font color="#E5E5E5"> basic</font>

1802
01:24:46,020 --> 01:24:51,060
technique we've<font color="#CCCCCC"> already</font><font color="#E5E5E5"> seen so we</font>

1803
01:24:51,060 --> 01:24:52,680
create our embeddings we create our two

1804
01:24:52,680 --> 01:24:55,140
linear layers<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> all the stuff</font><font color="#CCCCCC"> that</font>

1805
01:24:55,140 --> 01:24:57,750
we<font color="#CCCCCC"> need to start with you know</font><font color="#E5E5E5"> really if</font>

1806
01:24:57,750 --> 01:24:59,370
I wanted<font color="#E5E5E5"> to make this more general I</font>

1807
01:24:59,370 --> 01:25:01,770
would have had another parameter<font color="#E5E5E5"> here</font>

1808
01:25:01,770 --> 01:25:08,000
called like num hidden you know equals

1809
01:25:08,000 --> 01:25:11,160
equals<font color="#CCCCCC"> 10 and then this would be a</font>

1810
01:25:11,160 --> 01:25:14,250
parameter<font color="#E5E5E5"> and then you could like more</font>

1811
01:25:14,250 --> 01:25:16,530
<font color="#E5E5E5">easily play around with</font><font color="#CCCCCC"> different</font>

1812
01:25:16,530 --> 01:25:18,570
numbers of activations<font color="#CCCCCC"> so when we say</font>

1813
01:25:18,570 --> 01:25:20,699
like<font color="#E5E5E5"> okay in this layer I'm going</font><font color="#CCCCCC"> to</font>

1814
01:25:20,699 --> 01:25:21,810
create a layer with this many

1815
01:25:21,810 --> 01:25:25,140
activations<font color="#E5E5E5"> all I mean assuming it's a</font>

1816
01:25:25,140 --> 01:25:28,469
fully connected<font color="#E5E5E5"> layer is my linear layer</font>

1817
01:25:28,469 --> 01:25:30,690
has how<font color="#E5E5E5"> many columns in its weight</font>

1818
01:25:30,690 --> 01:25:32,820
matrix that's<font color="#E5E5E5"> how many activations it</font>

1819
01:25:32,820 --> 01:25:36,600
creates all right so we grab our users

1820
01:25:36,600 --> 01:25:38,550
<font color="#CCCCCC">and movies we put them through our</font>

1821
01:25:38,550 --> 01:25:40,800
embedding matrix and then we concatenate

1822
01:25:40,800 --> 01:25:41,670
them together

1823
01:25:41,670 --> 01:25:44,640
<font color="#E5E5E5">okay so torch cat concatenate them</font>

1824
01:25:44,640 --> 01:25:47,100
together on the<font color="#CCCCCC"> first dimension so in</font>

1825
01:25:47,100 --> 01:25:48,900
other words we concatenate the columns

1826
01:25:48,900 --> 01:25:52,320
together<font color="#E5E5E5"> to create longer rows okay so</font>

1827
01:25:52,320 --> 01:25:55,969
that's concatenating<font color="#E5E5E5"> on dimension one</font>

1828
01:25:56,300 --> 01:25:58,530
<font color="#CCCCCC">drop out we'll come back to her in</font><font color="#E5E5E5"> a</font>

1829
01:25:58,530 --> 01:26:01,580
moment<font color="#CCCCCC"> we've got that briefly</font>

1830
01:26:01,580 --> 01:26:04,469
so then having<font color="#CCCCCC"> done that</font><font color="#E5E5E5"> we'll put it</font>

1831
01:26:04,469 --> 01:26:07,980
through<font color="#E5E5E5"> that linear layer we had we'll</font>

1832
01:26:07,980 --> 01:26:10,050
do our value and you'll notice that

1833
01:26:10,050 --> 01:26:14,160
value is again inside our capital F and

1834
01:26:14,160 --> 01:26:15,810
end<font color="#CCCCCC"> up optional</font><font color="#E5E5E5"> right it's</font><font color="#CCCCCC"> just a</font>

1835
01:26:15,810 --> 01:26:16,199
function

1836
01:26:16,199 --> 01:26:18,930
<font color="#E5E5E5">so remember activation function</font>

1837
01:26:18,930 --> 01:26:20,550
<font color="#E5E5E5">are basically things</font><font color="#CCCCCC"> that take one</font>

1838
01:26:20,550 --> 01:26:23,160
activation in and spit one activation

1839
01:26:23,160 --> 01:26:26,070
out<font color="#E5E5E5"> in this case taking</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> that</font>

1840
01:26:26,070 --> 01:26:28,220
can have negatives or positives and

1841
01:26:28,220 --> 01:26:30,660
truncate the negatives<font color="#E5E5E5"> to zero</font><font color="#CCCCCC"> that's</font>

1842
01:26:30,660 --> 01:26:34,950
<font color="#E5E5E5">what well you does</font><font color="#CCCCCC"> and then here's a</font>

1843
01:26:34,950 --> 01:26:39,540
sigmoid so that's that that is now a

1844
01:26:39,540 --> 01:26:42,630
genuine neural network I don't know if<font color="#CCCCCC"> I</font>

1845
01:26:42,630 --> 01:26:44,370
get to call<font color="#CCCCCC"> it deep it's only got one</font>

1846
01:26:44,370 --> 01:26:45,690
hidden layer but it's<font color="#CCCCCC"> definitely a</font>

1847
01:26:45,690 --> 01:26:48,030
neural network<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right and so we can</font>

1848
01:26:48,030 --> 01:26:50,100
<font color="#E5E5E5">now construct it we can put it on the</font>

1849
01:26:50,100 --> 01:26:52,890
GPU<font color="#CCCCCC"> you can create an optimizer for it</font>

1850
01:26:52,890 --> 01:26:56,730
and we can<font color="#CCCCCC"> fit it now you'll notice</font>

1851
01:26:56,730 --> 01:26:57,660
there's one<font color="#E5E5E5"> other thing I've been</font>

1852
01:26:57,660 --> 01:27:00,810
<font color="#E5E5E5">passing</font><font color="#CCCCCC"> to fit which is what</font><font color="#E5E5E5"> loss</font>

1853
01:27:00,810 --> 01:27:03,030
function are we trying to<font color="#E5E5E5"> minimize</font><font color="#CCCCCC"> okay</font>

1854
01:27:03,030 --> 01:27:05,280
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is the mean squared error loss and</font>

1855
01:27:05,280 --> 01:27:08,130
again<font color="#E5E5E5"> it's inside F okay pretty much all</font>

1856
01:27:08,130 --> 01:27:12,270
the functions are inside it<font color="#CCCCCC"> okay so one</font>

1857
01:27:12,270 --> 01:27:14,610
of the things that you have to pass<font color="#E5E5E5"> fit</font>

1858
01:27:14,610 --> 01:27:16,590
<font color="#E5E5E5">is something saying like how do you</font>

1859
01:27:16,590 --> 01:27:20,340
<font color="#E5E5E5">score</font><font color="#CCCCCC"> it's what</font><font color="#E5E5E5"> counts as good or bad so</font>

1860
01:27:20,340 --> 01:27:23,550
it should I mean now that<font color="#E5E5E5"> we have a real</font>

1861
01:27:23,550 --> 01:27:25,860
neural net<font color="#E5E5E5"> do we have to use the same</font>

1862
01:27:25,860 --> 01:27:27,840
<font color="#E5E5E5">number</font><font color="#CCCCCC"> of embeddings for users and</font>

1863
01:27:27,840 --> 01:27:30,480
that's<font color="#E5E5E5"> a great question you don't know</font>

1864
01:27:30,480 --> 01:27:31,800
absolutely right

1865
01:27:31,800 --> 01:27:34,050
you don't<font color="#E5E5E5"> and so like we've got a lot</font><font color="#CCCCCC"> of</font>

1866
01:27:34,050 --> 01:27:38,100
<font color="#E5E5E5">benefits</font><font color="#CCCCCC"> here right</font><font color="#E5E5E5"> because if we you</font>

1867
01:27:38,100 --> 01:27:45,420
know<font color="#E5E5E5"> think about you know we're grabbing</font>

1868
01:27:45,420 --> 01:27:48,600
a user embedding or concatenating it

1869
01:27:48,600 --> 01:27:50,490
with a movie embedding which maybe is

1870
01:27:50,490 --> 01:27:54,810
<font color="#CCCCCC">like some</font><font color="#E5E5E5"> different size</font><font color="#CCCCCC"> but then also</font>

1871
01:27:54,810 --> 01:27:57,960
perhaps<font color="#E5E5E5"> we looked up the genre of</font><font color="#CCCCCC"> the</font>

1872
01:27:57,960 --> 01:27:59,820
movie and like you know there's actually

1873
01:27:59,820 --> 01:28:02,490
<font color="#CCCCCC">a embedding matrix of like number of</font>

1874
01:28:02,490 --> 01:28:06,240
genres<font color="#E5E5E5"> by I don't know three or</font>

1875
01:28:06,240 --> 01:28:07,830
something<font color="#CCCCCC"> and so like</font><font color="#E5E5E5"> we could then</font>

1876
01:28:07,830 --> 01:28:09,750
concatenate like a genre<font color="#E5E5E5"> embedding and</font>

1877
01:28:09,750 --> 01:28:12,270
then maybe<font color="#E5E5E5"> the</font><font color="#CCCCCC"> timestamp is in here as a</font>

1878
01:28:12,270 --> 01:28:14,880
continuous number<font color="#E5E5E5"> right and</font><font color="#CCCCCC"> so then that</font>

1879
01:28:14,880 --> 01:28:18,570
whole<font color="#E5E5E5"> thing we can then feed</font><font color="#CCCCCC"> into you</font>

1880
01:28:18,570 --> 01:28:24,420
know<font color="#E5E5E5"> and you're on it all right</font><font color="#CCCCCC"> and then</font>

1881
01:28:24,420 --> 01:28:28,440
at the end remember<font color="#E5E5E5"> a final</font>

1882
01:28:28,440 --> 01:28:30,750
non-linearity was a sigmoid<font color="#E5E5E5"> right so we</font>

1883
01:28:30,750 --> 01:28:32,489
<font color="#E5E5E5">can now recognize</font><font color="#CCCCCC"> that</font>

1884
01:28:32,489 --> 01:28:34,619
thing we did where<font color="#CCCCCC"> we did sigmoid x max</font>

1885
01:28:34,619 --> 01:28:36,570
<font color="#E5E5E5">reading vote - min reading</font><font color="#CCCCCC"> + blah blah</font>

1886
01:28:36,570 --> 01:28:40,789
blah<font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> just another nonlinear</font>

1887
01:28:40,789 --> 01:28:43,829
activation function<font color="#CCCCCC"> alright remember in</font>

1888
01:28:43,829 --> 01:28:46,590
our last<font color="#E5E5E5"> layer we use generally</font>

1889
01:28:46,590 --> 01:28:48,349
different<font color="#E5E5E5"> kinds of activation functions</font>

1890
01:28:48,349 --> 01:28:51,269
<font color="#E5E5E5">so as we said we don't need any</font>

1891
01:28:51,269 --> 01:28:52,949
<font color="#E5E5E5">activation function at all right we</font>

1892
01:28:52,949 --> 01:28:59,309
could just do that<font color="#CCCCCC"> right</font><font color="#E5E5E5"> but by not</font>

1893
01:28:59,309 --> 01:29:01,230
<font color="#CCCCCC">having</font><font color="#E5E5E5"> any nonlinear activation function</font>

1894
01:29:01,230 --> 01:29:03,030
we're just making<font color="#E5E5E5"> it harder</font><font color="#CCCCCC"> so that's</font>

1895
01:29:03,030 --> 01:29:06,300
why we<font color="#E5E5E5"> put the</font><font color="#CCCCCC"> sigmoid in there as well</font>

1896
01:29:06,300 --> 01:29:10,230
<font color="#CCCCCC">okay so we can then fit it</font><font color="#E5E5E5"> in the usual</font>

1897
01:29:10,230 --> 01:29:14,010
<font color="#E5E5E5">way</font><font color="#CCCCCC"> and there we go</font>

1898
01:29:14,010 --> 01:29:15,599
you know interestingly we actually<font color="#E5E5E5"> got a</font>

1899
01:29:15,599 --> 01:29:20,460
better score than<font color="#E5E5E5"> we did with our this</font>

1900
01:29:20,460 --> 01:29:23,519
model<font color="#CCCCCC"> so I'll be interesting to</font><font color="#E5E5E5"> try</font>

1901
01:29:23,519 --> 01:29:24,900
training this<font color="#E5E5E5"> with stochastic gradient</font>

1902
01:29:24,900 --> 01:29:26,429
descent with restarts<font color="#E5E5E5"> and see if it's</font>

1903
01:29:26,429 --> 01:29:29,369
actually better<font color="#CCCCCC"> you know maybe you</font><font color="#E5E5E5"> can</font>

1904
01:29:29,369 --> 01:29:30,960
play<font color="#CCCCCC"> around</font><font color="#E5E5E5"> with the number of hidden</font>

1905
01:29:30,960 --> 01:29:32,909
layers and<font color="#CCCCCC"> the drop out and whatever</font>

1906
01:29:32,909 --> 01:29:35,699
else<font color="#E5E5E5"> and see if you can come</font><font color="#CCCCCC"> up with</font><font color="#E5E5E5"> you</font>

1907
01:29:35,699 --> 01:29:44,809
<font color="#E5E5E5">know get a better answer than point</font>

1908
01:29:44,809 --> 01:29:50,789
seven six<font color="#E5E5E5"> ish okay</font><font color="#CCCCCC"> so so general so this</font>

1909
01:29:50,789 --> 01:29:53,789
<font color="#E5E5E5">is like if you</font><font color="#CCCCCC"> were going deep into</font>

1910
01:29:53,789 --> 01:29:55,110
<font color="#E5E5E5">collaborative filtering at your</font>

1911
01:29:55,110 --> 01:29:55,619
<font color="#E5E5E5">workplace</font>

1912
01:29:55,619 --> 01:29:57,389
<font color="#CCCCCC">whatever</font><font color="#E5E5E5"> this wouldn't be a bad way to</font>

1913
01:29:57,389 --> 01:29:59,340
go I could like I'd start<font color="#E5E5E5"> out with like</font>

1914
01:29:59,340 --> 01:30:01,499
oh<font color="#E5E5E5"> okay here's like a</font><font color="#CCCCCC"> flat footed</font>

1915
01:30:01,499 --> 01:30:04,320
<font color="#CCCCCC">dataset</font><font color="#E5E5E5"> 30 in first day I get</font><font color="#CCCCCC"> learner</font>

1916
01:30:04,320 --> 01:30:06,269
there's you<font color="#CCCCCC"> know not much I</font><font color="#E5E5E5"> can send</font><font color="#CCCCCC"> it</font>

1917
01:30:06,269 --> 01:30:07,980
basically<font color="#CCCCCC"> number of factors is about the</font>

1918
01:30:07,980 --> 01:30:10,920
only<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that I pass in I can</font><font color="#E5E5E5"> learn</font>

1919
01:30:10,920 --> 01:30:13,590
for<font color="#E5E5E5"> a while maybe try a few</font><font color="#CCCCCC"> different</font>

1920
01:30:13,590 --> 01:30:15,420
approaches<font color="#E5E5E5"> and then you're like</font><font color="#CCCCCC"> okay</font>

1921
01:30:15,420 --> 01:30:18,510
there's like<font color="#E5E5E5"> that's how I go if I use</font>

1922
01:30:18,510 --> 01:30:22,019
the defaults<font color="#E5E5E5"> okay how do I make</font><font color="#CCCCCC"> it</font>

1923
01:30:22,019 --> 01:30:23,699
<font color="#E5E5E5">better and then I'd</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> dig into</font><font color="#E5E5E5"> the</font>

1924
01:30:23,699 --> 01:30:24,960
code<font color="#CCCCCC"> and seeing like okay well what if</font>

1925
01:30:24,960 --> 01:30:27,059
Jeremy actually<font color="#E5E5E5"> do here this is actually</font>

1926
01:30:27,059 --> 01:30:30,869
what I want<font color="#E5E5E5"> you know and so one of the</font>

1927
01:30:30,869 --> 01:30:32,820
<font color="#E5E5E5">nice things about the neural net</font>

1928
01:30:32,820 --> 01:30:36,150
approach is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you know as unit</font>

1929
01:30:36,150 --> 01:30:38,789
mentioned<font color="#E5E5E5"> we can have different numbers</font>

1930
01:30:38,789 --> 01:30:43,349
<font color="#CCCCCC">of embeddings we can choose how many</font>

1931
01:30:43,349 --> 01:30:45,929
<font color="#E5E5E5">hidden and we can also choose</font>

1932
01:30:45,929 --> 01:30:51,000
drop now right so so what we're actually

1933
01:30:51,000 --> 01:30:52,710
doing<font color="#CCCCCC"> is we haven't just got</font><font color="#E5E5E5"> real you</font>

1934
01:30:52,710 --> 01:30:57,620
<font color="#E5E5E5">that we're also going like</font><font color="#CCCCCC"> okay let's</font>

1935
01:31:00,770 --> 01:31:05,179
let's<font color="#CCCCCC"> delete a</font><font color="#E5E5E5"> few things at random</font>

1936
01:31:05,179 --> 01:31:08,489
<font color="#CCCCCC">alright let's</font><font color="#E5E5E5"> drop out so in this case</font>

1937
01:31:08,489 --> 01:31:12,570
we were deleting after the first linear

1938
01:31:12,570 --> 01:31:16,530
layer<font color="#CCCCCC"> 75% of them</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right and</font><font color="#E5E5E5"> then</font>

1939
01:31:16,530 --> 01:31:18,510
<font color="#E5E5E5">after the second one in like 75% of them</font>

1940
01:31:18,510 --> 01:31:19,650
so we can<font color="#CCCCCC"> add a whole lot of</font>

1941
01:31:19,650 --> 01:31:22,830
regularization<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> so you know</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> it</font>

1942
01:31:22,830 --> 01:31:24,390
kind of feels like<font color="#CCCCCC"> the</font><font color="#E5E5E5"> this this</font>

1943
01:31:24,390 --> 01:31:28,320
embedding<font color="#E5E5E5"> net you know you could you</font>

1944
01:31:28,320 --> 01:31:29,880
could change this again we could like

1945
01:31:29,880 --> 01:31:31,710
have it<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> we can pass into the</font>

1946
01:31:31,710 --> 01:31:37,530
constructor<font color="#CCCCCC"> well if</font><font color="#E5E5E5"> you're gonna make it</font>

1947
01:31:37,530 --> 01:31:39,210
look as<font color="#E5E5E5"> much</font><font color="#CCCCCC"> as possible like</font><font color="#E5E5E5"> what we</font>

1948
01:31:39,210 --> 01:31:41,179
had before we could surpass him peace

1949
01:31:41,179 --> 01:31:48,630
peace equals 0.75<font color="#CCCCCC"> oh I'm not sure this</font>

1950
01:31:48,630 --> 01:31:51,469
<font color="#E5E5E5">is the best API but it's not terrible</font>

1951
01:31:51,469 --> 01:31:53,520
<font color="#E5E5E5">probably what since we've only got</font>

1952
01:31:53,520 --> 01:31:55,230
exactly two layers we could say<font color="#CCCCCC"> p1</font>

1953
01:31:55,230 --> 01:32:08,790
equals 0.75<font color="#CCCCCC"> v p2 v</font><font color="#E5E5E5"> and so then this will</font>

1954
01:32:08,790 --> 01:32:18,630
be P<font color="#E5E5E5"> 1 this will be Peter you know where</font>

1955
01:32:18,630 --> 01:32:20,909
we go<font color="#E5E5E5"> and like if you wanted to go</font>

1956
01:32:20,909 --> 01:32:24,719
further<font color="#CCCCCC"> you could</font><font color="#E5E5E5"> make it look more like</font>

1957
01:32:24,719 --> 01:32:29,610
<font color="#E5E5E5">our structured data</font><font color="#CCCCCC"> learner</font><font color="#E5E5E5"> you could</font>

1958
01:32:29,610 --> 01:32:31,469
actually have a thing<font color="#E5E5E5"> this number of</font>

1959
01:32:31,469 --> 01:32:34,620
hidden you<font color="#CCCCCC"> know maybe you</font><font color="#E5E5E5"> could make a</font>

1960
01:32:34,620 --> 01:32:37,590
list<font color="#E5E5E5"> and so then rather than creating</font>

1961
01:32:37,590 --> 01:32:40,260
exactly one hidden layer<font color="#E5E5E5"> and one output</font>

1962
01:32:40,260 --> 01:32:42,780
<font color="#E5E5E5">layer</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> could be a little</font><font color="#CCCCCC"> loop</font><font color="#E5E5E5"> that</font>

1963
01:32:42,780 --> 01:32:45,300
creates and hidden<font color="#E5E5E5"> miners each one of</font>

1964
01:32:45,300 --> 01:32:47,010
the size you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> so like this is all</font>

1965
01:32:47,010 --> 01:32:48,449
stuff you can play with<font color="#E5E5E5"> during the</font>

1966
01:32:48,449 --> 01:32:52,230
<font color="#CCCCCC">hearing</font><font color="#E5E5E5"> the week if you want to and I</font>

1967
01:32:52,230 --> 01:32:53,790
feel like if you've got like a much

1968
01:32:53,790 --> 01:32:55,679
smaller collaborative children data set

1969
01:32:55,679 --> 01:32:57,989
<font color="#E5E5E5">you know maybe you need</font><font color="#CCCCCC"> like more</font>

1970
01:32:57,989 --> 01:32:59,530
regularization or<font color="#E5E5E5"> whatever</font>

1971
01:32:59,530 --> 01:33:02,500
it's a much bigger one<font color="#E5E5E5"> maybe more layers</font>

1972
01:33:02,500 --> 01:33:04,930
would help I<font color="#E5E5E5"> don't know you know III</font>

1973
01:33:04,930 --> 01:33:08,710
haven't<font color="#E5E5E5"> seen much</font><font color="#CCCCCC"> discussion of this</font>

1974
01:33:08,710 --> 01:33:10,150
kind<font color="#E5E5E5"> of neural network approach to</font>

1975
01:33:10,150 --> 01:33:12,040
collaborative filtering<font color="#CCCCCC"> but I'm not</font><font color="#E5E5E5"> a</font>

1976
01:33:12,040 --> 01:33:13,870
collaborative<font color="#E5E5E5"> filtering expert so maybe</font>

1977
01:33:13,870 --> 01:33:15,880
it's maybe it's<font color="#CCCCCC"> around but</font><font color="#E5E5E5"> that'd be</font>

1978
01:33:15,880 --> 01:33:22,510
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> thing to try so the next</font>

1979
01:33:22,510 --> 01:33:27,000
<font color="#E5E5E5">thing I wanted to</font><font color="#CCCCCC"> do was to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about</font>

1980
01:33:27,000 --> 01:33:29,890
<font color="#E5E5E5">the training loop so what's actually</font>

1981
01:33:29,890 --> 01:33:34,870
happening inside<font color="#CCCCCC"> the training loop so at</font>

1982
01:33:34,870 --> 01:33:37,920
the moment we're basically passing off

1983
01:33:37,920 --> 01:33:42,220
<font color="#E5E5E5">the actual updating of</font><font color="#CCCCCC"> the weights to</font><font color="#E5E5E5"> PI</font>

1984
01:33:42,220 --> 01:33:46,210
<font color="#E5E5E5">torches optimizer but what I'm going</font><font color="#CCCCCC"> to</font>

1985
01:33:46,210 --> 01:33:49,330
do is like understand what that

1986
01:33:49,330 --> 01:33:52,120
optimizer is is<font color="#E5E5E5"> actually good and we're</font>

1987
01:33:52,120 --> 01:33:54,160
also I also want to understand what this

1988
01:33:54,160 --> 01:33:58,450
<font color="#E5E5E5">Momentum's him he's doing so you'll find</font>

1989
01:33:58,450 --> 01:34:03,220
we<font color="#CCCCCC"> have a spreadsheet called grab</font><font color="#E5E5E5"> disk</font>

1990
01:34:03,220 --> 01:34:06,460
<font color="#E5E5E5">gradient descent and it's kind of</font>

1991
01:34:06,460 --> 01:34:08,110
<font color="#E5E5E5">designed to be read left to right</font><font color="#CCCCCC"> sorry</font>

1992
01:34:08,110 --> 01:34:11,200
<font color="#E5E5E5">right to</font><font color="#CCCCCC"> left worksheet was so the</font>

1993
01:34:11,200 --> 01:34:14,590
rightmost worksheet is some data right

1994
01:34:14,590 --> 01:34:16,030
<font color="#E5E5E5">and we're going to implement gradient</font>

1995
01:34:16,030 --> 01:34:18,520
descent in<font color="#E5E5E5"> Excel because obviously</font>

1996
01:34:18,520 --> 01:34:20,560
<font color="#E5E5E5">everybody wants</font><font color="#CCCCCC"> to do deep learning in</font>

1997
01:34:20,560 --> 01:34:22,360
<font color="#CCCCCC">it Selman we've done collaborative</font>

1998
01:34:22,360 --> 01:34:23,770
<font color="#E5E5E5">filtering in Excel we've done</font>

1999
01:34:23,770 --> 01:34:27,010
convolutions in Excel so<font color="#CCCCCC"> now we need SJD</font>

2000
01:34:27,010 --> 01:34:30,040
in Excel<font color="#E5E5E5"> so we can replace - once and</font>

2001
01:34:30,040 --> 01:34:30,430
for all

2002
01:34:30,430 --> 01:34:33,370
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so let's start by creating some</font>

2003
01:34:33,370 --> 01:34:37,270
data right<font color="#E5E5E5"> and so here's you know here's</font>

2004
01:34:37,270 --> 01:34:40,300
some independent you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> I've got one</font>

2005
01:34:40,300 --> 01:34:45,330
column<font color="#E5E5E5"> of X's you</font><font color="#CCCCCC"> know and one column of</font>

2006
01:34:45,330 --> 01:34:48,400
<font color="#CCCCCC">wise and these are actually directly</font>

2007
01:34:48,400 --> 01:34:50,440
linearly related so this is this<font color="#CCCCCC"> is</font>

2008
01:34:50,440 --> 01:34:54,460
random<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and this one here is equal</font>

2009
01:34:54,460 --> 01:35:03,520
<font color="#E5E5E5">to x</font><font color="#CCCCCC"> times 2 plus 30 ok</font><font color="#E5E5E5"> so let's try and</font>

2010
01:35:03,520 --> 01:35:09,160
use<font color="#E5E5E5"> Excel to</font><font color="#CCCCCC"> take that data and try and</font>

2011
01:35:09,160 --> 01:35:13,010
learn those parameters

2012
01:35:13,010 --> 01:35:18,290
<font color="#E5E5E5">okay that's going to be able so let's</font>

2013
01:35:18,290 --> 01:35:21,830
start with the most<font color="#E5E5E5"> basic version</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> SGD</font>

2014
01:35:21,830 --> 01:35:23,630
<font color="#CCCCCC">and so the first thing</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to do</font>

2015
01:35:23,630 --> 01:35:25,490
is I'm<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> run a macro</font><font color="#CCCCCC"> so you can</font>

2016
01:35:25,490 --> 01:35:27,410
see what this<font color="#CCCCCC"> looks like so I'll hit</font><font color="#E5E5E5"> run</font>

2017
01:35:27,410 --> 01:35:31,100
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it does five eight bucks</font><font color="#E5E5E5"> under</font>

2018
01:35:31,100 --> 01:35:32,180
another five eight<font color="#E5E5E5"> bucks</font>

2019
01:35:32,180 --> 01:35:36,830
<font color="#CCCCCC">-</font><font color="#E5E5E5"> another five eight bucks</font><font color="#CCCCCC"> okay so the</font>

2020
01:35:36,830 --> 01:35:38,300
first<font color="#E5E5E5"> one was pretty terrible it's hard</font>

2021
01:35:38,300 --> 01:35:39,770
to see so<font color="#E5E5E5"> I'll just delete</font><font color="#CCCCCC"> that first</font>

2022
01:35:39,770 --> 01:35:45,650
one<font color="#E5E5E5"> get better scaling</font><font color="#CCCCCC"> alright so you</font>

2023
01:35:45,650 --> 01:35:47,450
<font color="#E5E5E5">can see</font><font color="#CCCCCC"> it actually</font><font color="#E5E5E5"> it's pretty</font>

2024
01:35:47,450 --> 01:35:50,210
constantly improving the loss<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

2025
01:35:50,210 --> 01:35:53,060
<font color="#E5E5E5">this is the loss per</font><font color="#CCCCCC"> pot</font><font color="#E5E5E5"> all right so</font>

2026
01:35:53,060 --> 01:35:57,940
how do we do that so let's reset<font color="#CCCCCC"> it so</font>

2027
01:35:57,940 --> 01:36:03,740
<font color="#CCCCCC">here is</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> X's</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> my y's and what I do</font>

2028
01:36:03,740 --> 01:36:06,500
is I start out by<font color="#CCCCCC"> assuming some</font>

2029
01:36:06,500 --> 01:36:10,040
intercept and some slope<font color="#E5E5E5"> right so this</font>

2030
01:36:10,040 --> 01:36:13,820
is my randomly initialized<font color="#E5E5E5"> weights so I</font>

2031
01:36:13,820 --> 01:36:15,950
have<font color="#E5E5E5"> randomly initialized them both to</font>

2032
01:36:15,950 --> 01:36:18,440
<font color="#CCCCCC">one</font><font color="#E5E5E5"> you could pick a different random</font>

2033
01:36:18,440 --> 01:36:21,530
number if you<font color="#CCCCCC"> like but</font><font color="#E5E5E5"> I promise that</font><font color="#CCCCCC"> I</font>

2034
01:36:21,530 --> 01:36:24,670
randomly<font color="#CCCCCC"> picked the number one</font><font color="#E5E5E5"> twice</font>

2035
01:36:24,670 --> 01:36:27,850
there you go

2036
01:36:27,880 --> 01:36:30,320
it was a random<font color="#CCCCCC"> number between</font><font color="#E5E5E5"> one and</font>

2037
01:36:30,320 --> 01:36:34,430
<font color="#E5E5E5">one</font><font color="#CCCCCC"> so here is</font><font color="#E5E5E5"> my intercept and slope</font>

2038
01:36:34,430 --> 01:36:36,050
<font color="#E5E5E5">I'm just going to copy them over here</font>

2039
01:36:36,050 --> 01:36:37,940
right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can literally see</font><font color="#E5E5E5"> this is</font>

2040
01:36:37,940 --> 01:36:41,390
<font color="#CCCCCC">just equal see</font><font color="#E5E5E5"> one here is equals</font><font color="#CCCCCC"> c2</font>

2041
01:36:41,390 --> 01:36:44,360
okay so I'm gonna<font color="#E5E5E5"> start with</font><font color="#CCCCCC"> my very</font>

2042
01:36:44,360 --> 01:36:47,240
first<font color="#CCCCCC"> row of data x equals</font><font color="#E5E5E5"> 14 y equals</font>

2043
01:36:47,240 --> 01:36:51,710
58<font color="#E5E5E5"> and my goal is</font><font color="#CCCCCC"> to come up</font><font color="#E5E5E5"> after I</font>

2044
01:36:51,710 --> 01:36:53,030
look at this<font color="#E5E5E5"> piece</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> data I want to</font>

2045
01:36:53,030 --> 01:36:54,860
come<font color="#E5E5E5"> up with a slightly better intercept</font>

2046
01:36:54,860 --> 01:36:59,450
<font color="#E5E5E5">and a slightly better slope okay so to</font>

2047
01:36:59,450 --> 01:37:02,950
do that I need<font color="#CCCCCC"> to first of</font><font color="#E5E5E5"> all basically</font>

2048
01:37:02,950 --> 01:37:08,030
<font color="#E5E5E5">figure out which</font><font color="#CCCCCC"> direction is is down in</font>

2049
01:37:08,030 --> 01:37:10,460
other words if I make my intercept<font color="#CCCCCC"> a</font>

2050
01:37:10,460 --> 01:37:13,220
little bit higher<font color="#E5E5E5"> or a little bit lower</font>

2051
01:37:13,220 --> 01:37:15,050
would it make my error<font color="#CCCCCC"> a little bit</font>

2052
01:37:15,050 --> 01:37:17,450
better or a little bit worse so let's

2053
01:37:17,450 --> 01:37:20,330
start out by calculating<font color="#CCCCCC"> the error</font><font color="#E5E5E5"> so to</font>

2054
01:37:20,330 --> 01:37:21,650
calculate<font color="#E5E5E5"> the error the first thing we</font>

2055
01:37:21,650 --> 01:37:24,410
need is<font color="#CCCCCC"> a prediction</font><font color="#E5E5E5"> so the prediction</font>

2056
01:37:24,410 --> 01:37:26,539
<font color="#E5E5E5">is equal to the interest</font>

2057
01:37:26,539 --> 01:37:33,019
<font color="#CCCCCC">at plus x times so</font><font color="#E5E5E5"> that is our zero</font>

2058
01:37:33,019 --> 01:37:36,709
hidden layer neural network<font color="#E5E5E5"> okay</font>

2059
01:37:36,709 --> 01:37:40,129
and so here is our<font color="#E5E5E5"> era it's equal to our</font>

2060
01:37:40,129 --> 01:37:43,969
prediction<font color="#E5E5E5"> - our actual</font><font color="#CCCCCC"> squared so we</font>

2061
01:37:43,969 --> 01:37:45,769
could like play<font color="#CCCCCC"> around with this</font><font color="#E5E5E5"> I don't</font>

2062
01:37:45,769 --> 01:37:47,959
want my<font color="#CCCCCC"> error to be 18-49 I'd like it to</font>

2063
01:37:47,959 --> 01:37:49,760
be lower<font color="#CCCCCC"> so what if we set the</font>

2064
01:37:49,760 --> 01:37:54,530
intercepts<font color="#CCCCCC"> to</font><font color="#E5E5E5"> one point one</font><font color="#CCCCCC"> 18-49 goes</font>

2065
01:37:54,530 --> 01:37:57,049
to 1840<font color="#E5E5E5"> okay so a higher intercept would</font>

2066
01:37:57,049 --> 01:38:00,319
<font color="#CCCCCC">be better okay what about the slope to</font>

2067
01:38:00,319 --> 01:38:05,599
increase that it goes from<font color="#CCCCCC"> 1849</font><font color="#E5E5E5"> to 1730</font>

2068
01:38:05,599 --> 01:38:07,399
<font color="#CCCCCC">okay a</font><font color="#E5E5E5"> higher slope would</font><font color="#CCCCCC"> be better</font><font color="#E5E5E5"> as</font>

2069
01:38:07,399 --> 01:38:09,969
well<font color="#E5E5E5"> not surprising because we know</font>

2070
01:38:09,969 --> 01:38:14,659
<font color="#E5E5E5">actually that there should be 30</font><font color="#CCCCCC"> into so</font>

2071
01:38:14,659 --> 01:38:18,129
one way<font color="#E5E5E5"> to figure that out</font>

2072
01:38:18,129 --> 01:38:20,989
you<font color="#CCCCCC"> know encode</font><font color="#E5E5E5"> and this protein is</font><font color="#CCCCCC"> to</font>

2073
01:38:20,989 --> 01:38:23,059
do<font color="#E5E5E5"> literally what I just did</font><font color="#CCCCCC"> is to add a</font>

2074
01:38:23,059 --> 01:38:24,559
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> to the intercept and the</font>

2075
01:38:24,559 --> 01:38:26,419
slope and<font color="#E5E5E5"> see what happens and that's</font>

2076
01:38:26,419 --> 01:38:27,889
called<font color="#E5E5E5"> finding the derivative through</font>

2077
01:38:27,889 --> 01:38:30,769
finite differencing right<font color="#E5E5E5"> and so let's</font>

2078
01:38:30,769 --> 01:38:34,039
go<font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and do that so</font><font color="#CCCCCC"> here is the</font>

2079
01:38:34,039 --> 01:38:40,969
<font color="#CCCCCC">value of my error</font><font color="#E5E5E5"> if I add 0.01 to my</font>

2080
01:38:40,969 --> 01:38:43,879
intercept<font color="#E5E5E5"> all right so it's c4 plus 0.01</font>

2081
01:38:43,879 --> 01:38:46,219
<font color="#E5E5E5">and then I just put</font><font color="#CCCCCC"> that into my Lydian</font>

2082
01:38:46,219 --> 01:38:48,530
function and then I subtract my actual

2083
01:38:48,530 --> 01:38:51,229
all squared<font color="#E5E5E5"> all right and so that causes</font>

2084
01:38:51,229 --> 01:38:53,389
my arrow to go down a<font color="#E5E5E5"> bit</font>

2085
01:38:53,389 --> 01:38:59,089
that's<font color="#E5E5E5"> our increasing my is that</font>

2086
01:38:59,089 --> 01:39:01,549
increasing<font color="#E5E5E5"> will see for increasing the</font>

2087
01:39:01,549 --> 01:39:03,349
intercept a little bit has caused my

2088
01:39:03,349 --> 01:39:05,809
arrow to go down<font color="#E5E5E5"> so what's the</font>

2089
01:39:05,809 --> 01:39:07,399
<font color="#E5E5E5">derivative well the derivative is equal</font>

2090
01:39:07,399 --> 01:39:09,559
<font color="#CCCCCC">to how much the dependent variable</font>

2091
01:39:09,559 --> 01:39:11,749
changed by divided by how much the

2092
01:39:11,749 --> 01:39:13,999
independent variable changed by<font color="#E5E5E5"> all</font>

2093
01:39:13,999 --> 01:39:16,089
right and so there it<font color="#CCCCCC"> is right our</font>

2094
01:39:16,089 --> 01:39:18,469
dependent variable changed by<font color="#CCCCCC"> that -</font>

2095
01:39:18,469 --> 01:39:21,349
<font color="#E5E5E5">that right and our independent variable</font>

2096
01:39:21,349 --> 01:39:24,049
we changed by<font color="#E5E5E5"> 0.01 so there is the</font>

2097
01:39:24,049 --> 01:39:29,089
<font color="#E5E5E5">estimated value of the</font><font color="#CCCCCC"> error dB</font><font color="#E5E5E5"> so</font>

2098
01:39:29,089 --> 01:39:30,530
remember when<font color="#E5E5E5"> people talking about</font>

2099
01:39:30,530 --> 01:39:32,899
<font color="#E5E5E5">derivatives</font><font color="#CCCCCC"> right this is this is all</font>

2100
01:39:32,899 --> 01:39:34,609
they're doing<font color="#CCCCCC"> is they're saying</font><font color="#E5E5E5"> what's</font>

2101
01:39:34,609 --> 01:39:37,209
this value but as we make<font color="#E5E5E5"> this number</font>

2102
01:39:37,209 --> 01:39:39,570
<font color="#E5E5E5">smaller and smaller and smaller</font>

2103
01:39:39,570 --> 01:39:43,530
and smaller as<font color="#CCCCCC"> it</font><font color="#E5E5E5"> as limits to zero</font>

2104
01:39:43,530 --> 01:39:45,900
I'm not mad enough<font color="#E5E5E5"> to think in</font><font color="#CCCCCC"> terms of</font>

2105
01:39:45,900 --> 01:39:47,760
like<font color="#E5E5E5"> derivatives and integrals and stuff</font>

2106
01:39:47,760 --> 01:39:49,410
<font color="#E5E5E5">like that so whatever I think about this</font>

2107
01:39:49,410 --> 01:39:51,540
<font color="#CCCCCC">I always</font><font color="#E5E5E5"> think about you know an actual</font>

2108
01:39:51,540 --> 01:39:54,690
<font color="#E5E5E5">like plus 0.01 and divided</font><font color="#CCCCCC"> by 0.01</font>

2109
01:39:54,690 --> 01:39:56,430
<font color="#E5E5E5">because like I</font><font color="#CCCCCC"> just find that</font><font color="#E5E5E5"> easier</font>

2110
01:39:56,430 --> 01:39:58,380
<font color="#E5E5E5">just like I'd ever think about</font>

2111
01:39:58,380 --> 01:40:00,540
<font color="#CCCCCC">probability density functions I always</font>

2112
01:40:00,540 --> 01:40:02,220
think about actual probabilities of<font color="#E5E5E5"> that</font>

2113
01:40:02,220 --> 01:40:03,240
toss a coin

2114
01:40:03,240 --> 01:40:06,990
something happens three times<font color="#CCCCCC"> so I</font>

2115
01:40:06,990 --> 01:40:08,910
always<font color="#E5E5E5"> think like remember it's it's</font>

2116
01:40:08,910 --> 01:40:10,470
<font color="#CCCCCC">totally fair to do this</font><font color="#E5E5E5"> because a</font>

2117
01:40:10,470 --> 01:40:14,220
<font color="#E5E5E5">computer is discrete it's not continuous</font>

2118
01:40:14,220 --> 01:40:15,960
<font color="#CCCCCC">like a computer</font><font color="#E5E5E5"> can't do anything</font>

2119
01:40:15,960 --> 01:40:18,390
infinitely small<font color="#CCCCCC"> anyway</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so it's</font>

2120
01:40:18,390 --> 01:40:21,090
actually got to be calculating things at

2121
01:40:21,090 --> 01:40:23,460
some level of precision<font color="#E5E5E5"> right and our</font>

2122
01:40:23,460 --> 01:40:26,970
brains<font color="#CCCCCC"> kind of need that</font><font color="#E5E5E5"> as well so this</font>

2123
01:40:26,970 --> 01:40:29,490
<font color="#E5E5E5">is like</font><font color="#CCCCCC"> my version</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> Jeffery Clinton's</font>

2124
01:40:29,490 --> 01:40:31,410
like to<font color="#E5E5E5"> visualize things in more than</font>

2125
01:40:31,410 --> 01:40:33,660
two<font color="#CCCCCC"> dimensions you</font><font color="#E5E5E5"> just like say</font><font color="#CCCCCC"> 12</font>

2126
01:40:33,660 --> 01:40:34,770
dimensions really<font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> well</font>

2127
01:40:34,770 --> 01:40:36,780
<font color="#E5E5E5">visualizing in two dimensions this is my</font>

2128
01:40:36,780 --> 01:40:38,850
<font color="#E5E5E5">equivalent</font><font color="#CCCCCC"> you know to to think about</font>

2129
01:40:38,850 --> 01:40:41,970
<font color="#CCCCCC">derivatives just</font><font color="#E5E5E5"> think about division</font>

2130
01:40:41,970 --> 01:40:44,790
<font color="#E5E5E5">and like although all the mathematicians</font>

2131
01:40:44,790 --> 01:40:47,640
say no you can't do that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually</font>

2132
01:40:47,640 --> 01:40:49,950
can like if you think<font color="#E5E5E5"> of DX</font><font color="#CCCCCC"> dy is being</font>

2133
01:40:49,950 --> 01:40:51,810
literally you know change in<font color="#E5E5E5"> X</font><font color="#CCCCCC"> over</font>

2134
01:40:51,810 --> 01:40:55,290
changing Y like the division actually

2135
01:40:55,290 --> 01:40:58,080
<font color="#CCCCCC">like the</font><font color="#E5E5E5"> calculations do work like all</font>

2136
01:40:58,080 --> 01:41:01,710
the time so<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so let's do the</font><font color="#E5E5E5"> same</font>

2137
01:41:01,710 --> 01:41:05,250
<font color="#CCCCCC">thing now with changing my slope by a</font>

2138
01:41:05,250 --> 01:41:07,680
little bit and so here's the same<font color="#E5E5E5"> thing</font>

2139
01:41:07,680 --> 01:41:10,080
<font color="#CCCCCC">right</font><font color="#E5E5E5"> and so you can see both of these</font>

2140
01:41:10,080 --> 01:41:13,620
are negative<font color="#CCCCCC"> okay so that's</font><font color="#E5E5E5"> saying if I</font>

2141
01:41:13,620 --> 01:41:16,650
<font color="#E5E5E5">increase my intercept my loss goes down</font>

2142
01:41:16,650 --> 01:41:20,010
if I<font color="#E5E5E5"> increase my slope my loss goes down</font>

2143
01:41:20,010 --> 01:41:24,260
right and so my derivative of my<font color="#E5E5E5"> error</font>

2144
01:41:24,260 --> 01:41:29,010
with<font color="#E5E5E5"> respect to my slope is is actually</font>

2145
01:41:29,010 --> 01:41:31,380
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> high and that's not surprising</font>

2146
01:41:31,380 --> 01:41:36,240
because it's<font color="#E5E5E5"> actually you</font><font color="#CCCCCC"> know the</font>

2147
01:41:36,240 --> 01:41:37,920
constant term is<font color="#E5E5E5"> just being added where</font>

2148
01:41:37,920 --> 01:41:42,020
<font color="#E5E5E5">else as slope is being multiplied</font><font color="#CCCCCC"> by 40</font>

2149
01:41:42,890 --> 01:41:48,600
<font color="#CCCCCC">okay now find that differencing is all</font>

2150
01:41:48,600 --> 01:41:49,950
<font color="#CCCCCC">very</font><font color="#E5E5E5"> well and good but there's a big</font>

2151
01:41:49,950 --> 01:41:52,040
problem with<font color="#CCCCCC"> finite difference seeing in</font>

2152
01:41:52,040 --> 01:41:53,170
<font color="#CCCCCC">Hyden</font>

2153
01:41:53,170 --> 01:41:56,050
<font color="#CCCCCC">no spaces</font><font color="#E5E5E5"> and the problem is this right</font>

2154
01:41:56,050 --> 01:42:00,219
<font color="#E5E5E5">and this is like you don't need to learn</font>

2155
01:42:00,219 --> 01:42:02,770
how<font color="#CCCCCC"> to</font><font color="#E5E5E5"> calculate derivatives or</font>

2156
01:42:02,770 --> 01:42:04,449
integrals but<font color="#E5E5E5"> you need to learn</font><font color="#CCCCCC"> how to</font>

2157
01:42:04,449 --> 01:42:06,969
think<font color="#E5E5E5"> about them spatially right and so</font>

2158
01:42:06,969 --> 01:42:12,160
remember<font color="#E5E5E5"> we have some vector very high</font>

2159
01:42:12,160 --> 01:42:13,630
dimensional<font color="#E5E5E5"> vector it's got like a</font>

2160
01:42:13,630 --> 01:42:18,070
<font color="#E5E5E5">million items in it right and it's going</font>

2161
01:42:18,070 --> 01:42:22,090
<font color="#E5E5E5">through some weight matrix right of size</font>

2162
01:42:22,090 --> 01:42:24,219
like 1 million<font color="#E5E5E5"> by size a hundred</font>

2163
01:42:24,219 --> 01:42:26,890
thousand or<font color="#E5E5E5"> whatever and it's</font><font color="#CCCCCC"> spitting</font>

2164
01:42:26,890 --> 01:42:28,719
out something<font color="#CCCCCC"> of size</font><font color="#E5E5E5"> I hundred thousand</font>

2165
01:42:28,719 --> 01:42:33,580
and so you need to<font color="#E5E5E5"> realize like there</font>

2166
01:42:33,580 --> 01:42:36,640
isn't<font color="#CCCCCC"> like a gradient</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> but it's like</font>

2167
01:42:36,640 --> 01:42:38,380
<font color="#E5E5E5">for every one of these things in this</font>

2168
01:42:38,380 --> 01:42:43,000
vector right<font color="#E5E5E5"> there's a gradient</font><font color="#CCCCCC"> in every</font>

2169
01:42:43,000 --> 01:42:45,850
direction<font color="#CCCCCC"> you know in</font><font color="#E5E5E5"> every part of the</font>

2170
01:42:45,850 --> 01:42:50,679
output<font color="#E5E5E5"> right so it actually has not a</font>

2171
01:42:50,679 --> 01:42:52,719
single gradient number not even a

2172
01:42:52,719 --> 01:42:57,179
<font color="#CCCCCC">gradient vector but a gradient</font><font color="#E5E5E5"> matrix</font>

2173
01:42:57,179 --> 01:43:03,100
right<font color="#CCCCCC"> and so this this is</font><font color="#E5E5E5"> a lot to</font>

2174
01:43:03,100 --> 01:43:04,989
calculate right I would literally<font color="#E5E5E5"> have</font>

2175
01:43:04,989 --> 01:43:07,989
to<font color="#E5E5E5"> like add a little bit to</font><font color="#CCCCCC"> this and see</font>

2176
01:43:07,989 --> 01:43:09,790
what<font color="#E5E5E5"> happens to all of these add a</font>

2177
01:43:09,790 --> 01:43:11,320
little<font color="#E5E5E5"> bit to this see what happens to</font>

2178
01:43:11,320 --> 01:43:14,739
all of<font color="#CCCCCC"> these right to fill in one column</font>

2179
01:43:14,739 --> 01:43:18,480
of this at a time<font color="#E5E5E5"> so that's going to be</font>

2180
01:43:18,480 --> 01:43:21,400
horrendously slow like<font color="#E5E5E5"> that so that's</font>

2181
01:43:21,400 --> 01:43:23,020
<font color="#E5E5E5">why</font><font color="#CCCCCC"> like if you're ever thinking like</font>

2182
01:43:23,020 --> 01:43:24,250
how we can just do this with finite

2183
01:43:24,250 --> 01:43:26,860
differencing just remember like<font color="#E5E5E5"> okay we</font>

2184
01:43:26,860 --> 01:43:28,480
we're dealing in the with these very

2185
01:43:28,480 --> 01:43:32,530
high dimensional<font color="#E5E5E5"> vectors where you know</font>

2186
01:43:32,530 --> 01:43:37,870
this this kind<font color="#CCCCCC"> of matrix calculus</font><font color="#E5E5E5"> like</font>

2187
01:43:37,870 --> 01:43:40,330
all the concepts are identical<font color="#CCCCCC"> but when</font>

2188
01:43:40,330 --> 01:43:42,880
you actually draw it out like<font color="#CCCCCC"> this you</font>

2189
01:43:42,880 --> 01:43:44,650
suddenly realize like<font color="#CCCCCC"> okay for each</font>

2190
01:43:44,650 --> 01:43:47,199
<font color="#E5E5E5">number I could change there's a whole</font>

2191
01:43:47,199 --> 01:43:49,060
<font color="#E5E5E5">bunch of</font><font color="#CCCCCC"> numbers that impacts and I have</font>

2192
01:43:49,060 --> 01:43:50,739
this whole<font color="#E5E5E5"> matrix of things to compute</font>

2193
01:43:50,739 --> 01:43:54,310
right<font color="#E5E5E5"> and so your gradient calculations</font>

2194
01:43:54,310 --> 01:43:56,739
can take up<font color="#E5E5E5"> a lot of memory and they can</font>

2195
01:43:56,739 --> 01:43:59,260
take<font color="#E5E5E5"> up a lot of time so we want to find</font>

2196
01:43:59,260 --> 01:44:05,050
<font color="#E5E5E5">some way to do this more quickly</font><font color="#CCCCCC"> okay</font>

2197
01:44:05,050 --> 01:44:07,000
and it's definitely<font color="#CCCCCC"> well worth like</font>

2198
01:44:07,000 --> 01:44:10,180
spending time kind of studying<font color="#E5E5E5"> these</font>

2199
01:44:10,180 --> 01:44:14,200
ideas of<font color="#E5E5E5"> like you know the idea</font><font color="#CCCCCC"> of like</font>

2200
01:44:14,200 --> 01:44:16,570
<font color="#E5E5E5">the gradients like look up things like</font>

2201
01:44:16,570 --> 01:44:24,640
<font color="#E5E5E5">Jacobian</font><font color="#CCCCCC"> and Hessian</font><font color="#E5E5E5"> they're the things</font>

2202
01:44:24,640 --> 01:44:27,180
<font color="#CCCCCC">that you want to</font><font color="#E5E5E5"> search</font><font color="#CCCCCC"> for just that</font>

2203
01:44:27,180 --> 01:44:29,020
unfortunately<font color="#CCCCCC"> people normally write</font>

2204
01:44:29,020 --> 01:44:32,560
about them with<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> lots of great</font>

2205
01:44:32,560 --> 01:44:35,860
letters and<font color="#CCCCCC"> bla bla bla</font><font color="#E5E5E5"> right but there</font>

2206
01:44:35,860 --> 01:44:39,760
are some there<font color="#E5E5E5"> are some nice you know</font>

2207
01:44:39,760 --> 01:44:41,710
intuitive explanations out there and

2208
01:44:41,710 --> 01:44:43,060
hopefully<font color="#E5E5E5"> you can share them on the</font>

2209
01:44:43,060 --> 01:44:44,560
forum<font color="#E5E5E5"> if you find them because this is</font>

2210
01:44:44,560 --> 01:44:47,830
stuff<font color="#CCCCCC"> you</font><font color="#E5E5E5"> really need to really need to</font>

2211
01:44:47,830 --> 01:44:51,960
understand<font color="#E5E5E5"> in here you know because</font>

2212
01:44:51,960 --> 01:44:54,490
<font color="#E5E5E5">you're trying to</font><font color="#CCCCCC"> train something</font><font color="#E5E5E5"> and</font>

2213
01:44:54,490 --> 01:44:56,380
it's not<font color="#CCCCCC"> working properly</font><font color="#E5E5E5"> and like later</font>

2214
01:44:56,380 --> 01:44:58,150
<font color="#E5E5E5">on we'll learn</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> to like look inside</font>

2215
01:44:58,150 --> 01:45:00,640
<font color="#E5E5E5">hi torch to like actually get the values</font>

2216
01:45:00,640 --> 01:45:02,050
<font color="#CCCCCC">of the gradients and</font><font color="#E5E5E5"> you need to know</font>

2217
01:45:02,050 --> 01:45:04,240
like<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> well how</font><font color="#CCCCCC"> would I like</font><font color="#E5E5E5"> what the</font>

2218
01:45:04,240 --> 01:45:06,430
gradients you<font color="#CCCCCC"> know what would I consider</font>

2219
01:45:06,430 --> 01:45:08,590
unusual like you know these<font color="#E5E5E5"> are the</font>

2220
01:45:08,590 --> 01:45:10,840
<font color="#CCCCCC">things that turn you into a really</font>

2221
01:45:10,840 --> 01:45:13,480
<font color="#E5E5E5">awesome</font><font color="#CCCCCC"> deep learning practitioner is</font>

2222
01:45:13,480 --> 01:45:15,580
when you can like debug your problems by

2223
01:45:15,580 --> 01:45:17,380
like grabbing<font color="#CCCCCC"> the gradients and doing</font>

2224
01:45:17,380 --> 01:45:19,720
histograms of them and like<font color="#E5E5E5"> knowing you</font>

2225
01:45:19,720 --> 01:45:21,400
know that you could like plot that all

2226
01:45:21,400 --> 01:45:23,530
each layer my average gradients getting

2227
01:45:23,530 --> 01:45:28,270
worse or you<font color="#CCCCCC"> know bigger okay</font><font color="#E5E5E5"> so the</font>

2228
01:45:28,270 --> 01:45:30,640
trick to<font color="#CCCCCC"> doing this more</font><font color="#E5E5E5"> quickly is to</font>

2229
01:45:30,640 --> 01:45:34,270
do it analytically<font color="#CCCCCC"> rather than through</font>

2230
01:45:34,270 --> 01:45:37,660
finite differencing<font color="#E5E5E5"> and so analytically</font>

2231
01:45:37,660 --> 01:45:40,150
is<font color="#E5E5E5"> basically there is a list you</font>

2232
01:45:40,150 --> 01:45:41,500
probably<font color="#CCCCCC"> all</font><font color="#E5E5E5"> learned it at high school</font>

2233
01:45:41,500 --> 01:45:42,970
there is a literally a list of<font color="#E5E5E5"> rules</font>

2234
01:45:42,970 --> 01:45:46,600
<font color="#CCCCCC">that for every mathematical function</font>

2235
01:45:46,600 --> 01:45:48,790
there's a like this<font color="#E5E5E5"> is the derivative of</font>

2236
01:45:48,790 --> 01:45:53,050
that<font color="#CCCCCC"> function</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> probably remember a</font>

2237
01:45:53,050 --> 01:46:00,190
few<font color="#E5E5E5"> of them for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> x squared</font><font color="#CCCCCC"> - it's</font>

2238
01:46:00,190 --> 01:46:02,920
<font color="#CCCCCC">alright and</font><font color="#E5E5E5"> so we actually have here an</font>

2239
01:46:02,920 --> 01:46:07,300
x<font color="#CCCCCC"> squared so here is</font><font color="#E5E5E5"> our two</font><font color="#CCCCCC"> x</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now</font>

2240
01:46:07,300 --> 01:46:10,720
the one that I actually want you<font color="#CCCCCC"> to know</font>

2241
01:46:10,720 --> 01:46:15,250
is not any<font color="#CCCCCC"> of the individual rules</font><font color="#E5E5E5"> but I</font>

2242
01:46:15,250 --> 01:46:17,550
want you<font color="#E5E5E5"> to know the chain rule right</font>

2243
01:46:17,550 --> 01:46:19,050
<font color="#CCCCCC">which</font>

2244
01:46:19,050 --> 01:46:22,450
you've got some function<font color="#E5E5E5"> of some</font>

2245
01:46:22,450 --> 01:46:25,630
function of<font color="#CCCCCC"> something why</font><font color="#E5E5E5"> is this</font>

2246
01:46:25,630 --> 01:46:26,380
important

2247
01:46:26,380 --> 01:46:28,600
I don't know<font color="#E5E5E5"> that's a linear layer</font>

2248
01:46:28,600 --> 01:46:33,670
<font color="#E5E5E5">that's a rally right and then we can</font>

2249
01:46:33,670 --> 01:46:37,920
<font color="#E5E5E5">kind of keep going</font><font color="#CCCCCC"> backwards</font><font color="#E5E5E5"> map etc</font>

2250
01:46:37,920 --> 01:46:42,160
<font color="#CCCCCC">right</font><font color="#E5E5E5"> a neural net is just a function of</font>

2251
01:46:42,160 --> 01:46:43,180
a function<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> function of a function</font>

2252
01:46:43,180 --> 01:46:45,100
where the innermost is<font color="#E5E5E5"> you know it's</font>

2253
01:46:45,100 --> 01:46:49,600
basically<font color="#E5E5E5"> linear rally your linear rally</font>

2254
01:46:49,600 --> 01:47:00,940
<font color="#CCCCCC">your</font><font color="#E5E5E5"> dot linear sigmoid or</font><font color="#CCCCCC"> soft mass</font><font color="#E5E5E5"> all</font>

2255
01:47:00,940 --> 01:47:02,170
right and so it's a function<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a</font>

2256
01:47:02,170 --> 01:47:03,370
function of a function and<font color="#E5E5E5"> so therefore</font>

2257
01:47:03,370 --> 01:47:06,940
<font color="#E5E5E5">to calculate the</font><font color="#CCCCCC"> derivative of the</font>

2258
01:47:06,940 --> 01:47:10,960
weights in<font color="#CCCCCC"> your model the loss of your</font>

2259
01:47:10,960 --> 01:47:12,100
model with<font color="#CCCCCC"> respect to the weights of</font>

2260
01:47:12,100 --> 01:47:13,330
your model<font color="#E5E5E5"> you're going to need to use</font>

2261
01:47:13,330 --> 01:47:15,910
<font color="#CCCCCC">the chain rule</font><font color="#E5E5E5"> and specifically whatever</font>

2262
01:47:15,910 --> 01:47:17,860
layer it is that you're<font color="#E5E5E5"> up to like I</font>

2263
01:47:17,860 --> 01:47:19,330
want to calculate the<font color="#E5E5E5"> derivative here</font>

2264
01:47:19,330 --> 01:47:23,020
<font color="#E5E5E5">and got a need to</font><font color="#CCCCCC"> use all of</font><font color="#E5E5E5"> these all</font>

2265
01:47:23,020 --> 01:47:24,280
of<font color="#E5E5E5"> these ones because that's all that's</font>

2266
01:47:24,280 --> 01:47:25,690
<font color="#E5E5E5">that's the function that's being applied</font>

2267
01:47:25,690 --> 01:47:28,150
<font color="#CCCCCC">right and that's why they call this</font><font color="#E5E5E5"> back</font>

2268
01:47:28,150 --> 01:47:30,130
propagation<font color="#E5E5E5"> because the value of</font><font color="#CCCCCC"> the</font>

2269
01:47:30,130 --> 01:47:36,310
derivative of that is equal<font color="#CCCCCC"> to that</font>

2270
01:47:36,310 --> 01:47:39,160
derivative<font color="#E5E5E5"> now basically</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do it</font>

2271
01:47:39,160 --> 01:47:43,810
<font color="#E5E5E5">like this you</font><font color="#CCCCCC"> can say let's call you</font><font color="#E5E5E5"> is</font>

2272
01:47:43,810 --> 01:47:44,710
this right

2273
01:47:44,710 --> 01:47:47,020
let's call that you all right then it's

2274
01:47:47,020 --> 01:47:51,840
simply equal to<font color="#CCCCCC"> the derivative of that</font>

2275
01:47:51,840 --> 01:47:56,440
<font color="#E5E5E5">times derivative of that</font><font color="#CCCCCC"> right</font>

2276
01:47:56,440 --> 01:47:59,170
you just<font color="#CCCCCC"> multiply them together</font><font color="#E5E5E5"> and so</font>

2277
01:47:59,170 --> 01:48:00,880
that's what back propagation is like

2278
01:48:00,880 --> 01:48:03,910
it's<font color="#E5E5E5"> not that back propagation is a new</font>

2279
01:48:03,910 --> 01:48:06,720
thing for<font color="#CCCCCC"> you to learn it's not a new</font>

2280
01:48:06,720 --> 01:48:10,240
<font color="#E5E5E5">algorithm it is literally take the</font>

2281
01:48:10,240 --> 01:48:12,660
derivative of every one of your layers

2282
01:48:12,660 --> 01:48:16,270
and multiply them<font color="#E5E5E5"> all together</font><font color="#CCCCCC"> so like</font>

2283
01:48:16,270 --> 01:48:18,910
it<font color="#E5E5E5"> doesn't deserve a new name right</font>

2284
01:48:18,910 --> 01:48:23,050
<font color="#E5E5E5">apply the chain rule to</font><font color="#CCCCCC"> my layers</font><font color="#E5E5E5"> does</font>

2285
01:48:23,050 --> 01:48:24,970
not<font color="#E5E5E5"> deserve a new name but it gets one</font>

2286
01:48:24,970 --> 01:48:27,790
because us neural networks folk<font color="#E5E5E5"> really</font>

2287
01:48:27,790 --> 01:48:29,920
need to seem as clever as possible it's

2288
01:48:29,920 --> 01:48:31,750
really important that<font color="#E5E5E5"> everybody else</font>

2289
01:48:31,750 --> 01:48:32,320
thinks

2290
01:48:32,320 --> 01:48:34,929
we are way<font color="#E5E5E5"> outside</font><font color="#CCCCCC"> of their capabilities</font>

2291
01:48:34,929 --> 01:48:37,719
<font color="#E5E5E5">so the fact that you're here means that</font>

2292
01:48:37,719 --> 01:48:39,429
<font color="#E5E5E5">we've failed because</font><font color="#CCCCCC"> you guys somehow</font>

2293
01:48:39,429 --> 01:48:41,980
<font color="#E5E5E5">think that you're capable right so</font>

2294
01:48:41,980 --> 01:48:43,540
remember<font color="#CCCCCC"> it's really important when you</font>

2295
01:48:43,540 --> 01:48:45,280
talk to other people<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> say</font>

2296
01:48:45,280 --> 01:48:48,010
<font color="#CCCCCC">backpropagation</font><font color="#E5E5E5"> and rectified linear</font>

2297
01:48:48,010 --> 01:48:51,040
unit<font color="#E5E5E5"> rather than like multiply the</font>

2298
01:48:51,040 --> 01:48:54,400
layers gradients or replace negatives

2299
01:48:54,400 --> 01:48:57,520
with<font color="#E5E5E5"> zeros okay</font><font color="#CCCCCC"> so so here we go</font>

2300
01:48:57,520 --> 01:49:00,389
so<font color="#E5E5E5"> here is so I've just</font><font color="#CCCCCC"> gone ahead</font><font color="#E5E5E5"> and</font>

2301
01:49:00,389 --> 01:49:03,159
<font color="#E5E5E5">grabbed the derivative unfortunately</font>

2302
01:49:03,159 --> 01:49:05,079
there is no automatic<font color="#E5E5E5"> differentiation in</font>

2303
01:49:05,079 --> 01:49:07,840
<font color="#E5E5E5">Excel yet</font><font color="#CCCCCC"> so I did the alternative which</font>

2304
01:49:07,840 --> 01:49:09,610
<font color="#CCCCCC">is to paste the formula</font><font color="#E5E5E5"> into Wolfram</font>

2305
01:49:09,610 --> 01:49:12,190
<font color="#E5E5E5">Alpha</font><font color="#CCCCCC"> and got</font><font color="#E5E5E5"> back the derivative so</font>

2306
01:49:12,190 --> 01:49:14,020
<font color="#E5E5E5">there's the first derivative and there's</font>

2307
01:49:14,020 --> 01:49:16,570
the second derivative analytically<font color="#E5E5E5"> we</font>

2308
01:49:16,570 --> 01:49:19,510
only have one layer in<font color="#E5E5E5"> this infinite</font>

2309
01:49:19,510 --> 01:49:21,909
<font color="#CCCCCC">finally small neural</font><font color="#E5E5E5"> network so we don't</font>

2310
01:49:21,909 --> 01:49:23,860
have<font color="#E5E5E5"> to worry about the chain rule and</font>

2311
01:49:23,860 --> 01:49:25,480
we should see that<font color="#CCCCCC"> this analytical</font>

2312
01:49:25,480 --> 01:49:27,099
derivative is pretty close<font color="#CCCCCC"> to our</font>

2313
01:49:27,099 --> 01:49:28,599
estimated derivative<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the find out</font>

2314
01:49:28,599 --> 01:49:31,750
differencing<font color="#E5E5E5"> and indeed it is right and</font>

2315
01:49:31,750 --> 01:49:33,880
we should<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that these</font><font color="#E5E5E5"> ones are</font><font color="#CCCCCC"> pretty</font>

2316
01:49:33,880 --> 01:49:35,650
similar<font color="#E5E5E5"> as well and indeed they are</font>

2317
01:49:35,650 --> 01:49:38,790
<font color="#E5E5E5">right and if you're you know back</font><font color="#CCCCCC"> when I</font>

2318
01:49:38,790 --> 01:49:41,949
implemented<font color="#E5E5E5"> my own neural Nets</font><font color="#CCCCCC"> 20 years</font>

2319
01:49:41,949 --> 01:49:45,130
ago<font color="#CCCCCC"> I you</font><font color="#E5E5E5"> know had to actually</font><font color="#CCCCCC"> calculate</font>

2320
01:49:45,130 --> 01:49:46,960
the derivatives and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I always would</font>

2321
01:49:46,960 --> 01:49:48,550
write like had something that would

2322
01:49:48,550 --> 01:49:50,290
check the derivatives<font color="#CCCCCC"> using finite</font>

2323
01:49:50,290 --> 01:49:52,090
difference in and so for<font color="#CCCCCC"> those poor</font>

2324
01:49:52,090 --> 01:49:53,469
<font color="#CCCCCC">people that they'd have</font><font color="#E5E5E5"> to write these</font>

2325
01:49:53,469 --> 01:49:55,420
<font color="#CCCCCC">things by hand you'll still see</font><font color="#E5E5E5"> that</font>

2326
01:49:55,420 --> 01:49:57,610
they have like a finite differencing

2327
01:49:57,610 --> 01:49:59,710
<font color="#CCCCCC">checkout</font><font color="#E5E5E5"> so if you ever do</font><font color="#CCCCCC"> have to</font>

2328
01:49:59,710 --> 01:50:02,650
implement<font color="#E5E5E5"> a</font><font color="#CCCCCC"> derivative by hand</font><font color="#E5E5E5"> please</font>

2329
01:50:02,650 --> 01:50:05,469
make sure that<font color="#E5E5E5"> you have a finite</font>

2330
01:50:05,469 --> 01:50:07,150
differencing checker<font color="#CCCCCC"> so that you can</font>

2331
01:50:07,150 --> 01:50:10,719
test it<font color="#CCCCCC"> alright so there's</font><font color="#E5E5E5"> no</font>

2332
01:50:10,719 --> 01:50:13,480
derivatives<font color="#CCCCCC"> so we know that if we</font>

2333
01:50:13,480 --> 01:50:17,139
increase B then we're going<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> a</font>

2334
01:50:17,139 --> 01:50:19,869
slightly better loss<font color="#E5E5E5"> so let's increase B</font>

2335
01:50:19,869 --> 01:50:22,239
by a bit how<font color="#E5E5E5"> much should we increase it</font>

2336
01:50:22,239 --> 01:50:24,670
by well<font color="#E5E5E5"> we'll increase it by some more</font>

2337
01:50:24,670 --> 01:50:26,260
for this so the<font color="#CCCCCC"> motor-pod we're going to</font>

2338
01:50:26,260 --> 01:50:28,060
choose<font color="#E5E5E5"> is called a learning rate and so</font>

2339
01:50:28,060 --> 01:50:29,770
here's our learning rate<font color="#E5E5E5"> so here's</font><font color="#CCCCCC"> one</font>

2340
01:50:29,770 --> 01:50:37,300
<font color="#CCCCCC">enoch 4 ok</font><font color="#E5E5E5"> so our new value is equal to</font>

2341
01:50:37,300 --> 01:50:39,570
whatever it was<font color="#E5E5E5"> before</font>

2342
01:50:39,570 --> 01:50:45,219
- our derivative times<font color="#E5E5E5"> our learning rate</font>

2343
01:50:45,219 --> 01:50:47,739
<font color="#E5E5E5">okay so we've gone from</font><font color="#CCCCCC"> one to one point</font>

2344
01:50:47,739 --> 01:50:52,239
or one and then a we've done the<font color="#E5E5E5"> same</font>

2345
01:50:52,239 --> 01:50:56,349
thing<font color="#E5E5E5"> so it's gone</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> one to one point</font>

2346
01:50:56,349 --> 01:51:00,610
one two so<font color="#E5E5E5"> this is a special kind</font><font color="#CCCCCC"> of</font>

2347
01:51:00,610 --> 01:51:02,530
<font color="#E5E5E5">mini batch it's a mini batch of size one</font>

2348
01:51:02,530 --> 01:51:04,929
okay<font color="#E5E5E5"> so we call this online</font><font color="#CCCCCC"> grading does</font>

2349
01:51:04,929 --> 01:51:09,099
it just means mini batch of size one<font color="#E5E5E5"> so</font>

2350
01:51:09,099 --> 01:51:11,050
then we<font color="#E5E5E5"> can go</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> one next is</font>

2351
01:51:11,050 --> 01:51:11,800
86

2352
01:51:11,800 --> 01:51:15,760
why is 202 right<font color="#E5E5E5"> this is my intercept</font>

2353
01:51:15,760 --> 01:51:17,590
and slope<font color="#E5E5E5"> copied across from the last</font>

2354
01:51:17,590 --> 01:51:22,329
row<font color="#E5E5E5"> okay so here's my new</font><font color="#CCCCCC"> wire</font>

2355
01:51:22,329 --> 01:51:26,170
prediction here's my new era<font color="#E5E5E5"> here are my</font>

2356
01:51:26,170 --> 01:51:29,940
derivatives<font color="#CCCCCC"> here are my new a and B okay</font>

2357
01:51:29,940 --> 01:51:32,559
<font color="#CCCCCC">so we keep doing</font><font color="#E5E5E5"> that for every mini</font>

2358
01:51:32,559 --> 01:51:37,900
batch<font color="#CCCCCC"> of one until eventually we run out</font>

2359
01:51:37,900 --> 01:51:41,139
at the end<font color="#E5E5E5"> of the new pocket okay and so</font>

2360
01:51:41,139 --> 01:51:43,329
then<font color="#E5E5E5"> at the end</font><font color="#CCCCCC"> of an epoch</font><font color="#E5E5E5"> we would</font>

2361
01:51:43,329 --> 01:51:48,849
grab our intercept and slope and<font color="#E5E5E5"> paste</font>

2362
01:51:48,849 --> 01:51:53,579
them back over<font color="#E5E5E5"> here as our new values</font>

2363
01:51:53,579 --> 01:51:56,440
there we are<font color="#CCCCCC"> and we can now continue</font>

2364
01:51:56,440 --> 01:51:59,050
again<font color="#E5E5E5"> all right so we're now starting</font>

2365
01:51:59,050 --> 01:52:02,079
with pops today's either<font color="#CCCCCC"> in the wrong</font>

2366
01:52:02,079 --> 01:52:06,070
spot<font color="#E5E5E5"> it should be</font><font color="#CCCCCC"> pasted</font><font color="#E5E5E5"> special</font>

2367
01:52:06,070 --> 01:52:10,420
transpose values<font color="#E5E5E5"> all right okay</font>

2368
01:52:10,420 --> 01:52:12,460
so there's a new intercept<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> any</font>

2369
01:52:12,460 --> 01:52:13,809
slope possibly<font color="#E5E5E5"> I got that the wrong</font><font color="#CCCCCC"> way</font>

2370
01:52:13,809 --> 01:52:15,670
<font color="#CCCCCC">around but anyway you get the idea</font><font color="#E5E5E5"> and</font>

2371
01:52:15,670 --> 01:52:19,570
<font color="#E5E5E5">then we continue okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I recorded the</font>

2372
01:52:19,570 --> 01:52:22,989
world's tiniest macro which<font color="#E5E5E5"> literally</font>

2373
01:52:22,989 --> 01:52:29,800
just copies the<font color="#E5E5E5"> final slope and puts it</font>

2374
01:52:29,800 --> 01:52:32,070
into<font color="#E5E5E5"> the new slope copies the final</font>

2375
01:52:32,070 --> 01:52:36,909
intercept put the new intercept<font color="#E5E5E5"> and does</font>

2376
01:52:36,909 --> 01:52:40,989
<font color="#E5E5E5">that five times and after each time it</font>

2377
01:52:40,989 --> 01:52:42,489
grabs the root mean squared error and

2378
01:52:42,489 --> 01:52:45,550
pastes it into the<font color="#E5E5E5"> next spare area and</font>

2379
01:52:45,550 --> 01:52:48,400
that is attached<font color="#E5E5E5"> to this Run button and</font>

2380
01:52:48,400 --> 01:52:49,690
so that's going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> ahead and do</font><font color="#E5E5E5"> that</font>

2381
01:52:49,690 --> 01:52:53,769
<font color="#E5E5E5">five times okay so that's stochastic</font>

2382
01:52:53,769 --> 01:52:57,849
gradient descent<font color="#CCCCCC"> and if</font><font color="#E5E5E5"> so so to turn</font>

2383
01:52:57,849 --> 01:52:58,990
this into a CNN

2384
01:52:58,990 --> 01:53:02,560
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right you would just</font><font color="#CCCCCC"> replace this</font>

2385
01:53:02,560 --> 01:53:05,170
error function<font color="#E5E5E5"> right and therefore this</font>

2386
01:53:05,170 --> 01:53:08,490
prediction<font color="#E5E5E5"> with the output of that</font>

2387
01:53:08,490 --> 01:53:12,220
convolutional example spreadsheet<font color="#CCCCCC"> okay</font>

2388
01:53:12,220 --> 01:53:15,340
and that then would<font color="#E5E5E5"> be in CNN being</font>

2389
01:53:15,340 --> 01:53:19,750
trained with with SGD<font color="#E5E5E5"> okay</font>

2390
01:53:19,750 --> 01:53:24,370
now the problem is<font color="#E5E5E5"> that you'll see when</font>

2391
01:53:24,370 --> 01:53:30,610
I run this it's kind of<font color="#E5E5E5"> going very</font>

2392
01:53:30,610 --> 01:53:32,740
slowly<font color="#E5E5E5"> right we know that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> need to get</font>

2393
01:53:32,740 --> 01:53:35,410
to a slope of<font color="#CCCCCC"> two and an intercept of</font>

2394
01:53:35,410 --> 01:53:37,570
<font color="#CCCCCC">thirty</font><font color="#E5E5E5"> and you can kind of see it this</font>

2395
01:53:37,570 --> 01:53:40,180
rate it's going<font color="#CCCCCC"> to take a very</font><font color="#E5E5E5"> long</font><font color="#CCCCCC"> time</font>

2396
01:53:40,180 --> 01:53:49,210
<font color="#CCCCCC">right and specifically it's like it</font>

2397
01:53:49,210 --> 01:53:51,850
keeps<font color="#CCCCCC"> going the same direction</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's</font>

2398
01:53:51,850 --> 01:53:53,770
like come<font color="#E5E5E5"> on take a hint</font><font color="#CCCCCC"> that's a good</font>

2399
01:53:53,770 --> 01:53:56,830
<font color="#CCCCCC">direction so they come on take a hint</font>

2400
01:53:56,830 --> 01:53:58,240
<font color="#E5E5E5">that's a good direction please keep</font>

2401
01:53:58,240 --> 01:54:01,260
<font color="#CCCCCC">doing that but more is called</font><font color="#E5E5E5"> momentum</font>

2402
01:54:01,260 --> 01:54:05,500
<font color="#E5E5E5">right so on our next spreadsheet we're</font>

2403
01:54:05,500 --> 01:54:11,350
going to implement momentum okay so what

2404
01:54:11,350 --> 01:54:14,890
momentum does is the same thing and what

2405
01:54:14,890 --> 01:54:16,510
to simplify<font color="#CCCCCC"> this spreadsheet I've</font>

2406
01:54:16,510 --> 01:54:19,720
<font color="#E5E5E5">removed the finite difference cause okay</font>

2407
01:54:19,720 --> 01:54:21,430
<font color="#E5E5E5">other than that this is</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> the same</font>

2408
01:54:21,430 --> 01:54:22,900
<font color="#CCCCCC">right so it's true what</font><font color="#E5E5E5"> our X is our</font>

2409
01:54:22,900 --> 01:54:28,810
<font color="#CCCCCC">wise A's and B's</font><font color="#E5E5E5"> predictions our error</font>

2410
01:54:28,810 --> 01:54:32,640
is now over here okay<font color="#CCCCCC"> and here's our</font>

2411
01:54:32,640 --> 01:54:39,340
derivatives<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> our new calculation for</font>

2412
01:54:39,340 --> 01:54:45,730
this particular row our new calculation

2413
01:54:45,730 --> 01:54:49,660
here for our new a term just<font color="#E5E5E5"> like</font><font color="#CCCCCC"> before</font>

2414
01:54:49,660 --> 01:54:56,640
is<font color="#CCCCCC"> is equal</font><font color="#E5E5E5"> to whatever a was before</font><font color="#CCCCCC"> -</font>

2415
01:54:56,640 --> 01:54:59,110
okay now<font color="#E5E5E5"> this</font><font color="#CCCCCC"> time I'm not taking the</font>

2416
01:54:59,110 --> 01:55:01,560
derivative but I'm<font color="#E5E5E5"> - income other number</font>

2417
01:55:01,560 --> 01:55:03,850
times the loan rate so what's this other

2418
01:55:03,850 --> 01:55:08,470
<font color="#E5E5E5">number okay so this other number is</font>

2419
01:55:08,470 --> 01:55:13,020
equal<font color="#CCCCCC"> to the derivative</font>

2420
01:55:13,020 --> 01:55:22,920
times<font color="#E5E5E5"> what's this</font><font color="#CCCCCC"> k 1.02</font><font color="#E5E5E5"> plus 0.98 times</font>

2421
01:55:22,920 --> 01:55:26,800
<font color="#E5E5E5">the thing just above it</font><font color="#CCCCCC"> okay so this is</font>

2422
01:55:26,800 --> 01:55:31,240
a linear<font color="#E5E5E5"> interpolation</font><font color="#CCCCCC"> between this rows</font>

2423
01:55:31,240 --> 01:55:32,650
derivative for this mini-batches

2424
01:55:32,650 --> 01:55:35,830
derivative and whatever direction<font color="#CCCCCC"> we</font>

2425
01:55:35,830 --> 01:55:39,220
went last<font color="#CCCCCC"> time right</font><font color="#E5E5E5"> so in other words</font>

2426
01:55:39,220 --> 01:55:41,740
<font color="#E5E5E5">keep going the same direction as you</font>

2427
01:55:41,740 --> 01:55:44,650
were before<font color="#E5E5E5"> right</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> update it a</font>

2428
01:55:44,650 --> 01:55:48,940
little<font color="#E5E5E5"> bit right and so in our rich in</font>

2429
01:55:48,940 --> 01:55:51,460
our Python just before we had a momentum

2430
01:55:51,460 --> 01:55:55,600
<font color="#E5E5E5">of 0.9 okay so you can see</font><font color="#CCCCCC"> what tends to</font>

2431
01:55:55,600 --> 01:56:01,090
happen is that our negative<font color="#E5E5E5"> kind of gets</font>

2432
01:56:01,090 --> 01:56:03,280
more and more<font color="#CCCCCC"> negative right all the way</font>

2433
01:56:03,280 --> 01:56:08,080
<font color="#E5E5E5">up to like</font><font color="#CCCCCC"> 2,000 where else with our</font>

2434
01:56:08,080 --> 01:56:11,980
standard SGD approach<font color="#E5E5E5"> a derivatives are</font>

2435
01:56:11,980 --> 01:56:14,200
kind of all over the<font color="#E5E5E5"> place</font><font color="#CCCCCC"> right</font>

2436
01:56:14,200 --> 01:56:16,420
sometimes there's 700<font color="#CCCCCC"> something negative</font>

2437
01:56:16,420 --> 01:56:18,790
<font color="#CCCCCC">7 positive</font><font color="#E5E5E5"> 100</font><font color="#CCCCCC"> you know so this</font><font color="#E5E5E5"> is</font>

2438
01:56:18,790 --> 01:56:21,040
<font color="#E5E5E5">basically saying</font><font color="#CCCCCC"> like yeah if you've</font>

2439
01:56:21,040 --> 01:56:24,100
been going down for<font color="#E5E5E5"> quite a while keep</font>

2440
01:56:24,100 --> 01:56:26,500
doing that until<font color="#E5E5E5"> finally here it's like</font>

2441
01:56:26,500 --> 01:56:28,300
<font color="#CCCCCC">okay that's</font><font color="#E5E5E5"> that seems to be far enough</font>

2442
01:56:28,300 --> 01:56:29,680
so that's<font color="#E5E5E5"> being less and less and less</font>

2443
01:56:29,680 --> 01:56:32,140
<font color="#E5E5E5">negative all right mister we start</font><font color="#CCCCCC"> being</font>

2444
01:56:32,140 --> 01:56:34,090
positive again<font color="#E5E5E5"> so you can kind of see</font>

2445
01:56:34,090 --> 01:56:35,680
why it's<font color="#CCCCCC"> called momentum it's like once</font>

2446
01:56:35,680 --> 01:56:37,630
<font color="#E5E5E5">you start traveling in a particular</font>

2447
01:56:37,630 --> 01:56:40,240
direction for a<font color="#E5E5E5"> particular weight</font><font color="#CCCCCC"> you're</font>

2448
01:56:40,240 --> 01:56:41,950
kind of the<font color="#CCCCCC"> wheel start spinning and</font>

2449
01:56:41,950 --> 01:56:44,740
<font color="#E5E5E5">then once the gradient turns around the</font>

2450
01:56:44,740 --> 01:56:46,810
other<font color="#CCCCCC"> way</font><font color="#E5E5E5"> it's like Oh slow down we've</font>

2451
01:56:46,810 --> 01:56:48,190
<font color="#CCCCCC">got this</font><font color="#E5E5E5"> kind of event</font><font color="#CCCCCC"> um and then</font>

2452
01:56:48,190 --> 01:56:51,700
finally turn back around<font color="#E5E5E5"> right so when</font>

2453
01:56:51,700 --> 01:56:57,340
we<font color="#E5E5E5"> do it</font><font color="#CCCCCC"> this way all right</font><font color="#E5E5E5"> we can do</font>

2454
01:56:57,340 --> 01:56:59,440
exactly<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> thing right and after</font>

2455
01:56:59,440 --> 01:57:04,300
<font color="#CCCCCC">five iterations</font><font color="#E5E5E5"> we're at 89 where else</font>

2456
01:57:04,300 --> 01:57:07,720
before<font color="#E5E5E5"> after</font><font color="#CCCCCC"> five iterations</font><font color="#E5E5E5"> we're at</font>

2457
01:57:07,720 --> 01:57:11,950
104<font color="#CCCCCC"> right and after a few more let's go</font>

2458
01:57:11,950 --> 01:57:20,200
<font color="#E5E5E5">maybe</font><font color="#CCCCCC"> 15 okay so get this 102 for us</font>

2459
01:57:20,200 --> 01:57:22,620
here

2460
01:57:26,160 --> 01:57:30,250
it's going<font color="#CCCCCC"> right so it's it's it's a bit</font>

2461
01:57:30,250 --> 01:57:31,660
better<font color="#CCCCCC"> it's not hips better you can</font>

2462
01:57:31,660 --> 01:57:35,820
still see like these numbers<font color="#CCCCCC"> they're not</font>

2463
01:57:35,820 --> 01:57:38,710
<font color="#E5E5E5">zipping along right but it's</font><font color="#CCCCCC"> definitely</font>

2464
01:57:38,710 --> 01:57:40,000
an improvement<font color="#E5E5E5"> and it also gives</font><font color="#CCCCCC"> us</font>

2465
01:57:40,000 --> 01:57:41,680
something<font color="#E5E5E5"> else to tune which is nice</font>

2466
01:57:41,680 --> 01:57:43,510
like so if this is kind of a

2467
01:57:43,510 --> 01:57:45,910
<font color="#E5E5E5">well-behaved</font><font color="#CCCCCC"> error surface</font><font color="#E5E5E5"> right in</font>

2468
01:57:45,910 --> 01:57:48,490
other words like although<font color="#E5E5E5"> it might be</font>

2469
01:57:48,490 --> 01:57:50,800
<font color="#E5E5E5">bumpy along the way</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> kind of some</font>

2470
01:57:50,800 --> 01:57:53,140
overall<font color="#E5E5E5"> direction like imagine you're</font>

2471
01:57:53,140 --> 01:57:55,300
going<font color="#E5E5E5"> down a hill right and there's like</font>

2472
01:57:55,300 --> 01:57:57,460
bumps<font color="#CCCCCC"> oh alright</font><font color="#E5E5E5"> so the mobile more</font>

2473
01:57:57,460 --> 01:57:59,170
<font color="#E5E5E5">momentum you</font><font color="#CCCCCC"> got</font><font color="#E5E5E5"> going to skipping over</font>

2474
01:57:59,170 --> 01:58:01,240
the tops right<font color="#CCCCCC"> so we could say like okay</font>

2475
01:58:01,240 --> 01:58:03,330
let's increase our beater up to 0.98

2476
01:58:03,330 --> 01:58:06,700
<font color="#E5E5E5">right and see if that like allows us to</font>

2477
01:58:06,700 --> 01:58:08,140
train a<font color="#E5E5E5"> little faster and whoa look at</font>

2478
01:58:08,140 --> 01:58:10,690
that<font color="#CCCCCC"> suddenly what's going to okay so</font>

2479
01:58:10,690 --> 01:58:12,160
one nice thing about things like

2480
01:58:12,160 --> 01:58:13,750
<font color="#E5E5E5">momentum is it's like another parameter</font>

2481
01:58:13,750 --> 01:58:16,420
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you can choose to try and make your</font>

2482
01:58:16,420 --> 01:58:21,670
model train better in practice<font color="#CCCCCC"> basically</font>

2483
01:58:21,670 --> 01:58:24,250
everybody does this every like you look

2484
01:58:24,250 --> 01:58:26,230
at any like image net winner or whatever

2485
01:58:26,230 --> 01:58:37,930
<font color="#E5E5E5">they all use momentum okay</font><font color="#CCCCCC"> and so back</font>

2486
01:58:37,930 --> 01:58:41,950
<font color="#E5E5E5">over here when we said</font><font color="#CCCCCC"> here's SGD</font><font color="#E5E5E5"> that</font>

2487
01:58:41,950 --> 01:58:44,740
basically means use the basic tab of<font color="#E5E5E5"> our</font>

2488
01:58:44,740 --> 01:58:46,960
<font color="#E5E5E5">Excel spreadsheet but then momentum</font>

2489
01:58:46,960 --> 01:58:52,750
<font color="#CCCCCC">equals 0.9 means add in put a point nine</font>

2490
01:58:52,750 --> 01:58:58,000
over<font color="#E5E5E5"> here okay</font><font color="#CCCCCC"> and so that that's kind</font>

2491
01:58:58,000 --> 01:59:03,240
of your like default starting point so

2492
01:59:03,720 --> 01:59:12,070
<font color="#CCCCCC">let's keep going and talk about Adam so</font>

2493
01:59:12,070 --> 01:59:18,220
Adam is something which I actually was

2494
01:59:18,220 --> 01:59:20,770
not right earlier on in this course I

2495
01:59:20,770 --> 01:59:22,720
<font color="#CCCCCC">said we've been</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> Adam by default</font><font color="#E5E5E5"> we</font>

2496
01:59:22,720 --> 01:59:24,370
actually<font color="#E5E5E5"> haven't we've actually been I</font>

2497
01:59:24,370 --> 01:59:25,690
noticed<font color="#CCCCCC"> our we've actually been using</font>

2498
01:59:25,690 --> 01:59:29,020
SGD with momentum by<font color="#E5E5E5"> default and the</font>

2499
01:59:29,020 --> 01:59:34,980
reason is that<font color="#CCCCCC"> Adam has had</font>

2500
01:59:34,980 --> 01:59:36,690
much<font color="#E5E5E5"> faster as you'll see it's much much</font>

2501
01:59:36,690 --> 01:59:38,489
faster to learn with<font color="#E5E5E5"> but there's been</font>

2502
01:59:38,489 --> 01:59:39,780
some<font color="#CCCCCC"> problems which is people who</font>

2503
01:59:39,780 --> 01:59:41,700
haven't<font color="#CCCCCC"> been getting</font><font color="#E5E5E5"> quite as good like</font>

2504
01:59:41,700 --> 01:59:44,520
final answers with Adam<font color="#E5E5E5"> as they have</font>

2505
01:59:44,520 --> 01:59:46,440
with<font color="#CCCCCC"> std with momentum</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> why</font>

2506
01:59:46,440 --> 01:59:48,180
you'll<font color="#CCCCCC"> see like all the you know image</font>

2507
01:59:48,180 --> 01:59:50,670
<font color="#CCCCCC">net winning solutions and so forth and</font>

2508
01:59:50,670 --> 01:59:54,239
all the academic papers always<font color="#E5E5E5"> use SGD</font>

2509
01:59:54,239 --> 01:59:56,880
with momentum<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'll Adam</font><font color="#E5E5E5"> seems to be</font>

2510
01:59:56,880 --> 01:59:58,800
a particular<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> in NLP</font><font color="#E5E5E5"> people</font>

2511
01:59:58,800 --> 02:00:00,330
really<font color="#E5E5E5"> haven't</font><font color="#CCCCCC"> got</font><font color="#E5E5E5"> Adam working at all</font>

2512
02:00:00,330 --> 02:00:06,210
well the<font color="#CCCCCC"> good news is</font><font color="#E5E5E5"> this was I built</font>

2513
02:00:06,210 --> 02:00:08,640
it looks like this was solved<font color="#E5E5E5"> two weeks</font>

2514
02:00:08,640 --> 02:00:13,020
ago<font color="#CCCCCC"> it basically it turned out that the</font>

2515
02:00:13,020 --> 02:00:14,730
way<font color="#CCCCCC"> people were</font><font color="#E5E5E5"> dealing with a</font>

2516
02:00:14,730 --> 02:00:17,310
combination<font color="#E5E5E5"> of weight decay in Adam had</font>

2517
02:00:17,310 --> 02:00:20,550
a nasty kind of<font color="#CCCCCC"> bargainer basically and</font>

2518
02:00:20,550 --> 02:00:22,200
that's<font color="#E5E5E5"> that's kind of carried through to</font>

2519
02:00:22,200 --> 02:00:24,750
every single library<font color="#CCCCCC"> and one of our</font>

2520
02:00:24,750 --> 02:00:27,210
students<font color="#E5E5E5"> and then Sahara has actually</font>

2521
02:00:27,210 --> 02:00:31,170
<font color="#CCCCCC">just completed</font><font color="#E5E5E5"> a prototype</font><font color="#CCCCCC"> of adding is</font>

2522
02:00:31,170 --> 02:00:33,060
this new version<font color="#CCCCCC"> of</font><font color="#E5E5E5"> Adam has called Adam</font>

2523
02:00:33,060 --> 02:00:36,390
<font color="#CCCCCC">W</font><font color="#E5E5E5"> into fast AI and he's confirmed that</font>

2524
02:00:36,390 --> 02:00:40,040
he's getting<font color="#E5E5E5"> much faster both the faster</font>

2525
02:00:40,040 --> 02:00:43,710
performance<font color="#E5E5E5"> and also the better accuracy</font>

2526
02:00:43,710 --> 02:00:47,280
<font color="#CCCCCC">so</font><font color="#E5E5E5"> hopefully we'll have this Adam W in</font>

2527
02:00:47,280 --> 02:00:49,560
faster ideally<font color="#CCCCCC"> before next</font><font color="#E5E5E5"> week we'll</font>

2528
02:00:49,560 --> 02:00:51,239
see how we go<font color="#E5E5E5"> very very soon</font>

2529
02:00:51,239 --> 02:00:53,660
so so it is worth telling you about

2530
02:00:53,660 --> 02:00:58,830
<font color="#CCCCCC">about Adam so let's talk about</font><font color="#E5E5E5"> it it's</font>

2531
02:00:58,830 --> 02:01:02,910
<font color="#E5E5E5">actually incredibly simple</font><font color="#CCCCCC"> but again you</font>

2532
02:01:02,910 --> 02:01:04,560
know<font color="#E5E5E5"> make sure you make</font><font color="#CCCCCC"> it sound really</font>

2533
02:01:04,560 --> 02:01:06,600
complicated<font color="#E5E5E5"> when you tell people so that</font>

2534
02:01:06,600 --> 02:01:09,690
you<font color="#E5E5E5"> can so here's the same spreadsheet</font>

2535
02:01:09,690 --> 02:01:13,920
again<font color="#E5E5E5"> right and here's our randomly</font>

2536
02:01:13,920 --> 02:01:16,470
selected a and B again<font color="#CCCCCC"> somehow</font><font color="#E5E5E5"> it's</font>

2537
02:01:16,470 --> 02:01:19,020
<font color="#CCCCCC">still one here's a prediction here's our</font>

2538
02:01:19,020 --> 02:01:21,810
derivatives<font color="#E5E5E5"> okay so now how we count</font>

2539
02:01:21,810 --> 02:01:25,230
letting<font color="#E5E5E5"> on you hey</font><font color="#CCCCCC"> you could immediately</font>

2540
02:01:25,230 --> 02:01:28,290
see it's<font color="#E5E5E5"> looking pretty hopeful because</font>

2541
02:01:28,290 --> 02:01:31,980
even by like row<font color="#CCCCCC"> ten we're like we're</font>

2542
02:01:31,980 --> 02:01:34,110
seeing<font color="#E5E5E5"> the numbers move a lot more</font><font color="#CCCCCC"> right</font>

2543
02:01:34,110 --> 02:01:38,790
<font color="#CCCCCC">so this is</font><font color="#E5E5E5"> looking pretty encouraging so</font>

2544
02:01:38,790 --> 02:01:42,960
how are we calculating this<font color="#CCCCCC"> it's equal</font>

2545
02:01:42,960 --> 02:01:48,940
<font color="#CCCCCC">to our previous value with</font><font color="#E5E5E5"> B minus j</font><font color="#CCCCCC"> h</font>

2546
02:01:48,940 --> 02:01:49,989
we're gonna have to find out what<font color="#E5E5E5"> that</font>

2547
02:01:49,989 --> 02:01:56,739
is<font color="#E5E5E5"> times</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> learning rate divided by</font>

2548
02:01:56,739 --> 02:01:59,080
the square root of<font color="#CCCCCC"> LH okay so</font><font color="#E5E5E5"> I'm gonna</font>

2549
02:01:59,080 --> 02:02:00,400
<font color="#E5E5E5">have to dig it and see what's going on</font>

2550
02:02:00,400 --> 02:02:02,410
one thing<font color="#E5E5E5"> to notice here</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> my</font>

2551
02:02:02,410 --> 02:02:05,650
<font color="#E5E5E5">learning rate is way higher</font><font color="#CCCCCC"> than it used</font>

2552
02:02:05,650 --> 02:02:08,610
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be but then</font><font color="#E5E5E5"> we're dividing</font><font color="#CCCCCC"> it by this</font>

2553
02:02:08,610 --> 02:02:12,730
big<font color="#E5E5E5"> number okay so let's start out by</font>

2554
02:02:12,730 --> 02:02:14,380
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> and seeing what this day-out</font>

2555
02:02:14,380 --> 02:02:19,300
thing is<font color="#E5E5E5"> okay</font>

2556
02:02:19,300 --> 02:02:23,080
<font color="#E5E5E5">j8 is identical to</font><font color="#CCCCCC"> what we had before j8</font>

2557
02:02:23,080 --> 02:02:25,690
is<font color="#E5E5E5"> equal to the linear interpolation of</font>

2558
02:02:25,690 --> 02:02:28,750
<font color="#CCCCCC">the derivative and the previous</font>

2559
02:02:28,750 --> 02:02:33,550
direction<font color="#E5E5E5"> okay so that was easy</font><font color="#CCCCCC"> so one</font>

2560
02:02:33,550 --> 02:02:36,550
part<font color="#E5E5E5"> of</font><font color="#CCCCCC"> atom is to use momentum</font><font color="#E5E5E5"> in the</font>

2561
02:02:36,550 --> 02:02:39,300
way we<font color="#E5E5E5"> just defined it</font>

2562
02:02:39,300 --> 02:02:41,680
okay the second piece<font color="#E5E5E5"> was</font><font color="#CCCCCC"> to divide by</font>

2563
02:02:41,680 --> 02:02:45,640
<font color="#CCCCCC">square root L</font><font color="#E5E5E5"> 8 what is that square root</font>

2564
02:02:45,640 --> 02:02:48,610
L 8<font color="#E5E5E5"> okay is another linear interpolation</font>

2565
02:02:48,610 --> 02:02:52,920
of<font color="#E5E5E5"> something and something</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> and</font>

2566
02:02:52,920 --> 02:02:54,489
<font color="#E5E5E5">specifically it's a linear interpolation</font>

2567
02:02:54,489 --> 02:03:00,610
<font color="#E5E5E5">of</font><font color="#CCCCCC"> F 8 squared</font><font color="#E5E5E5"> okay it's a linear</font>

2568
02:03:00,610 --> 02:03:03,870
<font color="#CCCCCC">interpolation of the derivative squared</font>

2569
02:03:03,870 --> 02:03:07,210
<font color="#CCCCCC">along</font><font color="#E5E5E5"> with the derivative squared last</font>

2570
02:03:07,210 --> 02:03:09,940
time<font color="#E5E5E5"> okay so in other words we've got</font>

2571
02:03:09,940 --> 02:03:13,210
<font color="#E5E5E5">two pieces of momentum going on here</font>

2572
02:03:13,210 --> 02:03:19,210
one is calculating<font color="#CCCCCC"> the momentum version</font>

2573
02:03:19,210 --> 02:03:22,420
of the gradient<font color="#CCCCCC"> the other is calculating</font>

2574
02:03:22,420 --> 02:03:24,310
<font color="#CCCCCC">the momentum version of the gradient</font>

2575
02:03:24,310 --> 02:03:28,780
squared<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> often refer</font><font color="#E5E5E5"> to this idea</font>

2576
02:03:28,780 --> 02:03:31,900
as a exponentially weighted moving

2577
02:03:31,900 --> 02:03:34,090
average<font color="#E5E5E5"> in other words it's basically</font>

2578
02:03:34,090 --> 02:03:36,100
equal<font color="#E5E5E5"> to the average of this one and the</font>

2579
02:03:36,100 --> 02:03:37,630
<font color="#CCCCCC">last one in the last one in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> last one</font>

2580
02:03:37,630 --> 02:03:39,900
<font color="#E5E5E5">that we're like multiplicatively</font>

2581
02:03:39,900 --> 02:03:42,130
<font color="#E5E5E5">decreasing the previous ones</font><font color="#CCCCCC"> right</font>

2582
02:03:42,130 --> 02:03:44,350
<font color="#E5E5E5">because we're</font><font color="#CCCCCC"> multiplying it by 0.9</font>

2583
02:03:44,350 --> 02:03:47,830
times what<font color="#E5E5E5"> 999</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so you actually see</font>

2584
02:03:47,830 --> 02:03:53,370
<font color="#CCCCCC">that for instance in the faster I</font><font color="#E5E5E5"> code</font>

2585
02:04:00,180 --> 02:04:04,780
if you look at<font color="#CCCCCC"> fish we don't just</font>

2586
02:04:04,780 --> 02:04:10,380
calculate the<font color="#CCCCCC"> average loss right</font><font color="#E5E5E5"> because</font>

2587
02:04:10,380 --> 02:04:13,000
what I actually want we certainly don't

2588
02:04:13,000 --> 02:04:14,980
just report the loss for every<font color="#E5E5E5"> mini</font>

2589
02:04:14,980 --> 02:04:16,210
match because that<font color="#E5E5E5"> just bounces</font><font color="#CCCCCC"> around</font>

2590
02:04:16,210 --> 02:04:20,020
so much<font color="#E5E5E5"> so instead</font><font color="#CCCCCC"> I say average loss is</font>

2591
02:04:20,020 --> 02:04:22,360
equal<font color="#CCCCCC"> to whatever</font><font color="#E5E5E5"> the average loss was</font>

2592
02:04:22,360 --> 02:04:27,699
last time<font color="#E5E5E5"> times 0.98 plus the loss this</font>

2593
02:04:27,699 --> 02:04:31,900
time times 0.02 right so in other words

2594
02:04:31,900 --> 02:04:34,870
the faster<font color="#E5E5E5"> you library the thing that</font>

2595
02:04:34,870 --> 02:04:36,489
it's actually when you do like the

2596
02:04:36,489 --> 02:04:38,890
learning<font color="#CCCCCC"> rate finder or plot loss it's</font>

2597
02:04:38,890 --> 02:04:40,930
actually showing you the exponentially

2598
02:04:40,930 --> 02:04:44,260
weighted moving average<font color="#E5E5E5"> of the loss okay</font>

2599
02:04:44,260 --> 02:04:47,290
so it's<font color="#E5E5E5"> like a really handy concept it</font>

2600
02:04:47,290 --> 02:04:49,780
appears quite<font color="#E5E5E5"> a lot right the other in</font>

2601
02:04:49,780 --> 02:04:52,390
handy concept know about<font color="#E5E5E5"> is this idea of</font>

2602
02:04:52,390 --> 02:04:55,780
<font color="#E5E5E5">like you've got two numbers one</font><font color="#CCCCCC"> of them</font>

2603
02:04:55,780 --> 02:04:58,120
is multiplied<font color="#CCCCCC"> by some value</font><font color="#E5E5E5"> the other is</font>

2604
02:04:58,120 --> 02:05:00,430
multiplied by<font color="#E5E5E5"> one</font><font color="#CCCCCC"> minus that value so</font>

2605
02:05:00,430 --> 02:05:02,770
this<font color="#E5E5E5"> is a linear interpolation</font><font color="#CCCCCC"> of two</font>

2606
02:05:02,770 --> 02:05:05,550
<font color="#E5E5E5">values you'll see it all the</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> and</font>

2607
02:05:05,550 --> 02:05:09,190
<font color="#E5E5E5">for</font><font color="#CCCCCC"> some reason deep learning people</font>

2608
02:05:09,190 --> 02:05:11,949
<font color="#E5E5E5">nearly always use the value alpha when</font>

2609
02:05:11,949 --> 02:05:13,870
they do this<font color="#E5E5E5"> so like keep an eye out if</font>

2610
02:05:13,870 --> 02:05:15,280
you're reading a paper<font color="#E5E5E5"> or</font><font color="#CCCCCC"> something and</font>

2611
02:05:15,280 --> 02:05:17,920
you see like alpha times bla bla bla bla

2612
02:05:17,920 --> 02:05:22,840
<font color="#E5E5E5">bla plus</font><font color="#CCCCCC"> one minus alpha times some</font>

2613
02:05:22,840 --> 02:05:25,270
other bla bla bla bla<font color="#E5E5E5"> right immediately</font>

2614
02:05:25,270 --> 02:05:28,180
<font color="#E5E5E5">like when people</font><font color="#CCCCCC"> read papers none of us</font>

2615
02:05:28,180 --> 02:05:31,239
like read every thing in the equation<font color="#CCCCCC"> we</font>

2616
02:05:31,239 --> 02:05:33,730
look at it we go oh<font color="#E5E5E5"> linear interpolation</font>

2617
02:05:33,730 --> 02:05:35,890
<font color="#E5E5E5">right and I said something I was</font><font color="#CCCCCC"> just</font>

2618
02:05:35,890 --> 02:05:37,660
talking to<font color="#E5E5E5"> Rachel about yesterday is</font>

2619
02:05:37,660 --> 02:05:39,670
like whether<font color="#E5E5E5"> we could start trying</font><font color="#CCCCCC"> to</font>

2620
02:05:39,670 --> 02:05:42,190
<font color="#E5E5E5">find like</font><font color="#CCCCCC"> a a new way of writing papers</font>

2621
02:05:42,190 --> 02:05:44,080
where we literally refactor them right

2622
02:05:44,080 --> 02:05:45,640
like<font color="#E5E5E5"> it'd be so much better to have</font>

2623
02:05:45,640 --> 02:05:50,620
<font color="#E5E5E5">written like linear interpolate bla bla</font>

2624
02:05:50,620 --> 02:05:52,810
bla bla<font color="#E5E5E5"> bla</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> because then you don't</font>

2625
02:05:52,810 --> 02:05:55,090
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to have that</font><font color="#E5E5E5"> pattern recognition</font>

2626
02:05:55,090 --> 02:05:57,489
right<font color="#E5E5E5"> but</font><font color="#CCCCCC"> until we</font><font color="#E5E5E5"> convince the world to</font>

2627
02:05:57,489 --> 02:05:59,440
change<font color="#E5E5E5"> how they write papers this is</font>

2628
02:05:59,440 --> 02:06:00,820
what you have to do is you have<font color="#E5E5E5"> to look</font>

2629
02:06:00,820 --> 02:06:03,280
you<font color="#E5E5E5"> know know what to</font><font color="#CCCCCC"> look for right and</font>

2630
02:06:03,280 --> 02:06:06,850
<font color="#E5E5E5">once you do suddenly the huge page with</font>

2631
02:06:06,850 --> 02:06:09,190
formulas

2632
02:06:09,190 --> 02:06:11,020
<font color="#CCCCCC">that at all like you often notice like</font>

2633
02:06:11,020 --> 02:06:13,660
for example<font color="#E5E5E5"> the two things in</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> like</font>

2634
02:06:13,660 --> 02:06:15,580
they might be<font color="#CCCCCC"> totally identical</font><font color="#E5E5E5"> but this</font>

2635
02:06:15,580 --> 02:06:17,260
might<font color="#CCCCCC"> be</font><font color="#E5E5E5"> a time T and this might be</font><font color="#CCCCCC"> at</font>

2636
02:06:17,260 --> 02:06:19,660
<font color="#E5E5E5">like time t minus</font><font color="#CCCCCC"> y</font><font color="#E5E5E5"> or something right</font>

2637
02:06:19,660 --> 02:06:21,730
<font color="#E5E5E5">like it's very often these big ugly</font>

2638
02:06:21,730 --> 02:06:24,400
formulas<font color="#E5E5E5"> turn out to</font><font color="#CCCCCC"> be really really</font>

2639
02:06:24,400 --> 02:06:26,760
<font color="#E5E5E5">simple if</font><font color="#CCCCCC"> only they</font><font color="#E5E5E5"> had ripped out them</font>

2640
02:06:26,760 --> 02:06:30,340
<font color="#E5E5E5">okay so</font><font color="#CCCCCC"> what are</font><font color="#E5E5E5"> we doing with</font><font color="#CCCCCC"> this</font>

2641
02:06:30,340 --> 02:06:34,060
gradient squared<font color="#E5E5E5"> so what we were doing</font>

2642
02:06:34,060 --> 02:06:37,540
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> gradient</font><font color="#CCCCCC"> squared</font><font color="#E5E5E5"> is we were</font>

2643
02:06:37,540 --> 02:06:40,239
taking the square root<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> we were</font>

2644
02:06:40,239 --> 02:06:42,370
adjusting the learning rate by<font color="#CCCCCC"> dividing</font>

2645
02:06:42,370 --> 02:06:45,610
the learning rate by that okay<font color="#E5E5E5"> so</font>

2646
02:06:45,610 --> 02:06:49,320
gradient squared<font color="#E5E5E5"> is always positive</font>

2647
02:06:49,320 --> 02:06:53,500
<font color="#E5E5E5">right and we're taking the exponentially</font>

2648
02:06:53,500 --> 02:06:55,300
waiting move moving<font color="#E5E5E5"> average of a bunch</font>

2649
02:06:55,300 --> 02:06:57,400
<font color="#CCCCCC">of things that are</font><font color="#E5E5E5"> always positive</font><font color="#CCCCCC"> and</font>

2650
02:06:57,400 --> 02:06:58,750
then we're taking<font color="#E5E5E5"> the</font><font color="#CCCCCC"> square root of</font>

2651
02:06:58,750 --> 02:07:01,390
<font color="#E5E5E5">that</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so when is this number going</font>

2652
02:07:01,390 --> 02:07:04,060
<font color="#E5E5E5">to be high it's going to be particularly</font>

2653
02:07:04,060 --> 02:07:07,150
high if there's like one big you know if

2654
02:07:07,150 --> 02:07:09,550
the gradients got a lot<font color="#E5E5E5"> of variation</font>

2655
02:07:09,550 --> 02:07:11,350
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> oh there's a high</font><font color="#E5E5E5"> variance of</font>

2656
02:07:11,350 --> 02:07:14,980
gradient then this<font color="#CCCCCC"> G squared thing is</font>

2657
02:07:14,980 --> 02:07:16,840
going<font color="#E5E5E5"> to be a really high</font><font color="#CCCCCC"> number for us</font>

2658
02:07:16,840 --> 02:07:20,920
if it's like a<font color="#E5E5E5"> constant amount right</font>

2659
02:07:20,920 --> 02:07:22,630
it's going<font color="#E5E5E5"> to be smaller that cuz when</font>

2660
02:07:22,630 --> 02:07:24,730
you add<font color="#E5E5E5"> things that</font><font color="#CCCCCC"> are squared the</font>

2661
02:07:24,730 --> 02:07:26,980
squared slight jump<font color="#E5E5E5"> out much bigger for</font>

2662
02:07:26,980 --> 02:07:28,510
<font color="#CCCCCC">us if there wasn't if there wasn't much</font>

2663
02:07:28,510 --> 02:07:31,630
change<font color="#CCCCCC"> it's not going to be as big so</font>

2664
02:07:31,630 --> 02:07:34,870
basically this number at the<font color="#E5E5E5"> bottom here</font>

2665
02:07:34,870 --> 02:07:38,980
<font color="#E5E5E5">is going to be high if our Brady</font><font color="#CCCCCC"> --nt is</font>

2666
02:07:38,980 --> 02:07:41,320
changing a lot<font color="#E5E5E5"> now what do you want to</font>

2667
02:07:41,320 --> 02:07:44,290
do if you've got something<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> like</font>

2668
02:07:44,290 --> 02:07:46,210
first negative<font color="#E5E5E5"> and then positive and</font>

2669
02:07:46,210 --> 02:07:50,920
then small and then high right<font color="#E5E5E5"> well you</font>

2670
02:07:50,920 --> 02:07:53,260
probably<font color="#E5E5E5"> want to be more careful</font><font color="#CCCCCC"> right</font>

2671
02:07:53,260 --> 02:07:54,370
you probably<font color="#E5E5E5"> don't want to take a big</font>

2672
02:07:54,370 --> 02:07:56,650
step<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you can't</font><font color="#E5E5E5"> really trust it</font>

2673
02:07:56,650 --> 02:07:59,290
<font color="#E5E5E5">right so when the when the variance of</font>

2674
02:07:59,290 --> 02:08:01,570
the gradient is high we're going to

2675
02:08:01,570 --> 02:08:03,480
divide our learning rate by a big number

2676
02:08:03,480 --> 02:08:06,239
<font color="#CCCCCC">we also</font><font color="#E5E5E5"> found learning rate</font><font color="#CCCCCC"> is very</font>

2677
02:08:06,239 --> 02:08:09,760
<font color="#CCCCCC">similar kind</font><font color="#E5E5E5"> of size all the time then</font>

2678
02:08:09,760 --> 02:08:11,140
we probably feel<font color="#E5E5E5"> pretty good about the</font>

2679
02:08:11,140 --> 02:08:13,120
<font color="#E5E5E5">step so we're dividing it by a small</font>

2680
02:08:13,120 --> 02:08:15,520
amount<font color="#CCCCCC"> yeah and so</font><font color="#E5E5E5"> this is called an</font>

2681
02:08:15,520 --> 02:08:18,100
adaptive<font color="#CCCCCC"> learning rate</font><font color="#E5E5E5"> yeah and like a</font>

2682
02:08:18,100 --> 02:08:19,900
lot of<font color="#CCCCCC"> people have this</font><font color="#E5E5E5"> confusion about</font>

2683
02:08:19,900 --> 02:08:22,240
<font color="#CCCCCC">atom I've seen it</font><font color="#E5E5E5"> on the forum</font><font color="#CCCCCC"> actually</font>

2684
02:08:22,240 --> 02:08:24,700
like<font color="#CCCCCC"> there's some kind of adaptive</font>

2685
02:08:24,700 --> 02:08:26,320
learning rate where somehow<font color="#E5E5E5"> you like</font>

2686
02:08:26,320 --> 02:08:29,650
setting<font color="#CCCCCC"> different learning rates for</font>

2687
02:08:29,650 --> 02:08:31,330
<font color="#CCCCCC">different layers or something it's like</font>

2688
02:08:31,330 --> 02:08:33,010
no not<font color="#E5E5E5"> really</font>

2689
02:08:33,010 --> 02:08:35,560
right all we're doing is<font color="#CCCCCC"> we're just</font>

2690
02:08:35,560 --> 02:08:37,720
<font color="#E5E5E5">saying like this keep track of the</font>

2691
02:08:37,720 --> 02:08:39,400
average of<font color="#E5E5E5"> the squares of the gradients</font>

2692
02:08:39,400 --> 02:08:43,060
and use that to adjust the learning rate

2693
02:08:43,060 --> 02:08:45,700
so there's<font color="#E5E5E5"> still</font><font color="#CCCCCC"> one learning</font><font color="#E5E5E5"> rate okay</font>

2694
02:08:45,700 --> 02:08:48,550
<font color="#E5E5E5">in this case it's one</font><font color="#CCCCCC"> okay but</font>

2695
02:08:48,550 --> 02:08:51,580
effectively<font color="#E5E5E5"> every parameter at every</font>

2696
02:08:51,580 --> 02:08:55,030
epoch is being kind of like getting a

2697
02:08:55,030 --> 02:08:57,280
bigger jump<font color="#E5E5E5"> if the learning rate if the</font>

2698
02:08:57,280 --> 02:08:58,840
gradients been pretty constant for that

2699
02:08:58,840 --> 02:09:02,740
<font color="#CCCCCC">wait and a smaller jump otherwise okay</font>

2700
02:09:02,740 --> 02:09:04,660
and that's Adam<font color="#CCCCCC"> that's the entirety of</font>

2701
02:09:04,660 --> 02:09:07,660
Adam in in Excel<font color="#E5E5E5"> right so there's now no</font>

2702
02:09:07,660 --> 02:09:09,940
reason at all<font color="#E5E5E5"> why you can't train</font>

2703
02:09:09,940 --> 02:09:11,530
imagenet<font color="#E5E5E5"> in Excel because you've got</font>

2704
02:09:11,530 --> 02:09:13,540
you've got<font color="#CCCCCC"> access to all of the pieces</font>

2705
02:09:13,540 --> 02:09:18,660
<font color="#E5E5E5">you need</font><font color="#CCCCCC"> and so let's try this out run</font>

2706
02:09:19,830 --> 02:09:22,780
<font color="#E5E5E5">okay that's not bad</font><font color="#CCCCCC"> right five and we</font>

2707
02:09:22,780 --> 02:09:25,000
straight up to<font color="#CCCCCC"> twenty nine and two right</font>

2708
02:09:25,000 --> 02:09:28,570
<font color="#CCCCCC">so the difference between like you know</font>

2709
02:09:28,570 --> 02:09:31,480
standard SGD and this is is huge and

2710
02:09:31,480 --> 02:09:32,650
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> that you know</font><font color="#E5E5E5"> the key</font>

2711
02:09:32,650 --> 02:09:35,140
difference was that<font color="#CCCCCC"> it figured out</font><font color="#E5E5E5"> that</font>

2712
02:09:35,140 --> 02:09:37,780
<font color="#E5E5E5">we need to be you know moving this</font>

2713
02:09:37,780 --> 02:09:42,100
number<font color="#E5E5E5"> much faster okay and so and so</font><font color="#CCCCCC"> it</font>

2714
02:09:42,100 --> 02:09:45,540
<font color="#CCCCCC">do</font><font color="#E5E5E5"> and so you can see we've</font><font color="#CCCCCC"> now got like</font>

2715
02:09:45,540 --> 02:09:48,370
two<font color="#E5E5E5"> different parameters one</font><font color="#CCCCCC"> is kind of</font>

2716
02:09:48,370 --> 02:09:50,500
momentum for<font color="#E5E5E5"> the gradient piece the</font>

2717
02:09:50,500 --> 02:09:52,510
other<font color="#E5E5E5"> is the momentum for the gradient</font>

2718
02:09:52,510 --> 02:09:56,500
<font color="#E5E5E5">squared piece and there I think</font><font color="#CCCCCC"> they're</font>

2719
02:09:56,500 --> 02:09:58,030
called like<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> there's just</font><font color="#E5E5E5"> a</font>

2720
02:09:58,030 --> 02:10:00,670
couple<font color="#CCCCCC"> of the beta</font><font color="#E5E5E5"> I think when you when</font>

2721
02:10:00,670 --> 02:10:02,320
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change it in</font><font color="#CCCCCC"> PI tortes is I</font>

2722
02:10:02,320 --> 02:10:03,790
think what beta which is<font color="#E5E5E5"> just a</font><font color="#CCCCCC"> couple</font>

2723
02:10:03,790 --> 02:10:11,190
of two numbers you<font color="#E5E5E5"> can change Jeremy so</font>

2724
02:10:11,190 --> 02:10:15,430
<font color="#E5E5E5">so you</font><font color="#CCCCCC"> set the yeah I think</font><font color="#E5E5E5"> I understand</font>

2725
02:10:15,430 --> 02:10:18,940
this concept<font color="#E5E5E5"> of you</font><font color="#CCCCCC"> know one day when a</font>

2726
02:10:18,940 --> 02:10:21,310
gradient<font color="#E5E5E5"> is it goes up and</font><font color="#CCCCCC"> down then</font>

2727
02:10:21,310 --> 02:10:24,610
you're not<font color="#E5E5E5"> really sure which direction</font>

2728
02:10:24,610 --> 02:10:26,770
<font color="#E5E5E5">should</font><font color="#CCCCCC"> should go so you should</font><font color="#E5E5E5"> kind of</font>

2729
02:10:26,770 --> 02:10:27,580
slow things down

2730
02:10:27,580 --> 02:10:29,590
<font color="#CCCCCC">therefore you subtract that gradient</font>

2731
02:10:29,590 --> 02:10:32,140
<font color="#E5E5E5">from the learning rate so but how do you</font>

2732
02:10:32,140 --> 02:10:35,500
implement<font color="#E5E5E5"> how far do you go</font><font color="#CCCCCC"> I guess</font>

2733
02:10:35,500 --> 02:10:36,480
maybe I<font color="#E5E5E5"> miss something</font>

2734
02:10:36,480 --> 02:10:38,610
<font color="#E5E5E5">early on you do you set a number</font>

2735
02:10:38,610 --> 02:10:42,900
<font color="#E5E5E5">somewhere</font><font color="#CCCCCC"> we divide yeah we</font><font color="#E5E5E5"> divide the</font>

2736
02:10:42,900 --> 02:10:45,930
learning rate<font color="#E5E5E5"> divided by the square root</font>

2737
02:10:45,930 --> 02:10:48,830
<font color="#E5E5E5">of the moving average gradient squared</font>

2738
02:10:48,830 --> 02:10:50,880
<font color="#E5E5E5">so that's where we use it</font>

2739
02:10:50,880 --> 02:10:55,110
oh I'm<font color="#E5E5E5"> sorry can</font><font color="#CCCCCC"> you be a little more</font>

2740
02:10:55,110 --> 02:10:57,720
<font color="#E5E5E5">sure so</font><font color="#CCCCCC"> d2 is the learning rate which is</font>

2741
02:10:57,720 --> 02:11:00,420
one<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> m27</font>

2742
02:11:00,420 --> 02:11:02,850
is our<font color="#E5E5E5"> moving average of the squared</font>

2743
02:11:02,850 --> 02:11:06,480
gradients<font color="#CCCCCC"> so we just go</font><font color="#E5E5E5"> D 2 divided</font><font color="#CCCCCC"> by</font>

2744
02:11:06,480 --> 02:11:12,750
<font color="#E5E5E5">square root and</font><font color="#CCCCCC"> preserve that's it</font><font color="#E5E5E5"> okay</font>

2745
02:11:12,750 --> 02:11:16,950
thanks<font color="#CCCCCC"> I have one question yeah</font>

2746
02:11:16,950 --> 02:11:19,860
so the new method that<font color="#CCCCCC"> you just</font>

2747
02:11:19,860 --> 02:11:21,840
mentioned<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is in the process of</font>

2748
02:11:21,840 --> 02:11:27,480
getting implemented<font color="#CCCCCC"> in yes how different</font>

2749
02:11:27,480 --> 02:11:32,580
is<font color="#CCCCCC"> it from here okay let's do that</font><font color="#E5E5E5"> so to</font>

2750
02:11:32,580 --> 02:11:34,739
<font color="#CCCCCC">understand</font><font color="#E5E5E5"> Adam W we have to understand</font>

2751
02:11:34,739 --> 02:11:38,220
<font color="#E5E5E5">wait okay</font><font color="#CCCCCC"> and maybe</font><font color="#E5E5E5"> we'll learn</font><font color="#CCCCCC"> more</font>

2752
02:11:38,220 --> 02:11:39,510
<font color="#CCCCCC">about that</font><font color="#E5E5E5"> later let's see how we go now</font>

2753
02:11:39,510 --> 02:11:40,440
with<font color="#CCCCCC"> great okay</font>

2754
02:11:40,440 --> 02:11:46,440
so the<font color="#E5E5E5"> idea is</font><font color="#CCCCCC"> that when you have lots</font>

2755
02:11:46,440 --> 02:11:48,570
and<font color="#E5E5E5"> lots</font><font color="#CCCCCC"> of parameters</font><font color="#E5E5E5"> like we do with</font>

2756
02:11:48,570 --> 02:11:50,280
you know<font color="#E5E5E5"> most of the neural</font><font color="#CCCCCC"> Nets we</font>

2757
02:11:50,280 --> 02:11:54,330
train<font color="#E5E5E5"> you very</font><font color="#CCCCCC"> often have like more</font>

2758
02:11:54,330 --> 02:11:56,280
parameters and data points<font color="#CCCCCC"> or you know</font>

2759
02:11:56,280 --> 02:11:57,989
like regularization becomes important

2760
02:11:57,989 --> 02:12:00,090
and we've learnt how to avoid

2761
02:12:00,090 --> 02:12:03,360
<font color="#E5E5E5">overfitting by</font><font color="#CCCCCC"> using dropout right which</font>

2762
02:12:03,360 --> 02:12:07,200
randomly deletes some activations in<font color="#CCCCCC"> the</font>

2763
02:12:07,200 --> 02:12:08,910
hope that's<font color="#E5E5E5"> going to learn some</font><font color="#CCCCCC"> kind of</font>

2764
02:12:08,910 --> 02:12:12,630
more resilient<font color="#E5E5E5"> set of weights there's</font>

2765
02:12:12,630 --> 02:12:14,100
another kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Ritter ization we can</font>

2766
02:12:14,100 --> 02:12:16,800
use called weight decay<font color="#E5E5E5"> or l2</font>

2767
02:12:16,800 --> 02:12:19,140
<font color="#E5E5E5">regularization and it's actually comes</font>

2768
02:12:19,140 --> 02:12:21,180
kind of<font color="#CCCCCC"> as a kind of classic statistical</font>

2769
02:12:21,180 --> 02:12:23,400
technique and the idea is that<font color="#E5E5E5"> we take</font>

2770
02:12:23,400 --> 02:12:26,130
<font color="#E5E5E5">our loss function right so we take out</font>

2771
02:12:26,130 --> 02:12:29,820
like<font color="#E5E5E5"> arrow squared loss function and we</font>

2772
02:12:29,820 --> 02:12:32,880
add an<font color="#CCCCCC"> additional piece to it</font><font color="#E5E5E5"> let's add</font>

2773
02:12:32,880 --> 02:12:35,670
weight decay right now<font color="#CCCCCC"> the additional</font>

2774
02:12:35,670 --> 02:12:39,270
piece we add is to basically<font color="#E5E5E5"> add the</font>

2775
02:12:39,270 --> 02:12:44,070
square of<font color="#E5E5E5"> the weights</font><font color="#CCCCCC"> so we'd</font><font color="#E5E5E5"> say plus B</font>

2776
02:12:44,070 --> 02:12:49,619
squared plus a<font color="#E5E5E5"> squared</font>

2777
02:12:49,619 --> 02:12:55,960
<font color="#E5E5E5">okay that is now</font><font color="#CCCCCC"> wait 2 K or L tree</font>

2778
02:12:55,960 --> 02:12:58,449
regularization<font color="#CCCCCC"> and so the idea is that</font>

2779
02:12:58,449 --> 02:13:04,840
<font color="#E5E5E5">now the the loss function</font><font color="#CCCCCC"> wants</font><font color="#E5E5E5"> to keep</font>

2780
02:13:04,840 --> 02:13:07,449
the<font color="#E5E5E5"> weight small because increasing the</font>

2781
02:13:07,449 --> 02:13:10,750
weights<font color="#E5E5E5"> makes the loss worse</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so it's</font>

2782
02:13:10,750 --> 02:13:12,579
only going to<font color="#CCCCCC"> increase the weights</font><font color="#E5E5E5"> if</font>

2783
02:13:12,579 --> 02:13:15,909
the loss improves by more than the

2784
02:13:15,909 --> 02:13:17,920
<font color="#CCCCCC">amount of that penalty and</font><font color="#E5E5E5"> in fact to</font>

2785
02:13:17,920 --> 02:13:19,630
<font color="#E5E5E5">make this</font><font color="#CCCCCC"> weight</font><font color="#E5E5E5"> to get to proper weight</font>

2786
02:13:19,630 --> 02:13:20,170
decay

2787
02:13:20,170 --> 02:13:24,219
we then need some multiplier<font color="#CCCCCC"> yeah right</font>

2788
02:13:24,219 --> 02:13:27,190
so if you<font color="#E5E5E5"> remember back</font><font color="#CCCCCC"> in our here we</font>

2789
02:13:27,190 --> 02:13:31,719
said weight<font color="#CCCCCC"> decay</font><font color="#E5E5E5"> equals</font><font color="#CCCCCC"> W d5e neg 4</font>

2790
02:13:31,719 --> 02:13:33,520
okay so to<font color="#CCCCCC"> actually use the same way to</font>

2791
02:13:33,520 --> 02:13:39,159
K I would have to<font color="#CCCCCC"> multiply by 0.005</font><font color="#E5E5E5"> all</font>

2792
02:13:39,159 --> 02:13:41,230
right so that's<font color="#CCCCCC"> actually now</font><font color="#E5E5E5"> the same</font>

2793
02:13:41,230 --> 02:13:47,679
weight okay<font color="#E5E5E5"> so if you have a really</font><font color="#CCCCCC"> high</font>

2794
02:13:47,679 --> 02:13:49,659
weight decay that<font color="#E5E5E5"> it's going to set all</font>

2795
02:13:49,659 --> 02:13:52,150
<font color="#CCCCCC">the parameters to zero so it'll never</font>

2796
02:13:52,150 --> 02:13:55,000
over fit right because it can't set any

2797
02:13:55,000 --> 02:13:57,550
parameter to anything<font color="#E5E5E5"> and so as you</font>

2798
02:13:57,550 --> 02:13:59,670
gradually decrease the weight decay<font color="#CCCCCC"> a</font>

2799
02:13:59,670 --> 02:14:02,770
few more weights can actually be<font color="#E5E5E5"> used</font>

2800
02:14:02,770 --> 02:14:05,290
right<font color="#E5E5E5"> but the ones that don't help much</font>

2801
02:14:05,290 --> 02:14:07,210
<font color="#E5E5E5">it's still</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to leave at zero or</font>

2802
02:14:07,210 --> 02:14:11,559
<font color="#CCCCCC">close to zero right so that's what</font>

2803
02:14:11,559 --> 02:14:14,469
<font color="#E5E5E5">that's what weight decay is is</font><font color="#CCCCCC"> is</font>

2804
02:14:14,469 --> 02:14:16,809
literally<font color="#E5E5E5"> to change the loss function to</font>

2805
02:14:16,809 --> 02:14:21,780
<font color="#CCCCCC">a D</font><font color="#E5E5E5"> in this sum of</font><font color="#CCCCCC"> squares</font><font color="#E5E5E5"> of weights</font>

2806
02:14:21,780 --> 02:14:25,329
times<font color="#E5E5E5"> some parameter some hyper</font>

2807
02:14:25,329 --> 02:14:28,809
parameter<font color="#CCCCCC"> I should say the problem is</font>

2808
02:14:28,809 --> 02:14:31,690
that if you<font color="#CCCCCC"> put that into the loss</font>

2809
02:14:31,690 --> 02:14:35,829
function<font color="#CCCCCC"> as I have here then it ends up</font>

2810
02:14:35,829 --> 02:14:38,139
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> moving average of gradients and</font>

2811
02:14:38,139 --> 02:14:39,639
<font color="#CCCCCC">the moving average of Squared's of</font>

2812
02:14:39,639 --> 02:14:42,940
gradients for<font color="#E5E5E5"> atom right and so</font>

2813
02:14:42,940 --> 02:14:46,929
<font color="#E5E5E5">basically we end up when there's a lot</font>

2814
02:14:46,929 --> 02:14:52,030
of variation we end up decreasing the

2815
02:14:52,030 --> 02:14:53,559
amount of weight decay<font color="#CCCCCC"> and if there's</font>

2816
02:14:53,559 --> 02:14:55,119
very little variation we end up

2817
02:14:55,119 --> 02:14:56,920
increasing the amount of weight<font color="#E5E5E5"> decay</font><font color="#CCCCCC"> so</font>

2818
02:14:56,920 --> 02:15:00,610
we end up<font color="#E5E5E5"> basically saying penalize</font>

2819
02:15:00,610 --> 02:15:02,739
parameters<font color="#E5E5E5"> you know weights that are</font>

2820
02:15:02,739 --> 02:15:03,070
<font color="#E5E5E5">really</font>

2821
02:15:03,070 --> 02:15:06,610
hi<font color="#CCCCCC"> unless their gradient varies a lot</font>

2822
02:15:06,610 --> 02:15:09,580
which is<font color="#E5E5E5"> never what we intended right</font>

2823
02:15:09,580 --> 02:15:12,580
that's<font color="#CCCCCC"> just not not the plan at all</font><font color="#E5E5E5"> so</font>

2824
02:15:12,580 --> 02:15:15,460
the trick with<font color="#CCCCCC"> Adam</font><font color="#E5E5E5"> W is we basically</font>

2825
02:15:15,460 --> 02:15:19,750
remove weight decay from here so it's

2826
02:15:19,750 --> 02:15:22,000
not in<font color="#E5E5E5"> the last function it's not</font><font color="#CCCCCC"> in the</font>

2827
02:15:22,000 --> 02:15:25,450
G not in the G squared<font color="#CCCCCC"> and we move it so</font>

2828
02:15:25,450 --> 02:15:28,480
<font color="#CCCCCC">that</font><font color="#E5E5E5"> instead it's it's it's added</font>

2829
02:15:28,480 --> 02:15:31,510
directly<font color="#CCCCCC"> to the when we update</font><font color="#E5E5E5"> with the</font>

2830
02:15:31,510 --> 02:15:32,110
learning<font color="#CCCCCC"> rate</font>

2831
02:15:32,110 --> 02:15:34,120
it's<font color="#CCCCCC"> out of</font><font color="#E5E5E5"> there instead so in other</font>

2832
02:15:34,120 --> 02:15:36,400
words it<font color="#CCCCCC"> would be we</font><font color="#E5E5E5"> would put the</font>

2833
02:15:36,400 --> 02:15:38,080
weight decay<font color="#CCCCCC"> or I should a gradient of</font>

2834
02:15:38,080 --> 02:15:40,300
<font color="#E5E5E5">the weight decay</font><font color="#CCCCCC"> in here</font><font color="#E5E5E5"> when we</font>

2835
02:15:40,300 --> 02:15:42,760
<font color="#E5E5E5">calculate the new a</font><font color="#CCCCCC"> mu V so it</font><font color="#E5E5E5"> never</font>

2836
02:15:42,760 --> 02:15:47,410
ends<font color="#E5E5E5"> up in our G M G squared so that was</font>

2837
02:15:47,410 --> 02:15:50,620
like<font color="#E5E5E5"> a super fast description which</font><font color="#CCCCCC"> will</font>

2838
02:15:50,620 --> 02:15:51,970
probably<font color="#E5E5E5"> only make sense if you listen</font>

2839
02:15:51,970 --> 02:15:53,500
to a three<font color="#E5E5E5"> or four times on</font><font color="#CCCCCC"> the video</font>

2840
02:15:53,500 --> 02:15:57,340
and<font color="#E5E5E5"> then talk about</font><font color="#CCCCCC"> it on the forum yeah</font>

2841
02:15:57,340 --> 02:15:59,730
but if you're<font color="#E5E5E5"> interested let</font><font color="#CCCCCC"> me know</font><font color="#E5E5E5"> and</font>

2842
02:15:59,730 --> 02:16:01,960
we<font color="#E5E5E5"> can also look at</font><font color="#CCCCCC"> Ann Ann's code</font>

2843
02:16:01,960 --> 02:16:08,440
<font color="#E5E5E5">that's implemented yes and you know the</font>

2844
02:16:08,440 --> 02:16:11,440
<font color="#CCCCCC">the idea of</font><font color="#E5E5E5"> using weight decay is it's a</font>

2845
02:16:11,440 --> 02:16:15,700
<font color="#E5E5E5">really helpful regularizer</font><font color="#CCCCCC"> because it's</font>

2846
02:16:15,700 --> 02:16:17,410
basically this way that we can kind<font color="#E5E5E5"> of</font>

2847
02:16:17,410 --> 02:16:23,170
<font color="#CCCCCC">stay like</font><font color="#E5E5E5"> you know please don't increase</font>

2848
02:16:23,170 --> 02:16:26,950
any of the weight values<font color="#E5E5E5"> unless the you</font>

2849
02:16:26,950 --> 02:16:31,020
know improvement in the loss is worth it

2850
02:16:31,020 --> 02:16:34,510
<font color="#CCCCCC">and so generally speaking</font><font color="#E5E5E5"> pretty much</font>

2851
02:16:34,510 --> 02:16:36,280
all<font color="#E5E5E5"> state</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> art models have both</font>

2852
02:16:36,280 --> 02:16:40,150
<font color="#CCCCCC">dropout and weight decay and I don't</font>

2853
02:16:40,150 --> 02:16:42,639
claim to<font color="#E5E5E5"> know like how to</font><font color="#CCCCCC"> set each</font><font color="#E5E5E5"> one</font>

2854
02:16:42,639 --> 02:16:46,540
<font color="#CCCCCC">and how much of</font><font color="#E5E5E5"> H to use to say like you</font>

2855
02:16:46,540 --> 02:16:51,190
it's worth trying<font color="#E5E5E5"> both to go back to the</font>

2856
02:16:51,190 --> 02:16:53,200
idea of embeddings<font color="#E5E5E5"> is there any way to</font>

2857
02:16:53,200 --> 02:16:55,600
interpret<font color="#E5E5E5"> the final to</font><font color="#CCCCCC"> reduce</font><font color="#E5E5E5"> it</font>

2858
02:16:55,600 --> 02:16:57,459
embeddings like<font color="#E5E5E5"> absolutely we're gonna</font>

2859
02:16:57,459 --> 02:16:59,170
look at that next<font color="#E5E5E5"> week</font><font color="#CCCCCC"> I've it's super</font>

2860
02:16:59,170 --> 02:17:01,870
fun it turns out that you know<font color="#CCCCCC"> we'll</font>

2861
02:17:01,870 --> 02:17:03,129
learn what some<font color="#E5E5E5"> of the worst</font><font color="#CCCCCC"> movies of</font>

2862
02:17:03,129 --> 02:17:05,550
<font color="#E5E5E5">all time</font>

2863
02:17:06,620 --> 02:17:09,180
it's<font color="#E5E5E5"> Letham it's that</font><font color="#CCCCCC"> John Travolta</font>

2864
02:17:09,180 --> 02:17:11,459
<font color="#E5E5E5">Scientology</font><font color="#CCCCCC"> once my battleship</font><font color="#E5E5E5"> earth or</font>

2865
02:17:11,459 --> 02:17:12,660
something<font color="#CCCCCC"> I think that was like the</font>

2866
02:17:12,660 --> 02:17:14,250
worst movie<font color="#CCCCCC"> of all time according to our</font>

2867
02:17:14,250 --> 02:17:21,420
<font color="#CCCCCC">beds</font><font color="#E5E5E5"> to many recommendations for scaling</font>

2868
02:17:21,420 --> 02:17:24,780
the l2 penalty or is that<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of based</font>

2869
02:17:24,780 --> 02:17:27,030
<font color="#E5E5E5">on how how wide the</font><font color="#CCCCCC"> notes are how many</font>

2870
02:17:27,030 --> 02:17:29,969
<font color="#E5E5E5">notes about III have no suggestion at</font>

2871
02:17:29,969 --> 02:17:32,639
all like I I<font color="#E5E5E5"> kind of look for like</font>

2872
02:17:32,639 --> 02:17:35,280
papers or<font color="#CCCCCC"> cackle competitions or</font>

2873
02:17:35,280 --> 02:17:37,290
whatever<font color="#E5E5E5"> similar and try to set up</font>

2874
02:17:37,290 --> 02:17:40,350
frankly the same it<font color="#CCCCCC"> seems like in a</font>

2875
02:17:40,350 --> 02:17:43,110
<font color="#E5E5E5">particular area like computer vision</font>

2876
02:17:43,110 --> 02:17:46,080
object recognition<font color="#E5E5E5"> it's like somewhere</font>

2877
02:17:46,080 --> 02:17:48,090
between<font color="#E5E5E5"> one in neck</font><font color="#CCCCCC"> four or one in egg</font>

2878
02:17:48,090 --> 02:17:50,340
five seems to work you know

2879
02:17:50,340 --> 02:17:55,110
actually in the<font color="#E5E5E5"> Adam W paper the</font><font color="#CCCCCC"> authors</font>

2880
02:17:55,110 --> 02:17:57,120
point<font color="#E5E5E5"> out that with this new</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> it</font>

2881
02:17:57,120 --> 02:17:58,590
actually becomes<font color="#CCCCCC"> like it seems to be</font>

2882
02:17:58,590 --> 02:18:00,480
much<font color="#E5E5E5"> more stable</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> to what the right</font>

2883
02:18:00,480 --> 02:18:02,459
<font color="#CCCCCC">way to K amounts are so hopefully now</font>

2884
02:18:02,459 --> 02:18:03,780
when we start playing<font color="#E5E5E5"> with it</font>

2885
02:18:03,780 --> 02:18:06,150
we'll be able<font color="#E5E5E5"> to have some definitive</font>

2886
02:18:06,150 --> 02:18:07,740
recommendations by the<font color="#E5E5E5"> time we get</font><font color="#CCCCCC"> to</font>

2887
02:18:07,740 --> 02:18:10,680
part two all right well that's<font color="#E5E5E5"> nine</font>

2888
02:18:10,680 --> 02:18:16,020
o'clock<font color="#CCCCCC"> so this week you know practice</font>

2889
02:18:16,020 --> 02:18:17,280
the thing that<font color="#CCCCCC"> you're least familiar</font>

2890
02:18:17,280 --> 02:18:19,680
<font color="#E5E5E5">with so if it's like jacobians and</font>

2891
02:18:19,680 --> 02:18:21,059
Hessians read about those if it's

2892
02:18:21,059 --> 02:18:23,309
broadcasting read about<font color="#E5E5E5"> those if it's</font>

2893
02:18:23,309 --> 02:18:25,320
understanding<font color="#CCCCCC"> python ooo read</font><font color="#E5E5E5"> about that</font>

2894
02:18:25,320 --> 02:18:26,969
<font color="#E5E5E5">you know try</font><font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> your own</font>

2895
02:18:26,969 --> 02:18:29,340
custom layers<font color="#E5E5E5"> read the</font><font color="#CCCCCC"> faster higher</font>

2896
02:18:29,340 --> 02:18:32,219
layers<font color="#E5E5E5"> you know and and talk on the</font>

2897
02:18:32,219 --> 02:18:35,459
forum about anything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> find weird</font>

2898
02:18:35,459 --> 00:00:00,000
or confusing<font color="#CCCCCC"> alright see you next week</font>

