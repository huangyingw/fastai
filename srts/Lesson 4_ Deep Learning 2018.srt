1
00:00:00,060 --> 00:00:02,760
<font color="#E5E5E5">okay hi everybody welcome</font><font color="#CCCCCC"> back let's see</font>

2
00:00:02,760 --> 00:00:09,929
you all here<font color="#CCCCCC"> it's been another busy week</font>

3
00:00:09,929 --> 00:00:14,190
<font color="#E5E5E5">of deep learning</font><font color="#CCCCCC"> lots of cool things</font>

4
00:00:14,190 --> 00:00:16,770
<font color="#CCCCCC">going on and</font><font color="#E5E5E5"> like last week I</font><font color="#CCCCCC"> would have</font>

5
00:00:16,770 --> 00:00:18,240
<font color="#CCCCCC">to highlight a few really interesting</font>

6
00:00:18,240 --> 00:00:20,369
articles that some of some<font color="#E5E5E5"> of you folks</font>

7
00:00:20,369 --> 00:00:23,330
<font color="#CCCCCC">have have written</font>

8
00:00:24,480 --> 00:00:29,609
<font color="#CCCCCC">vitaliy wrote one of</font><font color="#E5E5E5"> the best articles</font>

9
00:00:29,609 --> 00:00:31,980
<font color="#E5E5E5">I've seen for a while I think</font><font color="#CCCCCC"> actually</font>

10
00:00:31,980 --> 00:00:34,620
<font color="#E5E5E5">talking about differential learning</font>

11
00:00:34,620 --> 00:00:35,910
rates and stochastic<font color="#CCCCCC"> gradient descent</font>

12
00:00:35,910 --> 00:00:39,960
<font color="#E5E5E5">with restarts</font><font color="#CCCCCC"> be sure to</font><font color="#E5E5E5"> check</font><font color="#CCCCCC"> it out</font><font color="#E5E5E5"> if</font>

13
00:00:39,960 --> 00:00:41,640
you can<font color="#E5E5E5"> because what he's done I feel</font>

14
00:00:41,640 --> 00:00:45,410
like he's done<font color="#CCCCCC"> a great job</font><font color="#E5E5E5"> of kind of</font>

15
00:00:45,410 --> 00:00:47,489
positioning<font color="#CCCCCC"> it a place</font><font color="#E5E5E5"> that you can get</font>

16
00:00:47,489 --> 00:00:49,620
a lot out<font color="#CCCCCC"> of it you know regardless of</font>

17
00:00:49,620 --> 00:00:51,750
your background<font color="#E5E5E5"> but for those</font><font color="#CCCCCC"> who want</font>

18
00:00:51,750 --> 00:00:53,309
to go<font color="#CCCCCC"> further he's also got links to</font>

19
00:00:53,309 --> 00:00:55,079
<font color="#CCCCCC">like the academic papers it came from</font>

20
00:00:55,079 --> 00:00:58,109
and kind of rests of showing<font color="#CCCCCC"> examples of</font>

21
00:00:58,109 --> 00:00:59,780
all<font color="#E5E5E5"> of all the things he's talking about</font>

22
00:00:59,780 --> 00:01:02,809
and I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> a it's a particularly</font>

23
00:01:02,809 --> 00:01:06,360
nicely done<font color="#E5E5E5"> article so good kind of role</font>

24
00:01:06,360 --> 00:01:09,960
<font color="#CCCCCC">model</font><font color="#E5E5E5"> for technical communication</font><font color="#CCCCCC"> one of</font>

25
00:01:09,960 --> 00:01:11,250
the things I've liked about you know

26
00:01:11,250 --> 00:01:14,130
<font color="#E5E5E5">seeing people post these post these</font>

27
00:01:14,130 --> 00:01:15,689
articles<font color="#E5E5E5"> during the week is the</font>

28
00:01:15,689 --> 00:01:17,549
discussion on the forums have<font color="#E5E5E5"> also been</font>

29
00:01:17,549 --> 00:01:19,200
like really<font color="#E5E5E5"> great there's been a lot</font><font color="#CCCCCC"> of</font>

30
00:01:19,200 --> 00:01:22,460
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people helping out like</font>

31
00:01:22,460 --> 00:01:24,960
explaining things<font color="#CCCCCC"> you know which you</font>

32
00:01:24,960 --> 00:01:26,220
know maybe<font color="#CCCCCC"> those parts of the post</font>

33
00:01:26,220 --> 00:01:27,509
period where people<font color="#CCCCCC"> have said actually</font>

34
00:01:27,509 --> 00:01:29,220
that's<font color="#CCCCCC"> not quite how</font><font color="#E5E5E5"> it works and</font><font color="#CCCCCC"> people</font>

35
00:01:29,220 --> 00:01:31,259
have learnt new<font color="#CCCCCC"> things that way people</font>

36
00:01:31,259 --> 00:01:32,939
<font color="#E5E5E5">have come up</font><font color="#CCCCCC"> with new ideas as a result</font>

37
00:01:32,939 --> 00:01:37,920
as well<font color="#CCCCCC"> these</font><font color="#E5E5E5"> discussions of</font><font color="#CCCCCC"> stochastic</font>

38
00:01:37,920 --> 00:01:39,360
gradient descent with restarts<font color="#E5E5E5"> and</font>

39
00:01:39,360 --> 00:01:40,710
<font color="#E5E5E5">cyclic</font><font color="#CCCCCC"> or learning rates just being a</font>

40
00:01:40,710 --> 00:01:42,750
few of them actually<font color="#CCCCCC"> Anand</font>

41
00:01:42,750 --> 00:01:45,619
sahar has written<font color="#E5E5E5"> another great post</font>

42
00:01:45,619 --> 00:01:49,590
<font color="#CCCCCC">talking about a similar</font><font color="#E5E5E5"> similar topic</font>

43
00:01:49,590 --> 00:01:51,780
and why it<font color="#E5E5E5"> works so</font><font color="#CCCCCC"> well and again</font><font color="#E5E5E5"> lots</font>

44
00:01:51,780 --> 00:01:54,649
of great pictures<font color="#CCCCCC"> and</font><font color="#E5E5E5"> references to</font>

45
00:01:54,649 --> 00:01:57,960
papers and most importantly perhaps code

46
00:01:57,960 --> 00:02:01,670
<font color="#CCCCCC">showing how it actually works</font>

47
00:02:01,950 --> 00:02:05,380
<font color="#CCCCCC">mark Hoffman covered</font><font color="#E5E5E5"> the same topic at</font>

48
00:02:05,380 --> 00:02:07,600
kind<font color="#CCCCCC"> of a nice introductory level I</font>

49
00:02:07,600 --> 00:02:09,580
think<font color="#E5E5E5"> really</font><font color="#CCCCCC"> really kind</font><font color="#E5E5E5"> of clear</font>

50
00:02:09,580 --> 00:02:13,870
intuition<font color="#CCCCCC"> many Cantor</font><font color="#E5E5E5"> talk specifically</font>

51
00:02:13,870 --> 00:02:16,450
about differential learning rates<font color="#CCCCCC"> and</font>

52
00:02:16,450 --> 00:02:19,390
why it's<font color="#E5E5E5"> interesting and again providing</font>

53
00:02:19,390 --> 00:02:20,920
some nice<font color="#E5E5E5"> context to people not familiar</font>

54
00:02:20,920 --> 00:02:22,569
<font color="#E5E5E5">with transfer learning you're not going</font>

55
00:02:22,569 --> 00:02:23,890
<font color="#E5E5E5">right back to</font><font color="#CCCCCC"> saying like or what is</font>

56
00:02:23,890 --> 00:02:25,720
transfer learning<font color="#E5E5E5"> why is that</font>

57
00:02:25,720 --> 00:02:28,690
interesting<font color="#CCCCCC"> and given</font><font color="#E5E5E5"> that why good</font>

58
00:02:28,690 --> 00:02:31,019
differential learning rates be helpful

59
00:02:31,019 --> 00:02:34,720
and then one thing<font color="#E5E5E5"> I particularly liked</font>

60
00:02:34,720 --> 00:02:35,700
about<font color="#CCCCCC"> arjen's</font>

61
00:02:35,700 --> 00:02:38,170
article was<font color="#CCCCCC"> that he talked not just</font>

62
00:02:38,170 --> 00:02:39,730
about the<font color="#CCCCCC"> technology that we're looking</font>

63
00:02:39,730 --> 00:02:42,000
at but<font color="#CCCCCC"> also talked about some of</font><font color="#E5E5E5"> the</font>

64
00:02:42,000 --> 00:02:44,319
implications particularly from a

65
00:02:44,319 --> 00:02:46,750
<font color="#E5E5E5">commercial point of view</font><font color="#CCCCCC"> so thinking</font>

66
00:02:46,750 --> 00:02:48,700
about<font color="#E5E5E5"> like based on some of the things</font>

67
00:02:48,700 --> 00:02:50,380
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> learned about so far</font><font color="#E5E5E5"> what are some</font>

68
00:02:50,380 --> 00:02:52,420
of the<font color="#E5E5E5"> implications that that has you</font>

69
00:02:52,420 --> 00:02:54,849
know in real life<font color="#CCCCCC"> and lots of background</font>

70
00:02:54,849 --> 00:02:58,540
<font color="#CCCCCC">lots of pictures and then discussing</font>

71
00:02:58,540 --> 00:02:59,829
<font color="#CCCCCC">some</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the yeah some of</font><font color="#E5E5E5"> the</font>

72
00:02:59,829 --> 00:03:02,349
<font color="#CCCCCC">implications so there's been lots of</font>

73
00:03:02,349 --> 00:03:04,090
great stuff online and<font color="#E5E5E5"> thanks to</font>

74
00:03:04,090 --> 00:03:06,040
everybody for all<font color="#E5E5E5"> the great</font><font color="#CCCCCC"> work that</font>

75
00:03:06,040 --> 00:03:09,819
<font color="#CCCCCC">you've been</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> as we talked</font><font color="#E5E5E5"> about</font>

76
00:03:09,819 --> 00:03:12,220
<font color="#E5E5E5">last week if you're kind of vaguely</font>

77
00:03:12,220 --> 00:03:13,959
wondering<font color="#E5E5E5"> about writing</font><font color="#CCCCCC"> something but</font>

78
00:03:13,959 --> 00:03:15,250
you're feeling<font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> intimidated</font><font color="#CCCCCC"> about</font>

79
00:03:15,250 --> 00:03:16,720
it because you've never really<font color="#E5E5E5"> written a</font>

80
00:03:16,720 --> 00:03:19,120
technical post<font color="#CCCCCC"> before just jump in you</font>

81
00:03:19,120 --> 00:03:22,319
know it's it's it's it's<font color="#E5E5E5"> a really</font>

82
00:03:22,319 --> 00:03:25,030
welcoming<font color="#E5E5E5"> and encouraging group I think</font>

83
00:03:25,030 --> 00:03:28,350
<font color="#E5E5E5">to to work with</font>

84
00:03:30,690 --> 00:03:32,010
so we're going to<font color="#E5E5E5"> have a kind of an</font>

85
00:03:32,010 --> 00:03:34,740
<font color="#E5E5E5">interesting lesson today which is</font><font color="#CCCCCC"> we're</font>

86
00:03:34,740 --> 00:03:39,120
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to cover a whole lot of different</font>

87
00:03:39,120 --> 00:03:41,220
applications<font color="#CCCCCC"> so we've we've spent quite</font>

88
00:03:41,220 --> 00:03:42,810
a<font color="#E5E5E5"> lot of time on computer vision</font><font color="#CCCCCC"> and</font>

89
00:03:42,810 --> 00:03:45,540
today we're going to<font color="#E5E5E5"> try if</font><font color="#CCCCCC"> we can to</font>

90
00:03:45,540 --> 00:03:47,820
get through three totally<font color="#CCCCCC"> different</font>

91
00:03:47,820 --> 00:03:51,090
areas<font color="#CCCCCC"> structured learning</font><font color="#E5E5E5"> so looking at</font>

92
00:03:51,090 --> 00:03:54,630
kind of how you look<font color="#E5E5E5"> at so we're going</font>

93
00:03:54,630 --> 00:03:55,950
<font color="#E5E5E5">to start out</font><font color="#CCCCCC"> looking at structured</font>

94
00:03:55,950 --> 00:03:58,740
learning<font color="#CCCCCC"> or structured data learning by</font>

95
00:03:58,740 --> 00:04:02,370
which I mean<font color="#E5E5E5"> building models on top of</font>

96
00:04:02,370 --> 00:04:05,220
<font color="#E5E5E5">things look more like database tables so</font>

97
00:04:05,220 --> 00:04:07,470
<font color="#CCCCCC">kind of columns of different types of</font>

98
00:04:07,470 --> 00:04:09,180
data<font color="#CCCCCC"> there</font><font color="#E5E5E5"> might be financial or</font>

99
00:04:09,180 --> 00:04:12,030
geographical or whatever<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font>

100
00:04:12,030 --> 00:04:14,910
<font color="#E5E5E5">look at using deep</font><font color="#CCCCCC"> learning</font><font color="#E5E5E5"> for language</font>

101
00:04:14,910 --> 00:04:17,730
natural<font color="#E5E5E5"> language processing</font><font color="#CCCCCC"> and we're</font>

102
00:04:17,730 --> 00:04:19,529
going<font color="#E5E5E5"> to look at using deep</font><font color="#CCCCCC"> learning for</font>

103
00:04:19,529 --> 00:04:21,810
recommendation systems<font color="#E5E5E5"> and so we're</font>

104
00:04:21,810 --> 00:04:24,480
going<font color="#E5E5E5"> to cover these at a very high</font>

105
00:04:24,480 --> 00:04:28,380
level<font color="#CCCCCC"> and the focus will be</font><font color="#E5E5E5"> on</font>

106
00:04:28,380 --> 00:04:31,080
<font color="#CCCCCC">here's</font><font color="#E5E5E5"> how to use</font><font color="#CCCCCC"> the software</font><font color="#E5E5E5"> to do it</font>

107
00:04:31,080 --> 00:04:33,510
more<font color="#CCCCCC"> then here is what's going</font><font color="#E5E5E5"> on behind</font>

108
00:04:33,510 --> 00:04:35,670
<font color="#E5E5E5">the scenes and then</font><font color="#CCCCCC"> the next three</font>

109
00:04:35,670 --> 00:04:38,430
<font color="#E5E5E5">lessons</font><font color="#CCCCCC"> we'll be digging</font><font color="#E5E5E5"> into the</font>

110
00:04:38,430 --> 00:04:39,870
<font color="#E5E5E5">details of what's been</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> on behind</font>

111
00:04:39,870 --> 00:04:42,150
the<font color="#E5E5E5"> scenes and also coming back to</font>

112
00:04:42,150 --> 00:04:44,070
looking at<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of the details of</font>

113
00:04:44,070 --> 00:04:46,200
computer vision that<font color="#CCCCCC"> we've kind of</font>

114
00:04:46,200 --> 00:04:49,380
skipped over so far<font color="#E5E5E5"> so the focus today</font>

115
00:04:49,380 --> 00:04:52,800
<font color="#E5E5E5">is really on like how do you actually do</font>

116
00:04:52,800 --> 00:04:54,900
these applications<font color="#E5E5E5"> and we'll kind of</font>

117
00:04:54,900 --> 00:04:56,940
talk briefly about<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the concepts</font>

118
00:04:56,940 --> 00:05:01,200
<font color="#CCCCCC">involved before we do I did want to</font><font color="#E5E5E5"> talk</font>

119
00:05:01,200 --> 00:05:07,020
about one key<font color="#E5E5E5"> new concept which is</font>

120
00:05:07,020 --> 00:05:09,840
<font color="#CCCCCC">dropout and</font><font color="#E5E5E5"> you might have seen</font><font color="#CCCCCC"> dropout</font>

121
00:05:09,840 --> 00:05:11,490
mentioned a<font color="#E5E5E5"> bunch of times already and</font>

122
00:05:11,490 --> 00:05:12,750
got<font color="#CCCCCC"> there</font><font color="#E5E5E5"> got the impression that this</font>

123
00:05:12,750 --> 00:05:14,810
<font color="#CCCCCC">is</font><font color="#E5E5E5"> something important and indeed it is</font>

124
00:05:14,810 --> 00:05:17,310
<font color="#CCCCCC">so look</font><font color="#E5E5E5"> at dropout I'm going to look at</font>

125
00:05:17,310 --> 00:05:22,530
the dog breeds<font color="#CCCCCC"> current cable competition</font>

126
00:05:22,530 --> 00:05:25,080
<font color="#E5E5E5">that's going on and what I've done is</font>

127
00:05:25,080 --> 00:05:28,470
I've gone ahead and I've created a<font color="#E5E5E5"> pre</font>

128
00:05:28,470 --> 00:05:31,320
<font color="#CCCCCC">train</font><font color="#E5E5E5"> network as per usual</font><font color="#CCCCCC"> and I've</font>

129
00:05:31,320 --> 00:05:33,750
passed<font color="#CCCCCC"> in</font><font color="#E5E5E5"> pre compute equals true and so</font>

130
00:05:33,750 --> 00:05:36,870
that's going to pre compute the

131
00:05:36,870 --> 00:05:38,940
activations that<font color="#E5E5E5"> come out</font><font color="#CCCCCC"> of the last</font>

132
00:05:38,940 --> 00:05:40,770
convolutional layer<font color="#E5E5E5"> remember an</font>

133
00:05:40,770 --> 00:05:42,240
activation<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> a number</font>

134
00:05:42,240 --> 00:05:45,300
it's a<font color="#E5E5E5"> number just</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> remind you an</font>

135
00:05:45,300 --> 00:05:48,720
activation like here is one activation

136
00:05:48,720 --> 00:05:51,000
it's a number and specifically the

137
00:05:51,000 --> 00:05:53,720
activations are calculated based on some

138
00:05:53,720 --> 00:05:57,960
weights<font color="#E5E5E5"> also</font><font color="#CCCCCC"> called parameters</font><font color="#E5E5E5"> that make</font>

139
00:05:57,960 --> 00:06:00,990
up<font color="#E5E5E5"> kernels or filters and they get</font>

140
00:06:00,990 --> 00:06:02,520
applied to the<font color="#E5E5E5"> previous layers</font>

141
00:06:02,520 --> 00:06:05,160
activations but it could well be<font color="#CCCCCC"> the</font>

142
00:06:05,160 --> 00:06:07,800
inputs<font color="#CCCCCC"> or they</font><font color="#E5E5E5"> could themselves be the</font>

143
00:06:07,800 --> 00:06:09,540
results of other calculations<font color="#CCCCCC"> okay so</font>

144
00:06:09,540 --> 00:06:11,220
when we say activation keep remembering

145
00:06:11,220 --> 00:06:12,960
<font color="#E5E5E5">we're talking about a</font><font color="#CCCCCC"> number</font><font color="#E5E5E5"> that's</font>

146
00:06:12,960 --> 00:06:14,210
being calculated

147
00:06:14,210 --> 00:06:17,550
so<font color="#E5E5E5"> we've pre compute some activations</font>

148
00:06:17,550 --> 00:06:20,430
<font color="#E5E5E5">and then what we do is</font><font color="#CCCCCC"> we put on</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> of</font>

149
00:06:20,430 --> 00:06:23,370
<font color="#E5E5E5">that a bunch of</font><font color="#CCCCCC"> additional initially</font>

150
00:06:23,370 --> 00:06:26,010
randomly generated<font color="#E5E5E5"> fully connected</font>

151
00:06:26,010 --> 00:06:27,480
layers<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> just going to do some</font>

152
00:06:27,480 --> 00:06:29,370
matrix<font color="#E5E5E5"> multiplications on top of these</font>

153
00:06:29,370 --> 00:06:32,640
just<font color="#E5E5E5"> like in our</font><font color="#CCCCCC"> Excel</font><font color="#E5E5E5"> worksheet at the</font>

154
00:06:32,640 --> 00:06:35,150
very end

155
00:06:35,330 --> 00:06:38,449
we had this matrix<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we just</font><font color="#E5E5E5"> did a</font>

156
00:06:38,449 --> 00:06:43,009
matrix multiplication<font color="#CCCCCC"> but</font><font color="#E5E5E5"> so what you</font>

157
00:06:43,009 --> 00:06:46,370
can<font color="#CCCCCC"> actually do is if you</font><font color="#E5E5E5"> just type</font><font color="#CCCCCC"> the</font>

158
00:06:46,370 --> 00:06:48,110
name<font color="#CCCCCC"> of your loner</font><font color="#E5E5E5"> object you can</font>

159
00:06:48,110 --> 00:06:50,569
actually<font color="#E5E5E5"> see what's in it you can see</font>

160
00:06:50,569 --> 00:06:52,340
the layers in<font color="#E5E5E5"> it so when I was</font>

161
00:06:52,340 --> 00:06:54,319
previously<font color="#E5E5E5"> been skipping over a</font><font color="#CCCCCC"> little</font>

162
00:06:54,319 --> 00:06:56,180
<font color="#E5E5E5">bit about</font><font color="#CCCCCC"> are we add a few</font><font color="#E5E5E5"> layers to the</font>

163
00:06:56,180 --> 00:06:58,870
end<font color="#E5E5E5"> these are actually the layers of yet</font>

164
00:06:58,870 --> 00:07:01,460
<font color="#CCCCCC">we're going to do batch norm in the last</font>

165
00:07:01,460 --> 00:07:02,900
lesson<font color="#CCCCCC"> so don't worry about</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> for now</font>

166
00:07:02,900 --> 00:07:06,229
<font color="#CCCCCC">a</font><font color="#E5E5E5"> linear layer simply means a matrix</font>

167
00:07:06,229 --> 00:07:08,509
multiply<font color="#E5E5E5"> okay so this is a matrix</font><font color="#CCCCCC"> which</font>

168
00:07:08,509 --> 00:07:13,460
<font color="#CCCCCC">has a</font><font color="#E5E5E5"> 1024 rows and 512 columns and so</font>

169
00:07:13,460 --> 00:07:14,680
in other words it's going<font color="#E5E5E5"> to take in</font>

170
00:07:14,680 --> 00:07:18,860
1024 activations<font color="#E5E5E5"> and spit out 512</font>

171
00:07:18,860 --> 00:07:22,430
activations<font color="#CCCCCC"> then we have a</font><font color="#E5E5E5"> rail unit</font>

172
00:07:22,430 --> 00:07:23,810
which remember<font color="#CCCCCC"> is just replace the</font>

173
00:07:23,810 --> 00:07:26,750
negatives with<font color="#CCCCCC"> 0 we'll</font><font color="#E5E5E5"> skip over the</font>

174
00:07:26,750 --> 00:07:29,060
<font color="#E5E5E5">batch norm</font><font color="#CCCCCC"> we'll come back</font><font color="#E5E5E5"> drop out then</font>

175
00:07:29,060 --> 00:07:30,560
we<font color="#E5E5E5"> have a second linear layer that takes</font>

176
00:07:30,560 --> 00:07:33,050
those 512 activations from<font color="#E5E5E5"> the previous</font>

177
00:07:33,050 --> 00:07:35,060
linear layer and puts them through<font color="#E5E5E5"> a new</font>

178
00:07:35,060 --> 00:07:39,259
<font color="#E5E5E5">matrix multiply</font><font color="#CCCCCC"> 5 12 by 120 it spits out</font>

179
00:07:39,259 --> 00:07:42,229
a new 120 activations<font color="#E5E5E5"> and then finally</font>

180
00:07:42,229 --> 00:07:45,110
put<font color="#CCCCCC"> that through soft mats and for</font><font color="#E5E5E5"> those</font>

181
00:07:45,110 --> 00:07:47,509
<font color="#CCCCCC">of you that don't remember softmax we</font>

182
00:07:47,509 --> 00:07:50,210
looked at that<font color="#E5E5E5"> last year last week it's</font>

183
00:07:50,210 --> 00:07:53,090
this idea<font color="#CCCCCC"> that we basically just take</font>

184
00:07:53,090 --> 00:07:57,020
the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> activation let's say</font><font color="#CCCCCC"> the dog</font><font color="#E5E5E5"> go</font>

185
00:07:57,020 --> 00:07:59,569
e<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the power</font><font color="#CCCCCC"> of that and then divide</font>

186
00:07:59,569 --> 00:08:02,180
<font color="#CCCCCC">that into the sum of e to the power of</font>

187
00:08:02,180 --> 00:08:03,770
all the intermissions<font color="#CCCCCC"> so that was the</font>

188
00:08:03,770 --> 00:08:05,509
thing that adds up to one<font color="#CCCCCC"> all of them</font>

189
00:08:05,509 --> 00:08:07,279
add up<font color="#E5E5E5"> to</font><font color="#CCCCCC"> one and each one individually</font>

190
00:08:07,279 --> 00:08:12,440
is between<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> and 1</font><font color="#E5E5E5"> ok so that's that's</font>

191
00:08:12,440 --> 00:08:14,300
what we added<font color="#E5E5E5"> on top and that's the</font>

192
00:08:14,300 --> 00:08:15,740
thing when we have<font color="#E5E5E5"> pre computed calls</font>

193
00:08:15,740 --> 00:08:17,659
true<font color="#E5E5E5"> that's the thing we</font><font color="#CCCCCC"> trained so I</font>

194
00:08:17,659 --> 00:08:19,460
wanted<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> what this dropout</font>

195
00:08:19,460 --> 00:08:21,620
is and what this key is<font color="#E5E5E5"> because it's a</font>

196
00:08:21,620 --> 00:08:24,139
really<font color="#E5E5E5"> important thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we get</font><font color="#CCCCCC"> to</font>

197
00:08:24,139 --> 00:08:27,289
<font color="#CCCCCC">choose so a</font><font color="#E5E5E5"> dropout layer with P equals</font>

198
00:08:27,289 --> 00:08:30,409
<font color="#E5E5E5">0.5 literally does this we go over to</font>

199
00:08:30,409 --> 00:08:32,719
<font color="#E5E5E5">our spreadsheet and let's pick any layer</font>

200
00:08:32,719 --> 00:08:34,789
with some activations<font color="#E5E5E5"> and let's say</font><font color="#CCCCCC"> ok</font>

201
00:08:34,789 --> 00:08:37,458
I'm going<font color="#E5E5E5"> to apply dropout with a P of</font>

202
00:08:37,458 --> 00:08:41,360
0.5<font color="#E5E5E5"> to con true what that means</font><font color="#CCCCCC"> is I go</font>

203
00:08:41,360 --> 00:08:46,070
<font color="#CCCCCC">through and with a 50% chance</font><font color="#E5E5E5"> I pick a</font>

204
00:08:46,070 --> 00:08:48,560
cell right pick an activation so I kept

205
00:08:48,560 --> 00:08:48,860
like

206
00:08:48,860 --> 00:08:53,230
half of them randomly<font color="#E5E5E5"> and I delete them</font>

207
00:08:53,230 --> 00:08:57,410
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> that's that's what dropout is right</font>

208
00:08:57,410 --> 00:09:01,130
<font color="#E5E5E5">so it's so the</font><font color="#CCCCCC"> P equals 0.5 means</font><font color="#E5E5E5"> what's</font>

209
00:09:01,130 --> 00:09:03,970
the probability of deleting that cell

210
00:09:03,970 --> 00:09:08,350
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> so when I delete those cells</font>

211
00:09:08,350 --> 00:09:11,209
<font color="#E5E5E5">if you have a log like look at the</font>

212
00:09:11,209 --> 00:09:13,370
output it doesn't<font color="#E5E5E5"> actually change by</font>

213
00:09:13,370 --> 00:09:15,110
very much<font color="#E5E5E5"> at all</font><font color="#CCCCCC"> just a little bit</font>

214
00:09:15,110 --> 00:09:16,579
<font color="#E5E5E5">particularly because remember it's</font>

215
00:09:16,579 --> 00:09:17,810
<font color="#E5E5E5">getting through a</font><font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> spalling layer</font>

216
00:09:17,810 --> 00:09:19,339
<font color="#E5E5E5">right so it's only going to change it at</font>

217
00:09:19,339 --> 00:09:22,010
all<font color="#CCCCCC"> if it</font><font color="#E5E5E5"> was actually the maximum in</font>

218
00:09:22,010 --> 00:09:25,100
that group of<font color="#E5E5E5"> four</font><font color="#CCCCCC"> and furthermore it's</font>

219
00:09:25,100 --> 00:09:27,529
just one piece<font color="#CCCCCC"> of you know</font><font color="#E5E5E5"> if it's going</font>

220
00:09:27,529 --> 00:09:29,450
<font color="#E5E5E5">into</font><font color="#CCCCCC"> a convolution</font><font color="#E5E5E5"> rather than into a</font>

221
00:09:29,450 --> 00:09:32,060
<font color="#E5E5E5">max Paul is just one piece</font><font color="#CCCCCC"> of that</font><font color="#E5E5E5"> that</font>

222
00:09:32,060 --> 00:09:37,390
filter<font color="#CCCCCC"> so</font><font color="#E5E5E5"> interestingly the idea of like</font>

223
00:09:37,390 --> 00:09:39,740
randomly throwing away half<font color="#E5E5E5"> of the</font>

224
00:09:39,740 --> 00:09:43,490
activations<font color="#E5E5E5"> in a layer has a really</font>

225
00:09:43,490 --> 00:09:46,640
<font color="#CCCCCC">interesting result and one important</font>

226
00:09:46,640 --> 00:09:49,910
<font color="#CCCCCC">thing to mention</font><font color="#E5E5E5"> is each mini batch we</font>

227
00:09:49,910 --> 00:09:53,060
throw<font color="#CCCCCC"> away a</font><font color="#E5E5E5"> different random</font><font color="#CCCCCC"> half of</font>

228
00:09:53,060 --> 00:09:55,610
activations<font color="#CCCCCC"> earlier and so what it means</font>

229
00:09:55,610 --> 00:10:00,500
is it<font color="#E5E5E5"> forces it to not over fit right in</font>

230
00:10:00,500 --> 00:10:02,060
<font color="#E5E5E5">other words if there's some particular</font>

231
00:10:02,060 --> 00:10:04,760
activation that's really learnt<font color="#E5E5E5"> just</font>

232
00:10:04,760 --> 00:10:08,899
that exact<font color="#E5E5E5"> that exact dog or that exact</font>

233
00:10:08,899 --> 00:10:11,899
cat<font color="#E5E5E5"> right then when that gets dropped</font>

234
00:10:11,899 --> 00:10:14,570
out the whole<font color="#E5E5E5"> thing now isn't going to</font>

235
00:10:14,570 --> 00:10:15,800
work as<font color="#CCCCCC"> well it's not</font><font color="#E5E5E5"> going to recognize</font>

236
00:10:15,800 --> 00:10:18,560
<font color="#E5E5E5">that image right so it has to in</font><font color="#CCCCCC"> order</font>

237
00:10:18,560 --> 00:10:21,110
for this to work<font color="#CCCCCC"> it has to try and</font><font color="#E5E5E5"> find</font>

238
00:10:21,110 --> 00:10:25,279
a representation that that actually

239
00:10:25,279 --> 00:10:28,850
<font color="#E5E5E5">continues to work</font><font color="#CCCCCC"> even as random half of</font>

240
00:10:28,850 --> 00:10:31,190
the activations get thrown away every

241
00:10:31,190 --> 00:10:34,220
time<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> so it's a it's it's I</font>

242
00:10:34,220 --> 00:10:36,769
guess about four years old<font color="#CCCCCC"> now three</font><font color="#E5E5E5"> or</font>

243
00:10:36,769 --> 00:10:41,720
<font color="#E5E5E5">four years old and it's been absolutely</font>

244
00:10:41,720 --> 00:10:44,779
critical<font color="#E5E5E5"> in making modern deep learning</font>

245
00:10:44,779 --> 00:10:47,750
<font color="#E5E5E5">work and the reason why is it really</font>

246
00:10:47,750 --> 00:10:50,870
just<font color="#CCCCCC"> about solve the problem of</font>

247
00:10:50,870 --> 00:10:52,970
generalization for us before<font color="#CCCCCC"> drop</font><font color="#E5E5E5"> out</font>

248
00:10:52,970 --> 00:10:56,480
came along<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> try to train a model</font>

249
00:10:56,480 --> 00:10:59,569
<font color="#E5E5E5">with lots of parameters</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you were</font>

250
00:10:59,569 --> 00:11:02,360
overfitting<font color="#CCCCCC"> and you already</font><font color="#E5E5E5"> tried all</font>

251
00:11:02,360 --> 00:11:02,660
the

252
00:11:02,660 --> 00:11:05,209
<font color="#CCCCCC">imitation you could and</font><font color="#E5E5E5"> you already had</font>

253
00:11:05,209 --> 00:11:08,149
as much data as<font color="#CCCCCC"> you could</font><font color="#E5E5E5"> you there were</font>

254
00:11:08,149 --> 00:11:09,649
some other things<font color="#E5E5E5"> you could try but to a</font>

255
00:11:09,649 --> 00:11:12,079
large<font color="#E5E5E5"> degree you were kind of stuck okay</font>

256
00:11:12,079 --> 00:11:16,279
and so then<font color="#E5E5E5"> Geoffrey Hinton and his</font>

257
00:11:16,279 --> 00:11:17,870
colleagues came up with this this

258
00:11:17,870 --> 00:11:20,000
<font color="#CCCCCC">dropout idea that was</font><font color="#E5E5E5"> loosely inspired</font>

259
00:11:20,000 --> 00:11:23,810
by the way the brain works<font color="#E5E5E5"> and also</font>

260
00:11:23,810 --> 00:11:25,670
<font color="#E5E5E5">loosely inspired by Geoffrey Hinton's</font>

261
00:11:25,670 --> 00:11:27,410
experience in bank teller<font color="#CCCCCC"> Hugh's</font>

262
00:11:27,410 --> 00:11:31,550
<font color="#E5E5E5">apparently and</font><font color="#CCCCCC"> yeah somehow they came up</font>

263
00:11:31,550 --> 00:11:32,990
with<font color="#CCCCCC"> this</font><font color="#E5E5E5"> amazing idea of like hey let's</font>

264
00:11:32,990 --> 00:11:35,870
let's try<font color="#E5E5E5"> throwing things away at random</font>

265
00:11:35,870 --> 00:11:40,670
<font color="#E5E5E5">and so as you could</font><font color="#CCCCCC"> imagine if your P</font>

266
00:11:40,670 --> 00:11:43,579
was like point<font color="#CCCCCC"> O one then you're</font>

267
00:11:43,579 --> 00:11:46,399
throwing away<font color="#CCCCCC"> 1% of your activations for</font>

268
00:11:46,399 --> 00:11:48,889
that layer<font color="#E5E5E5"> at random it's not gonna</font>

269
00:11:48,889 --> 00:11:51,410
randomly change things up very<font color="#CCCCCC"> much</font><font color="#E5E5E5"> at</font>

270
00:11:51,410 --> 00:11:54,319
all<font color="#CCCCCC"> so it's not really</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> protect</font>

271
00:11:54,319 --> 00:11:58,100
you from overfitting<font color="#CCCCCC"> much at</font><font color="#E5E5E5"> all on the</font>

272
00:11:58,100 --> 00:12:00,860
<font color="#E5E5E5">other hand if your pain was 0.99 then</font>

273
00:12:00,860 --> 00:12:02,810
that would be<font color="#CCCCCC"> like going through</font><font color="#E5E5E5"> the</font>

274
00:12:02,810 --> 00:12:04,759
whole<font color="#E5E5E5"> thing and throwing</font><font color="#CCCCCC"> away nearly</font>

275
00:12:04,759 --> 00:12:08,569
<font color="#CCCCCC">everything right</font><font color="#E5E5E5"> and that would be very</font>

276
00:12:08,569 --> 00:12:12,050
hard<font color="#CCCCCC"> for it</font><font color="#E5E5E5"> to overfit so that would be</font>

277
00:12:12,050 --> 00:12:13,850
great<font color="#E5E5E5"> for generalization but it's also</font>

278
00:12:13,850 --> 00:12:17,870
going<font color="#E5E5E5"> to kill your accuracy so this is</font>

279
00:12:17,870 --> 00:12:21,860
kind of play<font color="#CCCCCC"> off between</font><font color="#E5E5E5"> high p-values</font>

280
00:12:21,860 --> 00:12:24,290
<font color="#CCCCCC">generalized well but will decrease your</font>

281
00:12:24,290 --> 00:12:27,170
<font color="#E5E5E5">training accuracy and low p-values will</font>

282
00:12:27,170 --> 00:12:29,269
generalize less well that will give you

283
00:12:29,269 --> 00:12:32,509
a less good training accuracy so for

284
00:12:32,509 --> 00:12:33,800
<font color="#E5E5E5">those</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> you that have been wondering</font>

285
00:12:33,800 --> 00:12:36,139
why is it<font color="#E5E5E5"> that particularly early in</font>

286
00:12:36,139 --> 00:12:39,050
training my validation losses better

287
00:12:39,050 --> 00:12:41,750
than my training losses but which seems

288
00:12:41,750 --> 00:12:44,060
<font color="#E5E5E5">otherwise really surprising hopefully</font>

289
00:12:44,060 --> 00:12:45,529
some of<font color="#CCCCCC"> you have been wondering why that</font>

290
00:12:45,529 --> 00:12:48,980
is because on<font color="#E5E5E5"> a data set that it never</font>

291
00:12:48,980 --> 00:12:50,930
gets<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> wouldn't expect the</font>

292
00:12:50,930 --> 00:12:53,149
losses<font color="#E5E5E5"> to ever be that's better</font>

293
00:12:53,149 --> 00:12:55,579
and the reason why is because when we

294
00:12:55,579 --> 00:12:57,769
look at<font color="#E5E5E5"> the validation set</font><font color="#CCCCCC"> we turn</font><font color="#E5E5E5"> off</font>

295
00:12:57,769 --> 00:12:59,870
dropout<font color="#CCCCCC"> right so in other words when</font>

296
00:12:59,870 --> 00:13:01,069
you're doing inference<font color="#E5E5E5"> when you're</font>

297
00:13:01,069 --> 00:13:02,899
<font color="#CCCCCC">trying</font><font color="#E5E5E5"> to say is this or cat</font><font color="#CCCCCC"> or is</font><font color="#E5E5E5"> this</font>

298
00:13:02,899 --> 00:13:05,180
a dog<font color="#E5E5E5"> we certainly don't want to be</font>

299
00:13:05,180 --> 00:13:07,879
including random drop out there right we

300
00:13:07,879 --> 00:13:10,420
want to be<font color="#E5E5E5"> using</font><font color="#CCCCCC"> the best model we can</font>

301
00:13:10,420 --> 00:13:13,279
<font color="#CCCCCC">okay so that's why early in training in</font>

302
00:13:13,279 --> 00:13:15,370
<font color="#E5E5E5">particular</font>

303
00:13:15,370 --> 00:13:17,430
actually see that our validation

304
00:13:17,430 --> 00:13:21,130
accuracy<font color="#CCCCCC"> and loss tends to be better if</font>

305
00:13:21,130 --> 00:13:26,520
<font color="#E5E5E5">we're using dropout okay so yes</font><font color="#CCCCCC"> you know</font>

306
00:13:26,520 --> 00:13:28,900
<font color="#E5E5E5">you have to do anything to accommodate</font>

307
00:13:28,900 --> 00:13:30,460
<font color="#CCCCCC">for the fact that you are throwing away</font>

308
00:13:30,460 --> 00:13:35,890
some that's a great question<font color="#CCCCCC"> so we don't</font>

309
00:13:35,890 --> 00:13:38,860
that<font color="#CCCCCC"> PI torch does so PI torch behind</font>

310
00:13:38,860 --> 00:13:41,110
<font color="#CCCCCC">the scenes does two things if you say</font><font color="#E5E5E5"> P</font>

311
00:13:41,110 --> 00:13:43,990
equals<font color="#CCCCCC"> point five</font><font color="#E5E5E5"> it throws away half of</font>

312
00:13:43,990 --> 00:13:49,600
<font color="#E5E5E5">the activations</font><font color="#CCCCCC"> but it also doubles all</font>

313
00:13:49,600 --> 00:13:51,310
the activations<font color="#E5E5E5"> that are already there</font>

314
00:13:51,310 --> 00:13:53,650
so<font color="#E5E5E5"> when</font><font color="#CCCCCC"> average the kind</font><font color="#E5E5E5"> of the average</font>

315
00:13:53,650 --> 00:13:56,170
<font color="#E5E5E5">activation doesn't change which is</font>

316
00:13:56,170 --> 00:14:00,220
pretty pretty neat trick<font color="#E5E5E5"> so yeah you</font>

317
00:14:00,220 --> 00:14:01,570
don't have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> worry about it basically</font>

318
00:14:01,570 --> 00:14:06,520
<font color="#CCCCCC">it's it's done for you so if we say so</font>

319
00:14:06,520 --> 00:14:09,910
<font color="#E5E5E5">you can pass in peas this is the this is</font>

320
00:14:09,910 --> 00:14:12,730
<font color="#E5E5E5">the</font><font color="#CCCCCC"> p value for</font><font color="#E5E5E5"> all of the added layers</font>

321
00:14:12,730 --> 00:14:16,690
<font color="#E5E5E5">to say</font><font color="#CCCCCC"> with first AI what dropout do you</font>

322
00:14:16,690 --> 00:14:18,370
want on each<font color="#E5E5E5"> of the layers in these</font>

323
00:14:18,370 --> 00:14:20,890
<font color="#E5E5E5">these added layers it won't change the</font>

324
00:14:20,890 --> 00:14:23,980
<font color="#CCCCCC">dropout in the pre</font><font color="#E5E5E5"> trained network like</font>

325
00:14:23,980 --> 00:14:25,500
the hope is that<font color="#E5E5E5"> that's already been</font>

326
00:14:25,500 --> 00:14:27,670
<font color="#E5E5E5">pretty trained with some</font><font color="#CCCCCC"> appropriate</font>

327
00:14:27,670 --> 00:14:29,740
level of dropout we don't change it<font color="#CCCCCC"> put</font>

328
00:14:29,740 --> 00:14:31,750
on these layers that<font color="#CCCCCC"> we add you can</font><font color="#E5E5E5"> say</font>

329
00:14:31,750 --> 00:14:33,220
how much<font color="#CCCCCC"> and so you can see here as a</font>

330
00:14:33,220 --> 00:14:36,910
<font color="#CCCCCC">T's equals 0.5</font><font color="#E5E5E5"> so my first</font><font color="#CCCCCC"> dropout has</font>

331
00:14:36,910 --> 00:14:40,839
0.5 my second dropout has 0.5<font color="#E5E5E5"> I remember</font>

332
00:14:40,839 --> 00:14:44,440
coming<font color="#E5E5E5"> to the input of this was the</font>

333
00:14:44,440 --> 00:14:46,390
output<font color="#CCCCCC"> of the last convolutional layer</font>

334
00:14:46,390 --> 00:14:48,820
of<font color="#CCCCCC"> pre-trained</font><font color="#E5E5E5"> network and we go over</font><font color="#CCCCCC"> it</font>

335
00:14:48,820 --> 00:14:50,440
and we<font color="#CCCCCC"> actually throw away</font><font color="#E5E5E5"> half of that</font>

336
00:14:50,440 --> 00:14:52,870
<font color="#E5E5E5">before you can start go through our</font>

337
00:14:52,870 --> 00:14:55,770
linear layer throw away the negatives

338
00:14:55,770 --> 00:14:58,839
<font color="#E5E5E5">throw</font><font color="#CCCCCC"> away half the result of that go</font>

339
00:14:58,839 --> 00:15:00,790
through another<font color="#E5E5E5"> linear layer and then</font>

340
00:15:00,790 --> 00:15:05,230
pass it<font color="#CCCCCC"> to our softness for minor</font>

341
00:15:05,230 --> 00:15:08,170
numerical precision region reasons<font color="#E5E5E5"> it</font>

342
00:15:08,170 --> 00:15:09,550
turns out to be better<font color="#E5E5E5"> to take the log</font>

343
00:15:09,550 --> 00:15:12,520
of the<font color="#CCCCCC"> softmax</font><font color="#E5E5E5"> then softmax directly and</font>

344
00:15:12,520 --> 00:15:14,320
<font color="#CCCCCC">that's why you'll have</font><font color="#E5E5E5"> noticed that when</font>

345
00:15:14,320 --> 00:15:16,240
<font color="#CCCCCC">you actually get predictions</font><font color="#E5E5E5"> out of our</font>

346
00:15:16,240 --> 00:15:19,480
models you<font color="#E5E5E5"> always have to go npx both</font>

347
00:15:19,480 --> 00:15:22,480
the predictions but again the details<font color="#CCCCCC"> as</font>

348
00:15:22,480 --> 00:15:25,410
<font color="#CCCCCC">to why</font><font color="#E5E5E5"> aren't important so if we want to</font>

349
00:15:25,410 --> 00:15:28,640
<font color="#E5E5E5">try removing dropout we could go peas</font>

350
00:15:28,640 --> 00:15:31,430
equals zero<font color="#E5E5E5"> all right and you'll see</font>

351
00:15:31,430 --> 00:15:32,930
<font color="#CCCCCC">where else</font><font color="#E5E5E5"> before we started with the</font>

352
00:15:32,930 --> 00:15:34,790
<font color="#E5E5E5">point seven six accuracy in the first</font>

353
00:15:34,790 --> 00:15:36,380
epoch<font color="#E5E5E5"> now</font><font color="#CCCCCC"> you could have</font><font color="#E5E5E5"> point eight</font>

354
00:15:36,380 --> 00:15:38,630
accuracy in the first debug<font color="#CCCCCC"> alright so</font>

355
00:15:38,630 --> 00:15:41,000
by not<font color="#E5E5E5"> doing drop out our first</font><font color="#CCCCCC"> teapot</font>

356
00:15:41,000 --> 00:15:43,070
<font color="#E5E5E5">worked better not surprisingly</font><font color="#CCCCCC"> because</font>

357
00:15:43,070 --> 00:15:45,649
we're not throwing<font color="#E5E5E5"> anything away</font><font color="#CCCCCC"> but by</font>

358
00:15:45,649 --> 00:15:47,450
the third epoch here we had eighty four

359
00:15:47,450 --> 00:15:50,180
<font color="#E5E5E5">point</font><font color="#CCCCCC"> eight and here we have eighty four</font>

360
00:15:50,180 --> 00:15:52,160
point<font color="#E5E5E5"> one so it started out better and</font>

361
00:15:52,160 --> 00:15:54,620
ended up worse so even after three

362
00:15:54,620 --> 00:15:56,420
<font color="#E5E5E5">epochs you can already see where master</font>

363
00:15:56,420 --> 00:15:58,339
<font color="#CCCCCC">for</font><font color="#E5E5E5"> overfitting</font><font color="#CCCCCC"> right we've got point</font>

364
00:15:58,339 --> 00:16:01,790
three loss on the train<font color="#CCCCCC"> and point five</font>

365
00:16:01,790 --> 00:16:06,740
loss on the validation<font color="#CCCCCC"> yep and so if you</font>

366
00:16:06,740 --> 00:16:09,260
look<font color="#CCCCCC"> now you can see in the resulting</font>

367
00:16:09,260 --> 00:16:12,140
model<font color="#CCCCCC"> there's no</font><font color="#E5E5E5"> drop out at all so</font><font color="#CCCCCC"> if</font>

368
00:16:12,140 --> 00:16:14,510
the P<font color="#E5E5E5"> is zero we</font><font color="#CCCCCC"> don't even</font><font color="#E5E5E5"> add it to</font>

369
00:16:14,510 --> 00:16:19,910
the model<font color="#CCCCCC"> another thing to</font><font color="#E5E5E5"> mention is</font>

370
00:16:19,910 --> 00:16:21,320
<font color="#CCCCCC">you might have</font><font color="#E5E5E5"> noticed that what we've</font>

371
00:16:21,320 --> 00:16:23,709
been doing is we've been<font color="#CCCCCC"> adding two</font>

372
00:16:23,709 --> 00:16:27,680
linear layers right in our additional

373
00:16:27,680 --> 00:16:29,450
layers you don't have to do<font color="#E5E5E5"> that by the</font>

374
00:16:29,450 --> 00:16:31,420
way<font color="#CCCCCC"> there's actually</font><font color="#E5E5E5"> a parameter called</font>

375
00:16:31,420 --> 00:16:34,910
<font color="#E5E5E5">extra fully connected layers that you</font>

376
00:16:34,910 --> 00:16:38,149
can basically<font color="#E5E5E5"> pass a list of how long do</font>

377
00:16:38,149 --> 00:16:40,040
you want<font color="#E5E5E5"> or how big do you want each of</font>

378
00:16:40,040 --> 00:16:41,720
<font color="#CCCCCC">the additional fully connected layers to</font>

379
00:16:41,720 --> 00:16:44,930
be<font color="#CCCCCC"> and so by default</font><font color="#E5E5E5"> well you need to</font>

380
00:16:44,930 --> 00:16:47,510
<font color="#CCCCCC">have at least one right</font><font color="#E5E5E5"> because you need</font>

381
00:16:47,510 --> 00:16:49,160
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that takes the output of the</font>

382
00:16:49,160 --> 00:16:51,170
convolutional layer<font color="#E5E5E5"> which in this case</font>

383
00:16:51,170 --> 00:16:52,940
is<font color="#CCCCCC"> of size thousand twenty-four and</font>

384
00:16:52,940 --> 00:16:56,660
<font color="#E5E5E5">turns it into the number of classes</font><font color="#CCCCCC"> you</font>

385
00:16:56,660 --> 00:16:59,570
have cats versus dogs would be two dog

386
00:16:59,570 --> 00:17:02,720
breeds would be 120<font color="#CCCCCC"> planet satellite</font>

387
00:17:02,720 --> 00:17:04,819
<font color="#CCCCCC">seventeen whatever that's you always</font>

388
00:17:04,819 --> 00:17:07,429
need one linear layer<font color="#E5E5E5"> at least and</font><font color="#CCCCCC"> you</font>

389
00:17:07,429 --> 00:17:08,900
can't pick how big that is<font color="#E5E5E5"> that's</font>

390
00:17:08,900 --> 00:17:12,020
defined<font color="#E5E5E5"> by your problem</font><font color="#CCCCCC"> but you can</font>

391
00:17:12,020 --> 00:17:14,630
choose what the other size is or if it

392
00:17:14,630 --> 00:17:16,970
<font color="#E5E5E5">happens at all so if we were to pass in</font>

393
00:17:16,970 --> 00:17:19,699
an empty<font color="#E5E5E5"> list and</font><font color="#CCCCCC"> now we're saying don't</font>

394
00:17:19,699 --> 00:17:21,530
add any additional<font color="#E5E5E5"> mini layers just the</font>

395
00:17:21,530 --> 00:17:24,169
one that we have to have right so here

396
00:17:24,169 --> 00:17:25,880
we've<font color="#E5E5E5"> got P is equals zero</font>

397
00:17:25,880 --> 00:17:28,069
extra fully connected layers is empty

398
00:17:28,069 --> 00:17:32,780
this<font color="#CCCCCC"> is like the minimum possible kind</font>

399
00:17:32,780 --> 00:17:36,800
<font color="#E5E5E5">of top model we can put on top and again</font>

400
00:17:36,800 --> 00:17:39,820
<font color="#E5E5E5">like if we do that</font>

401
00:17:40,850 --> 00:17:43,070
<font color="#E5E5E5">you can see above we actually end up</font>

402
00:17:43,070 --> 00:17:45,860
<font color="#CCCCCC">with in this case</font><font color="#E5E5E5"> a reasonably good</font>

403
00:17:45,860 --> 00:17:47,840
<font color="#CCCCCC">result</font><font color="#E5E5E5"> because we're not training it for</font>

404
00:17:47,840 --> 00:17:49,309
very long<font color="#CCCCCC"> and this particular</font>

405
00:17:49,309 --> 00:17:51,380
<font color="#E5E5E5">pre-trained</font><font color="#CCCCCC"> Network is really well</font>

406
00:17:51,380 --> 00:17:53,059
suited<font color="#CCCCCC"> to this particular</font><font color="#E5E5E5"> problem</font>

407
00:17:53,059 --> 00:17:57,830
<font color="#CCCCCC">yesterday so Jeremy what</font><font color="#E5E5E5"> kind of piece</font>

408
00:17:57,830 --> 00:18:01,640
should we were using by default<font color="#E5E5E5"> so the</font>

409
00:18:01,640 --> 00:18:05,360
<font color="#CCCCCC">one</font><font color="#E5E5E5"> that's there by</font><font color="#CCCCCC"> default for the</font>

410
00:18:05,360 --> 00:18:09,500
first<font color="#E5E5E5"> layer is 0.25 and for the second</font>

411
00:18:09,500 --> 00:18:13,130
layer<font color="#E5E5E5"> is 0.5</font><font color="#CCCCCC"> that seems to work pretty</font>

412
00:18:13,130 --> 00:18:17,210
well<font color="#E5E5E5"> for</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> things right so</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> it's</font>

413
00:18:17,210 --> 00:18:19,190
<font color="#E5E5E5">it's it you don't necessarily need to</font>

414
00:18:19,190 --> 00:18:20,710
change it at all

415
00:18:20,710 --> 00:18:22,960
basically if<font color="#CCCCCC"> you find</font><font color="#E5E5E5"> it's overfitting</font>

416
00:18:22,960 --> 00:18:26,179
just start bumping it<font color="#E5E5E5"> up so</font><font color="#CCCCCC"> try first</font><font color="#E5E5E5"> of</font>

417
00:18:26,179 --> 00:18:28,909
all setting it to 0.5 that'll set them

418
00:18:28,909 --> 00:18:31,250
both to<font color="#E5E5E5"> 0.5</font><font color="#CCCCCC"> if it still overfitting a</font>

419
00:18:31,250 --> 00:18:33,980
lot try 0.7 like you can you can narrow

420
00:18:33,980 --> 00:18:38,080
down<font color="#E5E5E5"> and like it's not that many numbers</font>

421
00:18:38,080 --> 00:18:41,530
change<font color="#E5E5E5"> right and if you're</font><font color="#CCCCCC"> under fitting</font>

422
00:18:41,530 --> 00:18:44,890
<font color="#E5E5E5">then you can try and making it lower</font>

423
00:18:44,890 --> 00:18:47,270
<font color="#CCCCCC">it's unlikely you</font><font color="#E5E5E5"> would need to make</font><font color="#CCCCCC"> it</font>

424
00:18:47,270 --> 00:18:49,850
much lower because<font color="#E5E5E5"> like even</font><font color="#CCCCCC"> in these</font>

425
00:18:49,850 --> 00:18:54,049
dogs<font color="#CCCCCC"> versus</font><font color="#E5E5E5"> cats situations you know we</font>

426
00:18:54,049 --> 00:18:55,340
don't<font color="#E5E5E5"> see they have to make it lower so</font>

427
00:18:55,340 --> 00:18:57,049
it's<font color="#E5E5E5"> more likely to be increasing at</font>

428
00:18:57,049 --> 00:19:00,890
about 0.6 0.7 but you can fiddle around

429
00:19:00,890 --> 00:19:03,620
<font color="#E5E5E5">I find</font><font color="#CCCCCC"> these the ones that are there</font><font color="#E5E5E5"> by</font>

430
00:19:03,620 --> 00:19:05,510
<font color="#CCCCCC">defaults in</font><font color="#E5E5E5"> work pretty well most of the</font>

431
00:19:05,510 --> 00:19:08,659
time so one place I actually did

432
00:19:08,659 --> 00:19:12,230
increase<font color="#E5E5E5"> this was in the dog breeds one</font>

433
00:19:12,230 --> 00:19:15,289
I did set<font color="#CCCCCC"> it them both to 0.5 when I</font>

434
00:19:15,289 --> 00:19:19,549
used a bigger model<font color="#E5E5E5"> so like</font><font color="#CCCCCC"> ResNet 34</font>

435
00:19:19,549 --> 00:19:22,159
has less parameters<font color="#E5E5E5"> so it doesn't over</font>

436
00:19:22,159 --> 00:19:23,929
fit as much but then when I started

437
00:19:23,929 --> 00:19:25,970
<font color="#CCCCCC">bumping</font><font color="#E5E5E5"> pumping it up to like a</font><font color="#CCCCCC"> resonate</font>

438
00:19:25,970 --> 00:19:28,309
<font color="#E5E5E5">50 which has a lot more parameters and</font>

439
00:19:28,309 --> 00:19:30,260
noticed it started overfitting<font color="#E5E5E5"> so then I</font>

440
00:19:30,260 --> 00:19:32,659
also increased my<font color="#CCCCCC"> drop out so as you use</font>

441
00:19:32,659 --> 00:19:35,809
like bigger models<font color="#E5E5E5"> you'll often need</font><font color="#CCCCCC"> to</font>

442
00:19:35,809 --> 00:19:38,570
add more drama<font color="#E5E5E5"> can you pass it over</font>

443
00:19:38,570 --> 00:19:41,350
<font color="#E5E5E5">there please</font><font color="#CCCCCC"> you know</font>

444
00:19:42,000 --> 00:19:46,059
if<font color="#E5E5E5"> we</font><font color="#CCCCCC"> set B to 0.5</font><font color="#E5E5E5"> roughly what</font>

445
00:19:46,059 --> 00:19:49,169
percentage is it 50%

446
00:19:49,169 --> 00:19:52,979
<font color="#E5E5E5">we say RP pasta</font>

447
00:19:52,979 --> 00:19:55,599
is there a particular<font color="#E5E5E5"> way in which you</font>

448
00:19:55,599 --> 00:19:57,940
can determine if the data is being<font color="#E5E5E5"> all</font>

449
00:19:57,940 --> 00:20:04,149
fitted<font color="#CCCCCC"> yeah you can see that the like</font>

450
00:20:04,149 --> 00:20:06,309
<font color="#CCCCCC">here you can see that</font><font color="#E5E5E5"> the training</font><font color="#CCCCCC"> error</font>

451
00:20:06,309 --> 00:20:08,979
is<font color="#E5E5E5"> a loss is much lower than the</font>

452
00:20:08,979 --> 00:20:11,889
<font color="#E5E5E5">validation list you can't tell if it's</font>

453
00:20:11,889 --> 00:20:16,299
<font color="#E5E5E5">like</font><font color="#CCCCCC"> to over fitted like zero</font>

454
00:20:16,299 --> 00:20:18,369
overfitting is not generally optimal

455
00:20:18,369 --> 00:20:19,899
like the only<font color="#E5E5E5"> way to find that</font><font color="#CCCCCC"> out is</font>

456
00:20:19,899 --> 00:20:21,549
remember the only<font color="#CCCCCC"> thing you're trying to</font>

457
00:20:21,549 --> 00:20:23,229
do is to get<font color="#E5E5E5"> this number low right the</font>

458
00:20:23,229 --> 00:20:26,379
validation loss number low<font color="#CCCCCC"> so in the end</font>

459
00:20:26,379 --> 00:20:28,059
you kind<font color="#E5E5E5"> of have to</font><font color="#CCCCCC"> play around with a</font>

460
00:20:28,059 --> 00:20:29,679
few<font color="#CCCCCC"> different things</font><font color="#E5E5E5"> and see which thing</font>

461
00:20:29,679 --> 00:20:32,109
ends up<font color="#CCCCCC"> getting</font><font color="#E5E5E5"> the validation loss low</font>

462
00:20:32,109 --> 00:20:35,200
but<font color="#CCCCCC"> you</font><font color="#E5E5E5"> kind of get</font><font color="#CCCCCC"> a feel overtime for</font>

463
00:20:35,200 --> 00:20:37,419
your particular<font color="#E5E5E5"> problem what does</font>

464
00:20:37,419 --> 00:20:38,919
overfitting what does too much<font color="#CCCCCC"> River</font>

465
00:20:38,919 --> 00:20:45,820
fitting look like great so so that's

466
00:20:45,820 --> 00:20:47,619
<font color="#CCCCCC">dropout and we're going to be</font><font color="#E5E5E5"> using that</font>

467
00:20:47,619 --> 00:20:49,659
a lot<font color="#E5E5E5"> and remember it's there by default</font>

468
00:20:49,659 --> 00:20:51,099
<font color="#E5E5E5">service here another question</font>

469
00:20:51,099 --> 00:20:56,830
<font color="#E5E5E5">oh so I have two questions so one is so</font>

470
00:20:56,830 --> 00:21:01,389
when it says<font color="#E5E5E5"> the dropout rate is 0.5 it</font>

471
00:21:01,389 --> 00:21:04,299
does it like<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> I delete each cell</font>

472
00:21:04,299 --> 00:21:07,809
with<font color="#E5E5E5"> a probability of 0.5 or does it</font>

473
00:21:07,809 --> 00:21:10,389
just pick 50% randomly I mean I know

474
00:21:10,389 --> 00:21:12,639
both effectively is<font color="#E5E5E5"> the 4-month</font><font color="#CCCCCC"> yeah</font>

475
00:21:12,639 --> 00:21:16,149
<font color="#E5E5E5">okay okay</font><font color="#CCCCCC"> a second question is why does</font>

476
00:21:16,149 --> 00:21:19,960
<font color="#E5E5E5">the average activation matter well it</font>

477
00:21:19,960 --> 00:21:22,779
matters<font color="#CCCCCC"> because the</font><font color="#E5E5E5"> remember if you look</font>

478
00:21:22,779 --> 00:21:27,269
the Excel spreadsheet<font color="#CCCCCC"> that the result of</font>

479
00:21:27,269 --> 00:21:36,369
this cell for example<font color="#E5E5E5"> is equal to these</font>

480
00:21:36,369 --> 00:21:40,139
<font color="#CCCCCC">nine multiplied by each of these</font><font color="#E5E5E5"> nine</font>

481
00:21:40,139 --> 00:21:42,999
right and add it up so if we deleted

482
00:21:42,999 --> 00:21:45,999
<font color="#CCCCCC">half of these then that would</font><font color="#E5E5E5"> also cause</font>

483
00:21:45,999 --> 00:21:48,190
this number to<font color="#E5E5E5"> half which would cause</font>

484
00:21:48,190 --> 00:21:50,320
like everything else after<font color="#E5E5E5"> that to</font>

485
00:21:50,320 --> 00:21:53,409
change<font color="#E5E5E5"> and so if you change what it</font>

486
00:21:53,409 --> 00:21:55,029
<font color="#CCCCCC">means you know like</font><font color="#E5E5E5"> you then you're</font>

487
00:21:55,029 --> 00:21:56,470
changing<font color="#CCCCCC"> something</font><font color="#E5E5E5"> that used to say like</font>

488
00:21:56,470 --> 00:21:59,139
<font color="#E5E5E5">Oh fluffy ears are fluffy if this is</font>

489
00:21:59,139 --> 00:22:01,029
<font color="#CCCCCC">greater than point six now</font><font color="#E5E5E5"> it's only</font>

490
00:22:01,029 --> 00:22:02,470
fluffy if it's greater than<font color="#E5E5E5"> point three</font>

491
00:22:02,470 --> 00:22:03,639
like<font color="#E5E5E5"> we're changing the meaning of</font>

492
00:22:03,639 --> 00:22:05,570
everything so<font color="#E5E5E5"> you</font>

493
00:22:05,570 --> 00:22:07,940
here is to delete things<font color="#E5E5E5"> without</font>

494
00:22:07,940 --> 00:22:14,180
changing<font color="#CCCCCC"> where</font><font color="#E5E5E5"> are you using a linear</font>

495
00:22:14,180 --> 00:22:16,790
activation<font color="#E5E5E5"> for one of the earlier</font>

496
00:22:16,790 --> 00:22:19,400
activations<font color="#E5E5E5"> why are we</font><font color="#CCCCCC"> using when you</font>

497
00:22:19,400 --> 00:22:21,470
<font color="#E5E5E5">yeah why that particular</font><font color="#CCCCCC"> activation</font>

498
00:22:21,470 --> 00:22:23,720
because<font color="#E5E5E5"> that's what this set of layers</font>

499
00:22:23,720 --> 00:22:26,390
is so we've with the the pre-trained

500
00:22:26,390 --> 00:22:28,790
<font color="#CCCCCC">network is or is the convolutional net</font>

501
00:22:28,790 --> 00:22:31,100
work and that's<font color="#E5E5E5"> pre computed so we don't</font>

502
00:22:31,100 --> 00:22:35,000
see it<font color="#CCCCCC"> so what</font><font color="#E5E5E5"> that spits out is</font><font color="#CCCCCC"> it's a</font>

503
00:22:35,000 --> 00:22:37,430
vector<font color="#CCCCCC"> so the only choice we have is to</font>

504
00:22:37,430 --> 00:22:42,260
<font color="#CCCCCC">use linear layers</font><font color="#E5E5E5"> at this point okay</font><font color="#CCCCCC"> can</font>

505
00:22:42,260 --> 00:22:44,780
we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> different level of dropout by</font>

506
00:22:44,780 --> 00:22:47,690
layer yes<font color="#E5E5E5"> absolutely how to do that</font>

507
00:22:47,690 --> 00:22:51,110
<font color="#E5E5E5">great</font><font color="#CCCCCC"> so so you</font><font color="#E5E5E5"> can absolutely have</font>

508
00:22:51,110 --> 00:22:53,210
different dropout by layer<font color="#E5E5E5"> and that's</font>

509
00:22:53,210 --> 00:22:56,030
<font color="#E5E5E5">why</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is actually called</font><font color="#CCCCCC"> peas so you</font>

510
00:22:56,030 --> 00:22:58,070
could pass in an array here<font color="#CCCCCC"> so if</font><font color="#E5E5E5"> I went</font>

511
00:22:58,070 --> 00:23:03,410
0 comma 0.2 for example and then extra

512
00:23:03,410 --> 00:23:05,200
fully<font color="#E5E5E5"> connecting it I might add</font><font color="#CCCCCC"> 512</font>

513
00:23:05,200 --> 00:23:08,000
right then<font color="#E5E5E5"> that's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be 0 drop out</font>

514
00:23:08,000 --> 00:23:10,760
before<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first of them and point to</font>

515
00:23:10,760 --> 00:23:13,490
drop out before the second of them<font color="#E5E5E5"> yes</font>

516
00:23:13,490 --> 00:23:16,640
<font color="#E5E5E5">requests and I must admit</font><font color="#CCCCCC"> I don't have a</font>

517
00:23:16,640 --> 00:23:19,280
great<font color="#CCCCCC"> intuition</font><font color="#E5E5E5"> even after doing this</font>

518
00:23:19,280 --> 00:23:22,910
<font color="#CCCCCC">for a few</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> for like when should</font>

519
00:23:22,910 --> 00:23:25,850
earlier or later layers have different

520
00:23:25,850 --> 00:23:28,100
amounts<font color="#E5E5E5"> of dropping out</font><font color="#CCCCCC"> it's still</font>

521
00:23:28,100 --> 00:23:30,260
something I kind of play<font color="#CCCCCC"> with and I</font>

522
00:23:30,260 --> 00:23:32,720
can't<font color="#E5E5E5"> quite find rules of thumb so if</font>

523
00:23:32,720 --> 00:23:34,160
some of<font color="#E5E5E5"> you come</font><font color="#CCCCCC"> up with</font><font color="#E5E5E5"> some good rules</font>

524
00:23:34,160 --> 00:23:36,650
of thumb I'd love to hear<font color="#CCCCCC"> about them I</font>

525
00:23:36,650 --> 00:23:40,580
think if in doubt<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> use the same</font>

526
00:23:40,580 --> 00:23:42,490
drop out and every fully<font color="#CCCCCC"> connected layer</font>

527
00:23:42,490 --> 00:23:45,230
<font color="#E5E5E5">the other thing you can try is often</font>

528
00:23:45,230 --> 00:23:47,000
people<font color="#E5E5E5"> only put drop out on the very</font>

529
00:23:47,000 --> 00:23:49,820
last linear layer<font color="#E5E5E5"> so there'd be the two</font>

530
00:23:49,820 --> 00:23:52,450
things to try

531
00:23:53,670 --> 00:23:57,190
so Jeremy why do you monitor the log

532
00:23:57,190 --> 00:24:00,460
<font color="#CCCCCC">loss the loss instead</font><font color="#E5E5E5"> of the accuracy</font>

533
00:24:00,460 --> 00:24:03,550
going up<font color="#E5E5E5"> well because the loss is</font><font color="#CCCCCC"> the</font>

534
00:24:03,550 --> 00:24:08,770
<font color="#CCCCCC">only thing that we can see</font><font color="#E5E5E5"> for both</font><font color="#CCCCCC"> the</font>

535
00:24:08,770 --> 00:24:10,840
validation set in the training set<font color="#E5E5E5"> so</font>

536
00:24:10,840 --> 00:24:13,920
it's nice to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to compare them</font>

537
00:24:13,920 --> 00:24:18,040
<font color="#CCCCCC">also as we learn about later</font><font color="#E5E5E5"> the loss is</font>

538
00:24:18,040 --> 00:24:21,780
the thing that<font color="#CCCCCC"> we're actually optimizing</font>

539
00:24:21,780 --> 00:24:25,270
<font color="#CCCCCC">so it's it's kind of a little</font><font color="#E5E5E5"> more it's</font>

540
00:24:25,270 --> 00:24:27,580
a<font color="#E5E5E5"> little easier to</font><font color="#CCCCCC"> monitor that</font><font color="#E5E5E5"> and</font>

541
00:24:27,580 --> 00:24:29,640
understand what<font color="#E5E5E5"> that means</font>

542
00:24:29,640 --> 00:24:35,140
can you pass it over<font color="#E5E5E5"> there so with the</font>

543
00:24:35,140 --> 00:24:37,180
<font color="#E5E5E5">drop out we're kind of adding some</font>

544
00:24:37,180 --> 00:24:39,190
random noise every iteration right<font color="#E5E5E5"> you</font>

545
00:24:39,190 --> 00:24:42,430
<font color="#E5E5E5">know</font><font color="#CCCCCC"> so that means that we don't</font><font color="#E5E5E5"> do as</font>

546
00:24:42,430 --> 00:24:49,360
much<font color="#E5E5E5"> learning yeah that's right so it</font>

547
00:24:49,360 --> 00:24:51,210
doesn't<font color="#CCCCCC"> seem to impact</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> learning rate</font>

548
00:24:51,210 --> 00:24:54,610
enough<font color="#CCCCCC"> thrive ever noticed it I I would</font>

549
00:24:54,610 --> 00:24:56,320
say<font color="#CCCCCC"> you're probably</font><font color="#E5E5E5"> right in theory it</font>

550
00:24:56,320 --> 00:24:58,630
might but<font color="#E5E5E5"> not enough that it's ever</font>

551
00:24:58,630 --> 00:25:06,610
affected<font color="#E5E5E5"> me okay so let's talk</font><font color="#CCCCCC"> about</font>

552
00:25:06,610 --> 00:25:10,450
this<font color="#E5E5E5"> structured data problem and so to</font>

553
00:25:10,450 --> 00:25:13,600
remind you we were looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> kegels</font>

554
00:25:13,600 --> 00:25:17,010
<font color="#CCCCCC">rossmann</font><font color="#E5E5E5"> competition which</font><font color="#CCCCCC"> is a German</font>

555
00:25:17,010 --> 00:25:21,610
<font color="#E5E5E5">chain of supermarkets</font><font color="#CCCCCC"> I believe</font><font color="#E5E5E5"> and you</font>

556
00:25:21,610 --> 00:25:23,730
can find this in<font color="#E5E5E5"> lesson</font><font color="#CCCCCC"> three Russman</font>

557
00:25:23,730 --> 00:25:30,610
<font color="#E5E5E5">and the main data set is the one where</font>

558
00:25:30,610 --> 00:25:32,500
<font color="#CCCCCC">we were</font><font color="#E5E5E5"> looking</font><font color="#CCCCCC"> to say at a</font><font color="#E5E5E5"> particular</font>

559
00:25:32,500 --> 00:25:36,880
store how much did they sell<font color="#E5E5E5"> okay and</font>

560
00:25:36,880 --> 00:25:38,620
there's a few big key piece of

561
00:25:38,620 --> 00:25:40,260
<font color="#CCCCCC">information one is what was</font><font color="#E5E5E5"> the date</font>

562
00:25:40,260 --> 00:25:42,390
another was were they open

563
00:25:42,390 --> 00:25:46,180
<font color="#CCCCCC">did they have a</font><font color="#E5E5E5"> promotion on was it a</font>

564
00:25:46,180 --> 00:25:48,700
holiday<font color="#E5E5E5"> in that state and was it a</font>

565
00:25:48,700 --> 00:25:50,950
holiday<font color="#CCCCCC"> as for school a state holiday</font>

566
00:25:50,950 --> 00:25:53,890
<font color="#E5E5E5">there</font><font color="#CCCCCC"> wasn't a school</font><font color="#E5E5E5"> holiday yeah</font><font color="#CCCCCC"> and</font>

567
00:25:53,890 --> 00:25:54,940
then we had some<font color="#CCCCCC"> more information about</font>

568
00:25:54,940 --> 00:25:57,520
stores like what for this store what

569
00:25:57,520 --> 00:25:59,290
<font color="#CCCCCC">kind of stuff did they tend to sell what</font>

570
00:25:59,290 --> 00:26:01,480
kind of store are they<font color="#E5E5E5"> how far away the</font>

571
00:26:01,480 --> 00:26:04,750
competition<font color="#E5E5E5"> and so forth so with the</font>

572
00:26:04,750 --> 00:26:05,110
data

573
00:26:05,110 --> 00:26:07,240
set like this there's really<font color="#E5E5E5"> two main</font>

574
00:26:07,240 --> 00:26:09,280
kinds<font color="#E5E5E5"> of column there's columns that we</font>

575
00:26:09,280 --> 00:26:11,590
think of as categorical<font color="#E5E5E5"> they have a</font>

576
00:26:11,590 --> 00:26:12,850
number<font color="#CCCCCC"> of levels</font>

577
00:26:12,850 --> 00:26:16,240
so the assortment<font color="#E5E5E5"> column is categorical</font>

578
00:26:16,240 --> 00:26:20,670
<font color="#E5E5E5">and it has levels such as a B and C</font>

579
00:26:20,670 --> 00:26:23,290
<font color="#E5E5E5">where else something like competition</font>

580
00:26:23,290 --> 00:26:26,080
distance<font color="#E5E5E5"> we</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> call continuous it has</font>

581
00:26:26,080 --> 00:26:27,910
a<font color="#E5E5E5"> number attached to it where</font>

582
00:26:27,910 --> 00:26:29,950
differences<font color="#E5E5E5"> or ratios even if that</font>

583
00:26:29,950 --> 00:26:32,380
number have some kind of<font color="#E5E5E5"> meaning</font><font color="#CCCCCC"> and so</font>

584
00:26:32,380 --> 00:26:34,120
<font color="#E5E5E5">we need to deal with</font><font color="#CCCCCC"> these two things</font>

585
00:26:34,120 --> 00:26:37,720
quite differently<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so anybody who's</font>

586
00:26:37,720 --> 00:26:40,780
done any machine learning of any kind

587
00:26:40,780 --> 00:26:42,850
<font color="#E5E5E5">will be familiar</font><font color="#CCCCCC"> with using</font><font color="#E5E5E5"> continuous</font>

588
00:26:42,850 --> 00:26:44,200
columns if you've done any linear

589
00:26:44,200 --> 00:26:46,540
regression for example you can<font color="#CCCCCC"> just like</font>

590
00:26:46,540 --> 00:26:49,230
modify them by parameters for instance

591
00:26:49,230 --> 00:26:51,190
<font color="#E5E5E5">categorical columns we're going to have</font>

592
00:26:51,190 --> 00:26:54,850
to think<font color="#E5E5E5"> about a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> we're</font>

593
00:26:54,850 --> 00:26:55,990
<font color="#E5E5E5">not going to go through the data</font>

594
00:26:55,990 --> 00:26:57,280
cleaning we're going to assume that

595
00:26:57,280 --> 00:26:59,110
<font color="#CCCCCC">that's a feature Engineering we're going</font>

596
00:26:59,110 --> 00:27:03,190
to assume all that's been<font color="#E5E5E5"> done</font><font color="#CCCCCC"> and so</font>

597
00:27:03,190 --> 00:27:06,040
basically at the<font color="#CCCCCC"> end of that</font><font color="#E5E5E5"> we have a</font>

598
00:27:06,040 --> 00:27:10,799
list<font color="#E5E5E5"> of columns and the in this case I</font>

599
00:27:10,799 --> 00:27:14,290
didn't do any<font color="#E5E5E5"> of the thinking around the</font>

600
00:27:14,290 --> 00:27:16,690
feature engineering<font color="#CCCCCC"> or dedicating myself</font>

601
00:27:16,690 --> 00:27:18,549
<font color="#E5E5E5">this is all directly from the</font>

602
00:27:18,549 --> 00:27:21,600
<font color="#CCCCCC">third-place winners of this competition</font>

603
00:27:21,600 --> 00:27:24,700
<font color="#CCCCCC">and so they came up with</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

604
00:27:24,700 --> 00:27:28,169
different<font color="#E5E5E5"> columns that they found useful</font>

605
00:27:28,169 --> 00:27:33,490
and so you'll notice<font color="#CCCCCC"> the list here is a</font>

606
00:27:33,490 --> 00:27:35,049
<font color="#CCCCCC">list of</font><font color="#E5E5E5"> the things that</font><font color="#CCCCCC"> we're going to</font>

607
00:27:35,049 --> 00:27:39,850
treat as categorical<font color="#E5E5E5"> variables numbers</font>

608
00:27:39,850 --> 00:27:44,860
like year a month and day<font color="#CCCCCC"> although we</font>

609
00:27:44,860 --> 00:27:46,660
could treat them<font color="#CCCCCC"> as continuous like they</font>

610
00:27:46,660 --> 00:27:48,040
the different you know differences

611
00:27:48,040 --> 00:27:52,179
<font color="#E5E5E5">between 2000 and 2003</font><font color="#CCCCCC"> is meaningful we</font>

612
00:27:52,179 --> 00:27:54,280
don't have to<font color="#E5E5E5"> right and you'll see</font>

613
00:27:54,280 --> 00:28:00,370
<font color="#CCCCCC">shortly how how categorical variables</font>

614
00:28:00,370 --> 00:28:02,590
are treated but<font color="#E5E5E5"> basically if we</font><font color="#CCCCCC"> decide</font>

615
00:28:02,590 --> 00:28:04,110
<font color="#CCCCCC">to</font><font color="#E5E5E5"> make something</font><font color="#CCCCCC"> a categorical</font><font color="#E5E5E5"> variable</font>

616
00:28:04,110 --> 00:28:06,880
<font color="#CCCCCC">what we're</font><font color="#E5E5E5"> telling our neural net down</font>

617
00:28:06,880 --> 00:28:08,980
the track is<font color="#E5E5E5"> that for every</font><font color="#CCCCCC"> different</font>

618
00:28:08,980 --> 00:28:12,250
<font color="#CCCCCC">level of</font><font color="#E5E5E5"> say year you know 2000 2001</font>

619
00:28:12,250 --> 00:28:14,800
2002<font color="#E5E5E5"> you can treat it totally</font>

620
00:28:14,800 --> 00:28:16,990
differently where else if we<font color="#E5E5E5"> say it's</font>

621
00:28:16,990 --> 00:28:18,419
continuous<font color="#CCCCCC"> its</font>

622
00:28:18,419 --> 00:28:20,070
have to come up<font color="#CCCCCC"> with some kind of like</font>

623
00:28:20,070 --> 00:28:22,220
function some kind<font color="#E5E5E5"> of smooth ish</font>

624
00:28:22,220 --> 00:28:26,249
function right<font color="#E5E5E5"> and so often even for</font>

625
00:28:26,249 --> 00:28:28,470
<font color="#E5E5E5">things like a year that actually are</font>

626
00:28:28,470 --> 00:28:30,629
continuous but<font color="#CCCCCC"> they don't actually have</font>

627
00:28:30,629 --> 00:28:33,330
<font color="#CCCCCC">many distinct levels</font><font color="#E5E5E5"> it often works</font>

628
00:28:33,330 --> 00:28:36,899
<font color="#E5E5E5">better</font><font color="#CCCCCC"> to treat it as categorical so</font>

629
00:28:36,899 --> 00:28:39,600
another<font color="#E5E5E5"> good example day of week right</font>

630
00:28:39,600 --> 00:28:42,919
so like day of week between<font color="#CCCCCC"> naught &</font><font color="#E5E5E5"> 6</font>

631
00:28:42,919 --> 00:28:45,119
<font color="#E5E5E5">it's a number and it means something</font>

632
00:28:45,119 --> 00:28:48,239
<font color="#CCCCCC">motifs</font><font color="#E5E5E5"> between 3 & 5 is</font><font color="#CCCCCC"> two days and</font><font color="#E5E5E5"> has</font>

633
00:28:48,239 --> 00:28:50,039
meaning<font color="#E5E5E5"> but if you think about like how</font>

634
00:28:50,039 --> 00:28:54,119
<font color="#E5E5E5">word sales in a strawberry</font><font color="#CCCCCC"> buy a</font><font color="#E5E5E5"> day of</font>

635
00:28:54,119 --> 00:28:56,609
<font color="#E5E5E5">week it could well be</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> like you know</font>

636
00:28:56,609 --> 00:28:58,499
<font color="#E5E5E5">Saturdays and Sundays are</font><font color="#CCCCCC"> over here and</font>

637
00:28:58,499 --> 00:29:00,480
Fridays are over here and<font color="#E5E5E5"> Wednesdays are</font>

638
00:29:00,480 --> 00:29:02,759
over here<font color="#E5E5E5"> like each</font><font color="#CCCCCC"> day is going</font><font color="#E5E5E5"> to</font>

639
00:29:02,759 --> 00:29:05,700
<font color="#E5E5E5">behave</font><font color="#CCCCCC"> kind of qualitatively differently</font>

640
00:29:05,700 --> 00:29:07,470
right so by saying<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the</font>

641
00:29:07,470 --> 00:29:10,289
categorical variable<font color="#E5E5E5"> as you'll see we're</font>

642
00:29:10,289 --> 00:29:13,049
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> let the</font><font color="#CCCCCC"> neural-net</font><font color="#E5E5E5"> do that</font>

643
00:29:13,049 --> 00:29:15,629
right<font color="#E5E5E5"> so this thing where we get where</font>

644
00:29:15,629 --> 00:29:18,090
we say which are continuous<font color="#E5E5E5"> in which a</font>

645
00:29:18,090 --> 00:29:20,549
categorical to some extent this is<font color="#E5E5E5"> the</font>

646
00:29:20,549 --> 00:29:24,690
<font color="#CCCCCC">modeling decision you get to make now if</font>

647
00:29:24,690 --> 00:29:28,350
something<font color="#CCCCCC"> is coded in your data is like</font>

648
00:29:28,350 --> 00:29:31,679
a B and C or you know<font color="#E5E5E5"> Jeremy and</font><font color="#CCCCCC"> you</font>

649
00:29:31,679 --> 00:29:34,230
<font color="#CCCCCC">knit</font><font color="#E5E5E5"> or whatever you actually you're</font>

650
00:29:34,230 --> 00:29:35,999
going<font color="#E5E5E5"> to have to call</font><font color="#CCCCCC"> that categorical</font>

651
00:29:35,999 --> 00:29:37,619
right there's no way to treat<font color="#E5E5E5"> that</font>

652
00:29:37,619 --> 00:29:40,649
directly<font color="#E5E5E5"> as a continuous variable on the</font>

653
00:29:40,649 --> 00:29:42,570
<font color="#E5E5E5">other hand if it starts out as a</font>

654
00:29:42,570 --> 00:29:45,210
continuous variable<font color="#E5E5E5"> like age or day of</font>

655
00:29:45,210 --> 00:29:49,200
<font color="#E5E5E5">week</font><font color="#CCCCCC"> you get</font><font color="#E5E5E5"> to decide whether you want</font>

656
00:29:49,200 --> 00:29:50,730
to<font color="#E5E5E5"> treat</font><font color="#CCCCCC"> it as continuous or categorical</font>

657
00:29:50,730 --> 00:29:53,730
<font color="#E5E5E5">okay so summarize if it's categorical</font>

658
00:29:53,730 --> 00:29:55,230
and data<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going to have to be</font>

659
00:29:55,230 --> 00:29:57,179
categorical<font color="#CCCCCC"> in the model if it's</font>

660
00:29:57,179 --> 00:29:59,609
continuous<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the data you get to pick</font>

661
00:29:59,609 --> 00:30:01,320
whether to<font color="#E5E5E5"> make it continuous or</font>

662
00:30:01,320 --> 00:30:05,429
categorical<font color="#E5E5E5"> in the model so in this case</font>

663
00:30:05,429 --> 00:30:07,350
again<font color="#E5E5E5"> what I just did whatever the</font>

664
00:30:07,350 --> 00:30:08,909
<font color="#E5E5E5">third-place winners of this</font><font color="#CCCCCC"> competition</font>

665
00:30:08,909 --> 00:30:11,159
did these are the ones<font color="#CCCCCC"> that they decided</font>

666
00:30:11,159 --> 00:30:12,779
<font color="#E5E5E5">to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> as categorical these were the</font>

667
00:30:12,779 --> 00:30:14,279
ones they decided<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use as continuous</font>

668
00:30:14,279 --> 00:30:18,509
and you can see that<font color="#CCCCCC"> basically the</font>

669
00:30:18,509 --> 00:30:20,940
continuous ones are all of the<font color="#E5E5E5"> ones</font>

670
00:30:20,940 --> 00:30:23,730
which are<font color="#E5E5E5"> actual</font><font color="#CCCCCC"> floating-point</font><font color="#E5E5E5"> numbers</font>

671
00:30:23,730 --> 00:30:26,009
like competition<font color="#E5E5E5"> distance actually has a</font>

672
00:30:26,009 --> 00:30:27,720
<font color="#CCCCCC">decimal place</font><font color="#E5E5E5"> to it right and</font>

673
00:30:27,720 --> 00:30:29,759
temperature<font color="#E5E5E5"> actually has a</font><font color="#CCCCCC"> decimal place</font>

674
00:30:29,759 --> 00:30:31,470
to it so these would<font color="#CCCCCC"> be very hard to</font>

675
00:30:31,470 --> 00:30:32,070
<font color="#CCCCCC">make</font>

676
00:30:32,070 --> 00:30:34,300
categorical because they have many many

677
00:30:34,300 --> 00:30:37,870
<font color="#E5E5E5">levels right</font><font color="#CCCCCC"> like if it's like five</font>

678
00:30:37,870 --> 00:30:39,580
digits of floating-point then

679
00:30:39,580 --> 00:30:41,170
potentially there will be as many<font color="#CCCCCC"> levels</font>

680
00:30:41,170 --> 00:30:46,300
<font color="#E5E5E5">as there are as there are roads and by</font>

681
00:30:46,300 --> 00:30:48,250
the way the word we<font color="#CCCCCC"> use to say how many</font>

682
00:30:48,250 --> 00:30:50,260
<font color="#E5E5E5">levels are in a category</font><font color="#CCCCCC"> we use the word</font>

683
00:30:50,260 --> 00:30:52,240
cardinality<font color="#E5E5E5"> right so if you see me</font><font color="#CCCCCC"> say</font>

684
00:30:52,240 --> 00:30:54,520
cardinality example the cardinality of

685
00:30:54,520 --> 00:30:57,160
the day of week<font color="#E5E5E5"> variable is</font><font color="#CCCCCC"> 7 because</font>

686
00:30:57,160 --> 00:31:00,390
there are<font color="#CCCCCC"> 7 different days of</font><font color="#E5E5E5"> the week</font>

687
00:31:02,010 --> 00:31:04,450
do<font color="#E5E5E5"> you have a heuristic for one to have</font>

688
00:31:04,450 --> 00:31:06,100
been continuous variables<font color="#E5E5E5"> or do you</font><font color="#CCCCCC"> ever</font>

689
00:31:06,100 --> 00:31:07,929
in variables<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> ever been</font>

690
00:31:07,929 --> 00:31:13,330
continuous variables<font color="#CCCCCC"> so yeah so one</font>

691
00:31:13,330 --> 00:31:14,950
thing we<font color="#E5E5E5"> could do with like max</font>

692
00:31:14,950 --> 00:31:17,559
temperature<font color="#E5E5E5"> is group it into nought to</font>

693
00:31:17,559 --> 00:31:20,050
10 10<font color="#E5E5E5"> to 20 20 to 30 and then call that</font>

694
00:31:20,050 --> 00:31:23,140
<font color="#E5E5E5">categorical interestingly a paper just</font>

695
00:31:23,140 --> 00:31:27,130
<font color="#CCCCCC">came out last week in which a group of</font>

696
00:31:27,130 --> 00:31:29,620
researchers found<font color="#E5E5E5"> that sometimes bidding</font>

697
00:31:29,620 --> 00:31:32,350
can be<font color="#E5E5E5"> helpful but it literally came out</font>

698
00:31:32,350 --> 00:31:33,910
in the<font color="#E5E5E5"> last</font><font color="#CCCCCC"> week and</font><font color="#E5E5E5"> until</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> I</font>

699
00:31:33,910 --> 00:31:35,200
<font color="#E5E5E5">haven't seen anything in deep learning</font>

700
00:31:35,200 --> 00:31:37,210
saying that<font color="#E5E5E5"> so I haven't I haven't</font>

701
00:31:37,210 --> 00:31:39,340
looked<font color="#E5E5E5"> at it myself</font><font color="#CCCCCC"> until this week I</font>

702
00:31:39,340 --> 00:31:41,920
would<font color="#E5E5E5"> have said it's a bad</font><font color="#CCCCCC"> idea now I</font>

703
00:31:41,920 --> 00:31:43,840
have to<font color="#E5E5E5"> think</font><font color="#CCCCCC"> differently</font><font color="#E5E5E5"> I guess</font><font color="#CCCCCC"> maybe</font>

704
00:31:43,840 --> 00:31:52,570
it is sometimes so if you're using<font color="#E5E5E5"> year</font>

705
00:31:52,570 --> 00:31:55,510
as a category what happens when you run

706
00:31:55,510 --> 00:31:57,250
the model<font color="#CCCCCC"> of a year it's never seen so</font>

707
00:31:57,250 --> 00:32:00,880
<font color="#E5E5E5">your training</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> get there yeah the</font>

708
00:32:00,880 --> 00:32:03,250
short<font color="#E5E5E5"> answer is it</font><font color="#CCCCCC"> will be</font><font color="#E5E5E5"> treated as an</font>

709
00:32:03,250 --> 00:32:06,070
unknown category<font color="#E5E5E5"> and so pandas which is</font>

710
00:32:06,070 --> 00:32:09,040
the underlying<font color="#E5E5E5"> data frame</font><font color="#CCCCCC"> thinking we're</font>

711
00:32:09,040 --> 00:32:11,170
using with categories as a special

712
00:32:11,170 --> 00:32:13,570
category<font color="#E5E5E5"> called unknown</font><font color="#CCCCCC"> and if it stays</font>

713
00:32:13,570 --> 00:32:15,730
a category it hasn't seen before<font color="#E5E5E5"> it gets</font>

714
00:32:15,730 --> 00:32:20,050
<font color="#E5E5E5">treated as unknown so</font><font color="#CCCCCC"> for AB deep</font>

715
00:32:20,050 --> 00:32:22,150
learning<font color="#E5E5E5"> model unknown will just be</font>

716
00:32:22,150 --> 00:32:24,840
<font color="#E5E5E5">another category</font>

717
00:32:25,130 --> 00:32:29,460
if our data<font color="#E5E5E5"> set training the data set</font>

718
00:32:29,460 --> 00:32:32,940
doesn't<font color="#E5E5E5"> have a category</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> test has</font>

719
00:32:32,940 --> 00:32:36,240
unknown how will it did you know just

720
00:32:36,240 --> 00:32:39,120
<font color="#CCCCCC">paper this unknown</font><font color="#E5E5E5"> category it's still</font>

721
00:32:39,120 --> 00:32:41,490
predict it will predict something right

722
00:32:41,490 --> 00:32:44,220
like it will just have<font color="#CCCCCC"> the value 0 barn</font>

723
00:32:44,220 --> 00:32:46,679
<font color="#E5E5E5">scenes and if there's been any unknowns</font>

724
00:32:46,679 --> 00:32:48,990
of any kind in the training set then<font color="#CCCCCC"> it</font>

725
00:32:48,990 --> 00:32:52,409
off<font color="#CCCCCC"> learnt a way to predict unknown</font><font color="#E5E5E5"> if</font>

726
00:32:52,409 --> 00:32:54,809
it hasn't<font color="#E5E5E5"> it's going to have some random</font>

727
00:32:54,809 --> 00:32:58,019
<font color="#E5E5E5">vector and so that's a interesting</font>

728
00:32:58,019 --> 00:33:00,240
detail around<font color="#E5E5E5"> training that we probably</font>

729
00:33:00,240 --> 00:33:01,500
want to talk<font color="#E5E5E5"> about in this part of the</font>

730
00:33:01,500 --> 00:33:02,669
course but we can certainly talk about

731
00:33:02,669 --> 00:33:05,529
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> forum</font>

732
00:33:05,529 --> 00:33:08,809
<font color="#E5E5E5">okay so we've got</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> categorical and</font>

733
00:33:08,809 --> 00:33:11,809
continuous variable<font color="#E5E5E5"> lists defined in</font>

734
00:33:11,809 --> 00:33:13,220
<font color="#E5E5E5">this case there</font><font color="#CCCCCC"> was eight hundred</font>

735
00:33:13,220 --> 00:33:16,700
<font color="#E5E5E5">thousand rows so eight hundred thousand</font>

736
00:33:16,700 --> 00:33:21,919
dates<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> by Storz and so you can</font>

737
00:33:21,919 --> 00:33:26,929
now take all of<font color="#E5E5E5"> these columns look</font>

738
00:33:26,929 --> 00:33:29,720
<font color="#E5E5E5">through each one and</font><font color="#CCCCCC"> replace</font><font color="#E5E5E5"> it in</font><font color="#CCCCCC"> the</font>

739
00:33:29,720 --> 00:33:31,820
<font color="#E5E5E5">data frame</font><font color="#CCCCCC"> where the</font><font color="#E5E5E5"> version where you</font>

740
00:33:31,820 --> 00:33:33,820
<font color="#E5E5E5">say take it and change</font><font color="#CCCCCC"> its type to</font>

741
00:33:33,820 --> 00:33:37,580
<font color="#E5E5E5">category okay</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> that just that just</font>

742
00:33:37,580 --> 00:33:39,950
<font color="#CCCCCC">a panda's</font><font color="#E5E5E5"> things so I'm not going to</font>

743
00:33:39,950 --> 00:33:40,669
<font color="#E5E5E5">teach you</font>

744
00:33:40,669 --> 00:33:42,559
pandas there's plenty of books<font color="#E5E5E5"> so</font>

745
00:33:42,559 --> 00:33:44,690
particularly<font color="#CCCCCC"> with</font><font color="#E5E5E5"> McKinney's books book</font>

746
00:33:44,690 --> 00:33:48,379
on<font color="#CCCCCC"> python for data analysis is great but</font>

747
00:33:48,379 --> 00:33:49,729
<font color="#E5E5E5">hopefully it's intuitive as to what's</font>

748
00:33:49,729 --> 00:33:51,349
going<font color="#E5E5E5"> on even if you haven't seen the</font>

749
00:33:51,349 --> 00:33:53,299
specific syntax before<font color="#E5E5E5"> so we're going to</font>

750
00:33:53,299 --> 00:33:55,879
<font color="#E5E5E5">turn that column into a categorical</font>

751
00:33:55,879 --> 00:33:58,309
column<font color="#CCCCCC"> and then for the continuous</font>

752
00:33:58,309 --> 00:34:00,909
variables<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make them all</font>

753
00:34:00,909 --> 00:34:03,830
<font color="#E5E5E5">32-bit floating-point and for the reason</font>

754
00:34:03,830 --> 00:34:07,489
for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is that</font><font color="#CCCCCC"> pipe</font><font color="#E5E5E5"> torch expects</font>

755
00:34:07,489 --> 00:34:09,710
everything to<font color="#E5E5E5"> be 32-bit floating-point</font>

756
00:34:09,710 --> 00:34:13,750
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so like some of these</font><font color="#E5E5E5"> include like</font>

757
00:34:13,750 --> 00:34:19,639
<font color="#CCCCCC">1 0</font><font color="#E5E5E5"> things like I can't see them</font>

758
00:34:19,639 --> 00:34:21,589
<font color="#E5E5E5">straight away but anyway so much yeah</font>

759
00:34:21,589 --> 00:34:23,719
like was there<font color="#E5E5E5"> a promo was</font><font color="#CCCCCC"> was a holiday</font>

760
00:34:23,719 --> 00:34:25,789
<font color="#CCCCCC">and so that'll become the floating</font><font color="#E5E5E5"> point</font>

761
00:34:25,789 --> 00:34:33,710
values 1<font color="#CCCCCC"> and 0</font><font color="#E5E5E5"> for instance</font><font color="#CCCCCC"> ok so I try</font>

762
00:34:33,710 --> 00:34:35,480
<font color="#E5E5E5">to do as much</font><font color="#CCCCCC"> of my work as possible</font>

763
00:34:35,480 --> 00:34:39,349
on small data<font color="#E5E5E5"> sets for when I'm working</font>

764
00:34:39,349 --> 00:34:40,730
<font color="#CCCCCC">with images that</font><font color="#E5E5E5"> generally</font><font color="#CCCCCC"> means</font>

765
00:34:40,730 --> 00:34:44,539
resizing the images to like 64 by 64 or

766
00:34:44,539 --> 00:34:48,049
128 by 128<font color="#CCCCCC"> we can't do</font><font color="#E5E5E5"> that with</font>

767
00:34:48,049 --> 00:34:49,849
structured data so instead I tend to

768
00:34:49,849 --> 00:34:52,460
take a sample<font color="#E5E5E5"> so I randomly pick a few</font>

769
00:34:52,460 --> 00:34:55,159
rows so I start running<font color="#E5E5E5"> with a sample</font>

770
00:34:55,159 --> 00:34:57,289
and I can use exactly<font color="#CCCCCC"> the same thing</font>

771
00:34:57,289 --> 00:34:59,180
that<font color="#CCCCCC"> we've seen before</font><font color="#E5E5E5"> for getting a</font>

772
00:34:59,180 --> 00:35:01,400
validation<font color="#E5E5E5"> set</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> use the same way</font>

773
00:35:01,400 --> 00:35:04,609
to get some random random row numbers to

774
00:35:04,609 --> 00:35:07,609
use in a random sample<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is</font>

775
00:35:07,609 --> 00:35:10,990
<font color="#E5E5E5">just a bunch of random</font><font color="#CCCCCC"> numbers</font>

776
00:35:13,710 --> 00:35:15,210
and then<font color="#E5E5E5"> okay so that's going</font><font color="#CCCCCC"> to be a</font>

777
00:35:15,210 --> 00:35:21,300
size 150,000 rather than<font color="#CCCCCC"> 800 40,000 and</font>

778
00:35:21,300 --> 00:35:23,700
<font color="#E5E5E5">so my data that before I go any further</font>

779
00:35:23,700 --> 00:35:25,650
it basically looks like<font color="#E5E5E5"> this you can see</font>

780
00:35:25,650 --> 00:35:28,980
I've got some<font color="#CCCCCC"> boolean x' here I've got</font>

781
00:35:28,980 --> 00:35:32,910
some integers<font color="#E5E5E5"> here of various different</font>

782
00:35:32,910 --> 00:35:37,020
scales<font color="#CCCCCC"> here's my year 2014 and I've got</font>

783
00:35:37,020 --> 00:35:40,010
some letters<font color="#E5E5E5"> here</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> even though I said</font>

784
00:35:40,010 --> 00:35:43,730
<font color="#E5E5E5">please call that a pandas category</font>

785
00:35:43,730 --> 00:35:45,839
<font color="#CCCCCC">pandas still displays that in the</font>

786
00:35:45,839 --> 00:35:49,770
notebook as strings<font color="#E5E5E5"> right it's just</font>

787
00:35:49,770 --> 00:35:52,859
stored<font color="#E5E5E5"> in internally differently so then</font>

788
00:35:52,859 --> 00:35:55,290
the<font color="#CCCCCC"> first day our library has a special</font>

789
00:35:55,290 --> 00:35:56,940
<font color="#CCCCCC">little function called processed data</font>

790
00:35:56,940 --> 00:35:59,580
frame<font color="#E5E5E5"> and process data frame takes a</font>

791
00:35:59,580 --> 00:36:02,339
data frame and you tell<font color="#E5E5E5"> it what's my</font>

792
00:36:02,339 --> 00:36:05,070
dependent variable<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and it does a</font>

793
00:36:05,070 --> 00:36:06,570
few different<font color="#E5E5E5"> things the first thing is</font>

794
00:36:06,570 --> 00:36:08,550
<font color="#CCCCCC">it's pulled out that dependent variable</font>

795
00:36:08,550 --> 00:36:10,650
and<font color="#E5E5E5"> puts it into a separate</font><font color="#CCCCCC"> variable</font>

796
00:36:10,650 --> 00:36:13,080
<font color="#E5E5E5">okay and deletes it</font><font color="#CCCCCC"> from the original</font>

797
00:36:13,080 --> 00:36:16,170
<font color="#CCCCCC">data frame so DF now does not</font><font color="#E5E5E5"> have the</font>

798
00:36:16,170 --> 00:36:18,810
sales column in where else<font color="#E5E5E5"> Y just</font>

799
00:36:18,810 --> 00:36:22,589
<font color="#E5E5E5">contains</font><font color="#CCCCCC"> a sales column</font><font color="#E5E5E5"> something else</font>

800
00:36:22,589 --> 00:36:25,589
that it does is it<font color="#CCCCCC"> does scaling so</font>

801
00:36:25,589 --> 00:36:28,770
<font color="#E5E5E5">neural nets really like to have the</font>

802
00:36:28,770 --> 00:36:31,440
<font color="#CCCCCC">input data to all be somewhere</font><font color="#E5E5E5"> around</font>

803
00:36:31,440 --> 00:36:33,930
<font color="#E5E5E5">zero with a standard</font><font color="#CCCCCC"> deviation of</font>

804
00:36:33,930 --> 00:36:35,940
somewhere<font color="#E5E5E5"> around</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> all right so</font><font color="#CCCCCC"> we can</font>

805
00:36:35,940 --> 00:36:39,900
<font color="#E5E5E5">always take our data and subtract the</font>

806
00:36:39,900 --> 00:36:41,040
mean and divide by<font color="#E5E5E5"> the standard</font>

807
00:36:41,040 --> 00:36:43,650
<font color="#CCCCCC">deviation to make that happen so that's</font>

808
00:36:43,650 --> 00:36:46,170
<font color="#E5E5E5">what do see a</font><font color="#CCCCCC"> littles</font><font color="#E5E5E5"> true that's and it</font>

809
00:36:46,170 --> 00:36:48,359
<font color="#E5E5E5">actually returns a special object which</font>

810
00:36:48,359 --> 00:36:50,070
keeps track<font color="#CCCCCC"> of what mean and standard</font>

811
00:36:50,070 --> 00:36:51,900
deviation<font color="#CCCCCC"> did it use for that</font>

812
00:36:51,900 --> 00:36:53,970
normalizing<font color="#CCCCCC"> so you can then</font><font color="#E5E5E5"> do the same</font>

813
00:36:53,970 --> 00:36:57,780
<font color="#E5E5E5">thing to the test set later it also</font>

814
00:36:57,780 --> 00:37:01,950
handles<font color="#E5E5E5"> missing values</font><font color="#CCCCCC"> so missing values</font>

815
00:37:01,950 --> 00:37:04,589
<font color="#E5E5E5">and categorical variables just become</font>

816
00:37:04,589 --> 00:37:07,349
the ID 0<font color="#CCCCCC"> and then all the other</font>

817
00:37:07,349 --> 00:37:09,690
<font color="#CCCCCC">categories become</font><font color="#E5E5E5"> 1 2 3 4</font><font color="#CCCCCC"> 5 4</font><font color="#E5E5E5"> that</font>

818
00:37:09,690 --> 00:37:12,930
<font color="#E5E5E5">categorical variable for continuous</font>

819
00:37:12,930 --> 00:37:13,530
variables

820
00:37:13,530 --> 00:37:17,580
it replaces the missing value with the

821
00:37:17,580 --> 00:37:21,150
median<font color="#E5E5E5"> and creates a new column that's a</font>

822
00:37:21,150 --> 00:37:23,099
<font color="#E5E5E5">boolean and</font><font color="#CCCCCC"> just says is this missing or</font>

823
00:37:23,099 --> 00:37:24,660
not<font color="#E5E5E5"> and I'm gonna skip over this pretty</font>

824
00:37:24,660 --> 00:37:26,310
quickly because<font color="#E5E5E5"> we talked about this in</font>

825
00:37:26,310 --> 00:37:27,240
detail

826
00:37:27,240 --> 00:37:29,369
the machine learning<font color="#E5E5E5"> course okay</font><font color="#CCCCCC"> so if</font>

827
00:37:29,369 --> 00:37:31,130
you've got any<font color="#CCCCCC"> questions about</font><font color="#E5E5E5"> this part</font>

828
00:37:31,130 --> 00:37:34,140
<font color="#E5E5E5">that would be a good place</font><font color="#CCCCCC"> to go</font><font color="#E5E5E5"> it's</font>

829
00:37:34,140 --> 00:37:36,900
nothing deep<font color="#CCCCCC"> learning specific there so</font>

830
00:37:36,900 --> 00:37:39,720
you can see afterwards<font color="#CCCCCC"> year</font><font color="#E5E5E5"> 2014</font><font color="#CCCCCC"> for</font>

831
00:37:39,720 --> 00:37:42,330
<font color="#CCCCCC">example has become year two okay because</font>

832
00:37:42,330 --> 00:37:43,830
these<font color="#E5E5E5"> categorical variables have all</font>

833
00:37:43,830 --> 00:37:47,220
been replaced<font color="#CCCCCC"> with with contiguous</font>

834
00:37:47,220 --> 00:37:50,700
integers starting<font color="#CCCCCC"> at</font><font color="#E5E5E5"> zero</font><font color="#CCCCCC"> and the reason</font>

835
00:37:50,700 --> 00:37:52,710
for<font color="#CCCCCC"> that is later on</font><font color="#E5E5E5"> we're going to be</font>

836
00:37:52,710 --> 00:37:55,020
<font color="#E5E5E5">putting them into a matrix</font><font color="#CCCCCC"> right and so</font>

837
00:37:55,020 --> 00:37:57,060
<font color="#E5E5E5">we wouldn't want the matrix to be 2014</font>

838
00:37:57,060 --> 00:37:59,220
rows long<font color="#E5E5E5"> when it could just be two rows</font>

839
00:37:59,220 --> 00:38:02,160
<font color="#CCCCCC">one there so</font><font color="#E5E5E5"> that's the basic</font><font color="#CCCCCC"> idea there</font>

840
00:38:02,160 --> 00:38:06,600
and you'll<font color="#E5E5E5"> see that the AC for example</font>

841
00:38:06,600 --> 00:38:08,670
has been<font color="#E5E5E5"> replaced in the same way with</font>

842
00:38:08,670 --> 00:38:13,740
<font color="#E5E5E5">one and three okay</font><font color="#CCCCCC"> so we now</font><font color="#E5E5E5"> have a data</font>

843
00:38:13,740 --> 00:38:15,330
frame which does not<font color="#E5E5E5"> contain</font><font color="#CCCCCC"> the</font>

844
00:38:15,330 --> 00:38:17,070
dependent variable and where everything

845
00:38:17,070 --> 00:38:20,220
<font color="#E5E5E5">is a number okay</font><font color="#CCCCCC"> and so that's</font><font color="#E5E5E5"> that</font>

846
00:38:20,220 --> 00:38:21,869
that's<font color="#E5E5E5"> where we</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> get to to do</font>

847
00:38:21,869 --> 00:38:23,910
deep learning and all of the stage<font color="#E5E5E5"> about</font>

848
00:38:23,910 --> 00:38:26,040
that as I said<font color="#E5E5E5"> we talked about in detail</font>

849
00:38:26,040 --> 00:38:27,930
<font color="#E5E5E5">in the machine learning course nothing</font>

850
00:38:27,930 --> 00:38:29,880
deep learning<font color="#E5E5E5"> specific about any of it</font>

851
00:38:29,880 --> 00:38:32,010
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is exactly what we</font><font color="#E5E5E5"> throw into</font><font color="#CCCCCC"> our</font>

852
00:38:32,010 --> 00:38:36,900
random forests as<font color="#E5E5E5"> well so another thing</font>

853
00:38:36,900 --> 00:38:38,190
<font color="#E5E5E5">we</font><font color="#CCCCCC"> talk about a lot</font><font color="#E5E5E5"> in the machine</font>

854
00:38:38,190 --> 00:38:39,810
learning<font color="#CCCCCC"> core of course is validation</font>

855
00:38:39,810 --> 00:38:44,310
<font color="#E5E5E5">sets</font><font color="#CCCCCC"> in this case we need to predict the</font>

856
00:38:44,310 --> 00:38:47,400
next<font color="#E5E5E5"> two weeks of sales right it's not</font>

857
00:38:47,400 --> 00:38:50,100
<font color="#E5E5E5">like pick a random set</font><font color="#CCCCCC"> of sales but we</font>

858
00:38:50,100 --> 00:38:52,230
<font color="#E5E5E5">have to pick the next two</font><font color="#CCCCCC"> weeks of sales</font>

859
00:38:52,230 --> 00:38:54,510
<font color="#E5E5E5">that was what the cattle competition</font>

860
00:38:54,510 --> 00:38:57,090
<font color="#CCCCCC">folks</font><font color="#E5E5E5"> told us to do and</font><font color="#CCCCCC"> therefore I'm</font>

861
00:38:57,090 --> 00:38:59,100
going<font color="#CCCCCC"> to create</font><font color="#E5E5E5"> a validation set which</font>

862
00:38:59,100 --> 00:39:03,510
is the<font color="#E5E5E5"> last two weeks of my training set</font>

863
00:39:03,510 --> 00:39:05,460
<font color="#E5E5E5">right to try and make</font><font color="#CCCCCC"> it as</font><font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to</font>

864
00:39:05,460 --> 00:39:08,100
<font color="#E5E5E5">the test set as possible</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we just</font>

865
00:39:08,100 --> 00:39:09,930
posted actually<font color="#CCCCCC"> Rachel wrote</font><font color="#E5E5E5"> this thing</font>

866
00:39:09,930 --> 00:39:13,470
last week<font color="#E5E5E5"> about creating validation sets</font>

867
00:39:13,470 --> 00:39:15,869
so if you go<font color="#CCCCCC"> too fast at AI you</font><font color="#E5E5E5"> can</font>

868
00:39:15,869 --> 00:39:17,220
check it<font color="#E5E5E5"> out we'll put that in the</font>

869
00:39:17,220 --> 00:39:20,790
lesson wiki as well<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> basically a</font>

870
00:39:20,790 --> 00:39:23,580
<font color="#E5E5E5">summary of a recent machine learning</font>

871
00:39:23,580 --> 00:39:27,210
lesson that we did the videos are

872
00:39:27,210 --> 00:39:28,619
available<font color="#E5E5E5"> for that as well and this</font><font color="#CCCCCC"> is</font>

873
00:39:28,619 --> 00:39:30,900
kind of a written<font color="#E5E5E5"> a written summary of</font>

874
00:39:30,900 --> 00:39:34,460
it<font color="#E5E5E5"> okay</font>

875
00:39:35,579 --> 00:39:38,200
so yeah so<font color="#E5E5E5"> Rachel and I spend a</font><font color="#CCCCCC"> lot of</font>

876
00:39:38,200 --> 00:39:40,420
time thinking<font color="#E5E5E5"> about kind of you know how</font>

877
00:39:40,420 --> 00:39:41,950
do<font color="#E5E5E5"> you need to think about validation</font>

878
00:39:41,950 --> 00:39:43,930
sets and training sets and test sets and

879
00:39:43,930 --> 00:39:46,690
so forth<font color="#E5E5E5"> and that's all there</font><font color="#CCCCCC"> but again</font>

880
00:39:46,690 --> 00:39:48,430
<font color="#CCCCCC">nothing deep learning</font><font color="#E5E5E5"> specific so let's</font>

881
00:39:48,430 --> 00:39:50,710
get straight<font color="#CCCCCC"> to the deep learning action</font>

882
00:39:50,710 --> 00:39:55,059
<font color="#E5E5E5">okay so in this particular</font><font color="#CCCCCC"> competition</font>

883
00:39:55,059 --> 00:39:58,059
as always with<font color="#E5E5E5"> any competition or any</font>

884
00:39:58,059 --> 00:40:01,660
kind<font color="#E5E5E5"> of machine learning project you</font>

885
00:40:01,660 --> 00:40:02,980
really<font color="#CCCCCC"> need to</font><font color="#E5E5E5"> make sure you have a</font>

886
00:40:02,980 --> 00:40:06,099
<font color="#E5E5E5">strong understanding of your metric how</font>

887
00:40:06,099 --> 00:40:08,079
are you going to<font color="#E5E5E5"> be judged here and in</font>

888
00:40:08,079 --> 00:40:09,460
this<font color="#CCCCCC"> case you know</font><font color="#E5E5E5"> Carol makes it easy</font>

889
00:40:09,460 --> 00:40:10,720
<font color="#CCCCCC">they tell us how we're going</font><font color="#E5E5E5"> to be</font>

890
00:40:10,720 --> 00:40:12,400
judged and so we're going<font color="#E5E5E5"> to be judged</font>

891
00:40:12,400 --> 00:40:14,950
on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> roots mean squared percentage</font>

892
00:40:14,950 --> 00:40:17,770
error right<font color="#E5E5E5"> so we're gonna say like oh</font>

893
00:40:17,770 --> 00:40:21,040
<font color="#E5E5E5">you predicted</font><font color="#CCCCCC"> three it</font><font color="#E5E5E5"> was actually</font>

894
00:40:21,040 --> 00:40:24,130
three point three<font color="#E5E5E5"> so you were</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> sent</font>

895
00:40:24,130 --> 00:40:25,900
out and then we're gonna average all

896
00:40:25,900 --> 00:40:28,890
those percents<font color="#E5E5E5"> right and remember</font><font color="#CCCCCC"> I</font>

897
00:40:28,890 --> 00:40:33,819
warned you<font color="#CCCCCC"> that you are gonna need to</font>

898
00:40:33,819 --> 00:40:35,680
<font color="#E5E5E5">make sure you know logarithms really</font>

899
00:40:35,680 --> 00:40:37,839
well right and so in this<font color="#E5E5E5"> case from you</font>

900
00:40:37,839 --> 00:40:40,450
know we're basically<font color="#E5E5E5"> being saying your</font>

901
00:40:40,450 --> 00:40:43,359
prediction divided<font color="#E5E5E5"> by the</font><font color="#CCCCCC"> actual the</font>

902
00:40:43,359 --> 00:40:46,000
mean of<font color="#CCCCCC"> that right is the thing that we</font>

903
00:40:46,000 --> 00:40:52,720
care<font color="#CCCCCC"> about</font><font color="#E5E5E5"> and so we don't have a metric</font>

904
00:40:52,720 --> 00:40:54,460
<font color="#E5E5E5">in</font><font color="#CCCCCC"> play</font><font color="#E5E5E5"> torch called root mean squared</font>

905
00:40:54,460 --> 00:40:56,740
percent error<font color="#CCCCCC"> we could actually</font><font color="#E5E5E5"> easily</font>

906
00:40:56,740 --> 00:40:59,890
create it by the way<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> look at the</font>

907
00:40:59,890 --> 00:41:01,930
source code<font color="#CCCCCC"> you'll see like it's you</font>

908
00:41:01,930 --> 00:41:03,790
know<font color="#CCCCCC"> a line of code but easiest</font><font color="#E5E5E5"> deal</font>

909
00:41:03,790 --> 00:41:08,140
would be<font color="#E5E5E5"> to realize that that if you</font>

910
00:41:08,140 --> 00:41:12,579
have that<font color="#E5E5E5"> right then you could replace a</font>

911
00:41:12,579 --> 00:41:16,750
with like log of a<font color="#CCCCCC"> dash and be with</font><font color="#E5E5E5"> like</font>

912
00:41:16,750 --> 00:41:19,359
log of B<font color="#E5E5E5"> dash and then you can replace</font>

913
00:41:19,359 --> 00:41:22,380
that<font color="#CCCCCC"> whole thing with a subtraction</font>

914
00:41:22,380 --> 00:41:26,079
<font color="#E5E5E5">that's just the rule of loaves</font><font color="#CCCCCC"> right and</font>

915
00:41:26,079 --> 00:41:28,930
so if you<font color="#E5E5E5"> don't know that rule then</font>

916
00:41:28,930 --> 00:41:30,400
don't make sure you go look it up

917
00:41:30,400 --> 00:41:32,109
because it's super helpful<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it means</font>

918
00:41:32,109 --> 00:41:35,430
<font color="#CCCCCC">in this case all we</font><font color="#E5E5E5"> need to do is to</font>

919
00:41:35,430 --> 00:41:39,880
take the log of<font color="#CCCCCC"> our data which I</font>

920
00:41:39,880 --> 00:41:42,069
actually did earlier in this notebook

921
00:41:42,069 --> 00:41:44,200
<font color="#CCCCCC">and when you take the</font><font color="#E5E5E5"> log of the data</font>

922
00:41:44,200 --> 00:41:46,599
getting<font color="#E5E5E5"> the root mean squared error will</font>

923
00:41:46,599 --> 00:41:47,980
actually get you<font color="#E5E5E5"> there</font>

924
00:41:47,980 --> 00:41:50,740
means great percent error<font color="#E5E5E5"> for free okay</font>

925
00:41:50,740 --> 00:41:53,770
<font color="#CCCCCC">but then when we</font><font color="#E5E5E5"> want to like print out</font>

926
00:41:53,770 --> 00:41:56,680
<font color="#E5E5E5">our it means percent error we actually</font>

927
00:41:56,680 --> 00:42:00,970
have to go<font color="#E5E5E5"> e ^ it again right and then</font>

928
00:42:00,970 --> 00:42:02,950
we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> actually return the percent</font>

929
00:42:02,950 --> 00:42:04,510
difference<font color="#CCCCCC"> so that's all that's going</font><font color="#E5E5E5"> on</font>

930
00:42:04,510 --> 00:42:06,040
here<font color="#E5E5E5"> it's again</font><font color="#CCCCCC"> not really deep learning</font>

931
00:42:06,040 --> 00:42:11,020
specific at all<font color="#CCCCCC"> so here we finally get</font>

932
00:42:11,020 --> 00:42:14,530
to<font color="#CCCCCC"> the deep</font><font color="#E5E5E5"> learning</font><font color="#CCCCCC"> alright so as per</font>

933
00:42:14,530 --> 00:42:16,120
usual like you'll<font color="#E5E5E5"> see everything we look</font>

934
00:42:16,120 --> 00:42:18,070
<font color="#E5E5E5">at today looks exactly the same as</font>

935
00:42:18,070 --> 00:42:20,020
<font color="#E5E5E5">everything we've looked at so far which</font>

936
00:42:20,020 --> 00:42:22,740
is<font color="#E5E5E5"> first we create a model data object</font>

937
00:42:22,740 --> 00:42:25,650
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that has a validation</font><font color="#E5E5E5"> set</font>

938
00:42:25,650 --> 00:42:28,150
<font color="#E5E5E5">training set</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> optional test set built</font>

939
00:42:28,150 --> 00:42:30,820
into it<font color="#CCCCCC"> from that</font><font color="#E5E5E5"> we will get a learner</font>

940
00:42:30,820 --> 00:42:33,820
we will then optionally called<font color="#E5E5E5"> learner</font>

941
00:42:33,820 --> 00:42:37,270
dot<font color="#CCCCCC"> LR find real then called learner dot</font>

942
00:42:37,270 --> 00:42:39,160
<font color="#E5E5E5">fetch it'll be all the same parameters</font>

943
00:42:39,160 --> 00:42:41,110
and everything that you've seen many

944
00:42:41,110 --> 00:42:43,870
times before<font color="#E5E5E5"> okay so the</font><font color="#CCCCCC"> difference</font>

945
00:42:43,870 --> 00:42:45,370
though is obviously<font color="#E5E5E5"> we're not going to</font>

946
00:42:45,370 --> 00:42:50,080
<font color="#E5E5E5">go image classify a data dot from CSV</font><font color="#CCCCCC"> or</font>

947
00:42:50,080 --> 00:42:52,270
<font color="#E5E5E5">dot from paths we need to get some</font>

948
00:42:52,270 --> 00:42:55,030
different<font color="#E5E5E5"> kind of model data and so for</font>

949
00:42:55,030 --> 00:42:57,700
stuff that<font color="#CCCCCC"> is in</font><font color="#E5E5E5"> rows</font><font color="#CCCCCC"> and columns we use</font>

950
00:42:57,700 --> 00:43:00,880
columnar model data<font color="#CCCCCC"> but</font><font color="#E5E5E5"> this will return</font>

951
00:43:00,880 --> 00:43:02,800
an object<font color="#E5E5E5"> with basically the same</font><font color="#CCCCCC"> API</font>

952
00:43:02,800 --> 00:43:05,500
that<font color="#E5E5E5"> you're familiar with and rather</font>

953
00:43:05,500 --> 00:43:09,160
than from paths<font color="#CCCCCC"> or from CSV this is from</font>

954
00:43:09,160 --> 00:43:12,130
data frame<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so this gets passed a</font>

955
00:43:12,130 --> 00:43:15,940
few things the path here is just used

956
00:43:15,940 --> 00:43:17,670
<font color="#CCCCCC">for it to know where should</font><font color="#E5E5E5"> it store</font>

957
00:43:17,670 --> 00:43:20,740
like model files or stuff like<font color="#CCCCCC"> that</font>

958
00:43:20,740 --> 00:43:22,210
right<font color="#E5E5E5"> this is just basically saying</font>

959
00:43:22,210 --> 00:43:23,590
<font color="#E5E5E5">where do you want to store anything that</font>

960
00:43:23,590 --> 00:43:27,070
you<font color="#CCCCCC"> saved</font><font color="#E5E5E5"> later this is the list of</font><font color="#CCCCCC"> the</font>

961
00:43:27,070 --> 00:43:29,050
<font color="#E5E5E5">indexes of the rows</font><font color="#CCCCCC"> that we want</font><font color="#E5E5E5"> to put</font>

962
00:43:29,050 --> 00:43:31,180
in the<font color="#CCCCCC"> validation set</font><font color="#E5E5E5"> we created earlier</font>

963
00:43:31,180 --> 00:43:39,820
here's our data<font color="#CCCCCC"> frame okay and then</font><font color="#E5E5E5"> look</font>

964
00:43:39,820 --> 00:43:41,470
here's this is where we did the log

965
00:43:41,470 --> 00:43:44,260
<font color="#E5E5E5">right so I</font><font color="#CCCCCC"> took the the Y</font><font color="#E5E5E5"> that came out</font>

966
00:43:44,260 --> 00:43:46,090
<font color="#CCCCCC">of property</font><font color="#E5E5E5"> F our dependent variable</font><font color="#CCCCCC"> I</font>

967
00:43:46,090 --> 00:43:49,210
logged it and I call that<font color="#CCCCCC"> yl all right</font>

968
00:43:49,210 --> 00:43:52,150
so we tell it when we create our model

969
00:43:52,150 --> 00:43:53,470
data we need<font color="#E5E5E5"> to tell</font><font color="#CCCCCC"> it that's our</font>

970
00:43:53,470 --> 00:43:56,140
dependent variable<font color="#CCCCCC"> okay so so far</font><font color="#E5E5E5"> we've</font>

971
00:43:56,140 --> 00:43:57,820
got<font color="#CCCCCC"> most of</font><font color="#E5E5E5"> the stuff</font><font color="#CCCCCC"> from the</font>

972
00:43:57,820 --> 00:43:59,770
validation set<font color="#E5E5E5"> which is what's our</font>

973
00:43:59,770 --> 00:44:01,250
independent variables

974
00:44:01,250 --> 00:44:03,380
<font color="#CCCCCC">how dependent variables</font><font color="#E5E5E5"> and then we have</font>

975
00:44:03,380 --> 00:44:05,480
to tell<font color="#E5E5E5"> it which things do we want</font>

976
00:44:05,480 --> 00:44:08,330
traded as categorical<font color="#E5E5E5"> right because</font>

977
00:44:08,330 --> 00:44:13,280
<font color="#E5E5E5">remember by this time</font><font color="#CCCCCC"> everything's</font><font color="#E5E5E5"> a</font>

978
00:44:13,280 --> 00:44:15,299
number

979
00:44:15,299 --> 00:44:17,999
<font color="#CCCCCC">right so it could do</font><font color="#E5E5E5"> the whole things</font>

980
00:44:17,999 --> 00:44:19,769
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> continuous it would just be totally</font>

981
00:44:19,769 --> 00:44:22,559
meaningless<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so we need to tell</font><font color="#CCCCCC"> it</font>

982
00:44:22,559 --> 00:44:24,239
which things<font color="#E5E5E5"> do we want to treat as</font>

983
00:44:24,239 --> 00:44:26,729
categories and so here we<font color="#E5E5E5"> just pass in</font>

984
00:44:26,729 --> 00:44:30,469
that<font color="#CCCCCC"> list</font><font color="#E5E5E5"> of names that we</font><font color="#CCCCCC"> used before</font>

985
00:44:30,469 --> 00:44:33,929
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> and then a bunch of the parameters</font>

986
00:44:33,929 --> 00:44:35,969
are the same<font color="#CCCCCC"> as the ones you're used to</font>

987
00:44:35,969 --> 00:44:37,849
for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> you can set</font><font color="#E5E5E5"> the batch size</font>

988
00:44:37,849 --> 00:44:43,069
yeah<font color="#E5E5E5"> so after</font><font color="#CCCCCC"> we do</font><font color="#E5E5E5"> that we've got a</font>

989
00:44:43,069 --> 00:44:46,769
little standard model data object but

990
00:44:46,769 --> 00:44:49,979
there's a<font color="#CCCCCC"> trained DL attribute there's a</font>

991
00:44:49,979 --> 00:44:52,559
Val DL attribute a trained es attribute

992
00:44:52,559 --> 00:44:55,259
<font color="#E5E5E5">of LDS attribute it's got a length it's</font>

993
00:44:55,259 --> 00:44:57,809
got all the stuff<font color="#E5E5E5"> exactly like it did in</font>

994
00:44:57,809 --> 00:45:04,349
all<font color="#CCCCCC"> of our</font><font color="#E5E5E5"> image based data objects okay</font>

995
00:45:04,349 --> 00:45:06,869
so now we need<font color="#CCCCCC"> to create the the model</font>

996
00:45:06,869 --> 00:45:09,569
or create the learner<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so to skip</font>

997
00:45:09,569 --> 00:45:12,839
ahead a<font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit we're</font><font color="#E5E5E5"> basically going</font>

998
00:45:12,839 --> 00:45:14,849
<font color="#E5E5E5">to pass in something</font><font color="#CCCCCC"> that looks pretty</font>

999
00:45:14,849 --> 00:45:16,679
familiar<font color="#E5E5E5"> we're going to be passing thing</font>

1000
00:45:16,679 --> 00:45:18,709
<font color="#E5E5E5">from our model from our model data</font>

1001
00:45:18,709 --> 00:45:21,769
create a learner<font color="#E5E5E5"> that is suitable for it</font>

1002
00:45:21,769 --> 00:45:24,869
<font color="#CCCCCC">and will</font><font color="#E5E5E5"> basically be passing in a few</font>

1003
00:45:24,869 --> 00:45:26,639
other bits<font color="#CCCCCC"> of information</font><font color="#E5E5E5"> which will</font>

1004
00:45:26,639 --> 00:45:29,459
include how much<font color="#CCCCCC"> dropout to use at the</font>

1005
00:45:29,459 --> 00:45:33,689
very<font color="#CCCCCC"> start how many how many activations</font>

1006
00:45:33,689 --> 00:45:34,799
to have in each layer

1007
00:45:34,799 --> 00:45:37,889
how much dropout to use at the later

1008
00:45:37,889 --> 00:45:40,529
layers<font color="#CCCCCC"> but then there's a</font><font color="#E5E5E5"> couple of</font>

1009
00:45:40,529 --> 00:45:41,819
extra<font color="#CCCCCC"> things that we need to learn about</font>

1010
00:45:41,819 --> 00:45:44,689
<font color="#E5E5E5">and specifically it's this thing called</font>

1011
00:45:44,689 --> 00:45:50,819
<font color="#E5E5E5">embeddings</font><font color="#CCCCCC"> so this is really the key new</font>

1012
00:45:50,819 --> 00:45:53,519
concept we have to<font color="#E5E5E5"> learn about all</font><font color="#CCCCCC"> right</font>

1013
00:45:53,519 --> 00:45:58,679
so<font color="#CCCCCC"> all we're doing basically</font><font color="#E5E5E5"> is we're</font>

1014
00:45:58,679 --> 00:46:02,249
<font color="#E5E5E5">going to take our let's forget about</font>

1015
00:46:02,249 --> 00:46:04,109
categorical variables for a moment<font color="#E5E5E5"> and</font>

1016
00:46:04,109 --> 00:46:05,549
just<font color="#E5E5E5"> think</font><font color="#CCCCCC"> about the</font><font color="#E5E5E5"> continuous</font>

1017
00:46:05,549 --> 00:46:08,699
variables for our<font color="#E5E5E5"> continuous variables</font>

1018
00:46:08,699 --> 00:46:11,759
<font color="#CCCCCC">all we're going to do is we're going to</font>

1019
00:46:11,759 --> 00:46:14,299
<font color="#E5E5E5">grab them all</font>

1020
00:46:16,440 --> 00:46:18,819
okay so for our continuous variables

1021
00:46:18,819 --> 00:46:20,500
we're basically going to<font color="#E5E5E5"> say like okay</font>

1022
00:46:20,500 --> 00:46:23,799
here's a big list of<font color="#E5E5E5"> all of our</font>

1023
00:46:23,799 --> 00:46:25,690
continuous variables like the<font color="#E5E5E5"> minimum</font>

1024
00:46:25,690 --> 00:46:27,880
temperature<font color="#E5E5E5"> and the maximum temperature</font>

1025
00:46:27,880 --> 00:46:29,740
<font color="#E5E5E5">and the distance to the nearest</font>

1026
00:46:29,740 --> 00:46:32,589
competitor<font color="#E5E5E5"> and so forth right and so</font>

1027
00:46:32,589 --> 00:46:34,390
here's<font color="#CCCCCC"> just a bunch of floating-point</font>

1028
00:46:34,390 --> 00:46:36,700
<font color="#E5E5E5">numbers and so basically what the neuron</font>

1029
00:46:36,700 --> 00:46:38,470
<font color="#E5E5E5">that's going to do is going to take that</font>

1030
00:46:38,470 --> 00:46:44,069
that 1d array or or vector<font color="#CCCCCC"> or to be very</font>

1031
00:46:44,069 --> 00:46:49,059
<font color="#CCCCCC">DL like</font><font color="#E5E5E5"> rank</font><font color="#CCCCCC"> one tensor or</font><font color="#E5E5E5"> means the</font>

1032
00:46:49,059 --> 00:46:49,660
same thing

1033
00:46:49,660 --> 00:46:51,280
<font color="#E5E5E5">okay so we're going to take our egg</font><font color="#CCCCCC"> one</font>

1034
00:46:51,280 --> 00:46:54,130
tensor and let's put it through a matrix

1035
00:46:54,130 --> 00:46:56,710
<font color="#CCCCCC">multiplication so let's say this has got</font>

1036
00:46:56,710 --> 00:46:59,380
like I<font color="#CCCCCC"> don't know 20</font><font color="#E5E5E5"> continuous</font>

1037
00:46:59,380 --> 00:47:01,569
variables and then we<font color="#CCCCCC"> can put</font><font color="#E5E5E5"> it through</font>

1038
00:47:01,569 --> 00:47:05,470
a<font color="#E5E5E5"> matrix which must have 20 rows that's</font>

1039
00:47:05,470 --> 00:47:07,960
how matrix multiplication works<font color="#E5E5E5"> and then</font>

1040
00:47:07,960 --> 00:47:09,790
we can decide<font color="#CCCCCC"> how many</font><font color="#E5E5E5"> columns we want</font>

1041
00:47:09,790 --> 00:47:12,940
right<font color="#CCCCCC"> so</font><font color="#E5E5E5"> maybe we decided 100 right and</font>

1042
00:47:12,940 --> 00:47:14,829
so that matrix<font color="#E5E5E5"> model captions going to</font>

1043
00:47:14,829 --> 00:47:20,339
spit out a new length 100<font color="#E5E5E5"> rank 1 tensor</font>

1044
00:47:20,339 --> 00:47:21,460
<font color="#CCCCCC">okay</font>

1045
00:47:21,460 --> 00:47:23,950
that's that's what that's what a linear

1046
00:47:23,950 --> 00:47:26,109
<font color="#E5E5E5">that's what a matrix</font><font color="#CCCCCC"> product does and</font>

1047
00:47:26,109 --> 00:47:28,410
that's the definition<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> linear layer</font>

1048
00:47:28,410 --> 00:47:32,440
<font color="#CCCCCC">indeed what</font><font color="#E5E5E5"> okay and so then the</font><font color="#CCCCCC"> next</font>

1049
00:47:32,440 --> 00:47:34,030
<font color="#E5E5E5">thing we do is we can</font><font color="#CCCCCC"> put that</font><font color="#E5E5E5"> through a</font>

1050
00:47:34,030 --> 00:47:36,700
rail<font color="#E5E5E5"> you</font><font color="#CCCCCC"> right which means</font><font color="#E5E5E5"> we throw away</font>

1051
00:47:36,700 --> 00:47:39,670
the negatives<font color="#CCCCCC"> okay and now we can</font><font color="#E5E5E5"> put</font>

1052
00:47:39,670 --> 00:47:42,250
that through another<font color="#E5E5E5"> matrix product okay</font>

1053
00:47:42,250 --> 00:47:43,240
so this is<font color="#E5E5E5"> going to have to have a</font>

1054
00:47:43,240 --> 00:47:47,079
hundred<font color="#E5E5E5"> rows by definition and we can</font>

1055
00:47:47,079 --> 00:47:49,089
have as many columns<font color="#E5E5E5"> as we like and so</font>

1056
00:47:49,089 --> 00:47:51,910
let's say maybe<font color="#E5E5E5"> this was the</font><font color="#CCCCCC"> last layer</font>

1057
00:47:51,910 --> 00:47:53,680
so the next thing we're trying<font color="#E5E5E5"> to do is</font>

1058
00:47:53,680 --> 00:47:57,210
to predict sales<font color="#E5E5E5"> so there's just one</font>

1059
00:47:57,210 --> 00:47:59,349
value<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> trying to predict</font><font color="#E5E5E5"> for sales</font>

1060
00:47:59,349 --> 00:48:01,480
so we could put it through a<font color="#E5E5E5"> matrix</font>

1061
00:48:01,480 --> 00:48:02,980
product<font color="#E5E5E5"> that</font><font color="#CCCCCC"> just had one column and</font>

1062
00:48:02,980 --> 00:48:05,760
<font color="#E5E5E5">that's going to spit out a single number</font>

1063
00:48:05,760 --> 00:48:09,880
<font color="#E5E5E5">all right so that's like that's kind of</font>

1064
00:48:09,880 --> 00:48:14,829
<font color="#E5E5E5">like a one layer neural net if you like</font>

1065
00:48:14,829 --> 00:48:17,109
now in practice<font color="#E5E5E5"> you know we wouldn't</font>

1066
00:48:17,109 --> 00:48:19,750
<font color="#E5E5E5">make it one layer so we would actually</font>

1067
00:48:19,750 --> 00:48:22,470
<font color="#CCCCCC">have leg</font>

1068
00:48:23,280 --> 00:48:26,490
you know maybe we'd have<font color="#E5E5E5"> 50 here</font><font color="#CCCCCC"> and so</font>

1069
00:48:26,490 --> 00:48:30,740
then that<font color="#CCCCCC"> gives us a</font><font color="#E5E5E5"> 50 long vector</font><font color="#CCCCCC"> and</font>

1070
00:48:30,740 --> 00:48:34,470
then maybe<font color="#E5E5E5"> we then put that into our</font>

1071
00:48:34,470 --> 00:48:40,380
<font color="#E5E5E5">final 50 by one and that's if it's out a</font>

1072
00:48:40,380 --> 00:48:42,420
<font color="#E5E5E5">single number</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> one reason I would</font>

1073
00:48:42,420 --> 00:48:43,530
<font color="#E5E5E5">have to change that there was to point</font>

1074
00:48:43,530 --> 00:48:46,650
<font color="#E5E5E5">out you know</font><font color="#CCCCCC"> rally you would</font><font color="#E5E5E5"> never put</font>

1075
00:48:46,650 --> 00:48:48,510
rally you in the last layer

1076
00:48:48,510 --> 00:48:49,770
I could never want<font color="#E5E5E5"> to throw</font><font color="#CCCCCC"> away the</font>

1077
00:48:49,770 --> 00:48:54,300
negatives because that the softmax<font color="#CCCCCC"> let's</font>

1078
00:48:54,300 --> 00:48:56,840
go back<font color="#E5E5E5"> to the softness the soft max</font>

1079
00:48:56,840 --> 00:48:59,430
needs negatives in it because it's the

1080
00:48:59,430 --> 00:49:00,599
negatives that<font color="#E5E5E5"> are the things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> allow</font>

1081
00:49:00,599 --> 00:49:04,380
<font color="#CCCCCC">it to</font><font color="#E5E5E5"> create low probabilities that's</font>

1082
00:49:04,380 --> 00:49:06,119
minor detail but it's useful<font color="#E5E5E5"> to</font><font color="#CCCCCC"> remember</font>

1083
00:49:06,119 --> 00:49:09,800
<font color="#E5E5E5">okay so basically</font>

1084
00:49:13,390 --> 00:49:19,940
so basically a simple view<font color="#E5E5E5"> of a fully</font>

1085
00:49:19,940 --> 00:49:22,400
connected<font color="#E5E5E5"> euro net is something that</font>

1086
00:49:22,400 --> 00:49:26,529
takes in as an input<font color="#E5E5E5"> a rank</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> tensor</font>

1087
00:49:26,529 --> 00:49:31,119
<font color="#CCCCCC">it's bits it's through a</font><font color="#E5E5E5"> linear layer an</font>

1088
00:49:31,119 --> 00:49:36,190
activation layer another<font color="#CCCCCC"> linear layer</font>

1089
00:49:36,190 --> 00:49:43,579
softmax<font color="#E5E5E5"> and that's the output okay</font><font color="#CCCCCC"> and</font>

1090
00:49:43,579 --> 00:49:46,970
so we could obviously<font color="#CCCCCC"> decide to add more</font>

1091
00:49:46,970 --> 00:49:50,390
linear layers<font color="#CCCCCC"> we could decide maybe to</font>

1092
00:49:50,390 --> 00:49:53,509
add<font color="#CCCCCC"> dropout</font><font color="#E5E5E5"> all right so these are some</font>

1093
00:49:53,509 --> 00:49:55,430
of<font color="#E5E5E5"> the decisions that we</font><font color="#CCCCCC"> need we get to</font>

1094
00:49:55,430 --> 00:49:58,279
make<font color="#CCCCCC"> right but we there's not that much</font>

1095
00:49:58,279 --> 00:49:59,990
we can do<font color="#E5E5E5"> right there's not much really</font>

1096
00:49:59,990 --> 00:50:02,839
<font color="#E5E5E5">crazy architecture stuff to do</font><font color="#CCCCCC"> so when</font>

1097
00:50:02,839 --> 00:50:06,230
we come back to image models<font color="#E5E5E5"> later in</font>

1098
00:50:06,230 --> 00:50:07,279
the course we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> learn about</font>

1099
00:50:07,279 --> 00:50:09,170
<font color="#CCCCCC">all the</font><font color="#E5E5E5"> weird things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> on and</font><font color="#E5E5E5"> like</font>

1100
00:50:09,170 --> 00:50:12,619
<font color="#E5E5E5">resonates and</font><font color="#CCCCCC"> inception networks and</font><font color="#E5E5E5"> but</font>

1101
00:50:12,619 --> 00:50:14,059
in these fully connected networks

1102
00:50:14,059 --> 00:50:15,799
<font color="#E5E5E5">they're really pretty simple</font><font color="#CCCCCC"> they're</font>

1103
00:50:15,799 --> 00:50:17,000
just<font color="#CCCCCC"> in dispersed</font>

1104
00:50:17,000 --> 00:50:19,430
linear layers<font color="#E5E5E5"> that is matrix products</font>

1105
00:50:19,430 --> 00:50:23,089
and activation functions like value and

1106
00:50:23,089 --> 00:50:27,170
a soft mix at the<font color="#CCCCCC"> edge and if it's not</font>

1107
00:50:27,170 --> 00:50:29,210
classification which actually ours is

1108
00:50:29,210 --> 00:50:30,740
not classification in this case we're

1109
00:50:30,740 --> 00:50:33,259
<font color="#CCCCCC">trying to predict sales</font><font color="#E5E5E5"> there isn't even</font>

1110
00:50:33,259 --> 00:50:35,750
a soft mix right<font color="#E5E5E5"> we don't</font><font color="#CCCCCC"> want it to be</font>

1111
00:50:35,750 --> 00:50:39,349
<font color="#E5E5E5">between 0</font><font color="#CCCCCC"> and 1 ok so we can</font><font color="#E5E5E5"> just throw</font>

1112
00:50:39,349 --> 00:50:43,579
away<font color="#E5E5E5"> the last activation altogether</font><font color="#CCCCCC"> if</font>

1113
00:50:43,579 --> 00:50:45,619
we have time we can<font color="#E5E5E5"> talk about a slight</font>

1114
00:50:45,619 --> 00:50:48,380
trick we<font color="#CCCCCC"> can do there but for</font><font color="#E5E5E5"> now we can</font>

1115
00:50:48,380 --> 00:50:51,440
<font color="#CCCCCC">think</font><font color="#E5E5E5"> of it</font><font color="#CCCCCC"> that way</font><font color="#E5E5E5"> so that was all</font>

1116
00:50:51,440 --> 00:50:53,569
assuming that<font color="#E5E5E5"> everything was continuous</font>

1117
00:50:53,569 --> 00:50:56,420
right but what about categorical right

1118
00:50:56,420 --> 00:51:04,000
so we've<font color="#CCCCCC"> got like day</font><font color="#E5E5E5"> of week right and</font>

1119
00:51:04,000 --> 00:51:06,019
we're going to<font color="#CCCCCC"> treat it as categorical</font>

1120
00:51:06,019 --> 00:51:11,259
<font color="#CCCCCC">practice like Saturday Sunday Monday</font>

1121
00:51:11,259 --> 00:51:15,260
<font color="#CCCCCC">that</font><font color="#E5E5E5"> should be 6</font>

1122
00:51:15,260 --> 00:51:19,430
<font color="#CCCCCC">ready</font><font color="#E5E5E5"> okay how do we feed</font><font color="#CCCCCC"> that in</font>

1123
00:51:19,430 --> 00:51:21,260
<font color="#E5E5E5">because I want to find a way of getting</font>

1124
00:51:21,260 --> 00:51:22,940
that in so<font color="#E5E5E5"> that we still end up with a</font>

1125
00:51:22,940 --> 00:51:26,000
<font color="#E5E5E5">wreck one tends to</font><font color="#CCCCCC"> refloat and so the</font>

1126
00:51:26,000 --> 00:51:28,490
trick is this<font color="#E5E5E5"> we create a new little</font>

1127
00:51:28,490 --> 00:51:35,690
<font color="#E5E5E5">matrix of with seven rows and as many</font>

1128
00:51:35,690 --> 00:51:38,270
columns as<font color="#E5E5E5"> we choose right so let's pick</font>

1129
00:51:38,270 --> 00:51:43,130
four<font color="#E5E5E5"> all right so here's our seven rows</font>

1130
00:51:43,130 --> 00:51:48,980
and four columns<font color="#E5E5E5"> right and basically</font>

1131
00:51:48,980 --> 00:51:52,220
what we do<font color="#CCCCCC"> is let's add our</font><font color="#E5E5E5"> categorical</font>

1132
00:51:52,220 --> 00:51:53,690
variables to the end so let's<font color="#E5E5E5"> say the</font>

1133
00:51:53,690 --> 00:51:57,950
first row was<font color="#E5E5E5"> Sunday right then what we</font>

1134
00:51:57,950 --> 00:52:00,530
do<font color="#CCCCCC"> is we do a lookup into</font><font color="#E5E5E5"> this matrix</font><font color="#CCCCCC"> we</font>

1135
00:52:00,530 --> 00:52:02,690
say oh here's<font color="#CCCCCC"> sunday we do and look up</font>

1136
00:52:02,690 --> 00:52:06,680
<font color="#CCCCCC">into here and we grab this row</font><font color="#E5E5E5"> and so</font>

1137
00:52:06,680 --> 00:52:08,869
this<font color="#CCCCCC"> matrix we</font><font color="#E5E5E5"> basically fill with</font>

1138
00:52:08,869 --> 00:52:10,250
<font color="#E5E5E5">floating-point numbers so we're going to</font>

1139
00:52:10,250 --> 00:52:15,710
end up grabbing little subset<font color="#E5E5E5"> of for</font>

1140
00:52:15,710 --> 00:52:18,050
<font color="#E5E5E5">floating-point numbers</font><font color="#CCCCCC"> at Sunday's</font>

1141
00:52:18,050 --> 00:52:20,720
particular for<font color="#E5E5E5"> floating-point numbers</font>

1142
00:52:20,720 --> 00:52:26,480
and so that way we convert Sunday<font color="#E5E5E5"> into a</font>

1143
00:52:26,480 --> 00:52:29,270
<font color="#CCCCCC">rank 1 tensor of</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> floating-point</font>

1144
00:52:29,270 --> 00:52:31,730
<font color="#E5E5E5">numbers and initially those</font><font color="#CCCCCC"> four numbers</font>

1145
00:52:31,730 --> 00:52:34,700
<font color="#E5E5E5">are random</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right and in fact</font><font color="#CCCCCC"> this</font>

1146
00:52:34,700 --> 00:52:37,510
whole thing we initially start out

1147
00:52:37,510 --> 00:52:41,390
random<font color="#CCCCCC"> okay but then we're going</font><font color="#E5E5E5"> to put</font>

1148
00:52:41,390 --> 00:52:44,570
that<font color="#E5E5E5"> through our neural net right so we</font>

1149
00:52:44,570 --> 00:52:46,280
basically then take those four<font color="#CCCCCC"> numbers</font>

1150
00:52:46,280 --> 00:52:50,150
and we remove<font color="#CCCCCC"> sunday</font><font color="#E5E5E5"> instead we add</font><font color="#CCCCCC"> our</font>

1151
00:52:50,150 --> 00:52:52,160
four numbers on here<font color="#E5E5E5"> right so we've</font>

1152
00:52:52,160 --> 00:52:54,920
turned<font color="#E5E5E5"> our categorical thing into a</font>

1153
00:52:54,920 --> 00:52:58,550
<font color="#CCCCCC">floating-point vector and so now we</font><font color="#E5E5E5"> can</font>

1154
00:52:58,550 --> 00:53:01,070
<font color="#E5E5E5">just put</font><font color="#CCCCCC"> that throughout neural net just</font>

1155
00:53:01,070 --> 00:53:03,350
like before<font color="#E5E5E5"> and at the very end</font><font color="#CCCCCC"> we found</font>

1156
00:53:03,350 --> 00:53:05,960
out the loss<font color="#E5E5E5"> and then we can figure out</font>

1157
00:53:05,960 --> 00:53:09,619
which<font color="#CCCCCC"> direction is down and do gradient</font>

1158
00:53:09,619 --> 00:53:11,840
descent in that direction<font color="#E5E5E5"> and eventually</font>

1159
00:53:11,840 --> 00:53:13,970
that<font color="#CCCCCC"> will find its</font><font color="#E5E5E5"> way back</font><font color="#CCCCCC"> to this</font>

1160
00:53:13,970 --> 00:53:16,010
little<font color="#E5E5E5"> list of four numbers</font><font color="#CCCCCC"> and it'll</font>

1161
00:53:16,010 --> 00:53:18,140
say<font color="#E5E5E5"> okay those random numbers</font><font color="#CCCCCC"> weren't</font>

1162
00:53:18,140 --> 00:53:20,150
very good<font color="#CCCCCC"> this one needs to go</font><font color="#E5E5E5"> up a bit</font>

1163
00:53:20,150 --> 00:53:21,920
<font color="#CCCCCC">that</font><font color="#E5E5E5"> one is to go up a bit</font><font color="#CCCCCC"> that one is</font>

1164
00:53:21,920 --> 00:53:23,510
to go down<font color="#E5E5E5"> a bit that one is to go up a</font>

1165
00:53:23,510 --> 00:53:26,109
bit<font color="#E5E5E5"> and so will actually update our</font>

1166
00:53:26,109 --> 00:53:28,730
original those four numbers<font color="#CCCCCC"> in that</font>

1167
00:53:28,730 --> 00:53:29,030
match

1168
00:53:29,030 --> 00:53:31,520
and we'll do this again<font color="#E5E5E5"> and again</font><font color="#CCCCCC"> and</font>

1169
00:53:31,520 --> 00:53:34,610
again<font color="#E5E5E5"> and so this this</font><font color="#CCCCCC"> matrix will stop</font>

1170
00:53:34,610 --> 00:53:36,320
<font color="#E5E5E5">looking random and it will start looking</font>

1171
00:53:36,320 --> 00:53:38,990
<font color="#E5E5E5">more and more like like the exact</font><font color="#CCCCCC"> four</font>

1172
00:53:38,990 --> 00:53:40,520
numbers that happen to work best for

1173
00:53:40,520 --> 00:53:42,560
Sunday<font color="#CCCCCC"> the exact four numbers</font><font color="#E5E5E5"> that</font>

1174
00:53:42,560 --> 00:53:44,870
happen to work best for Friday<font color="#E5E5E5"> and so</font>

1175
00:53:44,870 --> 00:53:45,350
forth

1176
00:53:45,350 --> 00:53:48,520
and so in other words this matrix is

1177
00:53:48,520 --> 00:53:52,640
<font color="#E5E5E5">just another bunch of weights in our</font>

1178
00:53:52,640 --> 00:53:56,180
<font color="#E5E5E5">neural net</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right and so matrices</font><font color="#CCCCCC"> of</font>

1179
00:53:56,180 --> 00:54:01,480
this type are<font color="#CCCCCC"> called embedding matrices</font>

1180
00:54:03,640 --> 00:54:06,290
so an embedding matrix is something

1181
00:54:06,290 --> 00:54:10,600
<font color="#E5E5E5">where we start out with an integer</font>

1182
00:54:10,600 --> 00:54:13,850
between<font color="#CCCCCC"> zero and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> maximum number of</font>

1183
00:54:13,850 --> 00:54:17,540
levels of that<font color="#E5E5E5"> category we literally</font>

1184
00:54:17,540 --> 00:54:20,240
<font color="#CCCCCC">index</font><font color="#E5E5E5"> into a matrix</font><font color="#CCCCCC"> to find a particular</font>

1185
00:54:20,240 --> 00:54:23,540
row<font color="#E5E5E5"> so if it was the level was one we</font>

1186
00:54:23,540 --> 00:54:27,010
take<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first row we</font><font color="#E5E5E5"> grab that road and</font>

1187
00:54:27,010 --> 00:54:30,410
<font color="#E5E5E5">we append it</font><font color="#CCCCCC"> to all of</font><font color="#E5E5E5"> our continuous</font>

1188
00:54:30,410 --> 00:54:34,510
variables and so we now have a new

1189
00:54:34,510 --> 00:54:37,070
vector of continuous<font color="#CCCCCC"> variables</font><font color="#E5E5E5"> and when</font>

1190
00:54:37,070 --> 00:54:39,080
we can do the same thing<font color="#E5E5E5"> so let's say</font>

1191
00:54:39,080 --> 00:54:41,960
<font color="#E5E5E5">zip code</font><font color="#CCCCCC"> right so we could like have an</font>

1192
00:54:41,960 --> 00:54:44,180
embedding matrix<font color="#E5E5E5"> let's say there are</font>

1193
00:54:44,180 --> 00:54:46,910
<font color="#CCCCCC">5,000 zip codes</font><font color="#E5E5E5"> it would be</font><font color="#CCCCCC"> 5,000 rows</font>

1194
00:54:46,910 --> 00:54:49,970
long as wide as we decide maybe it's 50

1195
00:54:49,970 --> 00:54:55,010
wide and so we'd say<font color="#CCCCCC"> ok here's</font><font color="#E5E5E5"> 9 4 0 0</font><font color="#CCCCCC"> 3</font>

1196
00:54:55,010 --> 00:54:58,130
that zip<font color="#CCCCCC"> code is index number</font><font color="#E5E5E5"> 4 you know</font>

1197
00:54:58,130 --> 00:54:59,660
<font color="#CCCCCC">matrix ordered</font><font color="#E5E5E5"> out and we'd find the</font>

1198
00:54:59,660 --> 00:55:02,360
<font color="#E5E5E5">fourth row regret those 50</font><font color="#CCCCCC"> numbers and</font>

1199
00:55:02,360 --> 00:55:05,750
append those<font color="#CCCCCC"> on to our big vector and</font>

1200
00:55:05,750 --> 00:55:07,550
then everything<font color="#CCCCCC"> after that is just the</font>

1201
00:55:07,550 --> 00:55:08,690
same we<font color="#CCCCCC"> just put it through</font><font color="#E5E5E5"> our linear</font>

1202
00:55:08,690 --> 00:55:13,820
layer<font color="#CCCCCC"> a linear layer</font><font color="#E5E5E5"> whatever what are</font>

1203
00:55:13,820 --> 00:55:16,940
those<font color="#CCCCCC"> 4 numbers</font><font color="#E5E5E5"> represent</font><font color="#CCCCCC"> that's a great</font>

1204
00:55:16,940 --> 00:55:19,160
question<font color="#CCCCCC"> and we'll learn more about that</font>

1205
00:55:19,160 --> 00:55:20,680
<font color="#CCCCCC">when we look at collaborative filtering</font>

1206
00:55:20,680 --> 00:55:24,410
<font color="#CCCCCC">but now they represent no more or no</font>

1207
00:55:24,410 --> 00:55:26,930
less than any other parameter<font color="#E5E5E5"> in a</font>

1208
00:55:26,930 --> 00:55:30,320
<font color="#E5E5E5">neural net you know they're just they're</font>

1209
00:55:30,320 --> 00:55:32,090
just parameters<font color="#CCCCCC"> that we're learning that</font>

1210
00:55:32,090 --> 00:55:35,260
<font color="#CCCCCC">happen</font><font color="#E5E5E5"> to end up giving us a good loss</font>

1211
00:55:35,260 --> 00:55:37,940
<font color="#E5E5E5">we will discover later that</font><font color="#CCCCCC"> these</font>

1212
00:55:37,940 --> 00:55:39,800
particular parameters often<font color="#CCCCCC"> however are</font>

1213
00:55:39,800 --> 00:55:41,660
human<font color="#CCCCCC"> interpretive all</font><font color="#E5E5E5"> and quote can</font>

1214
00:55:41,660 --> 00:55:44,240
quite interesting<font color="#E5E5E5"> but that's a side</font>

1215
00:55:44,240 --> 00:55:47,270
effect<font color="#CCCCCC"> of them it's not fundamental</font>

1216
00:55:47,270 --> 00:55:49,190
<font color="#E5E5E5">they're just</font><font color="#CCCCCC"> for random numbers for now</font>

1217
00:55:49,190 --> 00:55:52,099
that<font color="#E5E5E5"> we're that we're learning or sets</font>

1218
00:55:52,099 --> 00:55:57,650
of<font color="#E5E5E5"> four random numbers</font><font color="#CCCCCC"> to have a good</font>

1219
00:55:57,650 --> 00:55:59,359
<font color="#CCCCCC">heuristic for at the</font><font color="#E5E5E5"> dimensionality of</font>

1220
00:55:59,359 --> 00:56:03,140
embedding<font color="#CCCCCC"> matrix so why four here I sure</font>

1221
00:56:03,140 --> 00:56:12,770
do so what I first of<font color="#E5E5E5"> all did was I</font><font color="#CCCCCC"> made</font>

1222
00:56:12,770 --> 00:56:15,829
a little<font color="#E5E5E5"> list of every categorical</font>

1223
00:56:15,829 --> 00:56:19,010
variable<font color="#E5E5E5"> and</font><font color="#CCCCCC"> its cardinality</font><font color="#E5E5E5"> okay so</font>

1224
00:56:19,010 --> 00:56:20,599
<font color="#CCCCCC">they're they allow so there's a hundred</font>

1225
00:56:20,599 --> 00:56:22,970
<font color="#E5E5E5">and there's a thousand plus different</font>

1226
00:56:22,970 --> 00:56:24,130
<font color="#E5E5E5">stores</font>

1227
00:56:24,130 --> 00:56:27,289
apparently in<font color="#CCCCCC"> Rothman's Network</font>

1228
00:56:27,289 --> 00:56:29,089
there are eight days of the week that's

1229
00:56:29,089 --> 00:56:30,319
because there are<font color="#E5E5E5"> seven days</font><font color="#CCCCCC"> of the week</font>

1230
00:56:30,319 --> 00:56:33,619
<font color="#E5E5E5">plus one left over for unknown even</font><font color="#CCCCCC"> if</font>

1231
00:56:33,619 --> 00:56:35,480
there were no<font color="#CCCCCC"> missing values in the</font>

1232
00:56:35,480 --> 00:56:37,490
<font color="#E5E5E5">original data I always still set aside</font>

1233
00:56:37,490 --> 00:56:39,619
one just in<font color="#E5E5E5"> case there's a missing or an</font>

1234
00:56:39,619 --> 00:56:41,480
unknown<font color="#CCCCCC"> or something different in the</font>

1235
00:56:41,480 --> 00:56:44,630
test set again<font color="#E5E5E5"> for years but there's</font>

1236
00:56:44,630 --> 00:56:46,700
actually<font color="#E5E5E5"> three plus room for an unknown</font>

1237
00:56:46,700 --> 00:56:51,140
<font color="#E5E5E5">and</font><font color="#CCCCCC"> so forth right so what I do my rule</font>

1238
00:56:51,140 --> 00:56:55,490
of thumb<font color="#E5E5E5"> is this take the cardinality</font>

1239
00:56:55,490 --> 00:57:00,200
<font color="#CCCCCC">with the variable divide it by two but</font>

1240
00:57:00,200 --> 00:57:04,180
<font color="#CCCCCC">don't make it</font><font color="#E5E5E5"> bigger than</font><font color="#CCCCCC"> 50 okay so</font>

1241
00:57:04,180 --> 00:57:06,829
these<font color="#E5E5E5"> are my embedding matrices so</font><font color="#CCCCCC"> my</font>

1242
00:57:06,829 --> 00:57:10,210
<font color="#CCCCCC">store matrix</font><font color="#E5E5E5"> so there has to have a</font>

1243
00:57:10,210 --> 00:57:12,650
thousand one hundred and sixteen rows

1244
00:57:12,650 --> 00:57:15,200
<font color="#CCCCCC">cuz I need to</font><font color="#E5E5E5"> look up right to find his</font>

1245
00:57:15,200 --> 00:57:17,390
store number three and then<font color="#E5E5E5"> it's been a</font>

1246
00:57:17,390 --> 00:57:20,900
<font color="#CCCCCC">return back a rank one tensor of length</font>

1247
00:57:20,900 --> 00:57:23,630
<font color="#E5E5E5">fifty day of week it's going to look up</font>

1248
00:57:23,630 --> 00:57:25,490
<font color="#E5E5E5">into which one</font><font color="#CCCCCC"> of the eight and</font>

1249
00:57:25,490 --> 00:57:31,220
<font color="#CCCCCC">returning</font><font color="#E5E5E5"> the thing of length four so</font>

1250
00:57:31,220 --> 00:57:33,020
what you typically build<font color="#CCCCCC"> on embedding</font>

1251
00:57:33,020 --> 00:57:36,279
<font color="#CCCCCC">metrics for each categorical feature</font><font color="#E5E5E5"> yes</font>

1252
00:57:36,279 --> 00:57:38,480
yeah<font color="#E5E5E5"> so that's what</font><font color="#CCCCCC"> I've done here so</font>

1253
00:57:38,480 --> 00:57:43,700
I've said for see in categorical

1254
00:57:43,700 --> 00:57:47,720
variables see how many categories there

1255
00:57:47,720 --> 00:57:53,450
<font color="#CCCCCC">are and then for each of those</font><font color="#E5E5E5"> things</font>

1256
00:57:53,450 --> 00:57:56,300
create one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these and then</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

1257
00:57:56,300 --> 00:57:59,270
called embedding sizes<font color="#E5E5E5"> and then you may</font>

1258
00:57:59,270 --> 00:58:01,130
have<font color="#CCCCCC"> noticed that</font><font color="#E5E5E5"> that's actually the</font>

1259
00:58:01,130 --> 00:58:03,320
first<font color="#CCCCCC"> thing that we pass to get learner</font>

1260
00:58:03,320 --> 00:58:05,300
and so<font color="#CCCCCC"> that tells it for every</font>

1261
00:58:05,300 --> 00:58:07,250
categorical variable that's the

1262
00:58:07,250 --> 00:58:08,990
embedding matrix to use for<font color="#E5E5E5"> that</font>

1263
00:58:08,990 --> 00:58:11,690
<font color="#E5E5E5">variable that</font><font color="#CCCCCC"> is behind you listen</font>

1264
00:58:11,690 --> 00:58:16,570
yes<font color="#CCCCCC"> traffic aggression so besides our</font>

1265
00:58:16,570 --> 00:58:19,190
random initialization<font color="#E5E5E5"> and there are</font>

1266
00:58:19,190 --> 00:58:20,540
other ways<font color="#CCCCCC"> to actually initialize</font>

1267
00:58:20,540 --> 00:58:25,970
embedding<font color="#CCCCCC"> yes or</font><font color="#E5E5E5"> no there's two ways one</font>

1268
00:58:25,970 --> 00:58:26,660
is<font color="#E5E5E5"> random</font>

1269
00:58:26,660 --> 00:58:29,869
the other is pre-trained<font color="#E5E5E5"> and we'll</font>

1270
00:58:29,869 --> 00:58:31,280
probably<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> pre-trained more</font>

1271
00:58:31,280 --> 00:58:33,079
later in the course but<font color="#CCCCCC"> the basic idea</font>

1272
00:58:33,079 --> 00:58:35,030
though is<font color="#E5E5E5"> if somebody else at</font><font color="#CCCCCC"> Rossmann</font>

1273
00:58:35,030 --> 00:58:37,700
had<font color="#CCCCCC"> already trained a neural net just</font>

1274
00:58:37,700 --> 00:58:39,589
like you you would use a pre trained net

1275
00:58:39,589 --> 00:58:41,510
from<font color="#CCCCCC"> imagenet to look at</font><font color="#E5E5E5"> pictures of</font>

1276
00:58:41,510 --> 00:58:43,579
cats<font color="#E5E5E5"> and</font><font color="#CCCCCC"> dogs if somebody else is</font>

1277
00:58:43,579 --> 00:58:45,829
pre-trained<font color="#CCCCCC"> a network</font><font color="#E5E5E5"> to predict cheese</font>

1278
00:58:45,829 --> 00:58:48,589
sales in ruspin you may as well<font color="#E5E5E5"> start</font>

1279
00:58:48,589 --> 00:58:50,390
<font color="#E5E5E5">with their embedding matrix of stores to</font>

1280
00:58:50,390 --> 00:58:53,480
<font color="#E5E5E5">predict liquor sales in</font><font color="#CCCCCC"> Rossmann and</font>

1281
00:58:53,480 --> 00:58:56,230
this is what happens<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example at</font>

1282
00:58:56,230 --> 00:58:59,990
Pinterest and Institute they both use

1283
00:58:59,990 --> 00:59:02,000
this technique instacart uses it for

1284
00:59:02,000 --> 00:59:04,700
routing their shoppers<font color="#E5E5E5"> Pinterest uses it</font>

1285
00:59:04,700 --> 00:59:06,920
for deciding what<font color="#E5E5E5"> to display on a web</font>

1286
00:59:06,920 --> 00:59:09,069
<font color="#CCCCCC">page when you go there and they have</font>

1287
00:59:09,069 --> 00:59:12,500
<font color="#E5E5E5">embedding matrices of products in</font>

1288
00:59:12,500 --> 00:59:15,920
<font color="#E5E5E5">instigates case of stores that</font><font color="#CCCCCC"> get</font>

1289
00:59:15,920 --> 00:59:18,230
shared<font color="#E5E5E5"> in the organization so people</font>

1290
00:59:18,230 --> 00:59:21,819
don't have to train you once

1291
00:59:23,260 --> 00:59:28,339
so for the<font color="#E5E5E5"> embedding sighs why wouldn't</font>

1292
00:59:28,339 --> 00:59:31,039
you just<font color="#CCCCCC"> use</font><font color="#E5E5E5"> like open hot scheme and</font>

1293
00:59:31,039 --> 00:59:33,710
just<font color="#CCCCCC"> well what is the advantage of</font><font color="#E5E5E5"> doing</font>

1294
00:59:33,710 --> 00:59:36,500
<font color="#CCCCCC">this</font><font color="#E5E5E5"> they're supposed to just do</font><font color="#CCCCCC"> it well</font>

1295
00:59:36,500 --> 00:59:39,109
good<font color="#CCCCCC"> question so so we could easily</font><font color="#E5E5E5"> as</font>

1296
00:59:39,109 --> 00:59:43,789
you<font color="#E5E5E5"> point out have instead of passing in</font>

1297
00:59:43,789 --> 00:59:46,460
these four numbers<font color="#CCCCCC"> record instead of</font>

1298
00:59:46,460 --> 00:59:50,359
passed in seven numbers<font color="#CCCCCC"> all zeroes</font><font color="#E5E5E5"> but</font>

1299
00:59:50,359 --> 00:59:52,309
one of them<font color="#E5E5E5"> is one and that also is a</font>

1300
00:59:52,309 --> 00:59:55,819
list of floats and<font color="#E5E5E5"> that would</font><font color="#CCCCCC"> totally</font>

1301
00:59:55,819 --> 01:00:00,619
<font color="#CCCCCC">work and that's how generally speaking</font>

1302
01:00:00,619 --> 01:00:03,400
categorical variables have<font color="#CCCCCC"> been used in</font>

1303
01:00:03,400 --> 01:00:05,299
statistics for<font color="#E5E5E5"> many years it's called</font>

1304
01:00:05,299 --> 01:00:09,289
<font color="#E5E5E5">dummy</font><font color="#CCCCCC"> variables the problem is that in</font>

1305
01:00:09,289 --> 01:00:13,819
that<font color="#E5E5E5"> case the concept of</font><font color="#CCCCCC"> sundae could</font>

1306
01:00:13,819 --> 01:00:15,559
only ever be associated<font color="#E5E5E5"> with a single</font>

1307
01:00:15,559 --> 01:00:19,549
floating-point number right and so it

1308
01:00:19,549 --> 01:00:21,470
basically<font color="#E5E5E5"> gets this kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> linear</font>

1309
01:00:21,470 --> 01:00:24,140
behavior<font color="#CCCCCC"> it says like sunday is more or</font>

1310
01:00:24,140 --> 01:00:27,920
less<font color="#E5E5E5"> of a single thing yeah worth</font>

1311
01:00:27,920 --> 01:00:29,599
noticing directions it's saying<font color="#E5E5E5"> like now</font>

1312
01:00:29,599 --> 01:00:31,970
<font color="#E5E5E5">sunday is a concept in four dimensional</font>

1313
01:00:31,970 --> 01:00:34,760
space<font color="#E5E5E5"> right and so what we tend to find</font>

1314
01:00:34,760 --> 01:00:38,930
<font color="#E5E5E5">happen is that these embedding vectors</font>

1315
01:00:38,930 --> 01:00:42,200
<font color="#E5E5E5">tend to get these kind of rich semantic</font>

1316
01:00:42,200 --> 01:00:45,890
concepts so for<font color="#E5E5E5"> example if it turns out</font>

1317
01:00:45,890 --> 01:00:50,510
<font color="#E5E5E5">that weekends</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of have a different</font>

1318
01:00:50,510 --> 01:00:52,309
<font color="#CCCCCC">behavior</font><font color="#E5E5E5"> you'll tend to see that</font>

1319
01:00:52,309 --> 01:00:54,680
Saturday and Sunday will have like some

1320
01:00:54,680 --> 01:00:57,349
particular number higher or more<font color="#CCCCCC"> likely</font>

1321
01:00:57,349 --> 01:00:59,869
<font color="#E5E5E5">it turns out that certain days of the</font>

1322
01:00:59,869 --> 01:01:05,230
<font color="#E5E5E5">week are associated with higher sales of</font>

1323
01:01:06,460 --> 01:01:09,170
certain kinds of goods that<font color="#E5E5E5"> you kind of</font>

1324
01:01:09,170 --> 01:01:11,029
can't go without I don't<font color="#CCCCCC"> know like</font><font color="#E5E5E5"> gas</font>

1325
01:01:11,029 --> 01:01:14,270
or milk<font color="#CCCCCC"> see</font><font color="#E5E5E5"> where else there</font><font color="#CCCCCC"> might be</font>

1326
01:01:14,270 --> 01:01:18,799
other products<font color="#E5E5E5"> like like wine for</font>

1327
01:01:18,799 --> 01:01:23,779
<font color="#E5E5E5">example like wine that tend</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

1328
01:01:23,779 --> 01:01:26,029
associated with like the days before

1329
01:01:26,029 --> 01:01:28,250
weekends or holidays<font color="#CCCCCC"> right so there</font>

1330
01:01:28,250 --> 01:01:31,240
might be kind<font color="#CCCCCC"> of a column which is like</font>

1331
01:01:31,240 --> 01:01:35,540
to what extent is this day of<font color="#E5E5E5"> the week</font>

1332
01:01:35,540 --> 01:01:37,960
kind<font color="#E5E5E5"> of associated</font><font color="#CCCCCC"> with people going out</font>

1333
01:01:37,960 --> 01:01:41,990
you know<font color="#E5E5E5"> so basically yeah by by</font><font color="#CCCCCC"> having</font>

1334
01:01:41,990 --> 01:01:44,510
this higher dimensionality<font color="#CCCCCC"> dektor rather</font>

1335
01:01:44,510 --> 01:01:46,550
than just a<font color="#CCCCCC"> single number it gives</font><font color="#E5E5E5"> the</font>

1336
01:01:46,550 --> 01:01:49,820
deep<font color="#E5E5E5"> Learning Network</font><font color="#CCCCCC"> a chance</font><font color="#E5E5E5"> to learn</font>

1337
01:01:49,820 --> 01:01:53,030
these rich representations<font color="#E5E5E5"> and so this</font>

1338
01:01:53,030 --> 01:01:56,000
idea of<font color="#E5E5E5"> an embedding is actually what's</font>

1339
01:01:56,000 --> 01:01:58,790
called a distributed<font color="#CCCCCC"> representation it's</font>

1340
01:01:58,790 --> 01:02:01,130
kind of the fun most fundamental concept

1341
01:02:01,130 --> 01:02:03,920
of neural networks this<font color="#E5E5E5"> is the idea that</font>

1342
01:02:03,920 --> 01:02:06,980
<font color="#CCCCCC">a concept in a neural network has a</font><font color="#E5E5E5"> kind</font>

1343
01:02:06,980 --> 01:02:10,610
of a a high<font color="#E5E5E5"> dimensional representation</font>

1344
01:02:10,610 --> 01:02:12,980
<font color="#CCCCCC">and often it</font><font color="#E5E5E5"> can be hard to interpret</font>

1345
01:02:12,980 --> 01:02:14,720
<font color="#E5E5E5">because the idea is</font><font color="#CCCCCC"> like each of these</font>

1346
01:02:14,720 --> 01:02:17,390
numbers<font color="#E5E5E5"> in</font><font color="#CCCCCC"> this vector</font><font color="#E5E5E5"> doesn't even have</font>

1347
01:02:17,390 --> 01:02:19,340
to<font color="#E5E5E5"> have just one meaning you know it</font>

1348
01:02:19,340 --> 01:02:21,080
could mean<font color="#E5E5E5"> one thing if this is low and</font>

1349
01:02:21,080 --> 01:02:22,580
<font color="#CCCCCC">that one's high and</font><font color="#E5E5E5"> something else if</font>

1350
01:02:22,580 --> 01:02:23,630
that one's high and<font color="#E5E5E5"> that one's low</font>

1351
01:02:23,630 --> 01:02:25,340
because<font color="#E5E5E5"> it's going</font><font color="#CCCCCC"> through this</font><font color="#E5E5E5"> kind of</font>

1352
01:02:25,340 --> 01:02:29,660
rich nonlinear function right<font color="#E5E5E5"> and so</font>

1353
01:02:29,660 --> 01:02:33,770
it's this it's this rich representation

1354
01:02:33,770 --> 01:02:36,170
that allows<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to learn</font><font color="#CCCCCC"> such such such</font>

1355
01:02:36,170 --> 01:02:41,540
interesting relationships I'm kind of<font color="#CCCCCC"> oh</font>

1356
01:02:41,540 --> 01:02:44,720
<font color="#E5E5E5">another question sure I'll speak louder</font>

1357
01:02:44,720 --> 01:02:50,300
<font color="#E5E5E5">so are there he's in</font><font color="#CCCCCC"> a meeting so</font><font color="#E5E5E5"> I get</font>

1358
01:02:50,300 --> 01:02:52,310
the the<font color="#E5E5E5"> fundamental</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> be like the word</font>

1359
01:02:52,310 --> 01:02:55,310
vector<font color="#E5E5E5"> were to</font><font color="#CCCCCC"> Vic vector algebra even</font>

1360
01:02:55,310 --> 01:02:57,470
run on<font color="#E5E5E5"> this thing are</font><font color="#CCCCCC"> the embedding</font>

1361
01:02:57,470 --> 01:03:00,050
suited suitable for<font color="#E5E5E5"> certain types of</font>

1362
01:03:00,050 --> 01:03:02,990
variables<font color="#E5E5E5"> like or are these only</font>

1363
01:03:02,990 --> 01:03:05,600
<font color="#E5E5E5">suitable for there are different</font>

1364
01:03:05,600 --> 01:03:07,280
<font color="#CCCCCC">categories that</font><font color="#E5E5E5"> that the embeddings are</font>

1365
01:03:07,280 --> 01:03:09,770
suitable<font color="#CCCCCC"> for an embedding is suitable</font>

1366
01:03:09,770 --> 01:03:13,550
for any categorical variable<font color="#E5E5E5"> okay so so</font>

1367
01:03:13,550 --> 01:03:16,130
<font color="#E5E5E5">the only thing it it can't really work</font>

1368
01:03:16,130 --> 01:03:18,440
well at<font color="#E5E5E5"> all</font><font color="#CCCCCC"> four would be</font><font color="#E5E5E5"> something that</font>

1369
01:03:18,440 --> 01:03:20,900
<font color="#CCCCCC">is too high cardinality so I'm like in</font>

1370
01:03:20,900 --> 01:03:22,430
other<font color="#E5E5E5"> words we had</font><font color="#CCCCCC"> like whatever it was</font>

1371
01:03:22,430 --> 01:03:24,740
six<font color="#CCCCCC"> hundred thousand rows if you had a</font>

1372
01:03:24,740 --> 01:03:26,330
variable<font color="#CCCCCC"> with six hundred thousand</font>

1373
01:03:26,330 --> 01:03:29,920
levels<font color="#E5E5E5"> that's just not a</font><font color="#CCCCCC"> useful</font>

1374
01:03:29,920 --> 01:03:33,140
categorical variable you could packetize

1375
01:03:33,140 --> 01:03:36,470
it I guess<font color="#CCCCCC"> but</font><font color="#E5E5E5"> yeah in</font><font color="#CCCCCC"> general like you</font>

1376
01:03:36,470 --> 01:03:38,660
<font color="#E5E5E5">can see here that the the</font><font color="#CCCCCC"> third place</font>

1377
01:03:38,660 --> 01:03:41,600
<font color="#CCCCCC">getters in this competition really</font>

1378
01:03:41,600 --> 01:03:45,200
decided that<font color="#E5E5E5"> everything that was not too</font>

1379
01:03:45,200 --> 01:03:47,000
high cardinality they put them all<font color="#E5E5E5"> as</font>

1380
01:03:47,000 --> 01:03:47,860
categorical very

1381
01:03:47,860 --> 01:03:49,150
and I<font color="#E5E5E5"> think that's a good rule of thumb</font>

1382
01:03:49,150 --> 01:03:51,850
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> if you can</font><font color="#CCCCCC"> make a</font><font color="#E5E5E5"> categorical</font>

1383
01:03:51,850 --> 01:03:54,310
variable<font color="#CCCCCC"> you may as well</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> that</font>

1384
01:03:54,310 --> 01:03:56,170
way it can learn this rich distributed

1385
01:03:56,170 --> 01:03:58,060
representation<font color="#CCCCCC"> where else if you leave</font>

1386
01:03:58,060 --> 01:04:00,370
it as continuous you<font color="#E5E5E5"> know the most it</font>

1387
01:04:00,370 --> 01:04:03,640
can do is<font color="#E5E5E5"> to kind of try</font><font color="#CCCCCC"> and find a know</font>

1388
01:04:03,640 --> 01:04:05,470
a single functional form<font color="#E5E5E5"> that fits it</font>

1389
01:04:05,470 --> 01:04:10,120
well after<font color="#CCCCCC"> question</font><font color="#E5E5E5"> so you were saying</font>

1390
01:04:10,120 --> 01:04:12,400
that you are kind<font color="#E5E5E5"> of increasing the</font>

1391
01:04:12,400 --> 01:04:15,670
dimension but<font color="#E5E5E5"> actually in most cases we</font>

1392
01:04:15,670 --> 01:04:18,610
<font color="#E5E5E5">will use a one holding</font><font color="#CCCCCC"> column</font><font color="#E5E5E5"> which has</font>

1393
01:04:18,610 --> 01:04:22,180
even<font color="#CCCCCC"> a bigger dimension that so in a way</font>

1394
01:04:22,180 --> 01:04:24,340
you<font color="#CCCCCC"> are also reducing but in the most</font>

1395
01:04:24,340 --> 01:04:27,670
<font color="#E5E5E5">reach I think that's very good yeah it</font>

1396
01:04:27,670 --> 01:04:31,000
<font color="#E5E5E5">like yes you know you can figure this</font>

1397
01:04:31,000 --> 01:04:33,700
<font color="#CCCCCC">one hot encoding which actually is high</font>

1398
01:04:33,700 --> 01:04:36,160
dimensional but it's not meaningfully

1399
01:04:36,160 --> 01:04:37,660
high dimensional<font color="#E5E5E5"> because everything set</font>

1400
01:04:37,660 --> 01:04:39,250
one is<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> right I'm saying that also</font>

1401
01:04:39,250 --> 01:04:41,380
because<font color="#CCCCCC"> even</font><font color="#E5E5E5"> this will reduce</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> amount</font>

1402
01:04:41,380 --> 01:04:43,120
<font color="#E5E5E5">of memory and things like this that you</font>

1403
01:04:43,120 --> 01:04:46,750
have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> you're absolutely right</font>

1404
01:04:46,750 --> 01:04:49,330
<font color="#CCCCCC">and and</font><font color="#E5E5E5"> so we may as well go ahead and</font>

1405
01:04:49,330 --> 01:04:51,220
<font color="#CCCCCC">actually destroyed like what's going</font><font color="#E5E5E5"> on</font>

1406
01:04:51,220 --> 01:04:52,720
with the matrix algebra behind the

1407
01:04:52,720 --> 01:04:54,940
scenes<font color="#E5E5E5"> see this if this doesn't quite</font>

1408
01:04:54,940 --> 01:04:56,620
make sense you can kind of skip<font color="#E5E5E5"> over it</font>

1409
01:04:56,620 --> 01:04:58,420
but for some<font color="#CCCCCC"> people I know this</font><font color="#E5E5E5"> really</font>

1410
01:04:58,420 --> 01:05:01,240
helps<font color="#CCCCCC"> if we started out with something</font>

1411
01:05:01,240 --> 01:05:06,070
saying this is<font color="#E5E5E5"> Sunday</font><font color="#CCCCCC"> right we could</font>

1412
01:05:06,070 --> 01:05:08,260
represent this as a one hot encoded

1413
01:05:08,260 --> 01:05:12,250
vector right and so Sunday<font color="#CCCCCC"> you know</font>

1414
01:05:12,250 --> 01:05:15,160
<font color="#E5E5E5">maybe was position here so that would be</font>

1415
01:05:15,160 --> 01:05:19,240
a<font color="#E5E5E5"> 1 and then the rest of zeros okay and</font>

1416
01:05:19,240 --> 01:05:23,320
then we've got our embedding matrix

1417
01:05:23,320 --> 01:05:27,670
right with<font color="#CCCCCC"> eight rows and in this case</font>

1418
01:05:27,670 --> 01:05:30,540
four columns

1419
01:05:32,440 --> 01:05:35,000
one way to<font color="#CCCCCC"> think of this actually is a</font>

1420
01:05:35,000 --> 01:05:38,059
matrix product<font color="#E5E5E5"> right so I said you could</font>

1421
01:05:38,059 --> 01:05:40,700
think<font color="#E5E5E5"> of this as</font><font color="#CCCCCC"> like looking up</font><font color="#E5E5E5"> the</font>

1422
01:05:40,700 --> 01:05:43,789
number one you know<font color="#CCCCCC"> and finding like</font><font color="#E5E5E5"> its</font>

1423
01:05:43,789 --> 01:05:46,520
index in the array<font color="#E5E5E5"> but if you think</font>

1424
01:05:46,520 --> 01:05:49,220
<font color="#CCCCCC">about it that's actually</font><font color="#E5E5E5"> identical to</font>

1425
01:05:49,220 --> 01:05:51,980
doing a matrix product<font color="#CCCCCC"> between a one-pot</font>

1426
01:05:51,980 --> 01:05:54,950
<font color="#CCCCCC">encoded vector and the embedding matrix</font>

1427
01:05:54,950 --> 01:05:58,460
<font color="#E5E5E5">like you're going to go zero times this</font>

1428
01:05:58,460 --> 01:06:01,789
row<font color="#E5E5E5"> one times this row zero times this</font>

1429
01:06:01,789 --> 01:06:04,789
row and so it's like a one hot embedding

1430
01:06:04,789 --> 01:06:08,569
matrix product is identical to<font color="#E5E5E5"> during</font>

1431
01:06:08,569 --> 01:06:13,010
the lookup<font color="#E5E5E5"> and so some people in the bad</font>

1432
01:06:13,010 --> 01:06:15,680
old<font color="#CCCCCC"> days actually implemented embedding</font>

1433
01:06:15,680 --> 01:06:18,710
matrices by doing a one hot encoding and

1434
01:06:18,710 --> 01:06:21,170
<font color="#E5E5E5">then a matrix product</font><font color="#CCCCCC"> and in fact a lot</font>

1435
01:06:21,170 --> 01:06:23,450
of<font color="#E5E5E5"> like machine learning methods still</font>

1436
01:06:23,450 --> 01:06:27,230
kind<font color="#E5E5E5"> of do that</font><font color="#CCCCCC"> but as you know</font><font color="#E5E5E5"> that was</font>

1437
01:06:27,230 --> 01:06:29,480
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> alluding to</font><font color="#CCCCCC"> it's that's terribly</font>

1438
01:06:29,480 --> 01:06:31,660
inefficient<font color="#CCCCCC"> so all of the modern</font>

1439
01:06:31,660 --> 01:06:34,490
libraries implement this as<font color="#CCCCCC"> taking take</font>

1440
01:06:34,490 --> 01:06:37,069
an integer<font color="#E5E5E5"> and do a lookup into an array</font>

1441
01:06:37,069 --> 01:06:39,200
<font color="#E5E5E5">but the nice</font><font color="#CCCCCC"> thing about</font><font color="#E5E5E5"> realizing that</font>

1442
01:06:39,200 --> 01:06:40,400
is actually a matrix<font color="#E5E5E5"> product</font>

1443
01:06:40,400 --> 01:06:42,500
<font color="#E5E5E5">mathematically is it makes it more</font>

1444
01:06:42,500 --> 01:06:45,170
obvious how the gradients are<font color="#CCCCCC"> going to</font>

1445
01:06:45,170 --> 01:06:46,760
flow<font color="#E5E5E5"> so when we do stochastic gradient</font>

1446
01:06:46,760 --> 01:06:49,700
descent<font color="#E5E5E5"> it's we can think of it as</font><font color="#CCCCCC"> just</font>

1447
01:06:49,700 --> 01:06:52,819
<font color="#E5E5E5">another linear layer okay does</font><font color="#CCCCCC"> it say</font>

1448
01:06:52,819 --> 01:06:55,369
that's<font color="#E5E5E5"> like somewhat minor detail but</font>

1449
01:06:55,369 --> 01:06:59,510
hopefully for<font color="#CCCCCC"> some</font><font color="#E5E5E5"> of you it helps could</font>

1450
01:06:59,510 --> 01:07:02,059
you touch on using dates and times this

1451
01:07:02,059 --> 01:07:03,460
category<font color="#E5E5E5"> course and how that affects</font>

1452
01:07:03,460 --> 01:07:06,049
seasonality<font color="#CCCCCC"> yeah absolutely that's</font><font color="#E5E5E5"> a</font>

1453
01:07:06,049 --> 01:07:09,109
<font color="#CCCCCC">great question did I cover dates it all</font>

1454
01:07:09,109 --> 01:07:15,020
remember<font color="#E5E5E5"> no</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so I</font><font color="#CCCCCC"> cover</font><font color="#E5E5E5"> dates in a</font>

1455
01:07:15,020 --> 01:07:16,220
lot of<font color="#E5E5E5"> detail</font><font color="#CCCCCC"> in the machine learning</font>

1456
01:07:16,220 --> 01:07:18,710
<font color="#E5E5E5">course but it's worth briefly mentioning</font>

1457
01:07:18,710 --> 01:07:26,210
here<font color="#CCCCCC"> there's a fast AI function called</font>

1458
01:07:26,210 --> 01:07:29,779
add date<font color="#CCCCCC"> part which takes a data frame</font>

1459
01:07:29,779 --> 01:07:33,170
<font color="#E5E5E5">and column in that</font><font color="#CCCCCC"> column name needs</font><font color="#E5E5E5"> to</font>

1460
01:07:33,170 --> 01:07:36,829
be a date it removes unless you squat

1461
01:07:36,829 --> 01:07:39,079
drop equals false<font color="#CCCCCC"> it optionally removes</font>

1462
01:07:39,079 --> 01:07:41,240
the column from<font color="#E5E5E5"> the data frame and</font>

1463
01:07:41,240 --> 01:07:43,610
replaces it<font color="#E5E5E5"> with lots of column</font>

1464
01:07:43,610 --> 01:07:45,830
representing all<font color="#E5E5E5"> of the useful</font>

1465
01:07:45,830 --> 01:07:48,830
<font color="#E5E5E5">information</font><font color="#CCCCCC"> about that date</font><font color="#E5E5E5"> like day of</font>

1466
01:07:48,830 --> 01:07:51,680
week day of month month of year year is

1467
01:07:51,680 --> 01:07:52,970
at the start<font color="#E5E5E5"> of the quarter is at the</font>

1468
01:07:52,970 --> 01:07:54,620
end<font color="#E5E5E5"> of the quarter basically everything</font>

1469
01:07:54,620 --> 01:07:59,570
<font color="#CCCCCC">that pandas gives us and so that way we</font>

1470
01:07:59,570 --> 01:08:03,230
end up<font color="#E5E5E5"> when we look at our list of</font>

1471
01:08:03,230 --> 01:08:04,910
features where<font color="#CCCCCC"> you can see them</font><font color="#E5E5E5"> here</font>

1472
01:08:04,910 --> 01:08:08,900
<font color="#CCCCCC">right yeah month week data</font><font color="#E5E5E5"> etc so these</font>

1473
01:08:08,900 --> 01:08:13,190
all get created for us<font color="#CCCCCC"> by a date pad so</font>

1474
01:08:13,190 --> 01:08:19,720
we end up<font color="#E5E5E5"> with you know this eight long</font>

1475
01:08:19,720 --> 01:08:23,689
embedding matrix so<font color="#CCCCCC"> I guess</font><font color="#E5E5E5"> eight rows</font>

1476
01:08:23,689 --> 01:08:26,180
by four column embedding matrix<font color="#CCCCCC"> for day</font>

1477
01:08:26,180 --> 01:08:29,180
of week<font color="#CCCCCC"> and conceptually that allows us</font>

1478
01:08:29,180 --> 01:08:32,210
<font color="#E5E5E5">or allows our model to</font><font color="#CCCCCC"> create some</font>

1479
01:08:32,210 --> 01:08:34,580
<font color="#E5E5E5">pretty interesting time series models</font>

1480
01:08:34,580 --> 01:08:36,890
<font color="#E5E5E5">all right like it can if there's</font>

1481
01:08:36,890 --> 01:08:40,040
something that<font color="#E5E5E5"> has a seven day</font><font color="#CCCCCC"> period</font>

1482
01:08:40,040 --> 01:08:43,069
cycle<font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> goes up on Mondays</font>

1483
01:08:43,069 --> 01:08:45,500
<font color="#CCCCCC">and down on Wednesdays but only for</font>

1484
01:08:45,500 --> 01:08:48,859
dairy<font color="#E5E5E5"> and only in Berlin it can</font><font color="#CCCCCC"> totally</font>

1485
01:08:48,859 --> 01:08:50,300
do<font color="#CCCCCC"> that but it has all the information</font>

1486
01:08:50,300 --> 01:08:54,859
<font color="#E5E5E5">it needs to do that</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> turns out to</font>

1487
01:08:54,859 --> 01:08:57,200
be a really fantastic way<font color="#CCCCCC"> to deal with</font>

1488
01:08:57,200 --> 01:08:59,180
<font color="#CCCCCC">time series so I'm really glad you asked</font>

1489
01:08:59,180 --> 01:09:01,010
the question<font color="#CCCCCC"> you just need to make</font><font color="#E5E5E5"> sure</font>

1490
01:09:01,010 --> 01:09:05,240
<font color="#E5E5E5">that that the</font><font color="#CCCCCC"> the cycle indicator in</font>

1491
01:09:05,240 --> 01:09:08,300
your time series exists as a column<font color="#E5E5E5"> so</font>

1492
01:09:08,300 --> 01:09:10,160
if you didn't have<font color="#E5E5E5"> a column there called</font>

1493
01:09:10,160 --> 01:09:12,830
day of<font color="#E5E5E5"> week it would be very very</font>

1494
01:09:12,830 --> 01:09:15,560
difficult for<font color="#E5E5E5"> the neural network to</font>

1495
01:09:15,560 --> 01:09:18,380
somehow learn to do like a<font color="#CCCCCC"> divide mod</font>

1496
01:09:18,380 --> 01:09:20,180
<font color="#CCCCCC">seven and then somehow look that up in</font>

1497
01:09:20,180 --> 01:09:22,220
an omitting matrix<font color="#E5E5E5"> like it not</font>

1498
01:09:22,220 --> 01:09:25,040
<font color="#E5E5E5">impossible but really hard</font><font color="#CCCCCC"> it would</font><font color="#E5E5E5"> use</font>

1499
01:09:25,040 --> 01:09:26,600
lots of computation wouldn't do it very

1500
01:09:26,600 --> 01:09:27,100
<font color="#E5E5E5">well</font>

1501
01:09:27,100 --> 01:09:29,540
<font color="#E5E5E5">so an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> of the kind of thing</font><font color="#CCCCCC"> that</font>

1502
01:09:29,540 --> 01:09:32,890
you need<font color="#E5E5E5"> to think about might be</font>

1503
01:09:33,310 --> 01:09:36,890
holidays<font color="#E5E5E5"> for example you know or if you</font>

1504
01:09:36,890 --> 01:09:39,590
are<font color="#CCCCCC"> doing something</font><font color="#E5E5E5"> in you know sales of</font>

1505
01:09:39,590 --> 01:09:42,710
beverages<font color="#CCCCCC"> in San</font><font color="#E5E5E5"> Francisco</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> probably</font>

1506
01:09:42,710 --> 01:09:44,720
want a list of<font color="#E5E5E5"> like when</font><font color="#CCCCCC"> weather that</font>

1507
01:09:44,720 --> 01:09:47,380
when is the<font color="#E5E5E5"> ball game on at AT&T Park</font>

1508
01:09:47,380 --> 01:09:49,430
<font color="#E5E5E5">because that's going to impact how many</font>

1509
01:09:49,430 --> 01:09:51,800
people that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> drinking</font><font color="#CCCCCC"> beer in Soma</font>

1510
01:09:51,800 --> 01:09:54,830
right so you<font color="#E5E5E5"> need to make sure that</font><font color="#CCCCCC"> the</font>

1511
01:09:54,830 --> 01:09:57,320
kind<font color="#E5E5E5"> of the basic indicators or</font>

1512
01:09:57,320 --> 01:09:59,840
or periodicity<font color="#CCCCCC"> x' or whatever there and</font>

1513
01:09:59,840 --> 01:10:01,640
your data and as long as<font color="#E5E5E5"> they are the</font>

1514
01:10:01,640 --> 01:10:03,820
neuron it's going to learn to<font color="#CCCCCC"> use them</font>

1515
01:10:03,820 --> 01:10:06,860
so I'm kind of<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to skip over some</font>

1516
01:10:06,860 --> 01:10:12,050
<font color="#CCCCCC">of the non deep learning</font><font color="#E5E5E5"> parts</font><font color="#CCCCCC"> alright</font>

1517
01:10:12,050 --> 01:10:15,320
so the key<font color="#E5E5E5"> thing here is</font><font color="#CCCCCC"> that we've got</font>

1518
01:10:15,320 --> 01:10:17,270
our model<font color="#CCCCCC"> data that came</font><font color="#E5E5E5"> from the data</font>

1519
01:10:17,270 --> 01:10:19,910
<font color="#E5E5E5">frame</font><font color="#CCCCCC"> we tell</font><font color="#E5E5E5"> it how</font><font color="#CCCCCC"> big to make the</font>

1520
01:10:19,910 --> 01:10:23,360
embedding matrices<font color="#CCCCCC"> we also have to</font>

1521
01:10:23,360 --> 01:10:26,890
tailor<font color="#E5E5E5"> of the columns in that data frame</font>

1522
01:10:26,890 --> 01:10:30,980
how many of those categorical<font color="#E5E5E5"> variables</font>

1523
01:10:30,980 --> 01:10:32,540
<font color="#E5E5E5">or how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> of them are continuous</font>

1524
01:10:32,540 --> 01:10:34,640
variables so the actual parameter is

1525
01:10:34,640 --> 01:10:37,220
number of<font color="#E5E5E5"> continuous</font><font color="#CCCCCC"> variables</font><font color="#E5E5E5"> so you</font>

1526
01:10:37,220 --> 01:10:39,320
can<font color="#CCCCCC"> here you can see we just</font><font color="#E5E5E5"> pass in how</font>

1527
01:10:39,320 --> 01:10:41,600
many columns are there - how many

1528
01:10:41,600 --> 01:10:43,880
categorical variables are there<font color="#E5E5E5"> so then</font>

1529
01:10:43,880 --> 01:10:47,630
<font color="#E5E5E5">that way the the neural net knows how to</font>

1530
01:10:47,630 --> 01:10:49,340
create something<font color="#E5E5E5"> that puts the</font>

1531
01:10:49,340 --> 01:10:51,200
continuous variables over<font color="#CCCCCC"> here</font><font color="#E5E5E5"> and the</font>

1532
01:10:51,200 --> 01:10:55,010
categorical variables over there<font color="#CCCCCC"> the</font>

1533
01:10:55,010 --> 01:10:57,920
embedding matrix has its own<font color="#CCCCCC"> drop out</font>

1534
01:10:57,920 --> 01:11:00,410
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> dropout to apply</font>

1535
01:11:00,410 --> 01:11:02,840
to the embedding matrix this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

1536
01:11:02,840 --> 01:11:04,190
number of<font color="#CCCCCC"> activations in the first</font>

1537
01:11:04,190 --> 01:11:06,320
linear player<font color="#E5E5E5"> the number of</font><font color="#CCCCCC"> activations</font>

1538
01:11:06,320 --> 01:11:08,930
in<font color="#E5E5E5"> the second</font><font color="#CCCCCC"> linear layer the dropout</font>

1539
01:11:08,930 --> 01:11:10,820
in<font color="#E5E5E5"> the first linear</font><font color="#CCCCCC"> player</font><font color="#E5E5E5"> the drop out</font>

1540
01:11:10,820 --> 01:11:12,980
<font color="#CCCCCC">for the second linear</font><font color="#E5E5E5"> layer this bit we</font>

1541
01:11:12,980 --> 01:11:14,660
won't worry<font color="#CCCCCC"> about for now and then</font>

1542
01:11:14,660 --> 01:11:16,610
finally is how many outputs do we want

1543
01:11:16,610 --> 01:11:19,130
to create<font color="#CCCCCC"> okay so this is the output</font><font color="#E5E5E5"> of</font>

1544
01:11:19,130 --> 01:11:20,690
<font color="#E5E5E5">the last mini layer and obviously it's</font>

1545
01:11:20,690 --> 01:11:22,910
one because we want<font color="#E5E5E5"> to predict a single</font>

1546
01:11:22,910 --> 01:11:28,370
<font color="#CCCCCC">number which is sales</font><font color="#E5E5E5"> okay so after</font><font color="#CCCCCC"> that</font>

1547
01:11:28,370 --> 01:11:30,410
we now have a learner<font color="#E5E5E5"> where we can call</font>

1548
01:11:30,410 --> 01:11:32,540
<font color="#CCCCCC">LR find and we get the standard looking</font>

1549
01:11:32,540 --> 01:11:35,000
shape and we<font color="#E5E5E5"> can say what amount do we</font>

1550
01:11:35,000 --> 01:11:39,130
want to use<font color="#CCCCCC"> and we can then</font><font color="#E5E5E5"> go ahead and</font>

1551
01:11:39,130 --> 01:11:41,750
start training<font color="#E5E5E5"> using exactly the same</font>

1552
01:11:41,750 --> 01:11:45,770
<font color="#E5E5E5">API we've seen before so this is all</font>

1553
01:11:45,770 --> 01:11:49,550
identical<font color="#CCCCCC"> you can pass in</font><font color="#E5E5E5"> I'm not sure</font>

1554
01:11:49,550 --> 01:11:51,530
if you've<font color="#CCCCCC"> seen this before</font><font color="#E5E5E5"> custom</font>

1555
01:11:51,530 --> 01:11:54,020
metrics<font color="#E5E5E5"> what this does is it just says</font>

1556
01:11:54,020 --> 01:11:56,150
please print out a<font color="#E5E5E5"> number at the end of</font>

1557
01:11:56,150 --> 01:11:58,720
every epoch by calling this function

1558
01:11:58,720 --> 01:12:01,070
<font color="#E5E5E5">this is a</font><font color="#CCCCCC"> function we defined a</font><font color="#E5E5E5"> little</font>

1559
01:12:01,070 --> 01:12:03,860
bit earlier which was the<font color="#E5E5E5"> root means</font>

1560
01:12:03,860 --> 01:12:05,780
<font color="#CCCCCC">bread percentage error</font><font color="#E5E5E5"> first of all</font>

1561
01:12:05,780 --> 01:12:08,420
going either the<font color="#E5E5E5"> power of our sales</font>

1562
01:12:08,420 --> 01:12:10,860
<font color="#E5E5E5">because our sales were</font>

1563
01:12:10,860 --> 01:12:12,900
originally logged so this<font color="#E5E5E5"> doesn't change</font>

1564
01:12:12,900 --> 01:12:15,929
<font color="#E5E5E5">the training at all it just it's just</font>

1565
01:12:15,929 --> 01:12:18,570
<font color="#E5E5E5">something to print out so we</font><font color="#CCCCCC"> trained</font>

1566
01:12:18,570 --> 01:12:22,949
<font color="#E5E5E5">that for a while</font><font color="#CCCCCC"> and you know</font><font color="#E5E5E5"> we've</font><font color="#CCCCCC"> got</font>

1567
01:12:22,949 --> 01:12:25,500
some benefits<font color="#E5E5E5"> that the original people</font>

1568
01:12:25,500 --> 01:12:28,350
that built this don't have<font color="#E5E5E5"> specifically</font>

1569
01:12:28,350 --> 01:12:31,800
we've got things like<font color="#CCCCCC"> cyclic all muscle</font>

1570
01:12:31,800 --> 01:12:33,150
<font color="#CCCCCC">learning rate stochastic gradient</font>

1571
01:12:33,150 --> 01:12:35,489
descent with restarts<font color="#E5E5E5"> and so it's</font>

1572
01:12:35,489 --> 01:12:37,020
<font color="#CCCCCC">actually interesting to have a</font><font color="#E5E5E5"> look and</font>

1573
01:12:37,020 --> 01:12:42,480
compare<font color="#CCCCCC"> although our validation set</font>

1574
01:12:42,480 --> 01:12:45,060
<font color="#E5E5E5">isn't identical to the test set</font><font color="#CCCCCC"> it's</font>

1575
01:12:45,060 --> 01:12:47,400
very similar<font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> two-week period</font><font color="#E5E5E5"> that</font>

1576
01:12:47,400 --> 01:12:49,619
<font color="#E5E5E5">is at the end of the training data</font><font color="#CCCCCC"> and</font>

1577
01:12:49,619 --> 01:12:52,530
so our numbers should be<font color="#E5E5E5"> similar and if</font>

1578
01:12:52,530 --> 01:12:54,840
we look at what we get<font color="#E5E5E5"> point</font><font color="#CCCCCC"> oh nine</font>

1579
01:12:54,840 --> 01:12:58,760
seven<font color="#E5E5E5"> and compare that</font><font color="#CCCCCC"> to the</font>

1580
01:12:58,760 --> 01:13:06,210
leaderboard public leaderboard<font color="#CCCCCC"> you can</font>

1581
01:13:06,210 --> 01:13:12,000
see we're<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> sort of look in the</font>

1582
01:13:12,000 --> 01:13:16,800
top<font color="#E5E5E5"> actually that's interesting there</font><font color="#CCCCCC"> is</font>

1583
01:13:16,800 --> 01:13:18,179
a big difference<font color="#E5E5E5"> between the public</font><font color="#CCCCCC"> and</font>

1584
01:13:18,179 --> 01:13:20,040
<font color="#E5E5E5">private leaderboard it would have it</font>

1585
01:13:20,040 --> 01:13:21,480
<font color="#CCCCCC">would</font><font color="#E5E5E5"> have been right at the top of the</font>

1586
01:13:21,480 --> 01:13:24,210
private leaderboard but only in the top

1587
01:13:24,210 --> 01:13:25,409
<font color="#CCCCCC">thirty or forty on</font><font color="#E5E5E5"> the public</font>

1588
01:13:25,409 --> 01:13:27,060
leaderboards so not<font color="#E5E5E5"> quite sure but</font><font color="#CCCCCC"> you</font>

1589
01:13:27,060 --> 01:13:30,449
can see like<font color="#E5E5E5"> we're certainly in the top</font>

1590
01:13:30,449 --> 01:13:35,100
<font color="#CCCCCC">end of this competition I actually tried</font>

1591
01:13:35,100 --> 01:13:37,800
running<font color="#CCCCCC"> the third place to get his code</font>

1592
01:13:37,800 --> 01:13:41,070
<font color="#E5E5E5">and their final result was over a point</font>

1593
01:13:41,070 --> 01:13:44,219
<font color="#CCCCCC">one so I actually think that we're</font>

1594
01:13:44,219 --> 01:13:46,260
<font color="#CCCCCC">trippy compared to private leaderboard</font>

1595
01:13:46,260 --> 01:13:50,280
<font color="#CCCCCC">but I'm not</font><font color="#E5E5E5"> sure</font><font color="#CCCCCC"> so anyway so you</font><font color="#E5E5E5"> can</font>

1596
01:13:50,280 --> 01:13:51,860
see<font color="#E5E5E5"> they're basically there's a</font>

1597
01:13:51,860 --> 01:13:55,230
technique for dealing<font color="#E5E5E5"> with time series</font>

1598
01:13:55,230 --> 01:13:58,170
and structured data<font color="#E5E5E5"> and you know</font>

1599
01:13:58,170 --> 01:14:01,500
interestingly the group that that used

1600
01:14:01,500 --> 01:14:02,760
this technique they actually wrote<font color="#E5E5E5"> a</font>

1601
01:14:02,760 --> 01:14:04,230
paper about<font color="#E5E5E5"> it that's linked in this</font>

1602
01:14:04,230 --> 01:14:08,369
notebook<font color="#E5E5E5"> when you compare it</font><font color="#CCCCCC"> to the</font>

1603
01:14:08,369 --> 01:14:11,190
folks<font color="#E5E5E5"> that won this competition and came</font>

1604
01:14:11,190 --> 01:14:13,949
second<font color="#CCCCCC"> they did the other folks did way</font>

1605
01:14:13,949 --> 01:14:16,230
more feature<font color="#CCCCCC"> engineering like the</font>

1606
01:14:16,230 --> 01:14:18,060
winners<font color="#CCCCCC"> of this competition were</font>

1607
01:14:18,060 --> 01:14:20,460
actually subject<font color="#E5E5E5"> matter experts in</font>

1608
01:14:20,460 --> 01:14:23,310
logistics<font color="#E5E5E5"> sales forecasting and so they</font>

1609
01:14:23,310 --> 01:14:25,500
had their<font color="#E5E5E5"> own code to</font><font color="#CCCCCC"> create</font><font color="#E5E5E5"> lots and</font>

1610
01:14:25,500 --> 01:14:28,710
lots of<font color="#E5E5E5"> features</font><font color="#CCCCCC"> and talking</font><font color="#E5E5E5"> to the</font>

1611
01:14:28,710 --> 01:14:31,199
folks at Pinterest<font color="#CCCCCC"> who built their very</font>

1612
01:14:31,199 --> 01:14:33,030
similar<font color="#E5E5E5"> model for recommendations</font><font color="#CCCCCC"> for</font>

1613
01:14:33,030 --> 01:14:35,190
<font color="#E5E5E5">Pinterest</font><font color="#CCCCCC"> they say the same</font><font color="#E5E5E5"> thing which</font>

1614
01:14:35,190 --> 01:14:36,960
<font color="#CCCCCC">is that when they switched from gradient</font>

1615
01:14:36,960 --> 01:14:39,510
boosting machines to deep learning<font color="#CCCCCC"> they</font>

1616
01:14:39,510 --> 01:14:43,230
did like way way way less<font color="#E5E5E5"> feature</font>

1617
01:14:43,230 --> 01:14:45,449
<font color="#CCCCCC">engineering it was a much much simpler</font>

1618
01:14:45,449 --> 01:14:47,929
model and requires much less maintenance

1619
01:14:47,929 --> 01:14:50,219
<font color="#E5E5E5">and so this is like one</font><font color="#CCCCCC"> of the big</font>

1620
01:14:50,219 --> 01:14:51,840
benefits<font color="#E5E5E5"> of using this approach</font><font color="#CCCCCC"> to deep</font>

1621
01:14:51,840 --> 01:14:53,909
learning<font color="#CCCCCC"> you can get state of the at</font>

1622
01:14:53,909 --> 01:15:00,619
results but with<font color="#CCCCCC"> a lot less work yes</font>

1623
01:15:01,989 --> 01:15:05,920
are you using any time series in any of

1624
01:15:05,920 --> 01:15:11,140
these<font color="#E5E5E5"> fits</font><font color="#CCCCCC"> indirectly</font><font color="#E5E5E5"> absolutely using</font>

1625
01:15:11,140 --> 01:15:13,780
what we just saw we have a day<font color="#E5E5E5"> of week</font>

1626
01:15:13,780 --> 01:15:16,680
month of year all<font color="#E5E5E5"> that stuff</font><font color="#CCCCCC"> our columns</font>

1627
01:15:16,680 --> 01:15:18,969
<font color="#CCCCCC">and most</font><font color="#E5E5E5"> of them are being treated as</font>

1628
01:15:18,969 --> 01:15:21,100
categories<font color="#E5E5E5"> so we're building a</font>

1629
01:15:21,100 --> 01:15:23,050
distributed representation of January

1630
01:15:23,050 --> 01:15:24,610
we're<font color="#E5E5E5"> building a distributed</font>

1631
01:15:24,610 --> 01:15:26,620
representation of Sunday we're building

1632
01:15:26,620 --> 01:15:27,940
<font color="#CCCCCC">a distributed representation of</font>

1633
01:15:27,940 --> 01:15:28,719
Christmas

1634
01:15:28,719 --> 01:15:33,250
so we're not using<font color="#E5E5E5"> any</font><font color="#CCCCCC"> plastic time</font>

1635
01:15:33,250 --> 01:15:36,360
<font color="#CCCCCC">series techniques</font><font color="#E5E5E5"> all we're doing is</font>

1636
01:15:36,360 --> 01:15:39,040
true fully connected layers in a<font color="#CCCCCC"> neural</font>

1637
01:15:39,040 --> 01:15:42,310
<font color="#CCCCCC">net better metrics</font>

1638
01:15:42,310 --> 01:15:45,670
that's what exactly exactly yeah so the

1639
01:15:45,670 --> 01:15:47,739
embedding matrix is able to deal<font color="#E5E5E5"> with</font>

1640
01:15:47,739 --> 01:15:50,380
this<font color="#E5E5E5"> stuff like day of week periodicity</font>

1641
01:15:50,380 --> 01:15:54,910
<font color="#E5E5E5">and so forth in a way richer way than</font>

1642
01:15:54,910 --> 01:15:58,000
any<font color="#E5E5E5"> standard time series technique I've</font>

1643
01:15:58,000 --> 01:15:58,830
ever come across

1644
01:15:58,830 --> 01:16:03,100
one last question<font color="#E5E5E5"> the matrix in the</font>

1645
01:16:03,100 --> 01:16:06,850
<font color="#E5E5E5">earlier models we did</font><font color="#CCCCCC"> CNN</font><font color="#E5E5E5"> did not pass</font>

1646
01:16:06,850 --> 01:16:10,120
it during the fig we passed it<font color="#E5E5E5"> when the</font>

1647
01:16:10,120 --> 01:16:14,380
data was when we got<font color="#E5E5E5"> the data so we're</font>

1648
01:16:14,380 --> 01:16:17,080
not passing<font color="#E5E5E5"> anything to fit just the</font>

1649
01:16:17,080 --> 01:16:18,989
<font color="#E5E5E5">learning rate and the</font><font color="#CCCCCC"> number of cycles</font>

1650
01:16:18,989 --> 01:16:21,520
<font color="#E5E5E5">in this case we're passing in metrics is</font>

1651
01:16:21,520 --> 01:16:24,969
not a<font color="#CCCCCC"> printout some extra stuff there is</font>

1652
01:16:24,969 --> 01:16:27,430
a difference in<font color="#CCCCCC"> the we're calling data</font>

1653
01:16:27,430 --> 01:16:28,510
<font color="#E5E5E5">get learner</font>

1654
01:16:28,510 --> 01:16:35,620
<font color="#E5E5E5">so with the imaging approach we just go</font>

1655
01:16:35,620 --> 01:16:38,969
learner dot trained and pass at the data

1656
01:16:38,969 --> 01:16:43,840
but in for these kinds of models<font color="#CCCCCC"> in fact</font>

1657
01:16:43,840 --> 01:16:46,270
for a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the models the model that</font>

1658
01:16:46,270 --> 01:16:49,239
we build depends<font color="#E5E5E5"> on the data in this</font>

1659
01:16:49,239 --> 01:16:51,790
<font color="#E5E5E5">case we actually need to</font><font color="#CCCCCC"> know like what</font>

1660
01:16:51,790 --> 01:16:54,730
embedding matrices do we have and stuff

1661
01:16:54,730 --> 01:16:56,830
like that<font color="#E5E5E5"> so in this case it's actually</font>

1662
01:16:56,830 --> 01:16:59,200
<font color="#CCCCCC">the</font><font color="#E5E5E5"> data object that creates the learner</font>

1663
01:16:59,200 --> 01:17:01,930
<font color="#CCCCCC">so yeah it</font><font color="#E5E5E5"> is it is a bit upside down to</font>

1664
01:17:01,930 --> 01:17:04,469
what we've seen<font color="#E5E5E5"> before</font>

1665
01:17:04,639 --> 01:17:09,329
yeah<font color="#E5E5E5"> so just to summarize or maybe I'm</font>

1666
01:17:09,329 --> 01:17:10,800
confused

1667
01:17:10,800 --> 01:17:14,400
so in this case what we<font color="#CCCCCC"> are doing is</font>

1668
01:17:14,400 --> 01:17:16,260
that<font color="#CCCCCC"> we have some kind</font><font color="#E5E5E5"> of structured</font>

1669
01:17:16,260 --> 01:17:20,400
data<font color="#E5E5E5"> did feature engineering</font><font color="#CCCCCC"> we got some</font>

1670
01:17:20,400 --> 01:17:25,159
columnar database or something

1671
01:17:32,599 --> 01:17:35,699
<font color="#CCCCCC">embedding matrix for the categorical</font>

1672
01:17:35,699 --> 01:17:38,099
variables so the continuous<font color="#CCCCCC"> we just put</font>

1673
01:17:38,099 --> 01:17:46,590
them straight feature engineering<font color="#E5E5E5"> yeah</font>

1674
01:17:46,590 --> 01:17:49,260
then to map it<font color="#CCCCCC"> to deep learning</font><font color="#E5E5E5"> I just</font>

1675
01:17:49,260 --> 01:17:54,210
have to figure<font color="#E5E5E5"> out which one I can great</font>

1676
01:17:54,210 --> 01:17:54,869
question

1677
01:17:54,869 --> 01:17:57,780
so yes<font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> if you want to use this</font>

1678
01:17:57,780 --> 01:18:01,769
on<font color="#E5E5E5"> your own data set step one is list</font>

1679
01:18:01,769 --> 01:18:04,050
the categorical variable names<font color="#E5E5E5"> list the</font>

1680
01:18:04,050 --> 01:18:07,380
continuous variable<font color="#CCCCCC"> names put</font><font color="#E5E5E5"> it in a</font>

1681
01:18:07,380 --> 01:18:11,760
data frame<font color="#E5E5E5"> pandas dataframe</font><font color="#CCCCCC"> step two is</font>

1682
01:18:11,760 --> 01:18:17,610
to<font color="#E5E5E5"> create a list of which row indexes do</font>

1683
01:18:17,610 --> 01:18:20,489
you want in your<font color="#E5E5E5"> validation set</font><font color="#CCCCCC"> step</font>

1684
01:18:20,489 --> 01:18:25,860
three is to<font color="#E5E5E5"> call this line of code</font><font color="#CCCCCC"> using</font>

1685
01:18:25,860 --> 01:18:27,749
this except like these exact<font color="#E5E5E5"> you can</font>

1686
01:18:27,749 --> 01:18:31,530
just copy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> paste it</font><font color="#CCCCCC"> step four is to</font>

1687
01:18:31,530 --> 01:18:33,780
<font color="#E5E5E5">create your</font><font color="#CCCCCC"> list</font><font color="#E5E5E5"> of how big you want</font>

1688
01:18:33,780 --> 01:18:37,260
each embedding matrix to<font color="#CCCCCC"> be and then</font>

1689
01:18:37,260 --> 01:18:41,190
<font color="#CCCCCC">step 5 is to call get loner you can use</font>

1690
01:18:41,190 --> 01:18:44,340
these exact parameters<font color="#E5E5E5"> to start with and</font>

1691
01:18:44,340 --> 01:18:46,229
if it over fits or under<font color="#CCCCCC"> fits you can</font>

1692
01:18:46,229 --> 01:18:48,239
fiddle<font color="#CCCCCC"> with them and then the final step</font>

1693
01:18:48,239 --> 01:18:53,099
<font color="#E5E5E5">is to call fit so yeah almost all</font><font color="#CCCCCC"> of</font>

1694
01:18:53,099 --> 01:18:56,269
this code will<font color="#CCCCCC"> be nearly identical</font>

1695
01:18:59,620 --> 01:19:04,220
have a couple of questions<font color="#CCCCCC"> one is</font><font color="#E5E5E5"> how is</font>

1696
01:19:04,220 --> 01:19:07,400
<font color="#E5E5E5">data element ation can be used in this</font>

1697
01:19:07,400 --> 01:19:12,410
<font color="#E5E5E5">case and the second one is why whatever</font>

1698
01:19:12,410 --> 01:19:14,000
dropouts doing in here

1699
01:19:14,000 --> 01:19:16,820
<font color="#E5E5E5">okay so data augmentation I have no idea</font>

1700
01:19:16,820 --> 01:19:17,630
I mean that's a<font color="#E5E5E5"> really interesting</font>

1701
01:19:17,630 --> 01:19:20,080
<font color="#E5E5E5">question</font>

1702
01:19:21,200 --> 01:19:22,610
<font color="#CCCCCC">I think it's gotta</font><font color="#E5E5E5"> be domain-specific</font>

1703
01:19:22,610 --> 01:19:25,220
<font color="#CCCCCC">I've never seen any paper or anybody in</font>

1704
01:19:25,220 --> 01:19:27,200
industry doing<font color="#E5E5E5"> data augmentation with</font>

1705
01:19:27,200 --> 01:19:29,960
structured<font color="#CCCCCC"> data and</font><font color="#E5E5E5"> deep</font><font color="#CCCCCC"> blow so I don't</font>

1706
01:19:29,960 --> 01:19:31,580
<font color="#CCCCCC">think it can be done I just haven't</font><font color="#E5E5E5"> seen</font>

1707
01:19:31,580 --> 01:19:32,680
<font color="#CCCCCC">it done</font>

1708
01:19:32,680 --> 01:19:36,770
what is<font color="#CCCCCC"> dropout doing</font><font color="#E5E5E5"> exactly the same</font>

1709
01:19:36,770 --> 01:19:45,950
<font color="#E5E5E5">as before</font><font color="#CCCCCC"> so at each point</font><font color="#E5E5E5"> we have the</font>

1710
01:19:45,950 --> 01:19:48,020
output of<font color="#E5E5E5"> each of these linear layers is</font>

1711
01:19:48,020 --> 01:19:52,460
just a rank<font color="#CCCCCC"> one</font><font color="#E5E5E5"> tensor and so</font><font color="#CCCCCC"> dropout is</font>

1712
01:19:52,460 --> 01:19:54,470
<font color="#E5E5E5">going to go ahead and say let's throw</font>

1713
01:19:54,470 --> 01:19:58,250
away half of the activations<font color="#CCCCCC"> and the</font>

1714
01:19:58,250 --> 01:20:00,110
very first<font color="#CCCCCC"> dropout</font><font color="#E5E5E5"> imbedding drop out</font>

1715
01:20:00,110 --> 01:20:01,820
literally goes through the embedding

1716
01:20:01,820 --> 01:20:07,130
matrix<font color="#E5E5E5"> and says let's throw away half</font>

1717
01:20:07,130 --> 01:20:12,860
<font color="#CCCCCC">the activations that's it okay</font><font color="#E5E5E5"> let's</font>

1718
01:20:12,860 --> 01:20:16,340
take a break<font color="#CCCCCC"> and let's come back at five</font>

1719
01:20:16,340 --> 01:20:30,220
past<font color="#E5E5E5"> eight okay thanks everybody so now</font>

1720
01:20:30,220 --> 01:20:34,130
we're<font color="#E5E5E5"> gonna move into something equally</font>

1721
01:20:34,130 --> 01:20:36,350
exciting<font color="#CCCCCC"> actually before I do I just</font>

1722
01:20:36,350 --> 01:20:38,000
been sure that I had a good<font color="#CCCCCC"> question</font>

1723
01:20:38,000 --> 01:20:41,960
<font color="#CCCCCC">during the break which was what's</font><font color="#E5E5E5"> the</font>

1724
01:20:41,960 --> 01:20:42,710
downside

1725
01:20:42,710 --> 01:20:49,370
like like almost no one's<font color="#E5E5E5"> using this why</font>

1726
01:20:49,370 --> 01:20:53,360
not<font color="#CCCCCC"> and and basically I think</font><font color="#E5E5E5"> the answer</font>

1727
01:20:53,360 --> 01:20:55,910
<font color="#CCCCCC">is like as we discussed before</font><font color="#E5E5E5"> no one in</font>

1728
01:20:55,910 --> 01:20:57,530
academia almost is working<font color="#E5E5E5"> on this</font>

1729
01:20:57,530 --> 01:20:59,480
<font color="#E5E5E5">because it's</font><font color="#CCCCCC"> not something</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> people</font>

1730
01:20:59,480 --> 01:21:04,580
really<font color="#E5E5E5"> publish on</font><font color="#CCCCCC"> and as a</font><font color="#E5E5E5"> result there</font>

1731
01:21:04,580 --> 01:21:06,500
haven't been<font color="#E5E5E5"> really great examples where</font>

1732
01:21:06,500 --> 01:21:07,940
<font color="#CCCCCC">people could look at and</font><font color="#E5E5E5"> say oh here's a</font>

1733
01:21:07,940 --> 01:21:10,100
<font color="#CCCCCC">technique that works well so let's have</font>

1734
01:21:10,100 --> 01:21:12,770
our<font color="#E5E5E5"> company</font><font color="#CCCCCC"> implement it</font><font color="#E5E5E5"> but perhaps</font>

1735
01:21:12,770 --> 01:21:16,220
equally importantly until now with this

1736
01:21:16,220 --> 01:21:18,580
<font color="#E5E5E5">fast AI library there hasn't been any</font>

1737
01:21:18,580 --> 01:21:23,030
way to<font color="#E5E5E5"> do it conveniently if you wanted</font>

1738
01:21:23,030 --> 01:21:25,550
to implement<font color="#E5E5E5"> one of these models</font><font color="#CCCCCC"> you had</font>

1739
01:21:25,550 --> 01:21:28,340
to write all the custom code<font color="#E5E5E5"> yourself</font>

1740
01:21:28,340 --> 01:21:30,860
<font color="#E5E5E5">where else now as we discussed it's you</font>

1741
01:21:30,860 --> 01:21:33,470
know sick

1742
01:21:33,470 --> 01:21:36,870
it's basically a six step process<font color="#E5E5E5"> you</font>

1743
01:21:36,870 --> 01:21:39,270
<font color="#CCCCCC">know involving about</font><font color="#E5E5E5"> you know not much</font>

1744
01:21:39,270 --> 01:21:43,170
<font color="#E5E5E5">more</font><font color="#CCCCCC"> than six lines of code so the</font>

1745
01:21:43,170 --> 01:21:44,880
reason I mentioned<font color="#E5E5E5"> this is to say like I</font>

1746
01:21:44,880 --> 01:21:47,340
think<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are a lot of big commercial</font>

1747
01:21:47,340 --> 01:21:51,570
<font color="#E5E5E5">and scientific opportunities to use this</font>

1748
01:21:51,570 --> 01:21:53,550
to solve problems<font color="#E5E5E5"> that previously</font>

1749
01:21:53,550 --> 01:21:57,810
haven't been solved<font color="#E5E5E5"> very</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> before so</font>

1750
01:21:57,810 --> 01:21:59,100
<font color="#E5E5E5">like I'll be really interested</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> hear</font>

1751
01:21:59,100 --> 01:22:02,730
<font color="#CCCCCC">if some of you try this out you know</font>

1752
01:22:02,730 --> 01:22:06,210
maybe<font color="#E5E5E5"> on like old</font><font color="#CCCCCC"> cattle competitions</font>

1753
01:22:06,210 --> 01:22:08,010
you might find like oh I would have won

1754
01:22:08,010 --> 01:22:09,690
this if I'd use this technique<font color="#CCCCCC"> that</font>

1755
01:22:09,690 --> 01:22:11,190
<font color="#E5E5E5">would be interesting or if you've got</font>

1756
01:22:11,190 --> 01:22:13,950
<font color="#CCCCCC">some data set you work with at</font><font color="#E5E5E5"> work</font>

1757
01:22:13,950 --> 01:22:15,750
<font color="#CCCCCC">without some</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of model that you've</font>

1758
01:22:15,750 --> 01:22:17,640
been doing<font color="#CCCCCC"> to the GBM or</font><font color="#E5E5E5"> a random</font><font color="#CCCCCC"> forest</font>

1759
01:22:17,640 --> 01:22:22,560
<font color="#CCCCCC">does this help you know the thing</font><font color="#E5E5E5"> I I'm</font>

1760
01:22:22,560 --> 01:22:25,050
<font color="#E5E5E5">still somewhat new to this I've been</font>

1761
01:22:25,050 --> 01:22:28,230
<font color="#E5E5E5">doing this for basically</font><font color="#CCCCCC"> since</font><font color="#E5E5E5"> the start</font>

1762
01:22:28,230 --> 01:22:29,640
of<font color="#CCCCCC"> the year was when</font><font color="#E5E5E5"> I started working</font>

1763
01:22:29,640 --> 01:22:31,890
<font color="#E5E5E5">on these structured deep learning models</font>

1764
01:22:31,890 --> 01:22:34,500
<font color="#E5E5E5">so I haven't had enough opportunity to</font>

1765
01:22:34,500 --> 01:22:37,950
know where might it fail<font color="#CCCCCC"> it's worked for</font>

1766
01:22:37,950 --> 01:22:39,300
<font color="#CCCCCC">nearly everything I've</font><font color="#E5E5E5"> tried it with</font><font color="#CCCCCC"> so</font>

1767
01:22:39,300 --> 01:22:43,500
far<font color="#E5E5E5"> but yeah I</font><font color="#CCCCCC"> think this class is the</font>

1768
01:22:43,500 --> 01:22:46,590
<font color="#CCCCCC">first</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> that there's going to be like</font>

1769
01:22:46,590 --> 01:22:48,690
more than<font color="#CCCCCC"> half a</font><font color="#E5E5E5"> dozen people</font><font color="#CCCCCC"> fulfilled</font>

1770
01:22:48,690 --> 01:22:50,670
who actually<font color="#E5E5E5"> are</font><font color="#CCCCCC"> working on this</font><font color="#E5E5E5"> so I</font>

1771
01:22:50,670 --> 01:22:51,960
<font color="#CCCCCC">think you know as a</font><font color="#E5E5E5"> group we're</font><font color="#CCCCCC"> gonna</font>

1772
01:22:51,960 --> 01:22:54,540
hopefully learn a lot<font color="#CCCCCC"> and build</font><font color="#E5E5E5"> some</font>

1773
01:22:54,540 --> 01:22:55,710
interesting<font color="#E5E5E5"> things and this would</font><font color="#CCCCCC"> be a</font>

1774
01:22:55,710 --> 01:22:56,790
great<font color="#CCCCCC"> thing if you're thinking of</font>

1775
01:22:56,790 --> 01:22:59,730
writing a<font color="#E5E5E5"> post about</font><font color="#CCCCCC"> something or here's</font>

1776
01:22:59,730 --> 01:23:02,730
an area that there's a couple<font color="#E5E5E5"> of that</font>

1777
01:23:02,730 --> 01:23:04,890
there's a poster<font color="#E5E5E5"> in</font><font color="#CCCCCC"> staccato about what</font>

1778
01:23:04,890 --> 01:23:09,540
they<font color="#E5E5E5"> did</font><font color="#CCCCCC"> Pinterest</font><font color="#E5E5E5"> has a an O'Reilly a</font><font color="#CCCCCC"> a</font>

1779
01:23:09,540 --> 01:23:11,940
video about what they<font color="#E5E5E5"> did that's about</font>

1780
01:23:11,940 --> 01:23:15,060
it and there's<font color="#CCCCCC"> two academic papers both</font>

1781
01:23:15,060 --> 01:23:17,940
about<font color="#E5E5E5"> Carroll competition victories</font><font color="#CCCCCC"> one</font>

1782
01:23:17,940 --> 01:23:21,540
from<font color="#E5E5E5"> Yoshi Joshua Ben</font><font color="#CCCCCC"> geo</font><font color="#E5E5E5"> and his group</font>

1783
01:23:21,540 --> 01:23:25,560
they won a taxi<font color="#E5E5E5"> destination forecasting</font>

1784
01:23:25,560 --> 01:23:28,640
competition and then also the one linked

1785
01:23:28,640 --> 01:23:33,060
<font color="#E5E5E5">for this</font><font color="#CCCCCC"> rossmann competition so yeah</font>

1786
01:23:33,060 --> 01:23:33,960
there's some background<font color="#CCCCCC"> on that</font>

1787
01:23:33,960 --> 01:23:38,670
<font color="#CCCCCC">alright so</font><font color="#E5E5E5"> language natural language</font>

1788
01:23:38,670 --> 01:23:44,790
processing is the area which<font color="#E5E5E5"> is kind of</font>

1789
01:23:44,790 --> 01:23:47,210
<font color="#E5E5E5">like the most up-and-coming area</font>

1790
01:23:47,210 --> 01:23:48,830
<font color="#CCCCCC">moaning it's kind of</font><font color="#E5E5E5"> like two or three</font>

1791
01:23:48,830 --> 01:23:52,730
<font color="#CCCCCC">years behind computer</font><font color="#E5E5E5"> vision in deep</font>

1792
01:23:52,730 --> 01:23:54,530
learning<font color="#CCCCCC"> it</font><font color="#E5E5E5"> was kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> like the the</font>

1793
01:23:54,530 --> 01:23:57,050
<font color="#E5E5E5">second area</font><font color="#CCCCCC"> that deep learning started</font>

1794
01:23:57,050 --> 01:23:59,960
getting really<font color="#E5E5E5"> popular in and you know</font>

1795
01:23:59,960 --> 01:24:03,230
computer vision<font color="#E5E5E5"> got to the point where</font>

1796
01:24:03,230 --> 01:24:06,080
it was like<font color="#E5E5E5"> clear state of the art for</font>

1797
01:24:06,080 --> 01:24:07,940
most computer vision things maybe in

1798
01:24:07,940 --> 01:24:10,820
<font color="#CCCCCC">like</font><font color="#E5E5E5"> 2014 you know and in some things in</font>

1799
01:24:10,820 --> 01:24:14,210
<font color="#E5E5E5">like 2012 in NLP we're still at the</font>

1800
01:24:14,210 --> 01:24:17,180
<font color="#CCCCCC">point where for</font><font color="#E5E5E5"> a lot of things deep</font>

1801
01:24:17,180 --> 01:24:18,980
learning is now the state<font color="#CCCCCC"> of the art but</font>

1802
01:24:18,980 --> 01:24:21,310
<font color="#E5E5E5">not quite</font><font color="#CCCCCC"> everything but as you'll see</font>

1803
01:24:21,310 --> 01:24:25,760
<font color="#CCCCCC">the state of kind of the software and</font>

1804
01:24:25,760 --> 01:24:28,550
some of the concepts<font color="#CCCCCC"> is much less mature</font>

1805
01:24:28,550 --> 01:24:32,060
than<font color="#CCCCCC"> it is for computer vision</font><font color="#E5E5E5"> so in</font>

1806
01:24:32,060 --> 01:24:33,890
<font color="#E5E5E5">general none of</font><font color="#CCCCCC"> the stuff we</font><font color="#E5E5E5"> talked</font>

1807
01:24:33,890 --> 01:24:34,280
about

1808
01:24:34,280 --> 01:24:36,230
after<font color="#E5E5E5"> computer vision is going to be as</font>

1809
01:24:36,230 --> 01:24:39,620
like settled<font color="#E5E5E5"> as the computer</font><font color="#CCCCCC"> vision</font><font color="#E5E5E5"> and</font>

1810
01:24:39,620 --> 01:24:42,470
stuff was so NLP<font color="#E5E5E5"> one of the interesting</font>

1811
01:24:42,470 --> 01:24:45,290
things<font color="#E5E5E5"> is in the last few</font><font color="#CCCCCC"> months</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of</font>

1812
01:24:45,290 --> 01:24:47,360
<font color="#CCCCCC">the good ideas from computer vision have</font>

1813
01:24:47,360 --> 01:24:49,760
<font color="#E5E5E5">started to spread into NLP for the first</font>

1814
01:24:49,760 --> 01:24:51,200
time and<font color="#E5E5E5"> we've seen some really big</font>

1815
01:24:51,200 --> 01:24:52,730
advances<font color="#E5E5E5"> so a lot</font><font color="#CCCCCC"> of the stuff you'll</font>

1816
01:24:52,730 --> 01:24:57,860
see in<font color="#CCCCCC"> NLP is is</font><font color="#E5E5E5"> pretty new</font><font color="#CCCCCC"> so I'm going</font>

1817
01:24:57,860 --> 01:25:01,580
<font color="#CCCCCC">to start</font><font color="#E5E5E5"> with a particular kind of NLP</font>

1818
01:25:01,580 --> 01:25:03,380
problem and one of the things<font color="#CCCCCC"> refined in</font>

1819
01:25:03,380 --> 01:25:04,820
NLP is like there are particular

1820
01:25:04,820 --> 01:25:06,770
<font color="#E5E5E5">problems you can solve and they have</font>

1821
01:25:06,770 --> 01:25:08,960
<font color="#E5E5E5">particular names and so there's a</font>

1822
01:25:08,960 --> 01:25:10,850
<font color="#E5E5E5">particular kind</font><font color="#CCCCCC"> of problem</font><font color="#E5E5E5"> in NLP called</font>

1823
01:25:10,850 --> 01:25:13,520
language modeling and language modeling

1824
01:25:13,520 --> 01:25:15,650
<font color="#E5E5E5">has a very specific</font><font color="#CCCCCC"> definition that</font>

1825
01:25:15,650 --> 01:25:19,280
means<font color="#E5E5E5"> build a model</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> given a few</font>

1826
01:25:19,280 --> 01:25:21,950
words of a sentence<font color="#CCCCCC"> can you predict what</font>

1827
01:25:21,950 --> 01:25:24,530
the next<font color="#CCCCCC"> word is going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be so if</font>

1828
01:25:24,530 --> 01:25:26,690
you're using your<font color="#E5E5E5"> mobile phone and</font>

1829
01:25:26,690 --> 01:25:28,820
you're<font color="#CCCCCC"> typing away</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you press space</font>

1830
01:25:28,820 --> 01:25:30,530
<font color="#E5E5E5">and then it says like this is what the</font>

1831
01:25:30,530 --> 01:25:33,080
next<font color="#E5E5E5"> word might be like SwiftKey does</font>

1832
01:25:33,080 --> 01:25:35,240
this like<font color="#E5E5E5"> really well and SwiftKey</font>

1833
01:25:35,240 --> 01:25:36,910
actually uses deep learning<font color="#E5E5E5"> for this</font>

1834
01:25:36,910 --> 01:25:40,130
<font color="#CCCCCC">that's that's a language</font><font color="#E5E5E5"> model okay so</font>

1835
01:25:40,130 --> 01:25:41,810
it has a<font color="#CCCCCC"> very specific meaning when</font><font color="#E5E5E5"> we</font>

1836
01:25:41,810 --> 01:25:44,090
say language modeling<font color="#E5E5E5"> we mean a model</font>

1837
01:25:44,090 --> 01:25:46,550
that<font color="#E5E5E5"> can predict the</font><font color="#CCCCCC"> next word of a</font>

1838
01:25:46,550 --> 01:25:48,150
sentence

1839
01:25:48,150 --> 01:25:49,940
so let me<font color="#E5E5E5"> give you an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> I</font>

1840
01:25:49,940 --> 01:25:54,620
downloaded about<font color="#CCCCCC"> 18</font><font color="#E5E5E5"> months worth of</font>

1841
01:25:54,620 --> 01:25:57,510
papers from<font color="#CCCCCC"> archive</font><font color="#E5E5E5"> so for those of</font><font color="#CCCCCC"> you</font>

1842
01:25:57,510 --> 01:26:01,050
<font color="#E5E5E5">that don't know what archive is the most</font>

1843
01:26:01,050 --> 01:26:03,660
popular preprint server<font color="#CCCCCC"> in this</font>

1844
01:26:03,660 --> 01:26:07,140
community and<font color="#E5E5E5"> various others</font><font color="#CCCCCC"> and has you</font>

1845
01:26:07,140 --> 01:26:10,380
know lots of academic<font color="#CCCCCC"> papers</font><font color="#E5E5E5"> and so I</font>

1846
01:26:10,380 --> 01:26:14,910
grabbed the abstracts and the topics for

1847
01:26:14,910 --> 01:26:16,920
<font color="#CCCCCC">each and so here's an example so the</font>

1848
01:26:16,920 --> 01:26:18,960
<font color="#E5E5E5">category</font><font color="#CCCCCC"> of this particular paper what</font>

1849
01:26:18,960 --> 01:26:21,480
computer<font color="#CCCCCC"> CSMA is computer</font><font color="#E5E5E5"> science and</font>

1850
01:26:21,480 --> 01:26:24,420
networking<font color="#E5E5E5"> and then the summary let the</font>

1851
01:26:24,420 --> 01:26:26,490
abstract of<font color="#CCCCCC"> the paper they're seeing the</font>

1852
01:26:26,490 --> 01:26:28,590
exploitation of<font color="#CCCCCC"> mm-wave bands</font><font color="#E5E5E5"> is one of</font>

1853
01:26:28,590 --> 01:26:30,810
the key enabler for 5g mobile<font color="#CCCCCC"> bla bla</font>

1854
01:26:30,810 --> 01:26:35,670
<font color="#CCCCCC">bla okay so here's like an example piece</font>

1855
01:26:35,670 --> 01:26:39,990
<font color="#CCCCCC">of text from my language</font><font color="#E5E5E5"> model so I</font>

1856
01:26:39,990 --> 01:26:41,550
trained a language<font color="#E5E5E5"> model on this</font>

1857
01:26:41,550 --> 01:26:44,010
<font color="#E5E5E5">archived data set that</font><font color="#CCCCCC"> I downloaded and</font>

1858
01:26:44,010 --> 01:26:46,740
then I built a simple<font color="#E5E5E5"> little test which</font>

1859
01:26:46,740 --> 01:26:50,970
<font color="#E5E5E5">basically you would pass it some like</font>

1860
01:26:50,970 --> 01:26:53,040
priming text<font color="#E5E5E5"> so you'd say like Oh</font>

1861
01:26:53,040 --> 01:26:54,450
imagine<font color="#E5E5E5"> you started reading a document</font>

1862
01:26:54,450 --> 01:26:57,630
<font color="#CCCCCC">that said category is computer science</font>

1863
01:26:57,630 --> 01:27:00,900
networking and the summary is algorithms

1864
01:27:00,900 --> 01:27:04,530
that<font color="#E5E5E5"> and then I said please write an</font>

1865
01:27:04,530 --> 01:27:07,320
<font color="#E5E5E5">archive abstract so it said that if it's</font>

1866
01:27:07,320 --> 01:27:08,450
<font color="#CCCCCC">networking</font>

1867
01:27:08,450 --> 01:27:11,640
algorithms that use the same network as

1868
01:27:11,640 --> 01:27:13,230
<font color="#CCCCCC">a single node</font><font color="#E5E5E5"> I'm not able to achieve</font>

1869
01:27:13,230 --> 01:27:14,850
<font color="#E5E5E5">the same performance as a traditional</font>

1870
01:27:14,850 --> 01:27:16,890
<font color="#CCCCCC">network based routing algorithms</font><font color="#E5E5E5"> in this</font>

1871
01:27:16,890 --> 01:27:18,750
paper<font color="#E5E5E5"> we propose a novel routing scheme</font>

1872
01:27:18,750 --> 01:27:22,290
but<font color="#CCCCCC"> okay so it it's</font><font color="#E5E5E5"> learnt by reading</font>

1873
01:27:22,290 --> 01:27:24,780
<font color="#E5E5E5">archive papers that somebody who</font><font color="#CCCCCC"> is</font>

1874
01:27:24,780 --> 01:27:27,990
<font color="#CCCCCC">playing algorithms</font><font color="#E5E5E5"> that where the word</font>

1875
01:27:27,990 --> 01:27:31,440
<font color="#CCCCCC">cat CSM ie came before</font><font color="#E5E5E5"> it is going to</font>

1876
01:27:31,440 --> 01:27:34,050
talk like<font color="#E5E5E5"> this and remember it started</font>

1877
01:27:34,050 --> 01:27:36,780
out not<font color="#CCCCCC"> knowing English at all right</font><font color="#E5E5E5"> it</font>

1878
01:27:36,780 --> 01:27:38,820
actually<font color="#E5E5E5"> started out with an embedding</font>

1879
01:27:38,820 --> 01:27:41,700
matrix for every word in English that

1880
01:27:41,700 --> 01:27:44,790
<font color="#E5E5E5">was random okay and by reading</font><font color="#CCCCCC"> lots of</font>

1881
01:27:44,790 --> 01:27:46,950
archive papers it weren't what kind of

1882
01:27:46,950 --> 01:27:48,420
words followed others<font color="#E5E5E5"> so then I tried</font>

1883
01:27:48,420 --> 01:27:51,330
<font color="#E5E5E5">what if we said cat computer science</font>

1884
01:27:51,330 --> 01:27:55,340
computer vision summary algorithms that

1885
01:27:55,340 --> 01:27:58,860
use the same<font color="#E5E5E5"> data to perform</font><font color="#CCCCCC"> image</font>

1886
01:27:58,860 --> 01:28:00,600
<font color="#CCCCCC">specification are</font><font color="#E5E5E5"> increasingly being</font>

1887
01:28:00,600 --> 01:28:01,290
used<font color="#E5E5E5"> to</font>

1888
01:28:01,290 --> 01:28:02,430
<font color="#CCCCCC">proves the performance of image</font>

1889
01:28:02,430 --> 01:28:04,620
<font color="#CCCCCC">classification algorithms and this</font><font color="#E5E5E5"> paper</font>

1890
01:28:04,620 --> 01:28:06,270
we propose a novel method<font color="#E5E5E5"> for image</font>

1891
01:28:06,270 --> 01:28:07,560
<font color="#CCCCCC">specification using</font><font color="#E5E5E5"> a deeper</font>

1892
01:28:07,560 --> 01:28:09,390
convolutional neural network<font color="#E5E5E5"> parentheses</font>

1893
01:28:09,390 --> 01:28:12,990
<font color="#E5E5E5">CNN so you can see like it's kind of</font>

1894
01:28:12,990 --> 01:28:15,630
like<font color="#CCCCCC"> almost</font><font color="#E5E5E5"> the same sentence as back</font>

1895
01:28:15,630 --> 01:28:17,880
here but things have just<font color="#CCCCCC"> changed into</font>

1896
01:28:17,880 --> 01:28:20,190
this world<font color="#E5E5E5"> of computer vision rather</font>

1897
01:28:20,190 --> 01:28:22,710
<font color="#E5E5E5">than networking so I tried</font><font color="#CCCCCC"> something</font>

1898
01:28:22,710 --> 01:28:24,330
else<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is like</font><font color="#E5E5E5"> okay category</font>

1899
01:28:24,330 --> 01:28:26,940
computer<font color="#E5E5E5"> vision and I created the</font>

1900
01:28:26,940 --> 01:28:28,860
world's shortest ever abstract that

1901
01:28:28,860 --> 01:28:32,910
<font color="#E5E5E5">words and then I said title on</font><font color="#CCCCCC"> and the</font>

1902
01:28:32,910 --> 01:28:35,010
title of this is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be on that</font>

1903
01:28:35,010 --> 01:28:36,630
performance<font color="#CCCCCC"> object</font><font color="#E5E5E5"> learning for image</font>

1904
01:28:36,630 --> 01:28:39,210
classification<font color="#E5E5E5"> in OS is end of string so</font>

1905
01:28:39,210 --> 01:28:42,180
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> like end of title what if it</font><font color="#CCCCCC"> is</font>

1906
01:28:42,180 --> 01:28:44,640
<font color="#E5E5E5">networking</font><font color="#CCCCCC"> summary algorithms title on</font>

1907
01:28:44,640 --> 01:28:47,130
the performance<font color="#E5E5E5"> of wireless networks</font><font color="#CCCCCC"> as</font>

1908
01:28:47,130 --> 01:28:50,490
opposed to towards computer vision

1909
01:28:50,490 --> 01:28:52,740
towards a new approach<font color="#CCCCCC"> to image</font>

1910
01:28:52,740 --> 01:28:55,590
<font color="#E5E5E5">specification networking towards then</font>

1911
01:28:55,590 --> 01:28:57,330
you<font color="#E5E5E5"> approach to the analysis</font><font color="#CCCCCC"> of wireless</font>

1912
01:28:57,330 --> 01:29:00,420
networks so like I find this

1913
01:29:00,420 --> 01:29:02,940
<font color="#CCCCCC">mind-blowing right</font><font color="#E5E5E5"> I started out with</font>

1914
01:29:02,940 --> 01:29:06,060
some random<font color="#E5E5E5"> matrices which had like</font>

1915
01:29:06,060 --> 01:29:09,960
literally no no<font color="#CCCCCC"> pre-trade anything</font>

1916
01:29:09,960 --> 01:29:12,660
<font color="#E5E5E5">I fed at 18 months worth of</font><font color="#CCCCCC"> archived</font>

1917
01:29:12,660 --> 01:29:15,660
articles<font color="#CCCCCC"> and it learnt not only how to</font>

1918
01:29:15,660 --> 01:29:19,500
write English<font color="#E5E5E5"> pretty well but also after</font>

1919
01:29:19,500 --> 01:29:20,790
you say something's a convolutional

1920
01:29:20,790 --> 01:29:22,470
neural network you should<font color="#CCCCCC"> then use</font>

1921
01:29:22,470 --> 01:29:24,530
parentheses<font color="#CCCCCC"> to say what it's called and</font>

1922
01:29:24,530 --> 01:29:27,150
furthermore that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> kinds of things</font>

1923
01:29:27,150 --> 01:29:28,800
<font color="#E5E5E5">people talk</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> say create algorithms</font>

1924
01:29:28,800 --> 01:29:31,890
<font color="#E5E5E5">for in computer vision are performing</font>

1925
01:29:31,890 --> 01:29:33,780
image<font color="#CCCCCC"> classification and in networking</font>

1926
01:29:33,780 --> 01:29:37,740
<font color="#CCCCCC">are achieving the same performance</font><font color="#E5E5E5"> as</font>

1927
01:29:37,740 --> 01:29:38,850
traditional network based routing

1928
01:29:38,850 --> 01:29:42,650
algorithms so like a<font color="#E5E5E5"> language model is</font>

1929
01:29:42,650 --> 01:29:47,360
can be like incredibly deep and subtle

1930
01:29:47,360 --> 01:29:49,560
right<font color="#E5E5E5"> and so we're going to try and</font>

1931
01:29:49,560 --> 01:29:52,620
build<font color="#E5E5E5"> that but actually</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> because we</font>

1932
01:29:52,620 --> 01:29:55,290
care<font color="#E5E5E5"> about this at all we're going to</font>

1933
01:29:55,290 --> 01:29:56,880
build it because<font color="#E5E5E5"> we're going to try and</font>

1934
01:29:56,880 --> 01:29:58,740
<font color="#E5E5E5">create a</font><font color="#CCCCCC"> pre-trained model</font><font color="#E5E5E5"> what we're</font>

1935
01:29:58,740 --> 01:30:00,830
actually going<font color="#E5E5E5"> to try and do is take</font>

1936
01:30:00,830 --> 01:30:04,140
IMDB movie reviews and figure out

1937
01:30:04,140 --> 01:30:07,350
whether they're positive<font color="#E5E5E5"> or negative so</font>

1938
01:30:07,350 --> 01:30:08,820
if you think<font color="#CCCCCC"> about it this is a lot like</font>

1939
01:30:08,820 --> 01:30:09,840
cats<font color="#CCCCCC"> vs. dogs</font>

1940
01:30:09,840 --> 01:30:12,070
that's a<font color="#CCCCCC"> classification</font><font color="#E5E5E5"> algorithm</font>

1941
01:30:12,070 --> 01:30:14,380
but<font color="#E5E5E5"> rather than an image we're going</font><font color="#CCCCCC"> to</font>

1942
01:30:14,380 --> 01:30:18,280
have the<font color="#E5E5E5"> text of a review so I'd really</font>

1943
01:30:18,280 --> 01:30:19,810
<font color="#E5E5E5">like to use a</font><font color="#CCCCCC"> pre-trained Network</font>

1944
01:30:19,810 --> 01:30:22,179
like<font color="#CCCCCC"> I would at least my connect to</font>

1945
01:30:22,179 --> 01:30:24,790
start with a network<font color="#CCCCCC"> that knows how</font><font color="#E5E5E5"> to</font>

1946
01:30:24,790 --> 01:30:29,560
read English<font color="#E5E5E5"> right and so my</font><font color="#CCCCCC"> view was</font>

1947
01:30:29,560 --> 01:30:31,630
like<font color="#E5E5E5"> okay to know how to read English</font>

1948
01:30:31,630 --> 01:30:33,610
<font color="#CCCCCC">means you should be able</font><font color="#E5E5E5"> to like predict</font>

1949
01:30:33,610 --> 01:30:36,190
the next word of a sentence<font color="#CCCCCC"> so what if</font>

1950
01:30:36,190 --> 01:30:39,790
we pre train a<font color="#E5E5E5"> language model and then</font>

1951
01:30:39,790 --> 01:30:42,010
use that pre-trained language model and

1952
01:30:42,010 --> 01:30:44,409
then just like in<font color="#E5E5E5"> computer vision</font><font color="#CCCCCC"> stick</font>

1953
01:30:44,409 --> 01:30:46,599
some new layers on the end<font color="#E5E5E5"> and ask it</font>

1954
01:30:46,599 --> 01:30:48,849
instead of<font color="#CCCCCC"> - predicting</font><font color="#E5E5E5"> the next word in</font>

1955
01:30:48,849 --> 01:30:51,489
the sentence instead<font color="#E5E5E5"> predict whether</font>

1956
01:30:51,489 --> 01:30:54,130
something is positive or<font color="#E5E5E5"> negative so</font>

1957
01:30:54,130 --> 01:30:57,040
when I started<font color="#E5E5E5"> working on this this was</font>

1958
01:30:57,040 --> 01:30:59,829
actually a<font color="#E5E5E5"> new idea</font><font color="#CCCCCC"> unfortunately in the</font>

1959
01:30:59,829 --> 01:31:01,389
last<font color="#CCCCCC"> couple of months I've been</font><font color="#E5E5E5"> doing it</font>

1960
01:31:01,389 --> 01:31:02,440
you<font color="#CCCCCC"> know a few people have actually</font>

1961
01:31:02,440 --> 01:31:04,150
couple people started publishing this

1962
01:31:04,150 --> 01:31:06,250
and so this has moved<font color="#E5E5E5"> from being</font><font color="#CCCCCC"> a</font>

1963
01:31:06,250 --> 01:31:08,860
totally new idea<font color="#CCCCCC"> to being a you know</font>

1964
01:31:08,860 --> 01:31:14,219
<font color="#E5E5E5">somewhat new idea</font><font color="#CCCCCC"> so so this idea of</font>

1965
01:31:14,219 --> 01:31:17,530
creating<font color="#E5E5E5"> a</font><font color="#CCCCCC"> language model</font><font color="#E5E5E5"> making that</font>

1966
01:31:17,530 --> 01:31:18,940
the<font color="#E5E5E5"> pre-trained model for a</font>

1967
01:31:18,940 --> 01:31:21,010
classification<font color="#CCCCCC"> model is what we're going</font>

1968
01:31:21,010 --> 01:31:23,980
to<font color="#E5E5E5"> learn to do now and so the idea is</font>

1969
01:31:23,980 --> 01:31:25,420
we're really<font color="#E5E5E5"> kind of trying</font><font color="#CCCCCC"> to leverage</font>

1970
01:31:25,420 --> 01:31:28,000
exactly what we learnt in our computer

1971
01:31:28,000 --> 01:31:30,550
vision work<font color="#E5E5E5"> which is how do we do fine</font>

1972
01:31:30,550 --> 01:31:32,710
tuning<font color="#CCCCCC"> to create powerful classification</font>

1973
01:31:32,710 --> 01:31:36,790
models<font color="#E5E5E5"> yes you know so why don't you</font>

1974
01:31:36,790 --> 01:31:40,000
<font color="#E5E5E5">think that doing just directly what you</font>

1975
01:31:40,000 --> 01:31:44,219
want to do doesn't work better<font color="#CCCCCC"> well</font>

1976
01:31:44,219 --> 01:31:47,110
<font color="#E5E5E5">because it doesn't just turns out it</font>

1977
01:31:47,110 --> 01:31:50,230
doesn't empirically<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the reason it</font>

1978
01:31:50,230 --> 01:31:54,400
doesn't is a number of<font color="#E5E5E5"> things first of</font>

1979
01:31:54,400 --> 01:31:58,389
all as we<font color="#E5E5E5"> know fine-tuning a</font><font color="#CCCCCC"> pre-trained</font>

1980
01:31:58,389 --> 01:32:01,360
<font color="#E5E5E5">network is really powerful right so if</font>

1981
01:32:01,360 --> 01:32:04,150
we can get it to learn some<font color="#E5E5E5"> related</font>

1982
01:32:04,150 --> 01:32:06,610
tasks first<font color="#E5E5E5"> then we can use all that</font>

1983
01:32:06,610 --> 01:32:09,610
<font color="#CCCCCC">information to try and help it on the</font>

1984
01:32:09,610 --> 01:32:15,880
second task<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> reason is IMDB</font>

1985
01:32:15,880 --> 01:32:18,849
movie reviews<font color="#CCCCCC"> you know up to a thousand</font>

1986
01:32:18,849 --> 01:32:19,540
<font color="#E5E5E5">words long</font>

1987
01:32:19,540 --> 01:32:22,449
they're pretty big<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> after reading</font>

1988
01:32:22,449 --> 01:32:24,920
a thousand words knowing<font color="#E5E5E5"> nothing about</font>

1989
01:32:24,920 --> 01:32:27,200
how English is structured or even what

1990
01:32:27,200 --> 01:32:30,140
the concept of a word is or<font color="#E5E5E5"> punctuation</font>

1991
01:32:30,140 --> 01:32:33,250
or whatever at the<font color="#E5E5E5"> end of this thousand</font>

1992
01:32:33,250 --> 01:32:35,420
integers you know they end<font color="#E5E5E5"> up being</font>

1993
01:32:35,420 --> 01:32:37,810
integers<font color="#CCCCCC"> all you get</font><font color="#E5E5E5"> is a 1</font><font color="#CCCCCC"> or a</font><font color="#E5E5E5"> 0</font>

1994
01:32:37,810 --> 01:32:40,400
<font color="#E5E5E5">positive or negative and so trying to</font>

1995
01:32:40,400 --> 01:32:42,200
like<font color="#E5E5E5"> learn the entire structure of</font>

1996
01:32:42,200 --> 01:32:44,060
English and then how it expresses

1997
01:32:44,060 --> 01:32:45,770
positive<font color="#CCCCCC"> and negative sentiments from</font><font color="#E5E5E5"> a</font>

1998
01:32:45,770 --> 01:32:48,500
single number<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> too much to expect</font>

1999
01:32:48,500 --> 01:32:51,950
<font color="#E5E5E5">so by</font><font color="#CCCCCC"> building a language model first</font><font color="#E5E5E5"> we</font>

2000
01:32:51,950 --> 01:32:53,540
can try<font color="#E5E5E5"> to build a neural</font><font color="#CCCCCC"> network that</font>

2001
01:32:53,540 --> 01:32:56,960
<font color="#E5E5E5">kind of understands the English of movie</font>

2002
01:32:56,960 --> 01:32:59,810
reviews and then we hope that some<font color="#CCCCCC"> of</font>

2003
01:32:59,810 --> 01:33:02,330
<font color="#CCCCCC">the</font><font color="#E5E5E5"> things that's</font><font color="#CCCCCC"> learnt about are going</font>

2004
01:33:02,330 --> 01:33:03,860
<font color="#E5E5E5">to be useful in deciding whether</font>

2005
01:33:03,860 --> 01:33:05,030
<font color="#CCCCCC">something's a positive or a negative</font>

2006
01:33:05,030 --> 01:33:07,130
<font color="#E5E5E5">nutrition that's a great question you</font>

2007
01:33:07,130 --> 01:33:12,740
can pass<font color="#CCCCCC"> that</font><font color="#E5E5E5"> thanks is this similar to</font>

2008
01:33:12,740 --> 01:33:18,710
<font color="#E5E5E5">the car RNN yeah this is somewhat</font>

2009
01:33:18,710 --> 01:33:21,200
similar<font color="#CCCCCC"> to our</font><font color="#E5E5E5"> Olympic apathy so the</font>

2010
01:33:21,200 --> 01:33:25,730
famous<font color="#E5E5E5"> car as in</font><font color="#CCCCCC"> CH AR AR and in try to</font>

2011
01:33:25,730 --> 01:33:28,340
predict<font color="#E5E5E5"> the next letter given a number</font>

2012
01:33:28,340 --> 01:33:30,680
<font color="#E5E5E5">of previous letters language models</font>

2013
01:33:30,680 --> 01:33:33,020
generally<font color="#E5E5E5"> work at a word level they</font>

2014
01:33:33,020 --> 01:33:35,750
don't<font color="#E5E5E5"> have to and doing things that a</font>

2015
01:33:35,750 --> 01:33:38,810
word level<font color="#E5E5E5"> turns out to be can be quite</font>

2016
01:33:38,810 --> 01:33:40,610
a bit more<font color="#E5E5E5"> powerful and we're going to</font>

2017
01:33:40,610 --> 01:33:42,710
focus on word level modeling in this

2018
01:33:42,710 --> 01:33:46,430
course<font color="#E5E5E5"> to what extent are these</font>

2019
01:33:46,430 --> 01:33:50,870
generated words actually copies of what

2020
01:33:50,870 --> 01:33:53,000
it found<font color="#E5E5E5"> in the in the training</font><font color="#CCCCCC"> data set</font>

2021
01:33:53,000 --> 01:33:56,150
<font color="#CCCCCC">or</font><font color="#E5E5E5"> are these completely random things</font>

2022
01:33:56,150 --> 01:33:57,980
<font color="#E5E5E5">that it actually learned and how do we</font>

2023
01:33:57,980 --> 01:33:59,990
<font color="#E5E5E5">know how to distinguish between those</font>

2024
01:33:59,990 --> 01:34:01,880
two<font color="#E5E5E5"> yeah I mean these are</font><font color="#CCCCCC"> awkward</font>

2025
01:34:01,880 --> 01:34:04,130
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the words</font><font color="#E5E5E5"> are definitely</font>

2026
01:34:04,130 --> 01:34:05,630
words we've seen<font color="#CCCCCC"> before the work because</font>

2027
01:34:05,630 --> 01:34:07,070
it's not<font color="#CCCCCC"> at a character level</font><font color="#E5E5E5"> so it can</font>

2028
01:34:07,070 --> 01:34:09,440
only give us<font color="#CCCCCC"> the word it</font><font color="#E5E5E5"> seen before the</font>

2029
01:34:09,440 --> 01:34:13,310
sentences<font color="#E5E5E5"> there's a number of kind of</font>

2030
01:34:13,310 --> 01:34:14,960
rigorous<font color="#E5E5E5"> ways of doing it but</font><font color="#CCCCCC"> I think</font>

2031
01:34:14,960 --> 01:34:16,820
the easiest<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> get a sense of like</font>

2032
01:34:16,820 --> 01:34:19,220
well here are<font color="#E5E5E5"> two like different</font>

2033
01:34:19,220 --> 01:34:21,860
categories where it's kind<font color="#E5E5E5"> of created</font>

2034
01:34:21,860 --> 01:34:25,340
very similar concepts but mixing<font color="#E5E5E5"> them up</font>

2035
01:34:25,340 --> 01:34:27,050
in just<font color="#E5E5E5"> the right way like it it would</font>

2036
01:34:27,050 --> 01:34:30,440
be<font color="#E5E5E5"> very hard to to do what</font><font color="#CCCCCC"> we've seen</font>

2037
01:34:30,440 --> 01:34:33,020
here just by like speeding<font color="#E5E5E5"> back things</font>

2038
01:34:33,020 --> 01:34:35,270
<font color="#CCCCCC">at scene before but you could of course</font>

2039
01:34:35,270 --> 01:34:37,789
actually<font color="#E5E5E5"> go back</font><font color="#CCCCCC"> and check you know</font>

2040
01:34:37,789 --> 01:34:39,679
have you seen<font color="#E5E5E5"> that sentence before or</font>

2041
01:34:39,679 --> 01:34:41,329
like<font color="#CCCCCC"> a</font><font color="#E5E5E5"> stream distance - have you seen a</font>

2042
01:34:41,329 --> 01:34:45,260
similar<font color="#E5E5E5"> sentence</font><font color="#CCCCCC"> before in this case oh</font>

2043
01:34:45,260 --> 01:34:47,360
<font color="#E5E5E5">and of course</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> way to do</font><font color="#CCCCCC"> it is</font>

2044
01:34:47,360 --> 01:34:49,130
the length most importantly when we

2045
01:34:49,130 --> 01:34:51,079
<font color="#E5E5E5">train the language model</font><font color="#CCCCCC"> as we'll see</font>

2046
01:34:51,079 --> 01:34:53,449
we'll have a validation set<font color="#CCCCCC"> and so we're</font>

2047
01:34:53,449 --> 01:34:55,639
trying<font color="#E5E5E5"> to predict the next word</font><font color="#CCCCCC"> of</font>

2048
01:34:55,639 --> 01:34:57,440
something<font color="#E5E5E5"> that's never seen before</font>

2049
01:34:57,440 --> 01:34:59,659
and so if it's good at doing that<font color="#CCCCCC"> it</font>

2050
01:34:59,659 --> 01:35:01,849
should be good<font color="#E5E5E5"> at generating text in</font>

2051
01:35:01,849 --> 01:35:04,550
this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> the purpose the purpose is</font><font color="#E5E5E5"> not</font>

2052
01:35:04,550 --> 01:35:06,110
to<font color="#CCCCCC"> generate text that</font><font color="#E5E5E5"> was just a fun</font>

2053
01:35:06,110 --> 01:35:08,059
example<font color="#CCCCCC"> and so I'm not really</font><font color="#E5E5E5"> gonna</font>

2054
01:35:08,059 --> 01:35:10,849
study<font color="#E5E5E5"> that too much but you</font><font color="#CCCCCC"> know you're</font>

2055
01:35:10,849 --> 01:35:13,789
during the week<font color="#E5E5E5"> turtley can like you can</font>

2056
01:35:13,789 --> 01:35:16,699
<font color="#CCCCCC">totally build your you know Great</font>

2057
01:35:16,699 --> 01:35:19,269
American<font color="#CCCCCC"> Novel</font><font color="#E5E5E5"> generator or whatever</font>

2058
01:35:19,269 --> 01:35:22,940
<font color="#CCCCCC">there are actually some tricks to</font><font color="#E5E5E5"> to</font>

2059
01:35:22,940 --> 01:35:24,909
using language models to generate text

2060
01:35:24,909 --> 01:35:27,469
<font color="#E5E5E5">that I'm not using here they're pretty</font>

2061
01:35:27,469 --> 01:35:28,849
<font color="#E5E5E5">simple we</font><font color="#CCCCCC"> can talk about</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> on the</font>

2062
01:35:28,849 --> 01:35:31,820
forum<font color="#CCCCCC"> if you like but</font><font color="#E5E5E5"> my focus is</font>

2063
01:35:31,820 --> 01:35:34,039
<font color="#CCCCCC">actually on classification so I think</font>

2064
01:35:34,039 --> 01:35:37,880
that's the<font color="#CCCCCC"> thing which</font><font color="#E5E5E5"> is incredibly</font>

2065
01:35:37,880 --> 01:35:41,260
<font color="#CCCCCC">powerful</font><font color="#E5E5E5"> like text classification</font><font color="#CCCCCC"> I</font>

2066
01:35:41,260 --> 01:35:44,030
don't know you're a<font color="#E5E5E5"> hedge fund you want</font>

2067
01:35:44,030 --> 01:35:46,760
to like read every article<font color="#E5E5E5"> as soon as it</font>

2068
01:35:46,760 --> 01:35:49,099
comes<font color="#CCCCCC"> out through writers or Twitter</font><font color="#E5E5E5"> or</font>

2069
01:35:49,099 --> 01:35:51,380
<font color="#CCCCCC">whatever and immediately identify things</font>

2070
01:35:51,380 --> 01:35:54,500
which in the past have caused you know

2071
01:35:54,500 --> 01:35:56,900
massive<font color="#E5E5E5"> market drops that's a</font>

2072
01:35:56,900 --> 01:36:00,219
<font color="#CCCCCC">classification model</font><font color="#E5E5E5"> or you want to</font>

2073
01:36:00,219 --> 01:36:03,159
recognize all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the customer service</font>

2074
01:36:03,159 --> 01:36:06,110
<font color="#CCCCCC">queries which tend</font><font color="#E5E5E5"> to be associated</font><font color="#CCCCCC"> with</font>

2075
01:36:06,110 --> 01:36:09,920
<font color="#CCCCCC">people</font><font color="#E5E5E5"> who who leave your you know who</font>

2076
01:36:09,920 --> 01:36:12,320
<font color="#E5E5E5">cancel their contracts in the next</font>

2077
01:36:12,320 --> 01:36:14,300
<font color="#CCCCCC">month's that's a classification problem</font>

2078
01:36:14,300 --> 01:36:16,489
<font color="#CCCCCC">so like it's a</font><font color="#E5E5E5"> really powerful kind of</font>

2079
01:36:16,489 --> 01:36:21,050
thing for data journalism<font color="#CCCCCC"> Activision</font>

2080
01:36:21,050 --> 01:36:25,730
that activism more<font color="#CCCCCC"> promise</font><font color="#E5E5E5"> so forth</font>

2081
01:36:25,730 --> 01:36:29,449
<font color="#E5E5E5">right like I'm trying to class documents</font>

2082
01:36:29,449 --> 01:36:30,980
into whether they're part of legal

2083
01:36:30,980 --> 01:36:33,579
discovery<font color="#E5E5E5"> or not part of legal discovery</font>

2084
01:36:33,579 --> 01:36:39,199
<font color="#CCCCCC">okay so you get</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> idea so in terms of</font>

2085
01:36:39,199 --> 01:36:40,789
stuff we're importing we're importing a

2086
01:36:40,789 --> 01:36:44,030
few new things here one of the bunch of

2087
01:36:44,030 --> 01:36:47,599
<font color="#E5E5E5">things we're importing is torch text</font>

2088
01:36:47,599 --> 01:36:51,230
torch text is PI torches like

2089
01:36:51,230 --> 01:36:55,220
LP library and so fast<font color="#CCCCCC"> AI is designed to</font>

2090
01:36:55,220 --> 01:36:57,110
work<font color="#E5E5E5"> hand in hand with torch</font><font color="#CCCCCC"> text</font><font color="#E5E5E5"> as</font>

2091
01:36:57,110 --> 01:37:01,100
you'll see<font color="#E5E5E5"> and then there's a few</font><font color="#CCCCCC"> text</font>

2092
01:37:01,100 --> 01:37:03,739
specific sub bits<font color="#E5E5E5"> of</font><font color="#CCCCCC"> faster fast AI that</font>

2093
01:37:03,739 --> 01:37:06,680
we'll be using<font color="#E5E5E5"> so we're going to be</font>

2094
01:37:06,680 --> 01:37:09,800
working<font color="#E5E5E5"> with the IMDB large movie review</font>

2095
01:37:09,800 --> 01:37:12,500
data set<font color="#E5E5E5"> it's very very well studied in</font>

2096
01:37:12,500 --> 01:37:16,280
academia<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> lots and lots of</font>

2097
01:37:16,280 --> 01:37:19,430
people<font color="#E5E5E5"> over the years have studied this</font>

2098
01:37:19,430 --> 01:37:20,290
data set

2099
01:37:20,290 --> 01:37:23,210
<font color="#CCCCCC">fifty</font><font color="#E5E5E5"> thousand reviews highly polarized</font>

2100
01:37:23,210 --> 01:37:26,390
reviews either positive or negative<font color="#CCCCCC"> each</font>

2101
01:37:26,390 --> 01:37:29,570
one has<font color="#CCCCCC"> been classified by sentiment</font>

2102
01:37:29,570 --> 01:37:32,090
<font color="#E5E5E5">okay so we're going to try our first</font><font color="#CCCCCC"> of</font>

2103
01:37:32,090 --> 01:37:33,560
all however<font color="#E5E5E5"> to create a language</font><font color="#CCCCCC"> model</font>

2104
01:37:33,560 --> 01:37:35,090
so we're going<font color="#E5E5E5"> to ignore the sentiment</font>

2105
01:37:35,090 --> 01:37:37,250
entirely<font color="#E5E5E5"> all right so just like</font><font color="#CCCCCC"> the dogs</font>

2106
01:37:37,250 --> 01:37:39,200
and<font color="#CCCCCC"> cats Cree trainer model</font><font color="#E5E5E5"> to do one</font>

2107
01:37:39,200 --> 01:37:41,000
thing<font color="#E5E5E5"> and then fine tune it to do</font>

2108
01:37:41,000 --> 01:37:44,420
something<font color="#CCCCCC"> else because this kind</font><font color="#E5E5E5"> of idea</font>

2109
01:37:44,420 --> 01:37:48,500
in NLP<font color="#E5E5E5"> is is so so so new</font><font color="#CCCCCC"> there's</font>

2110
01:37:48,500 --> 01:37:50,900
<font color="#E5E5E5">basically no models you can download for</font>

2111
01:37:50,900 --> 01:37:52,310
<font color="#E5E5E5">this</font><font color="#CCCCCC"> so we're going</font><font color="#E5E5E5"> to have to create</font>

2112
01:37:52,310 --> 01:37:57,500
their own right so having downloaded the

2113
01:37:57,500 --> 01:37:59,840
data you<font color="#CCCCCC"> can use</font><font color="#E5E5E5"> the link here we do the</font>

2114
01:37:59,840 --> 01:38:01,700
usual<font color="#CCCCCC"> stuff of saying the path to</font>

2115
01:38:01,700 --> 01:38:05,060
training and validation path<font color="#E5E5E5"> and as you</font>

2116
01:38:05,060 --> 01:38:06,560
<font color="#E5E5E5">can</font><font color="#CCCCCC"> see it</font><font color="#E5E5E5"> looks pretty pretty</font>

2117
01:38:06,560 --> 01:38:08,960
traditional compared to a vision there's

2118
01:38:08,960 --> 01:38:10,880
a directory of<font color="#E5E5E5"> training there's a</font>

2119
01:38:10,880 --> 01:38:12,860
directory of<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> we don't actually</font>

2120
01:38:12,860 --> 01:38:14,720
<font color="#E5E5E5">have separate test and validation in</font>

2121
01:38:14,720 --> 01:38:19,400
this case<font color="#E5E5E5"> and just</font><font color="#CCCCCC"> like in envision the</font>

2122
01:38:19,400 --> 01:38:22,100
<font color="#E5E5E5">training directory has a bunch of files</font>

2123
01:38:22,100 --> 01:38:25,250
in it<font color="#E5E5E5"> in this case not representing</font>

2124
01:38:25,250 --> 01:38:28,970
images but representing movie reviews so

2125
01:38:28,970 --> 01:38:32,600
we could cat one of those files<font color="#CCCCCC"> and here</font>

2126
01:38:32,600 --> 01:38:36,140
we learn about<font color="#E5E5E5"> the classic zombie</font><font color="#CCCCCC"> garand</font>

2127
01:38:36,140 --> 01:38:38,350
movie<font color="#E5E5E5"> I have to say with a name like</font>

2128
01:38:38,350 --> 01:38:41,660
zombie<font color="#CCCCCC"> gedan and an atom bomb</font><font color="#E5E5E5"> on the</font>

2129
01:38:41,660 --> 01:38:43,580
front cover I was expecting a<font color="#E5E5E5"> flat-out</font>

2130
01:38:43,580 --> 01:38:49,370
chop-socky fun<font color="#CCCCCC"> coup rent it if you want</font>

2131
01:38:49,370 --> 01:38:50,840
to get stoned on a Friday night and

2132
01:38:50,840 --> 01:38:52,760
<font color="#E5E5E5">laugh with your buddies don't rent it if</font>

2133
01:38:52,760 --> 01:38:54,290
you're an<font color="#CCCCCC"> uptight</font><font color="#E5E5E5"> weenie</font><font color="#CCCCCC"> or want a</font>

2134
01:38:54,290 --> 01:38:55,880
zombie movie or lots of fresh eating<font color="#CCCCCC"> I</font>

2135
01:38:55,880 --> 01:38:58,010
think I'm going<font color="#E5E5E5"> to enjoy zombie</font><font color="#CCCCCC"> getting</font>

2136
01:38:58,010 --> 01:39:00,170
so<font color="#CCCCCC"> alright so we've</font><font color="#E5E5E5"> learned something</font>

2137
01:39:00,170 --> 01:39:02,410
<font color="#E5E5E5">today</font>

2138
01:39:02,530 --> 01:39:04,590
<font color="#E5E5E5">all right so we can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> use standard</font>

2139
01:39:04,590 --> 01:39:06,880
<font color="#CCCCCC">UNIX stuff to see like how many</font><font color="#E5E5E5"> words</font>

2140
01:39:06,880 --> 01:39:08,890
are<font color="#CCCCCC"> in the data set so the training set</font>

2141
01:39:08,890 --> 01:39:12,010
we've got<font color="#CCCCCC"> seventeen and a half</font><font color="#E5E5E5"> million</font>

2142
01:39:12,010 --> 01:39:15,970
words<font color="#CCCCCC"> test set we've got 5.6 million</font>

2143
01:39:15,970 --> 01:39:24,100
words so he is<font color="#E5E5E5"> these are this is IMDB so</font>

2144
01:39:24,100 --> 01:39:27,490
IMDB<font color="#CCCCCC"> is</font><font color="#E5E5E5"> random people this is not New</font>

2145
01:39:27,490 --> 01:39:29,920
York Times listed review as far as I

2146
01:39:29,920 --> 01:39:38,620
know<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so before</font><font color="#CCCCCC"> we can do anything</font>

2147
01:39:38,620 --> 01:39:40,870
with text we have<font color="#CCCCCC"> to turn</font><font color="#E5E5E5"> it into a list</font>

2148
01:39:40,870 --> 01:39:43,900
of<font color="#E5E5E5"> tokens token is basically like a word</font>

2149
01:39:43,900 --> 01:39:45,670
<font color="#E5E5E5">right so we're going to try and turn</font>

2150
01:39:45,670 --> 01:39:47,200
this eventually<font color="#E5E5E5"> into a list of numbers</font>

2151
01:39:47,200 --> 01:39:49,060
<font color="#E5E5E5">so the first step is to turn it into</font><font color="#CCCCCC"> a</font>

2152
01:39:49,060 --> 01:39:49,920
list<font color="#E5E5E5"> of words</font>

2153
01:39:49,920 --> 01:39:52,870
<font color="#CCCCCC">that's called tokenization in NLP NLP</font>

2154
01:39:52,870 --> 01:39:55,600
has<font color="#E5E5E5"> a huge lot of jargon</font><font color="#CCCCCC"> that will</font><font color="#E5E5E5"> we'll</font>

2155
01:39:55,600 --> 01:39:57,160
learn over time

2156
01:39:57,160 --> 01:39:59,710
one thing that's a bit tricky though

2157
01:39:59,710 --> 01:40:02,740
<font color="#E5E5E5">when we're doing tokenization</font><font color="#CCCCCC"> is here</font>

2158
01:40:02,740 --> 01:40:05,440
<font color="#CCCCCC">I've I've tokenized that review and then</font>

2159
01:40:05,440 --> 01:40:07,480
joined it back up with spaces and you'll

2160
01:40:07,480 --> 01:40:10,630
see here<font color="#CCCCCC"> that wasn't has become two</font>

2161
01:40:10,630 --> 01:40:12,880
<font color="#E5E5E5">tokens which makes perfect</font><font color="#CCCCCC"> sense right</font>

2162
01:40:12,880 --> 01:40:19,240
<font color="#E5E5E5">was is two things right</font><font color="#CCCCCC"> dot</font><font color="#E5E5E5"> dot</font><font color="#CCCCCC"> dot</font><font color="#E5E5E5"> has</font>

2163
01:40:19,240 --> 01:40:22,600
become one<font color="#E5E5E5"> token right where else lots</font>

2164
01:40:22,600 --> 01:40:24,430
of exclamation marks has become lots of

2165
01:40:24,430 --> 01:40:27,280
tokens<font color="#E5E5E5"> so like a good tokenizer</font>

2166
01:40:27,280 --> 01:40:30,720
<font color="#CCCCCC">will do a good job of recognizing like</font>

2167
01:40:30,720 --> 01:40:33,640
pieces<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it in your sentence each</font>

2168
01:40:33,640 --> 01:40:35,410
separate piece<font color="#E5E5E5"> of</font><font color="#CCCCCC"> punctuation will be</font>

2169
01:40:35,410 --> 01:40:39,790
<font color="#E5E5E5">separated</font><font color="#CCCCCC"> and each part of</font><font color="#E5E5E5"> a multi-part</font>

2170
01:40:39,790 --> 01:40:43,380
<font color="#E5E5E5">word will be separated as appropriate so</font>

2171
01:40:43,380 --> 01:40:45,880
<font color="#E5E5E5">Spacey is I think it's an Australian</font>

2172
01:40:45,880 --> 01:40:47,590
<font color="#E5E5E5">develop piece of software actually that</font>

2173
01:40:47,590 --> 01:40:50,050
does<font color="#E5E5E5"> lots of you know P stuff it's got</font>

2174
01:40:50,050 --> 01:40:53,470
<font color="#E5E5E5">the best tokenizer I know and so</font><font color="#CCCCCC"> past AI</font>

2175
01:40:53,470 --> 01:40:55,810
is designed to work well with<font color="#CCCCCC"> the Spacey</font>

2176
01:40:55,810 --> 01:40:58,600
tokenizer<font color="#E5E5E5"> as</font><font color="#CCCCCC"> is torch</font><font color="#E5E5E5"> text so here's an</font>

2177
01:40:58,600 --> 01:41:02,590
example<font color="#E5E5E5"> of tokenization</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so what</font>

2178
01:41:02,590 --> 01:41:05,440
we do with torch<font color="#E5E5E5"> text is we basically</font>

2179
01:41:05,440 --> 01:41:07,210
have to<font color="#CCCCCC"> start out by creating</font><font color="#E5E5E5"> something</font>

2180
01:41:07,210 --> 01:41:09,700
called<font color="#CCCCCC"> a</font><font color="#E5E5E5"> field and a field is a</font>

2181
01:41:09,700 --> 01:41:12,250
definition of<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to pre-process some</font>

2182
01:41:12,250 --> 01:41:14,350
text<font color="#E5E5E5"> and so here's an example with the</font>

2183
01:41:14,350 --> 01:41:15,610
definition<font color="#E5E5E5"> of a field</font>

2184
01:41:15,610 --> 01:41:19,660
it says I want<font color="#CCCCCC"> to lowercase</font><font color="#E5E5E5"> a text and I</font>

2185
01:41:19,660 --> 01:41:21,490
want to tokenize it with the function

2186
01:41:21,490 --> 01:41:24,970
called<font color="#CCCCCC"> Spacey</font><font color="#E5E5E5"> tokenize</font><font color="#CCCCCC"> okay so it hasn't</font>

2187
01:41:24,970 --> 01:41:26,560
<font color="#CCCCCC">done anything yet we're</font><font color="#E5E5E5"> just telling you</font>

2188
01:41:26,560 --> 01:41:28,630
<font color="#E5E5E5">when we do do something this is what to</font>

2189
01:41:28,630 --> 01:41:30,930
do<font color="#E5E5E5"> and so that</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to store</font><font color="#CCCCCC"> that</font>

2190
01:41:30,930 --> 01:41:32,860
description of<font color="#E5E5E5"> what to do in a thing</font>

2191
01:41:32,860 --> 01:41:37,300
called<font color="#CCCCCC"> capital</font><font color="#E5E5E5"> text and so this is this</font>

2192
01:41:37,300 --> 01:41:39,130
<font color="#CCCCCC">is none of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> but this is not fast AI</font>

2193
01:41:39,130 --> 01:41:40,750
specific at all this is part of torch

2194
01:41:40,750 --> 01:41:42,340
text you can<font color="#E5E5E5"> go to the torch text</font>

2195
01:41:42,340 --> 01:41:44,680
website<font color="#E5E5E5"> read the docs there's not lots</font>

2196
01:41:44,680 --> 01:41:46,720
of<font color="#E5E5E5"> Doc's yet this is all very very new</font>

2197
01:41:46,720 --> 01:41:49,720
<font color="#E5E5E5">so probably the best</font><font color="#CCCCCC"> information you'll</font>

2198
01:41:49,720 --> 01:41:51,940
<font color="#CCCCCC">find about it</font><font color="#E5E5E5"> is in this</font><font color="#CCCCCC"> lesson but</font>

2199
01:41:51,940 --> 01:41:54,070
there's some more<font color="#E5E5E5"> information on this</font>

2200
01:41:54,070 --> 01:41:57,850
site<font color="#E5E5E5"> all right so what we can now do is</font>

2201
01:41:57,850 --> 01:42:01,090
go ahead<font color="#E5E5E5"> and create the usual fast AI</font>

2202
01:42:01,090 --> 01:42:05,380
model data object<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and so to create</font>

2203
01:42:05,380 --> 01:42:07,180
the model<font color="#E5E5E5"> data object we have to provide</font>

2204
01:42:07,180 --> 01:42:08,980
<font color="#E5E5E5">a few bits of information</font><font color="#CCCCCC"> but you have</font>

2205
01:42:08,980 --> 01:42:10,900
to say what's the training set so the

2206
01:42:10,900 --> 01:42:14,080
path to the text files<font color="#CCCCCC"> the</font><font color="#E5E5E5"> validation</font>

2207
01:42:14,080 --> 01:42:17,050
set<font color="#E5E5E5"> and the test set in this case just</font>

2208
01:42:17,050 --> 01:42:18,310
<font color="#E5E5E5">to keep things simple</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't have a</font>

2209
01:42:18,310 --> 01:42:20,770
separate validation and test set<font color="#CCCCCC"> so I'm</font>

2210
01:42:20,770 --> 01:42:22,450
going to pass in<font color="#CCCCCC"> the validation</font><font color="#E5E5E5"> set for</font>

2211
01:42:22,450 --> 01:42:24,820
both<font color="#E5E5E5"> of those two things</font><font color="#CCCCCC"> right</font>

2212
01:42:24,820 --> 01:42:26,350
so now we can<font color="#E5E5E5"> create our model data</font>

2213
01:42:26,350 --> 01:42:29,050
object<font color="#E5E5E5"> as per usual the first</font><font color="#CCCCCC"> thing you</font>

2214
01:42:29,050 --> 01:42:32,230
give it as a path<font color="#CCCCCC"> the second thing we</font>

2215
01:42:32,230 --> 01:42:34,540
give it is<font color="#E5E5E5"> the torch text field</font>

2216
01:42:34,540 --> 01:42:36,640
definition of how to pre-process that

2217
01:42:36,640 --> 01:42:39,910
text the third thing<font color="#E5E5E5"> we give it is the</font>

2218
01:42:39,910 --> 01:42:42,700
dictionary<font color="#CCCCCC"> or the list</font><font color="#E5E5E5"> of all of</font><font color="#CCCCCC"> the</font>

2219
01:42:42,700 --> 01:42:45,120
files<font color="#E5E5E5"> we have trained validation tests</font>

2220
01:42:45,120 --> 01:42:47,980
<font color="#CCCCCC">as per usual we can pass in a batch size</font>

2221
01:42:47,980 --> 01:42:50,590
and then we've<font color="#E5E5E5"> got a special special</font>

2222
01:42:50,590 --> 01:42:54,790
<font color="#E5E5E5">couple of extra</font><font color="#CCCCCC"> things here one is</font><font color="#E5E5E5"> very</font>

2223
01:42:54,790 --> 01:42:57,130
commonly used in NLP minimum frequency

2224
01:42:57,130 --> 01:43:01,630
<font color="#E5E5E5">what this says is in a moment we're</font>

2225
01:43:01,630 --> 01:43:03,460
<font color="#E5E5E5">going to be replacing every one of these</font>

2226
01:43:03,460 --> 01:43:05,890
<font color="#E5E5E5">words with an integer which basically</font>

2227
01:43:05,890 --> 01:43:08,350
will<font color="#CCCCCC"> be a unique index for every word</font>

2228
01:43:08,350 --> 01:43:10,840
and this basically says<font color="#E5E5E5"> if there are any</font>

2229
01:43:10,840 --> 01:43:14,190
<font color="#E5E5E5">words that occur less than 10 times just</font>

2230
01:43:14,190 --> 01:43:17,680
<font color="#CCCCCC">call it unknown right don't think of</font><font color="#E5E5E5"> it</font>

2231
01:43:17,680 --> 01:43:19,990
<font color="#E5E5E5">as a word but</font><font color="#CCCCCC"> we'll see</font><font color="#E5E5E5"> that indeed more</font>

2232
01:43:19,990 --> 01:43:21,929
detail<font color="#CCCCCC"> in a moment</font>

2233
01:43:21,929 --> 01:43:23,159
we're going to see this in more detail

2234
01:43:23,159 --> 01:43:26,250
as well be PTT stands for<font color="#E5E5E5"> back</font><font color="#CCCCCC"> prop</font>

2235
01:43:26,250 --> 01:43:28,860
through time and<font color="#E5E5E5"> this is where we define</font>

2236
01:43:28,860 --> 01:43:33,659
how long a sentence will we stick on the

2237
01:43:33,659 --> 01:43:35,880
GPU at once<font color="#E5E5E5"> so we're going to break them</font>

2238
01:43:35,880 --> 01:43:37,409
<font color="#E5E5E5">up in this case we're going</font><font color="#CCCCCC"> to break</font>

2239
01:43:37,409 --> 01:43:41,730
<font color="#E5E5E5">them up into sentences of 70 tokens or</font>

2240
01:43:41,730 --> 01:43:44,190
less on the<font color="#CCCCCC"> whole so we're going to see</font>

2241
01:43:44,190 --> 01:43:45,350
<font color="#CCCCCC">all this in a moment</font>

2242
01:43:45,350 --> 01:43:48,570
okay so after<font color="#E5E5E5"> building our model data</font>

2243
01:43:48,570 --> 01:43:51,690
object right what it actually does is

2244
01:43:51,690 --> 01:43:55,199
it's going<font color="#CCCCCC"> to fill this text field with</font>

2245
01:43:55,199 --> 01:43:58,199
an additional<font color="#E5E5E5"> attribute called vocab and</font>

2246
01:43:58,199 --> 01:44:00,480
this is a really important and LP

2247
01:44:00,480 --> 01:44:02,460
concept I'm sorry there's so many NLP

2248
01:44:02,460 --> 01:44:03,840
concepts we just have to<font color="#E5E5E5"> throw at you</font>

2249
01:44:03,840 --> 01:44:05,730
kind<font color="#CCCCCC"> of quickly</font><font color="#E5E5E5"> but we'll see them a few</font>

2250
01:44:05,730 --> 01:44:09,540
times right<font color="#E5E5E5"> the vocab is the vocabulary</font>

2251
01:44:09,540 --> 01:44:12,719
<font color="#CCCCCC">and the vocabulary</font><font color="#E5E5E5"> in NLP has a very</font>

2252
01:44:12,719 --> 01:44:15,210
specific meaning<font color="#E5E5E5"> it is what is the list</font>

2253
01:44:15,210 --> 01:44:17,540
of unique<font color="#E5E5E5"> words that appear in this text</font>

2254
01:44:17,540 --> 01:44:19,710
so every one of them is going<font color="#E5E5E5"> to get a</font>

2255
01:44:19,710 --> 01:44:22,080
<font color="#E5E5E5">unique in this so let's take a look</font>

2256
01:44:22,080 --> 01:44:26,940
right<font color="#CCCCCC"> here is text vocab dot</font><font color="#E5E5E5"> I to s this</font>

2257
01:44:26,940 --> 01:44:29,340
<font color="#E5E5E5">dancer this is all torch text not</font><font color="#CCCCCC"> faster</font>

2258
01:44:29,340 --> 01:44:32,330
<font color="#CCCCCC">hide text</font><font color="#E5E5E5"> upper cap dot int 2 string</font>

2259
01:44:32,330 --> 01:44:37,230
<font color="#CCCCCC">Maps the integer</font><font color="#E5E5E5"> 0 to unknown the</font>

2260
01:44:37,230 --> 01:44:39,540
integer<font color="#E5E5E5"> 1 the padding unit 2 to desert</font>

2261
01:44:39,540 --> 01:44:43,530
then in comma dot and<font color="#E5E5E5"> of</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> and so</font><font color="#CCCCCC"> forth</font>

2262
01:44:43,530 --> 01:44:47,429
<font color="#E5E5E5">right so this is the first 12 elements</font>

2263
01:44:47,429 --> 01:44:52,650
of the array of the vocab from the IMDB

2264
01:44:52,650 --> 01:44:55,110
<font color="#E5E5E5">movie review and it's been sorted by</font>

2265
01:44:55,110 --> 01:44:57,929
<font color="#E5E5E5">frequency</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> except</font><font color="#CCCCCC"> for the first</font><font color="#E5E5E5"> two</font>

2266
01:44:57,929 --> 01:45:00,150
special ones so for example we<font color="#E5E5E5"> can then</font>

2267
01:45:00,150 --> 01:45:00,900
go<font color="#CCCCCC"> backwards</font>

2268
01:45:00,900 --> 01:45:05,280
<font color="#CCCCCC">s2i string to int here is the</font><font color="#E5E5E5"> it's in</font>

2269
01:45:05,280 --> 01:45:09,620
<font color="#CCCCCC">position 0 1 2 so stream to end the is 2</font>

2270
01:45:09,620 --> 01:45:14,100
so the vocab<font color="#E5E5E5"> lets us take a word and map</font>

2271
01:45:14,100 --> 01:45:17,040
it to<font color="#E5E5E5"> an integer or take an integer and</font>

2272
01:45:17,040 --> 01:45:20,790
that<font color="#CCCCCC"> a tour word right and so</font><font color="#E5E5E5"> that means</font>

2273
01:45:20,790 --> 01:45:24,600
<font color="#E5E5E5">that we can then</font><font color="#CCCCCC"> take the first 12</font>

2274
01:45:24,600 --> 01:45:27,960
tokens for example of our text<font color="#E5E5E5"> and turn</font>

2275
01:45:27,960 --> 01:45:32,280
them<font color="#E5E5E5"> into</font><font color="#CCCCCC"> twelve inch</font><font color="#E5E5E5"> so for example</font>

2276
01:45:32,280 --> 01:45:35,740
here<font color="#E5E5E5"> is of the agency</font><font color="#CCCCCC"> 7 2</font>

2277
01:45:35,740 --> 01:45:40,780
and here you can<font color="#E5E5E5"> see 7/2 right so we're</font>

2278
01:45:40,780 --> 01:45:44,260
going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> working in this form did you</font>

2279
01:45:44,260 --> 01:45:45,820
have a question deputy plus that back

2280
01:45:45,820 --> 01:45:49,750
there you<font color="#CCCCCC"> know is it a common</font><font color="#E5E5E5"> tyranny</font>

2281
01:45:49,750 --> 01:45:53,490
stemming or limit<font color="#E5E5E5"> izing</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> really no</font>

2282
01:45:53,490 --> 01:45:56,410
generally tokenization is is what we

2283
01:45:56,410 --> 01:46:00,670
want like with a<font color="#CCCCCC"> language model</font><font color="#E5E5E5"> we you</font>

2284
01:46:00,670 --> 01:46:01,630
know to keep<font color="#E5E5E5"> it as general as possible</font>

2285
01:46:01,630 --> 01:46:03,550
<font color="#CCCCCC">we want to know what's coming next and</font>

2286
01:46:03,550 --> 01:46:06,610
<font color="#E5E5E5">so like whether</font><font color="#CCCCCC"> its future tense or past</font>

2287
01:46:06,610 --> 01:46:08,650
tense or plural or<font color="#CCCCCC"> seem to</font><font color="#E5E5E5"> learn like we</font>

2288
01:46:08,650 --> 01:46:10,330
<font color="#E5E5E5">don't really know which things are going</font>

2289
01:46:10,330 --> 01:46:15,970
to be interesting in which<font color="#CCCCCC"> ant so it</font>

2290
01:46:15,970 --> 01:46:18,550
seems that it's<font color="#E5E5E5"> generally best to kind</font>

2291
01:46:18,550 --> 01:46:21,880
of leave<font color="#CCCCCC"> it alone as much</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> possible be</font>

2292
01:46:21,880 --> 01:46:25,300
the short answer you know having said

2293
01:46:25,300 --> 01:46:27,310
that as I say this is<font color="#E5E5E5"> all pretty new</font><font color="#CCCCCC"> so</font>

2294
01:46:27,310 --> 01:46:29,380
if there are some particular areas<font color="#CCCCCC"> that</font>

2295
01:46:29,380 --> 01:46:30,880
some researcher<font color="#E5E5E5"> maybe is already</font>

2296
01:46:30,880 --> 01:46:32,470
discovered<font color="#CCCCCC"> that some other kinds of</font>

2297
01:46:32,470 --> 01:46:35,470
pre-processing<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> helpful you know I</font>

2298
01:46:35,470 --> 01:46:37,000
wouldn't<font color="#E5E5E5"> be surprised not</font><font color="#CCCCCC"> to know about</font>

2299
01:46:37,000 --> 01:46:41,110
it so<font color="#CCCCCC"> we Abdullah we</font><font color="#E5E5E5"> know you don't</font>

2300
01:46:41,110 --> 01:46:43,110
natural language is in context important

2301
01:46:43,110 --> 01:46:50,050
context is<font color="#CCCCCC"> very important so individual</font>

2302
01:46:50,050 --> 01:46:52,150
words<font color="#E5E5E5"> no no we're not</font><font color="#CCCCCC"> looking worth</font><font color="#E5E5E5"> this</font>

2303
01:46:52,150 --> 01:46:54,730
<font color="#E5E5E5">is this look this is I just don't get</font>

2304
01:46:54,730 --> 01:46:57,040
some of the big premises of this like

2305
01:46:57,040 --> 01:46:59,950
<font color="#E5E5E5">they're there in order yeah so just</font>

2306
01:46:59,950 --> 01:47:02,740
<font color="#CCCCCC">because we replaced I with the number 12</font>

2307
01:47:02,740 --> 01:47:05,620
<font color="#CCCCCC">these are still in</font><font color="#E5E5E5"> that order</font>

2308
01:47:05,620 --> 01:47:09,100
yeah there is a different way of dealing

2309
01:47:09,100 --> 01:47:11,050
<font color="#E5E5E5">with</font><font color="#CCCCCC"> natural language called</font><font color="#E5E5E5"> a bag of</font>

2310
01:47:11,050 --> 01:47:13,180
<font color="#E5E5E5">words and bag of words you</font><font color="#CCCCCC"> through throw</font>

2311
01:47:13,180 --> 01:47:15,280
away the order in the context<font color="#E5E5E5"> and in the</font>

2312
01:47:15,280 --> 01:47:16,570
<font color="#E5E5E5">machine learning</font><font color="#CCCCCC"> course we'll be</font>

2313
01:47:16,570 --> 01:47:18,190
<font color="#CCCCCC">learning about working with bag of words</font>

2314
01:47:18,190 --> 01:47:21,040
representation<font color="#CCCCCC"> z'</font><font color="#E5E5E5"> but my belief is that</font>

2315
01:47:21,040 --> 01:47:24,790
<font color="#CCCCCC">they are no longer useful or in the</font>

2316
01:47:24,790 --> 01:47:26,770
verge of becoming no longer useful<font color="#CCCCCC"> we're</font>

2317
01:47:26,770 --> 01:47:28,780
starting to learn how<font color="#CCCCCC"> to use deep</font>

2318
01:47:28,780 --> 01:47:33,160
learning<font color="#E5E5E5"> to use context properly now but</font>

2319
01:47:33,160 --> 01:47:35,470
it's kind of for<font color="#E5E5E5"> the first time it's</font>

2320
01:47:35,470 --> 01:47:38,190
<font color="#E5E5E5">really like only in the last few months</font>

2321
01:47:38,190 --> 01:47:40,900
right<font color="#E5E5E5"> so I mentioned that we've got two</font>

2322
01:47:40,900 --> 01:47:44,830
<font color="#E5E5E5">numbers batch size and B PTT</font><font color="#CCCCCC"> back crop</font>

2323
01:47:44,830 --> 01:47:49,590
through time<font color="#E5E5E5"> so this is kind of subtle</font>

2324
01:47:52,650 --> 01:47:58,440
<font color="#E5E5E5">so we've got some big long piece of text</font>

2325
01:47:58,440 --> 01:48:00,610
<font color="#E5E5E5">okay so we've got some big long piece of</font>

2326
01:48:00,610 --> 01:48:02,410
<font color="#E5E5E5">text you know here's our sentence it's a</font>

2327
01:48:02,410 --> 01:48:07,030
bunch of<font color="#E5E5E5"> words right and actually</font><font color="#CCCCCC"> what</font>

2328
01:48:07,030 --> 01:48:09,010
happens in a<font color="#E5E5E5"> language model is even</font>

2329
01:48:09,010 --> 01:48:10,510
though we have lots of movie reviews

2330
01:48:10,510 --> 01:48:13,240
they actually all get concatenated

2331
01:48:13,240 --> 01:48:15,490
together into one big<font color="#E5E5E5"> block of text</font>

2332
01:48:15,490 --> 01:48:18,280
<font color="#CCCCCC">right so it's basically predict the next</font>

2333
01:48:18,280 --> 01:48:21,760
word<font color="#E5E5E5"> in this huge long thing which is</font>

2334
01:48:21,760 --> 01:48:23,410
all<font color="#CCCCCC"> of the IMDB movie reviews</font>

2335
01:48:23,410 --> 01:48:25,330
<font color="#E5E5E5">concatenated together so this thing is</font>

2336
01:48:25,330 --> 01:48:28,150
you know what do we<font color="#E5E5E5"> say it was like tens</font>

2337
01:48:28,150 --> 01:48:31,750
of millions of words long<font color="#CCCCCC"> and so what we</font>

2338
01:48:31,750 --> 01:48:37,659
do is we split<font color="#E5E5E5"> it up</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> batches first</font>

2339
01:48:37,659 --> 01:48:39,639
right so these like<font color="#CCCCCC"> aerial spits into</font>

2340
01:48:39,639 --> 01:48:43,780
batches<font color="#E5E5E5"> right and so if we said we want</font>

2341
01:48:43,780 --> 01:48:47,949
<font color="#E5E5E5">a batch size of 64 we actually break the</font>

2342
01:48:47,949 --> 01:48:50,739
<font color="#E5E5E5">whatever it was</font><font color="#CCCCCC"> sixty million</font><font color="#E5E5E5"> words into</font>

2343
01:48:50,739 --> 01:48:56,650
<font color="#E5E5E5">64 sections right and then we take each</font>

2344
01:48:56,650 --> 01:49:03,570
one<font color="#CCCCCC"> of the 64 sections and we move it</font>

2345
01:49:04,040 --> 01:49:07,540
like underneath<font color="#E5E5E5"> the previous one</font><font color="#CCCCCC"> I</font>

2346
01:49:07,540 --> 01:49:10,960
didn't do a great<font color="#E5E5E5"> job of that</font>

2347
01:49:10,960 --> 01:49:16,790
all<font color="#CCCCCC"> right</font><font color="#E5E5E5"> move it underneath so</font><font color="#CCCCCC"> we end</font>

2348
01:49:16,790 --> 01:49:22,960
up<font color="#E5E5E5"> with a matrix which is</font>

2349
01:49:25,340 --> 01:49:27,400
you

2350
01:49:28,550 --> 01:49:32,760
<font color="#CCCCCC">sixty-four actually I think we've moved</font>

2351
01:49:32,760 --> 01:49:34,409
<font color="#E5E5E5">them across twice so it's</font><font color="#CCCCCC"> actually I</font>

2352
01:49:34,409 --> 01:49:36,000
think<font color="#E5E5E5"> just transpose it we end up with</font>

2353
01:49:36,000 --> 01:49:40,320
the<font color="#E5E5E5"> matrix it's like</font><font color="#CCCCCC"> 64 columns wide and</font>

2354
01:49:40,320 --> 01:49:44,460
the<font color="#CCCCCC"> length</font><font color="#E5E5E5"> let's say the</font><font color="#CCCCCC"> original was 64</font>

2355
01:49:44,460 --> 01:49:48,030
million right then the length is like 10

2356
01:49:48,030 --> 01:49:51,929
million long right so each of<font color="#E5E5E5"> these</font>

2357
01:49:51,929 --> 01:49:55,679
represents<font color="#E5E5E5"> one</font><font color="#CCCCCC"> sixty-fourth with our</font>

2358
01:49:55,679 --> 01:49:59,790
entire<font color="#E5E5E5"> IMDB refused it all right and so</font>

2359
01:49:59,790 --> 01:50:02,550
<font color="#E5E5E5">that's our starting point so</font><font color="#CCCCCC"> then what</font>

2360
01:50:02,550 --> 01:50:06,810
we do is we then grab a little<font color="#E5E5E5"> chunk of</font>

2361
01:50:06,810 --> 01:50:09,630
<font color="#E5E5E5">this at a time and those chunk lengths</font>

2362
01:50:09,630 --> 01:50:14,040
are approximately equal<font color="#CCCCCC"> to be PTT which</font>

2363
01:50:14,040 --> 01:50:15,929
I think we had equal to 70<font color="#E5E5E5"> so he</font>

2364
01:50:15,929 --> 01:50:20,010
basically<font color="#E5E5E5"> grab a little 70 long section</font>

2365
01:50:20,010 --> 01:50:22,739
and that's the first<font color="#E5E5E5"> thing we check into</font>

2366
01:50:22,739 --> 01:50:26,159
<font color="#CCCCCC">our GPU that's</font><font color="#E5E5E5"> a batch right so a batch</font>

2367
01:50:26,159 --> 01:50:29,909
is always of<font color="#E5E5E5"> length of width 64 or batch</font>

2368
01:50:29,909 --> 01:50:33,150
size and<font color="#CCCCCC"> each bit is a sequence of</font>

2369
01:50:33,150 --> 01:50:37,619
length up<font color="#CCCCCC"> to 70 so let me show you all</font>

2370
01:50:37,619 --> 01:50:41,790
<font color="#E5E5E5">right so here if I go take my train data</font>

2371
01:50:41,790 --> 01:50:44,130
loader<font color="#E5E5E5"> I</font><font color="#CCCCCC"> know if you folks have tried</font>

2372
01:50:44,130 --> 01:50:45,630
playing<font color="#E5E5E5"> with this yet but you can take</font>

2373
01:50:45,630 --> 01:50:48,300
any<font color="#E5E5E5"> data loader wrap it with inner</font><font color="#CCCCCC"> -</font>

2374
01:50:48,300 --> 01:50:50,250
turn it into an iterator<font color="#E5E5E5"> and then call</font>

2375
01:50:50,250 --> 01:50:54,150
next<font color="#E5E5E5"> on it to grab a batch of data just</font>

2376
01:50:54,150 --> 01:50:55,710
<font color="#E5E5E5">as if you were a neural net you get</font>

2377
01:50:55,710 --> 01:50:57,090
<font color="#E5E5E5">exactly what the neuron that gets and</font>

2378
01:50:57,090 --> 01:51:03,560
you can see here we get back<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 75 by 64</font>

2379
01:51:03,560 --> 01:51:08,790
<font color="#CCCCCC">sensor</font><font color="#E5E5E5"> right so it's 64 wide right and I</font>

2380
01:51:08,790 --> 01:51:13,830
said<font color="#CCCCCC"> it's approximately 70 high and but</font>

2381
01:51:13,830 --> 01:51:16,380
<font color="#E5E5E5">not exactly</font><font color="#CCCCCC"> and that's actually kind of</font>

2382
01:51:16,380 --> 01:51:18,510
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> a really neat</font><font color="#E5E5E5"> trick that</font>

2383
01:51:18,510 --> 01:51:22,190
<font color="#E5E5E5">torch text does is they randomly change</font>

2384
01:51:22,190 --> 01:51:25,800
the<font color="#CCCCCC"> backprop through time number every</font>

2385
01:51:25,800 --> 01:51:28,710
<font color="#CCCCCC">time</font><font color="#E5E5E5"> so each epoch it's getting slightly</font>

2386
01:51:28,710 --> 01:51:33,330
different bits<font color="#E5E5E5"> of text this is kind of</font>

2387
01:51:33,330 --> 01:51:35,790
like in computer vision we randomly

2388
01:51:35,790 --> 01:51:38,520
shuffle the images we can't<font color="#E5E5E5"> randomly</font>

2389
01:51:38,520 --> 01:51:41,130
shuffle the words right because we

2390
01:51:41,130 --> 01:51:42,270
<font color="#E5E5E5">needed to be in the right</font><font color="#CCCCCC"> order so</font>

2391
01:51:42,270 --> 01:51:44,040
<font color="#CCCCCC">instead we randomly</font><font color="#E5E5E5"> move their</font>

2392
01:51:44,040 --> 01:51:46,680
<font color="#E5E5E5">breakpoints a little bit okay so this is</font>

2393
01:51:46,680 --> 01:51:52,370
<font color="#E5E5E5">the equivalent so in other words this</font>

2394
01:51:54,510 --> 01:51:59,130
this here is of length 75 right<font color="#E5E5E5"> there's</font>

2395
01:51:59,130 --> 01:52:01,440
a there's an<font color="#E5E5E5"> ellipsis in the middle</font><font color="#CCCCCC"> and</font>

2396
01:52:01,440 --> 01:52:05,190
<font color="#E5E5E5">that represents the first 75 words of</font>

2397
01:52:05,190 --> 01:52:07,680
the first review right<font color="#E5E5E5"> where else this</font>

2398
01:52:07,680 --> 01:52:12,210
75 here represents the<font color="#E5E5E5"> first 75</font><font color="#CCCCCC"> words</font><font color="#E5E5E5"> of</font>

2399
01:52:12,210 --> 01:52:15,300
this of the second of the<font color="#E5E5E5"> 64 segments</font>

2400
01:52:15,300 --> 01:52:17,670
let's it have to go in<font color="#E5E5E5"> like 10 million</font>

2401
01:52:17,670 --> 01:52:20,160
words to find<font color="#E5E5E5"> that one right and so</font>

2402
01:52:20,160 --> 01:52:23,489
here's the first<font color="#E5E5E5"> 75 words of the last of</font>

2403
01:52:23,489 --> 01:52:27,450
those 64 segments<font color="#E5E5E5"> okay and so then what</font>

2404
01:52:27,450 --> 01:52:35,070
we have down here<font color="#E5E5E5"> is the next sequence</font>

2405
01:52:35,070 --> 01:52:41,400
right<font color="#E5E5E5"> so 51 there's</font><font color="#CCCCCC"> 51</font><font color="#E5E5E5"> 6 1 5 there's 6 1</font>

2406
01:52:41,400 --> 01:52:46,320
5 25 is 25<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and in this case it</font>

2407
01:52:46,320 --> 01:52:48,360
<font color="#CCCCCC">actually is of the same</font><font color="#E5E5E5"> size it's also</font>

2408
01:52:48,360 --> 01:52:50,070
75 plus 64

2409
01:52:50,070 --> 01:52:52,380
but for minor technical reasons<font color="#CCCCCC"> it's</font>

2410
01:52:52,380 --> 01:52:54,720
being flattened<font color="#E5E5E5"> out into a single</font><font color="#CCCCCC"> vector</font>

2411
01:52:54,720 --> 01:52:58,020
<font color="#E5E5E5">but basically it's</font><font color="#CCCCCC"> exactly the same</font><font color="#E5E5E5"> at</font>

2412
01:52:58,020 --> 01:53:01,940
this<font color="#CCCCCC"> matrix but it's just moved down by</font>

2413
01:53:01,940 --> 01:53:05,250
<font color="#CCCCCC">one</font><font color="#E5E5E5"> because we're trying to predict</font><font color="#CCCCCC"> the</font>

2414
01:53:05,250 --> 01:53:08,430
<font color="#E5E5E5">next word right so that all happens</font><font color="#CCCCCC"> for</font>

2415
01:53:08,430 --> 01:53:11,580
us<font color="#E5E5E5"> right if we ask for and this is the</font>

2416
01:53:11,580 --> 01:53:13,770
first date I know<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> ask for a</font>

2417
01:53:13,770 --> 01:53:17,100
language<font color="#E5E5E5"> model data object then it's</font>

2418
01:53:17,100 --> 01:53:20,820
going<font color="#E5E5E5"> to create these batches of batch</font>

2419
01:53:20,820 --> 01:53:26,700
size width by<font color="#E5E5E5"> B PTT height bits of our</font>

2420
01:53:26,700 --> 01:53:29,489
language corpus along with the same

2421
01:53:29,489 --> 01:53:32,730
thing shuffled along by one word right

2422
01:53:32,730 --> 01:53:34,200
<font color="#E5E5E5">and so we're always</font><font color="#CCCCCC"> going to try and</font>

2423
01:53:34,200 --> 01:53:37,510
predict the next word

2424
01:53:37,510 --> 01:53:40,050
yes

2425
01:53:40,860 --> 01:53:44,740
so why<font color="#E5E5E5"> don't you instead</font><font color="#CCCCCC"> of just</font>

2426
01:53:44,740 --> 01:53:49,750
arbitrarily choosing 64<font color="#CCCCCC"> why don't you</font>

2427
01:53:49,750 --> 01:53:52,690
choose like like 64 is a large number

2428
01:53:52,690 --> 01:53:56,770
maybe like stood by sentences and<font color="#E5E5E5"> make</font>

2429
01:53:56,770 --> 01:53:58,630
it a large<font color="#CCCCCC"> number and then padded with</font>

2430
01:53:58,630 --> 01:54:03,100
<font color="#CCCCCC">zero or something if you you know so</font>

2431
01:54:03,100 --> 01:54:04,480
that<font color="#CCCCCC"> you actually</font><font color="#E5E5E5"> have a one full</font>

2432
01:54:04,480 --> 01:54:07,180
sentence per line basically wouldn't

2433
01:54:07,180 --> 01:54:09,010
that make more<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> really because</font>

2434
01:54:09,010 --> 01:54:10,870
remember we're using columns right<font color="#E5E5E5"> so</font>

2435
01:54:10,870 --> 01:54:12,640
each of our columns is of<font color="#E5E5E5"> length about</font>

2436
01:54:12,640 --> 01:54:15,460
<font color="#E5E5E5">10 million right so although it's true</font>

2437
01:54:15,460 --> 01:54:17,440
<font color="#CCCCCC">that</font><font color="#E5E5E5"> those columns aren't always</font><font color="#CCCCCC"> exactly</font>

2438
01:54:17,440 --> 01:54:20,020
finishing on<font color="#E5E5E5"> a full stop there's so damn</font>

2439
01:54:20,020 --> 01:54:23,260
long<font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> care because</font><font color="#CCCCCC"> they're like</font>

2440
01:54:23,260 --> 01:54:27,550
<font color="#E5E5E5">10 million</font><font color="#CCCCCC"> won and we're trying to</font><font color="#E5E5E5"> also</font>

2441
01:54:27,550 --> 01:54:30,880
line contains multiple<font color="#E5E5E5"> cents incentive</font>

2442
01:54:30,880 --> 01:54:33,160
column contains more costumes<font color="#CCCCCC"> and sorry</font>

2443
01:54:33,160 --> 01:54:35,980
yeah<font color="#E5E5E5"> it's of length about 10 million and</font>

2444
01:54:35,980 --> 01:54:38,260
it contains many many many many many

2445
01:54:38,260 --> 01:54:40,300
sentences<font color="#E5E5E5"> because remember the</font><font color="#CCCCCC"> first</font>

2446
01:54:40,300 --> 01:54:42,160
thing we did was take all thing and

2447
01:54:42,160 --> 01:54:45,690
split it<font color="#E5E5E5"> into 64 groups</font>

2448
01:54:47,159 --> 01:54:53,739
<font color="#E5E5E5">okay great so um I found this you know</font>

2449
01:54:53,739 --> 01:54:55,480
pertaining<font color="#E5E5E5"> to this question this thing</font>

2450
01:54:55,480 --> 01:54:58,810
<font color="#E5E5E5">about like what's in this language model</font>

2451
01:54:58,810 --> 01:55:01,599
matrix<font color="#CCCCCC"> a little mind-bending for quite a</font>

2452
01:55:01,599 --> 01:55:04,060
while<font color="#CCCCCC"> so don't worry if it takes a while</font>

2453
01:55:04,060 --> 01:55:05,920
<font color="#CCCCCC">and you have to ask a thousand</font><font color="#E5E5E5"> questions</font>

2454
01:55:05,920 --> 01:55:10,090
on the<font color="#E5E5E5"> forum that's fine right</font><font color="#CCCCCC"> but go</font>

2455
01:55:10,090 --> 01:55:11,710
<font color="#E5E5E5">back and listen</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> what I just said in</font>

2456
01:55:11,710 --> 01:55:13,300
<font color="#E5E5E5">this lecture again go back to that bit</font>

2457
01:55:13,300 --> 01:55:14,949
where I showed you splitting<font color="#E5E5E5"> it up to 64</font>

2458
01:55:14,949 --> 01:55:16,780
<font color="#CCCCCC">and moving them around and try it with</font>

2459
01:55:16,780 --> 01:55:18,760
some<font color="#E5E5E5"> sentences in Excel or something and</font>

2460
01:55:18,760 --> 01:55:21,400
see<font color="#CCCCCC"> if you can do a better</font><font color="#E5E5E5"> job of</font>

2461
01:55:21,400 --> 01:55:23,380
<font color="#CCCCCC">explaining it</font><font color="#E5E5E5"> than I did okay because</font>

2462
01:55:23,380 --> 01:55:27,520
this<font color="#E5E5E5"> is like how</font><font color="#CCCCCC"> torch text works and</font>

2463
01:55:27,520 --> 01:55:30,159
then what<font color="#E5E5E5"> fast</font><font color="#CCCCCC"> AI adds on is this</font><font color="#E5E5E5"> idea</font>

2464
01:55:30,159 --> 01:55:31,869
<font color="#E5E5E5">of like kind</font><font color="#CCCCCC"> of how to build a a</font>

2465
01:55:31,869 --> 01:55:34,630
language model<font color="#E5E5E5"> out of it well they'll</font>

2466
01:55:34,630 --> 01:55:35,949
actually<font color="#E5E5E5"> a lot of that stolen from</font><font color="#CCCCCC"> torch</font>

2467
01:55:35,949 --> 01:55:37,540
<font color="#E5E5E5">text as well like</font><font color="#CCCCCC"> there's some times</font>

2468
01:55:37,540 --> 01:55:39,670
where torch text starts and fast AI ends

2469
01:55:39,670 --> 01:55:42,820
is or<font color="#CCCCCC"> vice versa trees a little saddle</font>

2470
01:55:42,820 --> 01:55:46,110
they really work closely<font color="#E5E5E5"> together okay</font>

2471
01:55:46,110 --> 01:55:51,010
<font color="#E5E5E5">so now</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> have a model data object</font>

2472
01:55:51,010 --> 01:55:55,750
that<font color="#E5E5E5"> can feed us batches we can go ahead</font>

2473
01:55:55,750 --> 01:55:58,960
<font color="#E5E5E5">and create</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> model right and so in this</font>

2474
01:55:58,960 --> 01:56:01,630
<font color="#CCCCCC">case we're going</font><font color="#E5E5E5"> to create an embedding</font>

2475
01:56:01,630 --> 01:56:05,980
matrix and our vocab<font color="#CCCCCC"> we can see how big</font>

2476
01:56:05,980 --> 01:56:09,670
a vocab was let's have<font color="#CCCCCC"> a look back here</font>

2477
01:56:09,670 --> 01:56:13,210
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see here in the model data</font>

2478
01:56:13,210 --> 01:56:15,820
object there are four thousand six

2479
01:56:15,820 --> 01:56:19,570
<font color="#E5E5E5">hundred and two</font><font color="#CCCCCC"> kind of pieces that</font>

2480
01:56:19,570 --> 01:56:20,860
<font color="#E5E5E5">we're going to go through that's</font>

2481
01:56:20,860 --> 01:56:24,670
basically equal to<font color="#CCCCCC"> the number of the</font>

2482
01:56:24,670 --> 01:56:26,560
<font color="#E5E5E5">total length of everything divided by</font>

2483
01:56:26,560 --> 01:56:29,710
batch size times<font color="#CCCCCC"> B</font><font color="#E5E5E5"> PTT and this one I</font>

2484
01:56:29,710 --> 01:56:32,110
wanted<font color="#E5E5E5"> to show you NT I've got the</font>

2485
01:56:32,110 --> 01:56:34,000
definition up here<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of unique</font>

2486
01:56:34,000 --> 01:56:36,760
tokens<font color="#E5E5E5"> NT is the number of tokens</font><font color="#CCCCCC"> that's</font>

2487
01:56:36,760 --> 01:56:39,070
the size of<font color="#E5E5E5"> our vocab so we've got three</font>

2488
01:56:39,070 --> 01:56:40,840
thirty<font color="#CCCCCC"> four thousand nine hundred and</font>

2489
01:56:40,840 --> 01:56:44,739
<font color="#E5E5E5">forty five unique words</font><font color="#CCCCCC"> and notice the</font>

2490
01:56:44,739 --> 01:56:46,389
unique words that had to appear at<font color="#E5E5E5"> least</font>

2491
01:56:46,389 --> 01:56:49,599
ten times okay<font color="#E5E5E5"> because otherwise they've</font>

2492
01:56:49,599 --> 01:56:56,290
been replaced with<font color="#E5E5E5"> the length of the</font>

2493
01:56:56,290 --> 01:56:58,389
<font color="#E5E5E5">data set is one</font>

2494
01:56:58,389 --> 01:56:59,860
because as far<font color="#CCCCCC"> as the language model</font><font color="#E5E5E5"> is</font>

2495
01:56:59,860 --> 01:57:02,650
<font color="#E5E5E5">concerned there's</font><font color="#CCCCCC"> only one thing which</font>

2496
01:57:02,650 --> 01:57:05,170
is<font color="#CCCCCC"> the whole corpus all</font><font color="#E5E5E5"> right and then</font>

2497
01:57:05,170 --> 01:57:08,949
that thing has<font color="#E5E5E5"> I</font><font color="#CCCCCC"> hear it is twenty point</font>

2498
01:57:08,949 --> 01:57:12,330
six million words<font color="#E5E5E5"> you know right</font>

2499
01:57:12,330 --> 01:57:15,550
so those thirty four thousand hundred

2500
01:57:15,550 --> 01:57:17,800
and forty five things are used to create

2501
01:57:17,800 --> 01:57:22,570
an embedding matrix of number of rows is

2502
01:57:22,570 --> 01:57:28,960
equal<font color="#E5E5E5"> to thirty four nine four five</font>

2503
01:57:28,960 --> 01:57:31,840
right<font color="#E5E5E5"> and so the first one represents</font>

2504
01:57:31,840 --> 01:57:36,340
<font color="#CCCCCC">UNK the second one represents pad the</font>

2505
01:57:36,340 --> 01:57:38,500
third one was dot<font color="#CCCCCC"> the fourth one</font><font color="#E5E5E5"> was</font>

2506
01:57:38,500 --> 01:57:41,199
comma<font color="#E5E5E5"> with one under sketching was there</font>

2507
01:57:41,199 --> 01:57:44,440
<font color="#E5E5E5">and so forth</font><font color="#CCCCCC"> right and so each one</font><font color="#E5E5E5"> of</font>

2508
01:57:44,440 --> 01:57:48,400
<font color="#E5E5E5">these gets an embedding vector so this</font>

2509
01:57:48,400 --> 01:57:50,469
is<font color="#E5E5E5"> literally identical</font><font color="#CCCCCC"> to what we did</font>

2510
01:57:50,469 --> 01:57:53,739
<font color="#E5E5E5">before</font><font color="#CCCCCC"> the brick</font><font color="#E5E5E5"> right this is a</font>

2511
01:57:53,739 --> 01:57:56,199
categorical variable<font color="#CCCCCC"> it's just a</font><font color="#E5E5E5"> very</font>

2512
01:57:56,199 --> 01:57:58,150
high cardinality categorical variable

2513
01:57:58,150 --> 01:58:00,850
<font color="#CCCCCC">and furthermore it's the</font><font color="#E5E5E5"> only variable</font>

2514
01:58:00,850 --> 01:58:03,730
<font color="#CCCCCC">right</font><font color="#E5E5E5"> this is pretty standard in NLP you</font>

2515
01:58:03,730 --> 01:58:07,540
have<font color="#CCCCCC"> a variable</font><font color="#E5E5E5"> which is a word right</font>

2516
01:58:07,540 --> 01:58:09,820
you have a single categorical variable

2517
01:58:09,820 --> 01:58:13,900
<font color="#E5E5E5">single column basically and it's it's</font><font color="#CCCCCC"> of</font>

2518
01:58:13,900 --> 01:58:16,690
thirty four thousand nine<font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> forty</font>

2519
01:58:16,690 --> 01:58:19,090
<font color="#CCCCCC">five cardinality categorical variable</font>

2520
01:58:19,090 --> 01:58:20,949
and so we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> create an</font>

2521
01:58:20,949 --> 01:58:25,360
embedding matrix for it so M size is the

2522
01:58:25,360 --> 01:58:28,210
size<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> omitting vector 200 okay</font>

2523
01:58:28,210 --> 01:58:31,119
so that's going to<font color="#E5E5E5"> be length 200 a lot</font>

2524
01:58:31,119 --> 01:58:32,440
bigger than our previous embedding

2525
01:58:32,440 --> 01:58:34,719
vectors<font color="#CCCCCC"> not surprising because a word</font>

2526
01:58:34,719 --> 01:58:37,960
<font color="#E5E5E5">has a lot more nuance to it than the</font>

2527
01:58:37,960 --> 01:58:42,580
concept of<font color="#CCCCCC"> Sunday right or Russ</font><font color="#E5E5E5"> means</font>

2528
01:58:42,580 --> 01:58:45,400
<font color="#E5E5E5">Berlin's door or whatever right so it's</font>

2529
01:58:45,400 --> 01:58:47,650
<font color="#E5E5E5">generally an embedding size for a word</font>

2530
01:58:47,650 --> 01:58:49,600
will be somewhere<font color="#E5E5E5"> between about 50</font><font color="#CCCCCC"> and</font>

2531
01:58:49,600 --> 01:58:52,360
about<font color="#E5E5E5"> 600 okay so I've kind of</font><font color="#CCCCCC"> done some</font>

2532
01:58:52,360 --> 01:58:56,710
in the middle<font color="#E5E5E5"> we then have to say as per</font>

2533
01:58:56,710 --> 01:58:58,659
usual how many activations do you want

2534
01:58:58,659 --> 01:59:01,030
in<font color="#E5E5E5"> your layers so we're going to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> 500</font>

2535
01:59:01,030 --> 01:59:02,770
and then how many<font color="#E5E5E5"> layers do you want in</font>

2536
01:59:02,770 --> 01:59:04,900
your<font color="#E5E5E5"> neural net we're going to use three</font>

2537
01:59:04,900 --> 01:59:10,510
okay<font color="#CCCCCC"> this is a minor technical</font><font color="#E5E5E5"> detail it</font>

2538
01:59:10,510 --> 01:59:11,220
turns out

2539
01:59:11,220 --> 01:59:13,530
<font color="#E5E5E5">that we're going to learn later</font><font color="#CCCCCC"> about</font>

2540
01:59:13,530 --> 01:59:16,170
the atom optimizer<font color="#CCCCCC"> that basically the</font>

2541
01:59:16,170 --> 01:59:17,700
defaults<font color="#CCCCCC"> for it don't</font><font color="#E5E5E5"> work very</font><font color="#CCCCCC"> well</font>

2542
01:59:17,700 --> 01:59:19,470
with<font color="#E5E5E5"> these kinds of models</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just</font>

2543
01:59:19,470 --> 01:59:21,570
have<font color="#E5E5E5"> to change some</font><font color="#CCCCCC"> of these you</font><font color="#E5E5E5"> know</font>

2544
01:59:21,570 --> 01:59:24,240
basically<font color="#CCCCCC"> any time you're doing</font><font color="#E5E5E5"> NLP you</font>

2545
01:59:24,240 --> 01:59:27,560
should probably include<font color="#E5E5E5"> this mine</font>

2546
01:59:27,560 --> 01:59:31,800
<font color="#E5E5E5">because it works pretty well</font><font color="#CCCCCC"> so having</font>

2547
01:59:31,800 --> 01:59:34,020
<font color="#E5E5E5">done that we can</font><font color="#CCCCCC"> now again take our</font>

2548
01:59:34,020 --> 01:59:36,000
model<font color="#E5E5E5"> data object and grab a model out</font>

2549
01:59:36,000 --> 01:59:38,280
<font color="#CCCCCC">of it and we can pass in a few different</font>

2550
01:59:38,280 --> 01:59:38,960
<font color="#CCCCCC">things</font>

2551
01:59:38,960 --> 01:59:41,610
what optimization<font color="#CCCCCC"> function do we want</font>

2552
01:59:41,610 --> 01:59:43,260
how big an embedding do we want

2553
01:59:43,260 --> 01:59:45,240
how many hidden<font color="#E5E5E5"> activate how many</font>

2554
01:59:45,240 --> 01:59:47,640
activations<font color="#E5E5E5"> number of Hitler how many</font>

2555
01:59:47,640 --> 01:59:51,810
layers<font color="#E5E5E5"> and how much drop out of many</font>

2556
01:59:51,810 --> 01:59:55,260
different<font color="#CCCCCC"> kinds so this</font><font color="#E5E5E5"> language model</font>

2557
01:59:55,260 --> 01:59:56,610
we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use is a very recent</font>

2558
01:59:56,610 --> 02:00:00,690
<font color="#CCCCCC">development called AWD LS TM by</font><font color="#E5E5E5"> Steven</font>

2559
02:00:00,690 --> 02:00:03,690
<font color="#CCCCCC">marady who's a NLP research based in San</font>

2560
02:00:03,690 --> 02:00:05,850
Francisco<font color="#CCCCCC"> and his main contribution</font>

2561
02:00:05,850 --> 02:00:09,810
really<font color="#E5E5E5"> was to show like how to put drop</font>

2562
02:00:09,810 --> 02:00:13,050
<font color="#E5E5E5">out all</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the place in in these NLP</font>

2563
02:00:13,050 --> 02:00:15,720
models so we're not<font color="#CCCCCC"> going to worry now</font>

2564
02:00:15,720 --> 02:00:17,250
<font color="#E5E5E5">we'll do this in the last lecture is</font>

2565
02:00:17,250 --> 02:00:18,780
<font color="#E5E5E5">worrying about like what all that like</font>

2566
02:00:18,780 --> 02:00:20,760
what is the architecture<font color="#CCCCCC"> and what are</font>

2567
02:00:20,760 --> 02:00:21,720
all<font color="#CCCCCC"> these dropouts</font>

2568
02:00:21,720 --> 02:00:24,420
for now just<font color="#E5E5E5"> know is the same as per</font>

2569
02:00:24,420 --> 02:00:26,790
usual<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you try to build an NLP model</font>

2570
02:00:26,790 --> 02:00:28,350
and<font color="#E5E5E5"> draw</font><font color="#CCCCCC"> underfitting</font>

2571
02:00:28,350 --> 02:00:31,350
and decrease all of these<font color="#E5E5E5"> dropouts</font><font color="#CCCCCC"> if</font>

2572
02:00:31,350 --> 02:00:33,690
<font color="#E5E5E5">you're overfitting</font><font color="#CCCCCC"> then increase all</font><font color="#E5E5E5"> of</font>

2573
02:00:33,690 --> 02:00:36,110
these dropouts<font color="#E5E5E5"> in roughly this ratio</font>

2574
02:00:36,110 --> 02:00:39,830
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> that's that's my rule of thumb and</font>

2575
02:00:39,830 --> 02:00:44,190
again<font color="#E5E5E5"> this is such a recent paper nobody</font>

2576
02:00:44,190 --> 02:00:45,930
else is working<font color="#E5E5E5"> on this</font><font color="#CCCCCC"> model anyway so</font>

2577
02:00:45,930 --> 02:00:47,400
there's not a<font color="#E5E5E5"> lot of guidance</font><font color="#CCCCCC"> but I</font>

2578
02:00:47,400 --> 02:00:50,040
<font color="#E5E5E5">found this</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> ratios worked well</font><font color="#CCCCCC"> it's</font>

2579
02:00:50,040 --> 02:00:53,820
what<font color="#E5E5E5"> Stephens been using as well</font><font color="#CCCCCC"> there's</font>

2580
02:00:53,820 --> 02:00:55,950
another kind<font color="#E5E5E5"> of way we can</font><font color="#CCCCCC"> avoid</font>

2581
02:00:55,950 --> 02:00:57,780
<font color="#E5E5E5">overfitting that we'll talk</font><font color="#CCCCCC"> about in the</font>

2582
02:00:57,780 --> 02:00:59,880
last class again for now this<font color="#E5E5E5"> one</font>

2583
02:00:59,880 --> 02:01:02,130
actually<font color="#CCCCCC"> works totally reliably so all</font>

2584
02:01:02,130 --> 02:01:04,350
of your NLP models probably want this

2585
02:01:04,350 --> 02:01:09,000
<font color="#E5E5E5">particular line of code</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then this</font>

2586
02:01:09,000 --> 02:01:10,140
<font color="#E5E5E5">point we're going</font><font color="#CCCCCC"> to talk about at the</font>

2587
02:01:10,140 --> 02:01:12,870
<font color="#CCCCCC">end last lecture as well</font><font color="#E5E5E5"> you can always</font>

2588
02:01:12,870 --> 02:01:16,700
improve this basically what it says is

2589
02:01:17,060 --> 02:01:20,190
when you do<font color="#E5E5E5"> when you look at your</font>

2590
02:01:20,190 --> 02:01:21,690
gradients<font color="#E5E5E5"> and you multiply</font><font color="#CCCCCC"> them by the</font>

2591
02:01:21,690 --> 02:01:23,760
<font color="#E5E5E5">learning rate and you decide how much to</font>

2592
02:01:23,760 --> 02:01:24,990
update you

2593
02:01:24,990 --> 02:01:29,880
or<font color="#E5E5E5"> weights by this is</font><font color="#CCCCCC"> clip them like</font>

2594
02:01:29,880 --> 02:01:32,430
literally like sit like don't let them

2595
02:01:32,430 --> 02:01:36,870
be more<font color="#E5E5E5"> than 0.3</font><font color="#CCCCCC"> and this is</font><font color="#E5E5E5"> quite a</font>

2596
02:01:36,870 --> 02:01:41,520
cool little trick<font color="#E5E5E5"> right because like if</font>

2597
02:01:41,520 --> 02:01:43,850
you're learning<font color="#E5E5E5"> rates pretty high and</font>

2598
02:01:43,850 --> 02:01:45,870
you kind of don't want<font color="#E5E5E5"> to get in that</font>

2599
02:01:45,870 --> 02:01:49,110
<font color="#E5E5E5">situation</font><font color="#CCCCCC"> we talked about where</font><font color="#E5E5E5"> you're</font>

2600
02:01:49,110 --> 02:01:51,570
<font color="#E5E5E5">kind of got this kind of thing where you</font>

2601
02:01:51,570 --> 02:01:53,810
<font color="#E5E5E5">go</font>

2602
02:01:54,390 --> 02:01:55,890
<font color="#E5E5E5">you know rather than little snippets</font>

2603
02:01:55,890 --> 02:01:57,690
that<font color="#E5E5E5"> little step instead you go like Oh</font>

2604
02:01:57,690 --> 02:02:01,320
<font color="#CCCCCC">too big Oh too big right with gradient</font>

2605
02:02:01,320 --> 02:02:03,750
<font color="#CCCCCC">clipping</font><font color="#E5E5E5"> it kind of goes this far and</font>

2606
02:02:03,750 --> 02:02:05,220
it's like oh<font color="#E5E5E5"> my goodness</font><font color="#CCCCCC"> I'm going too</font>

2607
02:02:05,220 --> 02:02:07,980
far<font color="#CCCCCC"> I'll stop and</font><font color="#E5E5E5"> that's basically what</font>

2608
02:02:07,980 --> 02:02:12,540
<font color="#E5E5E5">gradient flipping does so anyway so</font>

2609
02:02:12,540 --> 02:02:14,040
these are a<font color="#E5E5E5"> bunch of parameters</font><font color="#CCCCCC"> the</font>

2610
02:02:14,040 --> 02:02:15,810
<font color="#E5E5E5">details don't matter too</font><font color="#CCCCCC"> much right now</font>

2611
02:02:15,810 --> 02:02:19,350
<font color="#E5E5E5">you can just deal these and then we can</font>

2612
02:02:19,350 --> 02:02:23,190
go ahead and<font color="#CCCCCC"> call fit with exactly the</font>

2613
02:02:23,190 --> 02:02:30,960
same parameters<font color="#CCCCCC"> as usual so Jeremy</font><font color="#E5E5E5"> um</font>

2614
02:02:30,960 --> 02:02:35,520
there<font color="#CCCCCC"> are all this other</font><font color="#E5E5E5"> work embedding</font>

2615
02:02:35,520 --> 02:02:38,820
things like like<font color="#CCCCCC"> worked vague and glow</font>

2616
02:02:38,820 --> 02:02:41,640
<font color="#CCCCCC">so I have two</font><font color="#E5E5E5"> questions about</font><font color="#CCCCCC"> that one</font>

2617
02:02:41,640 --> 02:02:44,730
is how are those different from these

2618
02:02:44,730 --> 02:02:47,340
and the second<font color="#CCCCCC"> question why don't you</font>

2619
02:02:47,340 --> 02:02:50,310
initialize them with one<font color="#E5E5E5"> of those yeah</font>

2620
02:02:50,310 --> 02:02:54,030
so so<font color="#E5E5E5"> basically that's a great question</font>

2621
02:02:54,030 --> 02:02:57,830
so<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> people have</font><font color="#E5E5E5"> pre trained</font>

2622
02:02:57,830 --> 02:03:00,960
these embedding matrices before<font color="#E5E5E5"> to do</font>

2623
02:03:00,960 --> 02:03:02,910
various other tasks<font color="#E5E5E5"> they're not</font><font color="#CCCCCC"> called</font>

2624
02:03:02,910 --> 02:03:04,830
pre-trained models they're just a pre

2625
02:03:04,830 --> 02:03:06,510
trained embedding matrix and you can

2626
02:03:06,510 --> 02:03:09,000
<font color="#E5E5E5">download them and as unit says they have</font>

2627
02:03:09,000 --> 02:03:11,070
names like<font color="#E5E5E5"> word to</font><font color="#CCCCCC"> Veck and love and</font>

2628
02:03:11,070 --> 02:03:15,330
<font color="#CCCCCC">they're literally just</font><font color="#E5E5E5"> a matrix there's</font>

2629
02:03:15,330 --> 02:03:17,600
no reason we couldn't<font color="#CCCCCC"> download them</font>

2630
02:03:17,600 --> 02:03:24,480
<font color="#E5E5E5">really it's just like kind of I found</font>

2631
02:03:24,480 --> 02:03:27,660
that building a whole pre-trained model

2632
02:03:27,660 --> 02:03:30,150
in this way<font color="#E5E5E5"> didn't seem to benefit much</font>

2633
02:03:30,150 --> 02:03:32,280
if at<font color="#E5E5E5"> all from using pre trained word</font>

2634
02:03:32,280 --> 02:03:33,720
vectors where else using a whole

2635
02:03:33,720 --> 02:03:36,600
pre-trained language model made a much

2636
02:03:36,600 --> 02:03:38,760
bigger difference<font color="#E5E5E5"> so I can remember what</font>

2637
02:03:38,760 --> 02:03:40,890
a big those of you who saw<font color="#E5E5E5"> word</font><font color="#CCCCCC"> Tyvek it</font>

2638
02:03:40,890 --> 02:03:43,350
made a big<font color="#E5E5E5"> splash</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> it came out</font>

2639
02:03:43,350 --> 02:03:46,280
I<font color="#E5E5E5"> mean I'm finding this technique of</font>

2640
02:03:46,280 --> 02:03:48,990
pre-trained language models<font color="#E5E5E5"> seems much</font>

2641
02:03:48,990 --> 02:03:51,120
<font color="#CCCCCC">more powerful basically but I think we</font>

2642
02:03:51,120 --> 02:03:52,740
<font color="#CCCCCC">can combine both</font><font color="#E5E5E5"> to make them a little</font>

2643
02:03:52,740 --> 02:03:57,000
<font color="#CCCCCC">better</font><font color="#E5E5E5"> still what what is the model</font><font color="#CCCCCC"> that</font>

2644
02:03:57,000 --> 02:03:58,680
you<font color="#CCCCCC"> have used like how can I know</font><font color="#E5E5E5"> that</font>

2645
02:03:58,680 --> 02:04:01,010
<font color="#E5E5E5">architecture of the model</font>

2646
02:04:01,010 --> 02:04:03,270
so we'll be learning about<font color="#E5E5E5"> the model</font>

2647
02:04:03,270 --> 02:04:05,640
architecture in the last lesson<font color="#CCCCCC"> and for</font>

2648
02:04:05,640 --> 02:04:08,090
<font color="#CCCCCC">now</font><font color="#E5E5E5"> it's a recurrent neural network</font>

2649
02:04:08,090 --> 02:04:10,800
using something called an<font color="#CCCCCC"> LS TN long</font>

2650
02:04:10,800 --> 02:04:18,570
<font color="#E5E5E5">short-term memory</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so so if they had</font>

2651
02:04:18,570 --> 02:04:20,130
lots<font color="#E5E5E5"> of details</font><font color="#CCCCCC"> that we're skipping over</font>

2652
02:04:20,130 --> 02:04:22,320
but you know you can do<font color="#E5E5E5"> all this without</font>

2653
02:04:22,320 --> 02:04:25,140
any<font color="#CCCCCC"> of those details we go ahead and fit</font>

2654
02:04:25,140 --> 02:04:28,020
the model<font color="#CCCCCC"> I found that this language</font>

2655
02:04:28,020 --> 02:04:29,820
<font color="#E5E5E5">model took quite a while to fit so I</font>

2656
02:04:29,820 --> 02:04:31,710
kind of like ran it<font color="#E5E5E5"> for a while</font>

2657
02:04:31,710 --> 02:04:34,260
noticed it was still under fitting safer

2658
02:04:34,260 --> 02:04:37,020
it was up to<font color="#E5E5E5"> ran it a bit more longer</font>

2659
02:04:37,020 --> 02:04:40,710
cycle length<font color="#CCCCCC"> saved it again it still was</font>

2660
02:04:40,710 --> 02:04:43,230
<font color="#CCCCCC">kind of under fitting you know run it</font>

2661
02:04:43,230 --> 02:04:45,540
again and kind<font color="#CCCCCC"> of finally got to the</font>

2662
02:04:45,540 --> 02:04:47,310
point where it's like kind<font color="#CCCCCC"> of honestly</font><font color="#E5E5E5"> I</font>

2663
02:04:47,310 --> 02:04:49,830
kind of ran out<font color="#E5E5E5"> of patience</font><font color="#CCCCCC"> so I just</font>

2664
02:04:49,830 --> 02:04:54,360
like saved it at that<font color="#E5E5E5"> point</font><font color="#CCCCCC"> and I did</font>

2665
02:04:54,360 --> 02:04:55,830
the<font color="#E5E5E5"> same kind of</font><font color="#CCCCCC"> tests that</font><font color="#E5E5E5"> we looked at</font>

2666
02:04:55,830 --> 02:04:58,050
before<font color="#CCCCCC"> so I was like</font><font color="#E5E5E5"> oh it wasn't quite</font>

2667
02:04:58,050 --> 02:04:59,430
expecting but<font color="#E5E5E5"> I realized</font><font color="#CCCCCC"> it anyway the</font>

2668
02:04:59,430 --> 02:05:01,440
best<font color="#E5E5E5"> and the most like</font><font color="#CCCCCC"> okay let's see</font>

2669
02:05:01,440 --> 02:05:03,090
<font color="#E5E5E5">how</font><font color="#CCCCCC"> that goes the best performance with</font>

2670
02:05:03,090 --> 02:05:05,460
one<font color="#CCCCCC"> movie were</font><font color="#E5E5E5"> I say okay it looks like</font>

2671
02:05:05,460 --> 02:05:07,610
<font color="#CCCCCC">the</font><font color="#E5E5E5"> language models working pretty well</font>

2672
02:05:07,610 --> 02:05:13,470
<font color="#CCCCCC">so I've pre-trained a language model and</font>

2673
02:05:13,470 --> 02:05:16,590
so now I want to use it<font color="#CCCCCC"> fine tune it to</font>

2674
02:05:16,590 --> 02:05:18,600
do classification<font color="#E5E5E5"> sentiment</font>

2675
02:05:18,600 --> 02:05:20,400
classification<font color="#E5E5E5"> now obviously if I'm</font>

2676
02:05:20,400 --> 02:05:22,320
gonna<font color="#E5E5E5"> use</font><font color="#CCCCCC"> a pre trained model I need to</font>

2677
02:05:22,320 --> 02:05:25,050
use<font color="#CCCCCC"> exactly the same vocab but the</font><font color="#E5E5E5"> the</font>

2678
02:05:25,050 --> 02:05:27,600
word<font color="#E5E5E5"> the still needs to map for the</font>

2679
02:05:27,600 --> 02:05:29,760
number<font color="#E5E5E5"> two so that I can look up the</font>

2680
02:05:29,760 --> 02:05:33,510
<font color="#E5E5E5">vector that right so that's why I first</font>

2681
02:05:33,510 --> 02:05:37,830
of all load back up my my field object

2682
02:05:37,830 --> 02:05:40,410
<font color="#E5E5E5">the thing with the vocab in right now in</font>

2683
02:05:40,410 --> 02:05:42,300
this case if I ran it straight

2684
02:05:42,300 --> 02:05:44,070
afterwards this is<font color="#E5E5E5"> unnecessary it's</font>

2685
02:05:44,070 --> 02:05:46,260
already in memory<font color="#E5E5E5"> but this means I can</font>

2686
02:05:46,260 --> 02:05:49,800
come back to this later<font color="#CCCCCC"> right</font><font color="#E5E5E5"> in a new</font>

2687
02:05:49,800 --> 02:05:55,140
session<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> I can then</font><font color="#E5E5E5"> go ahead</font>

2688
02:05:55,140 --> 02:05:56,880
<font color="#CCCCCC">and say</font><font color="#E5E5E5"> okay I've</font><font color="#CCCCCC"> never got one more</font>

2689
02:05:56,880 --> 02:05:59,790
field right in<font color="#CCCCCC"> addition</font><font color="#E5E5E5"> to my field</font>

2690
02:05:59,790 --> 02:06:02,250
which represents the reviews I've also

2691
02:06:02,250 --> 02:06:04,010
got a field which represents the label

2692
02:06:04,010 --> 02:06:08,070
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> and the details are too important</font>

2693
02:06:08,070 --> 02:06:12,240
here<font color="#CCCCCC"> now this time I need to not treat</font>

2694
02:06:12,240 --> 02:06:13,739
the whole thing as one

2695
02:06:13,739 --> 02:06:16,830
big<font color="#E5E5E5"> piece of text but every review is</font>

2696
02:06:16,830 --> 02:06:18,600
separate because<font color="#CCCCCC"> each one has a</font>

2697
02:06:18,600 --> 02:06:20,910
<font color="#E5E5E5">different sentiment attached to it but</font>

2698
02:06:20,910 --> 02:06:22,680
<font color="#E5E5E5">it so happens that torch text already</font>

2699
02:06:22,680 --> 02:06:25,830
<font color="#E5E5E5">has a data set</font><font color="#CCCCCC"> that does that for IMDB</font>

2700
02:06:25,830 --> 02:06:29,460
<font color="#CCCCCC">so I just used IMDB</font><font color="#E5E5E5"> built into torch</font>

2701
02:06:29,460 --> 02:06:32,460
text so basically once we've<font color="#E5E5E5"> done</font><font color="#CCCCCC"> all</font>

2702
02:06:32,460 --> 02:06:33,989
that<font color="#E5E5E5"> we end up with something</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> we</font>

2703
02:06:33,989 --> 02:06:36,600
<font color="#E5E5E5">can like grab for a particular</font><font color="#CCCCCC"> example</font>

2704
02:06:36,600 --> 02:06:39,560
or you can grab its label positive<font color="#E5E5E5"> and</font>

2705
02:06:39,560 --> 02:06:41,760
here's some<font color="#E5E5E5"> of the text this is another</font>

2706
02:06:41,760 --> 02:06:45,950
great Tom<font color="#E5E5E5"> Berenger movie</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so</font>

2707
02:06:45,950 --> 02:06:48,989
this<font color="#CCCCCC"> is all not nothing</font><font color="#E5E5E5"> faster</font><font color="#CCCCCC"> I</font>

2708
02:06:48,989 --> 02:06:50,730
<font color="#E5E5E5">specific here we'll come back to it in</font>

2709
02:06:50,730 --> 02:06:53,430
the<font color="#CCCCCC"> last lecture but torch text Docs can</font>

2710
02:06:53,430 --> 02:06:55,830
<font color="#E5E5E5">help understand what's going on all you</font>

2711
02:06:55,830 --> 02:06:57,900
need to know is<font color="#CCCCCC"> that once you've used</font>

2712
02:06:57,900 --> 02:07:00,390
<font color="#E5E5E5">this special tox torch text thing called</font>

2713
02:07:00,390 --> 02:07:03,570
splits to<font color="#E5E5E5"> grab a Spitz object you can</font>

2714
02:07:03,570 --> 02:07:06,540
<font color="#CCCCCC">passed it straight</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> faster a text</font>

2715
02:07:06,540 --> 02:07:08,730
data from splits<font color="#E5E5E5"> and that basically</font>

2716
02:07:08,730 --> 02:07:12,270
converts a torch text object into a fast

2717
02:07:12,270 --> 02:07:15,120
<font color="#E5E5E5">AI object we can train on so as soon as</font>

2718
02:07:15,120 --> 02:07:17,100
<font color="#E5E5E5">you've</font><font color="#CCCCCC"> done that you can just go ahead</font>

2719
02:07:17,100 --> 02:07:20,310
<font color="#E5E5E5">and say get model right and that gets us</font>

2720
02:07:20,310 --> 02:07:23,850
<font color="#E5E5E5">our learner and then we can load into it</font>

2721
02:07:23,850 --> 02:07:26,960
the pre<font color="#CCCCCC"> trained model</font><font color="#E5E5E5"> the language model</font>

2722
02:07:26,960 --> 02:07:29,430
<font color="#E5E5E5">right and so we can</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> take that</font>

2723
02:07:29,430 --> 02:07:32,580
<font color="#E5E5E5">pre-trained language model and use the</font>

2724
02:07:32,580 --> 02:07:34,260
stuff that we're kind<font color="#E5E5E5"> of familiar</font><font color="#CCCCCC"> with</font>

2725
02:07:34,260 --> 02:07:37,350
right so we<font color="#E5E5E5"> can make</font><font color="#CCCCCC"> sure all that you</font>

2726
02:07:37,350 --> 02:07:39,120
know all<font color="#CCCCCC"> its at the</font><font color="#E5E5E5"> last layers frozen</font>

2727
02:07:39,120 --> 02:07:42,300
<font color="#CCCCCC">training a bit unfreeze it</font><font color="#E5E5E5"> train it</font><font color="#CCCCCC"> a</font>

2728
02:07:42,300 --> 02:07:44,310
bit and the nice<font color="#CCCCCC"> thing is once</font><font color="#E5E5E5"> you've</font>

2729
02:07:44,310 --> 02:07:47,430
<font color="#CCCCCC">got a pre trained language model it</font>

2730
02:07:47,430 --> 02:07:49,020
actually trains<font color="#CCCCCC"> super fast you can see</font>

2731
02:07:49,020 --> 02:07:51,360
here it's<font color="#CCCCCC"> like a couple of minutes for</font>

2732
02:07:51,360 --> 02:07:55,170
epoch and<font color="#E5E5E5"> it only took</font><font color="#CCCCCC"> me to get my is</font>

2733
02:07:55,170 --> 02:07:57,210
<font color="#E5E5E5">my best one here and he took me like 10</font>

2734
02:07:57,210 --> 02:07:59,910
<font color="#E5E5E5">a box so it's like 20 minutes to train</font>

2735
02:07:59,910 --> 02:08:03,000
<font color="#E5E5E5">this bit it's really</font><font color="#CCCCCC"> fast and I ended up</font>

2736
02:08:03,000 --> 02:08:10,590
with 94.5%<font color="#E5E5E5"> so how gone is 94.5% well it</font>

2737
02:08:10,590 --> 02:08:14,190
so happens that actually one of<font color="#CCCCCC"> Steven</font>

2738
02:08:14,190 --> 02:08:15,600
<font color="#CCCCCC">verities colleagues James Bradbury</font>

2739
02:08:15,600 --> 02:08:21,450
<font color="#E5E5E5">recently created a paper looking at the</font>

2740
02:08:21,450 --> 02:08:22,810
state at like

2741
02:08:22,810 --> 02:08:23,920
they tried to<font color="#E5E5E5"> create a new</font><font color="#CCCCCC"> state</font><font color="#E5E5E5"> of the</font>

2742
02:08:23,920 --> 02:08:25,690
<font color="#E5E5E5">art for a bunch of NLP things and one of</font>

2743
02:08:25,690 --> 02:08:28,720
<font color="#CCCCCC">the things that looked at was</font><font color="#E5E5E5"> IMDB and</font>

2744
02:08:28,720 --> 02:08:31,330
they actually<font color="#E5E5E5"> have here a list of the</font>

2745
02:08:31,330 --> 02:08:36,310
<font color="#E5E5E5">current world's best for IMDB and even</font>

2746
02:08:36,310 --> 02:08:38,440
with stuff<font color="#CCCCCC"> that is highly specialized</font>

2747
02:08:38,440 --> 02:08:40,750
for sentiment analysis<font color="#E5E5E5"> the best anybody</font>

2748
02:08:40,750 --> 02:08:44,500
had previously come<font color="#E5E5E5"> up with 94.1 so in</font>

2749
02:08:44,500 --> 02:08:47,980
other words this technique getting 94.5

2750
02:08:47,980 --> 02:08:51,850
it's literally<font color="#E5E5E5"> better than anybody has</font>

2751
02:08:51,850 --> 02:08:55,120
created in the world<font color="#E5E5E5"> before</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> far as</font><font color="#CCCCCC"> we</font>

2752
02:08:55,120 --> 02:08:57,130
know<font color="#CCCCCC"> or</font><font color="#E5E5E5"> as far as James</font><font color="#CCCCCC"> Bradbury</font><font color="#E5E5E5"> knows</font>

2753
02:08:57,130 --> 02:09:01,150
<font color="#E5E5E5">so so when I say like there are big</font>

2754
02:09:01,150 --> 02:09:03,190
<font color="#CCCCCC">opportunities to use this</font><font color="#E5E5E5"> I mean like</font>

2755
02:09:03,190 --> 02:09:05,620
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a technique that nobody else</font>

2756
02:09:05,620 --> 02:09:08,230
currently has access to<font color="#E5E5E5"> which you know</font>

2757
02:09:08,230 --> 02:09:12,070
you could like you<font color="#E5E5E5"> know whatever iBM has</font>

2758
02:09:12,070 --> 02:09:14,440
in what CERN or whatever any big company

2759
02:09:14,440 --> 02:09:17,370
has you know that<font color="#CCCCCC"> they're advertising</font>

2760
02:09:17,370 --> 02:09:19,540
<font color="#E5E5E5">unless they have some secret sauce that</font>

2761
02:09:19,540 --> 02:09:21,340
<font color="#E5E5E5">they're not publishing which they don't</font>

2762
02:09:21,340 --> 02:09:23,230
<font color="#E5E5E5">right because people</font><font color="#CCCCCC"> get you know</font><font color="#E5E5E5"> if</font>

2763
02:09:23,230 --> 02:09:24,900
they have a better thing they publish it

2764
02:09:24,900 --> 02:09:27,370
then you now have<font color="#CCCCCC"> access to a better</font>

2765
02:09:27,370 --> 02:09:29,920
text classification method then has ever

2766
02:09:29,920 --> 02:09:32,200
<font color="#CCCCCC">existed before so I really hope</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font>

2767
02:09:32,200 --> 02:09:34,840
know<font color="#E5E5E5"> you can try this out and see</font><font color="#CCCCCC"> how</font>

2768
02:09:34,840 --> 02:09:39,400
you go<font color="#CCCCCC"> there may be some</font><font color="#E5E5E5"> things it works</font>

2769
02:09:39,400 --> 02:09:40,630
really well<font color="#CCCCCC"> on and others that it</font>

2770
02:09:40,630 --> 02:09:42,790
doesn't work as<font color="#CCCCCC"> well and I don't know I</font>

2771
02:09:42,790 --> 02:09:46,180
think<font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of sweet</font><font color="#CCCCCC"> spot here that</font>

2772
02:09:46,180 --> 02:09:50,320
we had about 25,000<font color="#E5E5E5"> you know short to</font>

2773
02:09:50,320 --> 02:09:52,900
medium<font color="#CCCCCC"> size documents</font><font color="#E5E5E5"> if you don't have</font>

2774
02:09:52,900 --> 02:09:55,030
at<font color="#CCCCCC"> least that</font><font color="#E5E5E5"> much text it may</font><font color="#CCCCCC"> be hard</font>

2775
02:09:55,030 --> 02:09:57,550
to train a different language model but

2776
02:09:57,550 --> 02:09:59,530
having said<font color="#E5E5E5"> that there's a lot</font><font color="#CCCCCC"> more we</font>

2777
02:09:59,530 --> 02:10:01,660
do here right<font color="#E5E5E5"> and we won't be able</font><font color="#CCCCCC"> to do</font>

2778
02:10:01,660 --> 02:10:03,310
it in part<font color="#CCCCCC"> 1 of</font><font color="#E5E5E5"> this course</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> in part</font>

2779
02:10:03,310 --> 02:10:06,160
<font color="#E5E5E5">2 that for</font><font color="#CCCCCC"> example we could start like</font>

2780
02:10:06,160 --> 02:10:08,680
training<font color="#E5E5E5"> language models that look</font><font color="#CCCCCC"> at</font>

2781
02:10:08,680 --> 02:10:11,230
like you know<font color="#E5E5E5"> lots and lots of medical</font>

2782
02:10:11,230 --> 02:10:13,030
journals<font color="#CCCCCC"> and then we could like make a</font>

2783
02:10:13,030 --> 02:10:15,760
downloadable medical<font color="#E5E5E5"> language model that</font>

2784
02:10:15,760 --> 02:10:18,220
then anybody<font color="#E5E5E5"> could</font><font color="#CCCCCC"> use to like fine</font><font color="#E5E5E5"> tune</font>

2785
02:10:18,220 --> 02:10:21,670
on like a prostate<font color="#E5E5E5"> cancer</font><font color="#CCCCCC"> subset of</font>

2786
02:10:21,670 --> 02:10:23,970
medical literature<font color="#E5E5E5"> for instance like</font>

2787
02:10:23,970 --> 02:10:26,830
there's so much we could do it's kind<font color="#CCCCCC"> of</font>

2788
02:10:26,830 --> 02:10:28,810
<font color="#CCCCCC">exciting and</font><font color="#E5E5E5"> then you know to the</font><font color="#CCCCCC"> next</font>

2789
02:10:28,810 --> 02:10:30,340
point we could also combine<font color="#E5E5E5"> this with</font>

2790
02:10:30,340 --> 02:10:32,890
like pre-trained word vectors it's like

2791
02:10:32,890 --> 02:10:36,460
even<font color="#E5E5E5"> without trying that hard like</font>

2792
02:10:36,460 --> 02:10:39,010
<font color="#E5E5E5">you know we</font><font color="#CCCCCC"> even without</font><font color="#E5E5E5"> use like we</font>

2793
02:10:39,010 --> 02:10:41,500
could have<font color="#E5E5E5"> pre-trained a Wikipedia say</font>

2794
02:10:41,500 --> 02:10:43,420
corpus language model and then

2795
02:10:43,420 --> 02:10:47,170
<font color="#CCCCCC">fine-tuned it into a IMDB language model</font>

2796
02:10:47,170 --> 02:10:49,870
<font color="#E5E5E5">and then fine tune that into an IBM</font><font color="#CCCCCC"> IMDB</font>

2797
02:10:49,870 --> 02:10:51,640
sentiment analysis model<font color="#E5E5E5"> and we would</font>

2798
02:10:51,640 --> 02:10:54,489
have got<font color="#E5E5E5"> something better than</font><font color="#CCCCCC"> this so</font>

2799
02:10:54,489 --> 02:10:56,560
like this<font color="#E5E5E5"> I really think this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> tip</font>

2800
02:10:56,560 --> 02:11:00,670
of<font color="#E5E5E5"> the iceberg</font><font color="#CCCCCC"> and I was</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> there's</font>

2801
02:11:00,670 --> 02:11:02,920
a really fantastic researcher called

2802
02:11:02,920 --> 02:11:05,770
Sebastian<font color="#CCCCCC"> Reuter</font><font color="#E5E5E5"> who is basically the</font>

2803
02:11:05,770 --> 02:11:07,989
<font color="#CCCCCC">only NLP researcher I know who's been</font>

2804
02:11:07,989 --> 02:11:10,620
really really writing a lot about

2805
02:11:10,620 --> 02:11:13,180
<font color="#E5E5E5">pre-training and fine tuning and</font>

2806
02:11:13,180 --> 02:11:15,250
transfer learning<font color="#E5E5E5"> and NLP and I was</font>

2807
02:11:15,250 --> 02:11:17,290
asking<font color="#E5E5E5"> him like why isn't this</font><font color="#CCCCCC"> happening</font>

2808
02:11:17,290 --> 02:11:20,530
more<font color="#E5E5E5"> and his view was it's because there</font>

2809
02:11:20,530 --> 02:11:23,380
<font color="#CCCCCC">isn't</font><font color="#E5E5E5"> the software to make it easy</font><font color="#CCCCCC"> you</font>

2810
02:11:23,380 --> 02:11:25,570
know<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'm actually going to share this</font>

2811
02:11:25,570 --> 02:11:29,800
lecture with with him tomorrow<font color="#CCCCCC"> because</font>

2812
02:11:29,800 --> 02:11:32,560
you know<font color="#E5E5E5"> it feels like there's you</font><font color="#CCCCCC"> know</font>

2813
02:11:32,560 --> 02:11:34,690
hopefully<font color="#E5E5E5"> gonna be</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> stuff coming</font>

2814
02:11:34,690 --> 02:11:36,730
<font color="#CCCCCC">out now that we're making</font><font color="#E5E5E5"> it really</font><font color="#CCCCCC"> easy</font>

2815
02:11:36,730 --> 02:11:43,030
to<font color="#E5E5E5"> do this ok we're kind of out of time</font>

2816
02:11:43,030 --> 02:11:45,870
so what I'll do<font color="#CCCCCC"> is I'll</font><font color="#E5E5E5"> quickly look at</font>

2817
02:11:45,870 --> 02:11:48,670
collaborative<font color="#E5E5E5"> filtering introduction and</font>

2818
02:11:48,670 --> 02:11:50,530
then we'll finish it<font color="#E5E5E5"> next time but</font>

2819
02:11:50,530 --> 02:11:52,060
collaborative<font color="#CCCCCC"> filtering there's very</font>

2820
02:11:52,060 --> 02:11:53,650
very little new to<font color="#CCCCCC"> learn</font>

2821
02:11:53,650 --> 02:11:55,900
we've basically<font color="#E5E5E5"> learned everything we're</font>

2822
02:11:55,900 --> 02:11:59,500
<font color="#CCCCCC">gonna need so collaborative filtering</font>

2823
02:11:59,500 --> 02:12:02,710
<font color="#CCCCCC">will will cover this</font><font color="#E5E5E5"> quite quickly next</font>

2824
02:12:02,710 --> 02:12:04,030
<font color="#E5E5E5">week and then we're going to do a really</font>

2825
02:12:04,030 --> 02:12:06,280
<font color="#E5E5E5">deep dive into collaborative filtering</font>

2826
02:12:06,280 --> 02:12:09,100
<font color="#CCCCCC">next week</font><font color="#E5E5E5"> where we're going to learn</font>

2827
02:12:09,100 --> 02:12:10,930
about like we're<font color="#E5E5E5"> actually going to from</font>

2828
02:12:10,930 --> 02:12:13,150
scratch learn how to do mr.<font color="#E5E5E5"> plastic</font>

2829
02:12:13,150 --> 02:12:15,969
gradient<font color="#E5E5E5"> descent</font><font color="#CCCCCC"> how to create</font><font color="#E5E5E5"> loss</font>

2830
02:12:15,969 --> 02:12:18,100
functions how they work exactly

2831
02:12:18,100 --> 02:12:19,690
and then<font color="#E5E5E5"> we'll grow</font><font color="#CCCCCC"> from there and will</font>

2832
02:12:19,690 --> 02:12:22,180
gradually build back up to really deeply

2833
02:12:22,180 --> 02:12:25,840
understand<font color="#CCCCCC"> what's going</font><font color="#E5E5E5"> on in the</font>

2834
02:12:25,840 --> 02:12:27,340
structured models and then what's<font color="#E5E5E5"> going</font>

2835
02:12:27,340 --> 02:12:28,930
on in<font color="#E5E5E5"> confidence and then finally what's</font>

2836
02:12:28,930 --> 02:12:30,520
going on in<font color="#E5E5E5"> recurrent neural networks</font>

2837
02:12:30,520 --> 02:12:32,080
<font color="#E5E5E5">and hopefully we'll be able to build</font>

2838
02:12:32,080 --> 02:12:33,790
them all from<font color="#E5E5E5"> scratch</font>

2839
02:12:33,790 --> 02:12:36,400
<font color="#E5E5E5">ok so this is kind of a gonna</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> really</font>

2840
02:12:36,400 --> 02:12:38,200
important this movie lens<font color="#E5E5E5"> data set</font>

2841
02:12:38,200 --> 02:12:39,730
<font color="#E5E5E5">because we've got a user to learn a lot</font>

2842
02:12:39,730 --> 02:12:43,420
<font color="#E5E5E5">of</font><font color="#CCCCCC"> like really foundational</font><font color="#E5E5E5"> theory and</font>

2843
02:12:43,420 --> 02:12:46,780
kind<font color="#E5E5E5"> of math behind it so the</font><font color="#CCCCCC"> movie lens</font>

2844
02:12:46,780 --> 02:12:49,870
data<font color="#E5E5E5"> set this is basically what it looks</font>

2845
02:12:49,870 --> 02:12:50,260
like

2846
02:12:50,260 --> 02:12:52,840
<font color="#CCCCCC">it contains a bunch of ratings it says</font>

2847
02:12:52,840 --> 02:12:56,619
user number<font color="#E5E5E5"> one watched movie number</font><font color="#CCCCCC"> 31</font>

2848
02:12:56,619 --> 02:12:58,599
<font color="#E5E5E5">and they gave</font><font color="#CCCCCC"> it a rating</font><font color="#E5E5E5"> of two and a</font>

2849
02:12:58,599 --> 02:13:02,559
half at this particular time<font color="#E5E5E5"> and then</font>

2850
02:13:02,559 --> 02:13:05,289
they watched movie 102<font color="#E5E5E5"> nine and they</font>

2851
02:13:05,289 --> 02:13:06,460
gave it<font color="#CCCCCC"> a</font><font color="#E5E5E5"> rating of three and they</font>

2852
02:13:06,460 --> 02:13:08,170
watched reading one<font color="#CCCCCC"> one's really</font><font color="#E5E5E5"> one one</font>

2853
02:13:08,170 --> 02:13:09,099
<font color="#E5E5E5">seven two</font><font color="#CCCCCC"> and they gave</font><font color="#E5E5E5"> it a rating</font>

2854
02:13:09,099 --> 02:13:12,519
<font color="#CCCCCC">before okay and so forth okay so this</font><font color="#E5E5E5"> is</font>

2855
02:13:12,519 --> 02:13:13,929
the ratings table this is really the

2856
02:13:13,929 --> 02:13:17,559
<font color="#E5E5E5">only one</font><font color="#CCCCCC"> that matters and</font><font color="#E5E5E5"> our goal will</font>

2857
02:13:17,559 --> 02:13:19,480
be<font color="#E5E5E5"> for some use that we haven't seen</font>

2858
02:13:19,480 --> 02:13:22,599
<font color="#CCCCCC">before so for some user</font><font color="#E5E5E5"> movie</font>

2859
02:13:22,599 --> 02:13:24,429
combination we haven't seen before<font color="#CCCCCC"> we</font>

2860
02:13:24,429 --> 02:13:26,650
have to predict if they'll like it<font color="#E5E5E5"> right</font>

2861
02:13:26,650 --> 02:13:28,449
and<font color="#E5E5E5"> so this is how recommendation</font>

2862
02:13:28,449 --> 02:13:30,039
systems are built<font color="#E5E5E5"> this is how like</font>

2863
02:13:30,039 --> 02:13:31,809
Amazon besides what books<font color="#E5E5E5"> to recommend</font>

2864
02:13:31,809 --> 02:13:33,940
<font color="#E5E5E5">how Netflix decides what movies to</font>

2865
02:13:33,940 --> 02:13:36,480
recommend and so forth

2866
02:13:36,480 --> 02:13:39,010
to<font color="#E5E5E5"> make it more interesting</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> also</font>

2867
02:13:39,010 --> 02:13:41,170
actually<font color="#E5E5E5"> download a list of movies</font><font color="#CCCCCC"> so</font>

2868
02:13:41,170 --> 02:13:42,760
<font color="#CCCCCC">each movie we're actually gonna</font><font color="#E5E5E5"> have the</font>

2869
02:13:42,760 --> 02:13:44,710
title and so for<font color="#E5E5E5"> that question earlier</font>

2870
02:13:44,710 --> 02:13:46,239
<font color="#CCCCCC">about like what's actually going</font><font color="#E5E5E5"> to be</font>

2871
02:13:46,239 --> 02:13:47,829
in these embedding matrices how do we

2872
02:13:47,829 --> 02:13:49,300
interpret them<font color="#E5E5E5"> we're actually going to</font>

2873
02:13:49,300 --> 02:13:51,699
be able to look and see<font color="#E5E5E5"> how that's</font>

2874
02:13:51,699 --> 02:13:54,880
working<font color="#E5E5E5"> so basically this is</font><font color="#CCCCCC"> kind of</font>

2875
02:13:54,880 --> 02:13:57,670
like what we're creating<font color="#E5E5E5"> this is kind of</font>

2876
02:13:57,670 --> 02:14:02,079
crosstab of users<font color="#E5E5E5"> by movies</font><font color="#CCCCCC"> alright and</font>

2877
02:14:02,079 --> 02:14:03,940
so<font color="#CCCCCC"> feel free to</font><font color="#E5E5E5"> look ahead during the</font>

2878
02:14:03,940 --> 02:14:06,150
week you'll see<font color="#E5E5E5"> basically as per usual</font>

2879
02:14:06,150 --> 02:14:09,639
<font color="#E5E5E5">collaborative data set from</font><font color="#CCCCCC"> CSP model</font>

2880
02:14:09,639 --> 02:14:12,579
<font color="#E5E5E5">data docket learner</font><font color="#CCCCCC"> learn</font><font color="#E5E5E5"> it and we're</font>

2881
02:14:12,579 --> 02:14:14,619
done and<font color="#E5E5E5"> don't be surprised</font><font color="#CCCCCC"> to hear when</font>

2882
02:14:14,619 --> 02:14:16,000
<font color="#CCCCCC">we then take that and we can kick the</font>

2883
02:14:16,000 --> 02:14:17,619
<font color="#E5E5E5">benchmarks it seems to be better than</font>

2884
02:14:17,619 --> 02:14:19,329
<font color="#E5E5E5">the benchmarks where you look at so</font>

2885
02:14:19,329 --> 02:14:21,789
that'll<font color="#CCCCCC"> basically be it</font><font color="#E5E5E5"> and then next</font>

2886
02:14:21,789 --> 02:14:23,199
<font color="#E5E5E5">week we'll have a deep dive and we'll</font>

2887
02:14:23,199 --> 02:14:25,300
see how to actually build this from

2888
02:14:25,300 --> 02:14:27,820
scratch<font color="#CCCCCC"> alright see you</font><font color="#E5E5E5"> next week</font>

2889
02:14:27,820 --> 02:14:29,040
thank you

2890
02:14:29,040 --> 00:00:00,000
[Applause]

